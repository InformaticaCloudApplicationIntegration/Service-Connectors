{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Dayforce API",
    "contact": {}
  },
  "host": "usconfigr58.dayforcehcm.com",
  "basePath": "/Api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{clientNamespace}/V1/Employees/{xRefCode}/SSOAccounts": {
      "get": {
        "description": "GET AppUserSSO Details",
        "summary": "AppUserSSO_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "AppUserSSO"
        ],
        "operationId": "AppUserSSO_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The AppUserSSO with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeSSOAccount"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a AppUserSSO",
        "summary": "AppUserSSO_Post_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "AppUserSSO"
        ],
        "operationId": "AppUserSSO_Post_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeSSOAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a AppUserSSO",
        "summary": "AppUserSSO_Patch_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "AppUserSSO"
        ],
        "operationId": "AppUserSSO_Patch_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeSSOAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The AppUserSSO is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Availability": {
      "get": {
        "description": "GET List of Employee Availability",
        "summary": "Availability_Get_By_xRefCode_filterAvailabilityStartDate_filterAvailabilityEndDate_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "Availability_Get_By_xRefCode_filterAvailabilityStartDate_filterAvailabilityEndDate_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "filterAvailabilityStartDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive period start date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00"
          },
          {
            "name": "filterAvailabilityEndDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive period end date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of employee availability meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_EmployeeAvailability"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees": {
      "get": {
        "description": "GET a List of Employees",
        "summary": "Employees_Get_By_employeeNumber_displayName_socialSecurityNumber_employmentStatusXRefCode_orgUnitXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_payClassXRefCode_payGroupXRefCode_payPolicyXRefCode_payTypeXRefCode_payrollPolicyXRefCode_filterHireStartDate_filterHireEndDate_filterTerminationStartDate_filterTerminationEndDate_filterUpdatedStartDate_filterUpdatedEndDate_filterOriginalHireStartDate_filterOriginalHireEndDate_filterSeniorityStartDate_filterSeniorityEndDate_filterBaseSalaryFrom_filterBaseSalaryTo_filterBaseRateFrom_filterBaseRateTo_contextDate_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_Get_By_employeeNumber_displayName_socialSecurityNumber_employmentStatusXRefCode_orgUnitXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_payClassXRefCode_payGroupXRefCode_payPolicyXRefCode_payTypeXRefCode_payrollPolicyXRefCode_filterHireStartDate_filterHireEndDate_filterTerminationStartDate_filterTerminationEndDate_filterUpdatedStartDate_filterUpdatedEndDate_filterOriginalHireStartDate_filterOriginalHireEndDate_filterSeniorityStartDate_filterSeniorityEndDate_filterBaseSalaryFrom_filterBaseSalaryTo_filterBaseRateFrom_filterBaseRateTo_contextDate_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employeeNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Employment identification number assigned to an employee.  A partial value can be provided for a wider search."
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Employee Name. A partial value can be provided for a wider search."
          },
          {
            "name": "socialSecurityNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Social Security Number of the employee. A partial value can be provided for a wider search."
          },
          {
            "name": "employmentStatusXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Employment status xrefcode, which can be client-specific. Use this to search employees having the given employment status. Use a ContextDate value to search for employees with a given status as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "orgUnitXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Organizational units' xrefcode. Use this to search all levels of the employees’ organization including department, location, region, corporate, etc. Use a ContextDate value to search for employees with a specific value as of a point in time.  Otherwise, the search will use the current date and time."
          },
          {
            "name": "departmentXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Department xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given department.Use a ContextDate value to search for employees with a given department as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "jobXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Job xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given job. Use a ContextDate value to search for employees with a given job as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "positionXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Position xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given position. Use a ContextDate value to search for employees with a given position as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "payClassXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pay class xrefcode value, which can be client-specific. Use this to search employees having the given pay class. Use a ContextDate value to search for employees with a given pay class as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "payGroupXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pay group xrefcode value, which can be client-specific. Use this to search employees having the given pay group. Use a ContextDate value to search for employees with a given pay group as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "payPolicyXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pay policy xrefcode value, which can be client-specific. Use this to search employees having the given pay policy. Use a ContextDate value to search for employees with a given pay policy as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "payTypeXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pay type xrefcode value, which can be client-specific. Use this to search employees having the given pay type. Use a ContextDate value to search for employees with a given pay type as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "payrollPolicyXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Payroll policy xrefcode value, which can be client-specific. Use this to search employees having the given payroll policy. Use a ContextDate value to search for employees with a given payroll policy as of a point in time. Otherwise, the search will use the current date and time."
          },
          {
            "name": "filterHireStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees whose most recent hire date is greater than or equal to the specified value (e.g. 2017-01-01T13:24:56). Use with filterHireEndDate to search for employees hired or rehired in a given timeframe."
          },
          {
            "name": "filterHireEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees whose most recent hire date is less than or equal to the specified value. Typically this parameter is used in conjunction with FilterHireStartDate to search for employees hired or rehired in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterTerminationStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with termination date values greater than or equal to the specified value. Typically this parameter is used in conjunction with FilterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterTerminationEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with termination date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterUpdatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The beginning date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedEndDate value must also be provided. Because this search is conducted across all entities in the HR data model regardless of whether the requesting user has access to them, it is possible that the query will return XRefCode of employees with changes in which the consuming application is not interested.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterUpdatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The end date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedStartDate value must also be provided.   Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterOriginalHireStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with original hire date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireEndDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterOriginalHireEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireStartDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterSeniorityStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with seniority date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityEndDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterSeniorityEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityStartDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterBaseSalaryFrom",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Use to search for employees base salary greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryTo to search for employees base salary in a given range. Example: 20000"
          },
          {
            "name": "filterBaseSalaryTo",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Use to search for employees base salary less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryFrom to search for employees base salary in a given range. Example: 40000"
          },
          {
            "name": "filterBaseRateFrom",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Use to search for employees base rate greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateTo to search for employees base rate in a given range. Example: 10"
          },
          {
            "name": "filterBaseRateTo",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Use to search for employees base rate less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateFrom to search for employees base rate in a given range. Example: 40"
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Employees XRefCodes meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Employee"
            },
            "examples": {
              "application/json": {
                "Data": [
                  {
                    "XRefCode": "string"
                  },
                  {
                    "XRefCode": "string"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "description": "POST (Hire) an Employee",
        "summary": "Employees_Post_By_employee_isValidateOnly_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_Post_By_employee_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}": {
      "get": {
        "description": "GET Employee Details",
        "summary": "Employees_Get_By_xRefCode_contextDate_expand_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_Get_By_xRefCode_contextDate_expand_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the employee master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document."
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Employee with the requested XRefCode.",
            "schema": {
              "$ref": "#/definitions/Payload_Employee"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      },
      "patch": {
        "description": "PATCH (Update) an Employee",
        "summary": "Employees_Patch_By_employee_xRefCode_isValidateOnly_replaceExisting_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_Patch_By_employee_xRefCode_isValidateOnly_replaceExisting_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "replaceExisting",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter accepts a comma-separated list of employee sub-entities where the respective data provided will replace all existing records. This currently applies to EmployeePayAdjustCodeGroups, UserPayAdjustCodeGroups and ClockDeviceGroups sub-entities, which are considered as a list and are not effective dated."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Employee is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_ProcessResult"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Schedules": {
      "get": {
        "description": "GET List Employee Schedules",
        "summary": "TimeAndAttendance_Get_By_xRefCode_filterScheduleStartDate_filterScheduleEndDate_isPosted_expand_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "TimeAndAttendance_Get_By_xRefCode_filterScheduleStartDate_filterScheduleEndDate_isPosted_expand_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "filterScheduleStartDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive period start aligned to the employee business day start date to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterScheduleEndDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Exclusive period end aligned to the employee business day start to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56"
          },
          {
            "name": "isPosted",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "A flag to determine whether to display posted schedules.By default it searches for published schedules"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of employee schedule meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_EmployeeSchedule"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/TimeAwayFromWork": {
      "get": {
        "description": "GET List of Employee Time Away From Work",
        "summary": "TimeOff_Get_By_xRefCode_filterTAFWStartDate_filterTAFWEndDate_status_clientNamespace",
        "tags": [
          "Employees"
        ],
        "operationId": "TimeOff_Get_By_xRefCode_filterTAFWStartDate_filterTAFWEndDate_status_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "filterTAFWStartDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive period start date to determine which employee time away from work data to retrieve . Example: 2017-01-01T13:24:56"
          },
          {
            "name": "filterTAFWEndDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Exclusive period end date to determine which employee time away from work data to retrieve . Example: 2017-01-01T13:24:56"
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A case-sensitive field containing status for time away from work values. Examples: [APPROVED,PENDING,CANCELED,DENIED,CANCELPENDING]"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of employee time away from work meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_EmployeeTimeAwayFromWork"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/CandidateAssessment/Scores": {
      "post": {
        "description": "POST a Candidate Assessment scores",
        "summary": "CandidateAssessment_PostCandidateScores_By_candidateScores_clientNamespace",
        "tags": [
          "CandidateAssessment"
        ],
        "operationId": "CandidateAssessment_PostCandidateScores_By_candidateScores_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/xml"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/CandidateAssessmentScores"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Candidate assessment score record is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/CandidateAssessment/Reports": {
      "post": {
        "description": "POST a Candidate Assessment reports",
        "summary": "CandidateAssessment_PostCandidateReports_By_candidateReports_clientNamespace",
        "tags": [
          "CandidateAssessment"
        ],
        "operationId": "CandidateAssessment_PostCandidateReports_By_candidateReports_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/xml"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/CandidateAssessmentReports"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Candidate assessment report record is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/CandidateAssessment/Grade": {
      "post": {
        "description": "POST a Candidate Grade Information",
        "summary": "CandidateAssessment_PostCandidateGradingResponse_By_candidateGrade_clientNamespace",
        "tags": [
          "CandidateAssessment"
        ],
        "operationId": "CandidateAssessment_PostCandidateGradingResponse_By_candidateGrade_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/xml"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateGradingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate grade record saved, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/V1CandidateAssessmentScores500Error"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/ClientMetadata": {
      "get": {
        "description": "GET Client Metadata",
        "summary": "ClientMetadata_GetAsync_By_clientNamespace",
        "tags": [
          "ClientMetadata"
        ],
        "operationId": "ClientMetadata_GetAsync_By_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns client metadata.",
            "schema": {
              "$ref": "#/definitions/ClientMetadata"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Departments": {
      "get": {
        "description": "",
        "summary": "Departments_Get_By_clientNamespace",
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Get_By_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A Department XRefCode meets the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Object"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {}
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "Departments_Post_By_department_isValidateOnly_clientNamespace",
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Post_By_department_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Department is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Departments/{xRefCode}": {
      "get": {
        "description": "",
        "summary": "Departments_Get_By_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Get_By_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A Department XRefCode meets the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Object"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {}
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {}
          }
        }
      },
      "patch": {
        "description": "",
        "summary": "Departments_Patch_By_department_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Patch_By_department_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Department is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/DocumentManagementSecurityGroups": {
      "get": {
        "description": "GET DocMgmtSecurityGroupUserMap Details",
        "summary": "DocMgmtSecurityGroup_Get_By_xRefCode_clientNamespace",
        "tags": [
          "DocMgmtSecurityGroup"
        ],
        "operationId": "DocMgmtSecurityGroup_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The DocMgmtSecurityGroupUserMap with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDocumentManagementSecurityGroup"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a DocMgmtSecurityGroupUserMap",
        "summary": "DocMgmtSecurityGroup_Post_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "DocMgmtSecurityGroup"
        ],
        "operationId": "DocMgmtSecurityGroup_Post_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeDocumentManagementSecurityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The DocMgmtSecurityGroupUserMap is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a DocMgmtSecurityGroupUserMap",
        "summary": "DocMgmtSecurityGroup_Patch_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "DocMgmtSecurityGroup"
        ],
        "operationId": "DocMgmtSecurityGroup_Patch_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeDocumentManagementSecurityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The DocMgmtSecurityGroupUserMap is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/documents/{documentGuid}": {
      "get": {
        "description": "GET Document Details",
        "summary": "Documents_Get_By_documentGuid_clientNamespace",
        "tags": [
          "Documents"
        ],
        "operationId": "Documents_Get_By_documentGuid_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "documentGuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the document you want to retrieve. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the document identified by the documentGuid",
            "schema": {
              "$ref": "#/definitions/Payload_ArchiveDocument"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "User is unauthorized to retrieve the required document.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Documents": {
      "get": {
        "description": "GET a List of Documents",
        "summary": "Documents_Get_By_employeeXRefCode_clientNamespace",
        "tags": [
          "Documents"
        ],
        "operationId": "Documents_Get_By_employeeXRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employeeXRefCode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the employee whose document you want to retrieve. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns documents associated with the employeeXRefCode.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Document"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmergencyContacts": {
      "get": {
        "description": "GET EmergencyContact Details",
        "summary": "EmergencyContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmergencyContact"
        ],
        "operationId": "EmergencyContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The emergency contacts of employee with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeEmergencyContact"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST an EmergencyContact",
        "summary": "EmergencyContact_Post_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmergencyContact"
        ],
        "operationId": "EmergencyContact_Post_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An EmergencyContact is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH an EmergencyContact",
        "summary": "EmergencyContact_Patch_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmergencyContact"
        ],
        "operationId": "EmergencyContact_Patch_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmergencyContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmergencyContact is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/CANFederalTaxes": {
      "get": {
        "description": "GET EmployeeCANFederalTax Details",
        "summary": "EmployeeCANFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeCANFederalTax"
        ],
        "operationId": "EmployeeCANFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCANFederalTax with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCANFederalTax"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeCANFederalTax",
        "summary": "EmployeeCANFederalTax_Post_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANFederalTax"
        ],
        "operationId": "EmployeeCANFederalTax_Post_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANFederalTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An EmployeeCANFederalTax is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeCANFederalTax",
        "summary": "EmployeeCANFederalTax_Patch_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANFederalTax"
        ],
        "operationId": "EmployeeCANFederalTax_Patch_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANFederalTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCANFederalTax is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/CANStateTaxes": {
      "get": {
        "description": "GET EmployeeCANStateTax Details",
        "summary": "EmployeeCANStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeCANStateTax"
        ],
        "operationId": "EmployeeCANStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCANStateTax with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCANStateTax"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeCANStateTax",
        "summary": "EmployeeCANStateTax_Post_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANStateTax"
        ],
        "operationId": "EmployeeCANStateTax_Post_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANStateTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A CANStateTaxes is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeCANStateTax",
        "summary": "EmployeeCANStateTax_Patch_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANStateTax"
        ],
        "operationId": "EmployeeCANStateTax_Patch_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANStateTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The CANStateTaxes is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/CANTaxStatuses": {
      "get": {
        "description": "GET EmployeeCANTaxStatus Details",
        "summary": "EmployeeCANTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeCANTaxStatus"
        ],
        "operationId": "EmployeeCANTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCANTaxStatus with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCANTaxStatus"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST EmployeeCANTaxStatus Details",
        "summary": "EmployeeCANTaxStatus_Post_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANTaxStatus"
        ],
        "operationId": "EmployeeCANTaxStatus_Post_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANTaxStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeCANTaxStatus Detail is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH EmployeeCANTaxStatus Details",
        "summary": "EmployeeCANTaxStatus_Patch_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeCANTaxStatus"
        ],
        "operationId": "EmployeeCANTaxStatus_Patch_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeCANTaxStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCANTaxStatus Detail is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/ClockDeviceGroups": {
      "get": {
        "description": "GET EmployeeClockDeviceGroup Details",
        "summary": "EmployeeClockDeviceGroup_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeClockDeviceGroup"
        ],
        "operationId": "EmployeeClockDeviceGroup_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeClockDeviceGroup with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeClockDeviceGroup"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST an EmployeeClockDeviceGroup",
        "summary": "EmployeeClockDeviceGroup_Post_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeClockDeviceGroup"
        ],
        "operationId": "EmployeeClockDeviceGroup_Post_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeClockDeviceGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeClockDeviceGroup is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH an EmployeeClockDeviceGroup",
        "summary": "EmployeeClockDeviceGroup_Patch_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeClockDeviceGroup"
        ],
        "operationId": "EmployeeClockDeviceGroup_Patch_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeClockDeviceGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeClockDeviceGroup is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/CompensationSummary": {
      "get": {
        "description": "GET EmployeeCompensation Details",
        "summary": "EmployeeCompensation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeCompensation"
        ],
        "operationId": "EmployeeCompensation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCompensation with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCompensation"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/ConfidentialIdentification": {
      "get": {
        "description": "GET EmployeeConfidentialIdentification Details",
        "summary": "EmployeeConfidentialIdentification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeConfidentialIdentification"
        ],
        "operationId": "EmployeeConfidentialIdentification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSFederalTax with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeUSFederalTax"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeConfidentialIdentification",
        "summary": "EmployeeConfidentialIdentification_Post_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeConfidentialIdentification"
        ],
        "operationId": "EmployeeConfidentialIdentification_Post_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeConfidentialIdentification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An EmployeeConfidentialIdentification is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeConfidentialIdentification",
        "summary": "EmployeeConfidentialIdentification_Patch_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeConfidentialIdentification"
        ],
        "operationId": "EmployeeConfidentialIdentification_Patch_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeConfidentialIdentification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeConfidentialIdentification is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Courses": {
      "get": {
        "description": "GET EmployeeCourse Details",
        "summary": "EmployeeCourse_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeeCourse"
        ],
        "operationId": "EmployeeCourse_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeCourse with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCourse"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/LaborDefaults": {
      "get": {
        "description": "GET EmployeeDefaultLabor Details",
        "summary": "EmployeeDefaultLabor_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeDefaultLabor"
        ],
        "operationId": "EmployeeDefaultLabor_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeDefaultLabor with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDefaultLabor"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeDefaultLabor",
        "summary": "EmployeeDefaultLabor_Post_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeDefaultLabor"
        ],
        "operationId": "EmployeeDefaultLabor_Post_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeDefaultLabor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeDefaultLabor",
        "summary": "EmployeeDefaultLabor_Patch_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeDefaultLabor"
        ],
        "operationId": "EmployeeDefaultLabor_Patch_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeDefaultLabor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeDefaultLabor is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/DirectDeposits": {
      "get": {
        "description": "GET EmployeeDirectDeposit Details",
        "summary": "EmployeeDirectDeposit_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeeDirectDeposit"
        ],
        "operationId": "EmployeeDirectDeposit_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeDirectDeposit with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDirectDeposit"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EIRates": {
      "get": {
        "description": "GET EmployeeEIRate Details",
        "summary": "EmployeeEIRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeEIRate"
        ],
        "operationId": "EmployeeEIRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEIRate with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeCANEmploymentInsuranceRate"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmploymentAgreements": {
      "get": {
        "description": "GET EmployeeEmploymentAgreement Details",
        "summary": "EmployeeEmploymentAgreement_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeEmploymentAgreement"
        ],
        "operationId": "EmployeeEmploymentAgreement_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEmploymentAgreement with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeEmploymentAgreement"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeEmploymentAgreement",
        "summary": "EmployeeEmploymentAgreement_Post_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEmploymentAgreement"
        ],
        "operationId": "EmployeeEmploymentAgreement_Post_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmploymentAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeEmploymentAgreement",
        "summary": "EmployeeEmploymentAgreement_Patch_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEmploymentAgreement"
        ],
        "operationId": "EmployeeEmploymentAgreement_Patch_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmploymentAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEmploymentAgreement is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmploymentStatuses": {
      "get": {
        "description": "GET EmploymentStatus Details",
        "summary": "EmployeeEmploymentStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeEmploymentStatus"
        ],
        "operationId": "EmployeeEmploymentStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Employment Statuses of employee with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeEmploymentStatus"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmploymentStatus",
        "summary": "EmployeeEmploymentStatus_Post_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEmploymentStatus"
        ],
        "operationId": "EmployeeEmploymentStatus_Post_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmploymentStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmploymentStatus",
        "summary": "EmployeeEmploymentStatus_Patch_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEmploymentStatus"
        ],
        "operationId": "EmployeeEmploymentStatus_Patch_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEmploymentStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmploymentStatus is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmploymentTypes": {
      "get": {
        "description": "GET EmployeeEmploymentType Details",
        "summary": "EmployeeEmploymentType_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeEmploymentType"
        ],
        "operationId": "EmployeeEmploymentType_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEmploymentType with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeEmploymentType"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Ethnicities": {
      "get": {
        "description": "GET EmployeeEthnicity Details",
        "summary": "EmployeeEthnicity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeEthnicity"
        ],
        "operationId": "EmployeeEthnicity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEthnicity with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeEthnicity"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST EmployeeEthnicity Details",
        "summary": "EmployeeEthnicity_Post_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEthnicity"
        ],
        "operationId": "EmployeeEthnicity_Post_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeEthnicity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeEthnicity Detail is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH EmployeeEthnicity Details",
        "summary": "EmployeeEthnicity_Patch_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeEthnicity"
        ],
        "operationId": "EmployeeEthnicity_Patch_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeEthnicity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeEthnicity Detail is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/HighlyCompensatedEmployees": {
      "get": {
        "description": "GET HighlyCompensatedEmployee Details",
        "summary": "EmployeeHCE_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeHCE"
        ],
        "operationId": "EmployeeHCE_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The HighlyCompensatedEmployee with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeHighlyCompensatedEmployeeIndicator"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a HighlyCompensatedEmployee",
        "summary": "EmployeeHCE_Post_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeHCE"
        ],
        "operationId": "EmployeeHCE_Post_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeHighlyCompensatedEmployeeIndicator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A HighlyCompensatedEmployee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a HighlyCompensatedEmployee",
        "summary": "EmployeeHCE_Patch_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeHCE"
        ],
        "operationId": "EmployeeHCE_Patch_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeHighlyCompensatedEmployeeIndicator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The HighlyCompensatedEmployee is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/HealthWellnessDetails": {
      "get": {
        "description": "GET EmployeeHealthWellness Details",
        "summary": "EmployeeHealthWellness_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeHealthWellness"
        ],
        "operationId": "EmployeeHealthWellness_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeHealthWellness with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeHealthWellness"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeHealthWellness",
        "summary": "EmployeeHealthWellness_Post_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeHealthWellness"
        ],
        "operationId": "EmployeeHealthWellness_Post_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeHealthWellness"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeHealthWellness is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeHealthWellness",
        "summary": "EmployeeHealthWellness_Patch_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeHealthWellness"
        ],
        "operationId": "EmployeeHealthWellness_Patch_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeHealthWellness"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeHealthWellness is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/HRIncidents": {
      "get": {
        "description": "GET EmployeeHRIncident Details",
        "summary": "EmployeeHRIncident_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeeHRIncident"
        ],
        "operationId": "EmployeeHRIncident_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeHRIncident with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeHRIncident"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Locations": {
      "get": {
        "description": "GET EmployeeLocation Details",
        "summary": "EmployeeLocation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeLocation"
        ],
        "operationId": "EmployeeLocation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeLocation with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeLocation"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeLocation",
        "summary": "EmployeeLocation_Post_By_location_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeLocation"
        ],
        "operationId": "EmployeeLocation_Post_By_location_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeLocation",
        "summary": "EmployeeLocation_Patch_By_location_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeLocation"
        ],
        "operationId": "EmployeeLocation_Patch_By_location_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeLocation is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmployeeManagers": {
      "get": {
        "description": "GET EmployeeManager Details",
        "summary": "EmployeeManagers_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeManagers"
        ],
        "operationId": "EmployeeManagers_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeManager with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeManager"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/OnboardingPolicies": {
      "get": {
        "description": "GET EmployeeOnboardingPolicy Details",
        "summary": "EmployeeOnboardingPolicies_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeOnboardingPolicies"
        ],
        "operationId": "EmployeeOnboardingPolicies_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeOnboardingPolicy with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeOnboardingPolicy"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeOnboardingPolicy",
        "summary": "EmployeeOnboardingPolicies_Post_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeOnboardingPolicies"
        ],
        "operationId": "EmployeeOnboardingPolicies_Post_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeOnboardingPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeOnboardingPolicy",
        "summary": "EmployeeOnboardingPolicies_Patch_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeOnboardingPolicies"
        ],
        "operationId": "EmployeeOnboardingPolicies_Patch_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeOnboardingPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeOnboardingPolicy is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/OrgUnitInfos": {
      "get": {
        "description": "GET EmployeeOrgUnitInfo Details",
        "summary": "EmployeeOrgUnitInfo_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeeOrgUnitInfo"
        ],
        "operationId": "EmployeeOrgUnitInfo_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeOrgUnitInfo with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeOrgUnitInformation"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayAdjustCodeGroups": {
      "get": {
        "description": "GET EmployeePayAdjCodeGroupList Details",
        "summary": "EmployeePayAdjustCodeGroup_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeePayAdjustCodeGroup"
        ],
        "operationId": "EmployeePayAdjustCodeGroup_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePayAdjCodeGroupList with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePayAdjustCodeGroup"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeePayAdjCodeGroupList",
        "summary": "EmployeePayAdjustCodeGroup_Post_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeePayAdjustCodeGroup"
        ],
        "operationId": "EmployeePayAdjustCodeGroup_Post_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeePayAdjustCodeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePayAdjCodeGroupList is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeePayAdjCodeGroupList",
        "summary": "EmployeePayAdjustCodeGroup_Patch_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeePayAdjustCodeGroup"
        ],
        "operationId": "EmployeePayAdjustCodeGroup_Patch_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeePayAdjustCodeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePayAdjCodeGroupList is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/PayGradeRates": {
      "get": {
        "description": "GET EmployeePayGradeRate Details",
        "summary": "EmployeePayGradeRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeePayGradeRate"
        ],
        "operationId": "EmployeePayGradeRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePayGradeRate with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePayGradeRate"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/PerformanceRatings": {
      "get": {
        "description": "GET EmployeePerformanceRating Details",
        "summary": "EmployeePerformanceRating_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeePerformanceRating"
        ],
        "operationId": "EmployeePerformanceRating_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePerformanceRating with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePerformanceRating"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmployeeProperties": {
      "get": {
        "description": "GET EmployeePropertyValue Details",
        "summary": "EmployeePropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeePropertyValue"
        ],
        "operationId": "EmployeePropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePropertyValue with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeePropertyValue"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeePropertyValue",
        "summary": "EmployeePropertyValue_Post_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeePropertyValue"
        ],
        "operationId": "EmployeePropertyValue_Post_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeePropertyValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeePropertyValue",
        "summary": "EmployeePropertyValue_Patch_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeePropertyValue"
        ],
        "operationId": "EmployeePropertyValue_Patch_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeePropertyValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeePropertyValue is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/EmployeePunches": {
      "get": {
        "description": "GET a List of Employee Punches",
        "summary": "EmployeePunches_GetEmployeePunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_locationXRefCode_positionXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_projectXRefCode_payAdjustmentXRefCode_shiftStatus_filterShiftTimeStart_filterShiftTimeEnd_businessDate_pageSize_clientNamespace",
        "tags": [
          "EmployeePunches"
        ],
        "operationId": "EmployeePunches_GetEmployeePunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_locationXRefCode_positionXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_projectXRefCode_payAdjustmentXRefCode_shiftStatus_filterShiftTimeStart_filterShiftTimeEnd_businessDate_pageSize_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filterTransactionStartTimeUTC",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
          },
          {
            "name": "filterTransactionEndTimeUTC",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
          },
          {
            "name": "employeeXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee"
          },
          {
            "name": "locationXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies a location or organizational units"
          },
          {
            "name": "positionXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more Positions"
          },
          {
            "name": "departmentXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more Departments"
          },
          {
            "name": "jobXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more Jobs"
          },
          {
            "name": "docketXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more dockets"
          },
          {
            "name": "projectXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more projects"
          },
          {
            "name": "payAdjustmentXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field that identifies one or more pay adjustment"
          },
          {
            "name": "shiftStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A case-sensitive field containing shift status groups. Examples: [ACTIVE, COMPLETED, PROBLEM, ALL]"
          },
          {
            "name": "filterShiftTimeStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use with FilterTransactionStartTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical punches"
          },
          {
            "name": "filterShiftTimeEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Use with FilterTransactionEndTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical"
          },
          {
            "name": "businessDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Business Date value is intended as a “Timesheet View” to return punch data related to a clients Business day parameter configuration. Example: 2017-01-01T00:00:00"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of records returned per page in the paginated response"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of EmployeePunch data meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/PaginatedPayload_IEnumerable_EmployeePunch"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/EmployeeRawPunches": {
      "get": {
        "description": "GET a List of Employee Raw Punches",
        "summary": "EmployeeRawPunches_GetEmployeeRawPunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_employeeBadge_punchState_punchTypes_pageSize_clientNamespace",
        "tags": [
          "EmployeeRawPunches"
        ],
        "operationId": "EmployeeRawPunches_GetEmployeeRawPunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_employeeBadge_punchState_punchTypes_pageSize_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filterTransactionStartTimeUTC",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
          },
          {
            "name": "filterTransactionEndTimeUTC",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": "Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00"
          },
          {
            "name": "employeeXRefCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee"
          },
          {
            "name": "employeeBadge",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The badge number of the employee to be retrieved. The value provided must be the exact match for a badge"
          },
          {
            "name": "punchState",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The state of the punch. Examples: [PROCESSED, REJECTED, ALL]"
          },
          {
            "name": "punchTypes",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Comma separated values of punch types. Example: [Punch_In, Break_Out, Job_Transfer, ALL, etc]"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of records returned per page in the paginated response"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of EmployeePunch data meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/PaginatedPayload_IEnumerable_EmployeeRawPunch"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "description": "POST (Create) Employee Raw Punch",
        "summary": "EmployeeRawPunches_Post_By_punch_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeRawPunches"
        ],
        "operationId": "EmployeeRawPunches_Post_By_punch_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeRawPunchForSubmit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A raw punch is created.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Roles": {
      "get": {
        "description": "GET EmployeeRole Details",
        "summary": "EmployeeRole_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeRole"
        ],
        "operationId": "EmployeeRole_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeRole with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeRole"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeRole",
        "summary": "EmployeeRole_Post_By_employeeRole_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeRole"
        ],
        "operationId": "EmployeeRole_Post_By_employeeRole_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeRole",
        "summary": "EmployeeRole_Patch_By_employeeRole_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeRole"
        ],
        "operationId": "EmployeeRole_Patch_By_employeeRole_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeRole is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Skills": {
      "get": {
        "description": "GET EmployeeSkill Details",
        "summary": "EmployeeSkill_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeSkill"
        ],
        "operationId": "EmployeeSkill_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeSkill with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeSkill"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/TrainingPrograms": {
      "get": {
        "description": "GET EmployeeTrainingProgram Details",
        "summary": "EmployeeTrainingProgram_Get_By_xRefCode_clientNamespace",
        "tags": [
          "EmployeeTrainingProgram"
        ],
        "operationId": "EmployeeTrainingProgram_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeTrainingProgram with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeTrainingProgram"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/UnionMemberships": {
      "get": {
        "description": "GET EmployeeUnion Details",
        "summary": "EmployeeUnion_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeUnion"
        ],
        "operationId": "EmployeeUnion_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUnion with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeUnionMembership"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST an EmployeeUnion",
        "summary": "EmployeeUnion_Post_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUnion"
        ],
        "operationId": "EmployeeUnion_Post_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUnionMembership"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeUnion is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH an EmployeeUnion",
        "summary": "EmployeeUnion_Patch_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUnion"
        ],
        "operationId": "EmployeeUnion_Patch_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeUnionMembership"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUnion is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/USFederalTaxes": {
      "get": {
        "description": "GET EmployeeUSFederalTax Details",
        "summary": "EmployeeUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeUSFederalTax"
        ],
        "operationId": "EmployeeUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSFederalTax with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeUSFederalTax"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeUSFederalTax",
        "summary": "EmployeeUSFederalTax_Post_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSFederalTax"
        ],
        "operationId": "EmployeeUSFederalTax_Post_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSFederalTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An EmployeeUSFederalTax is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeUSFederalTax",
        "summary": "EmployeeUSFederalTax_Patch_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSFederalTax"
        ],
        "operationId": "EmployeeUSFederalTax_Patch_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSFederalTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSFederalTax is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/USStateTaxes": {
      "get": {
        "description": "GET EmployeeUSStateTax Details",
        "summary": "EmployeeUSStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeUSStateTax"
        ],
        "operationId": "EmployeeUSStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSStateTax with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeUSStateTax"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST EmployeeUSStateTax Details",
        "summary": "EmployeeUSStateTax_Post_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSStateTax"
        ],
        "operationId": "EmployeeUSStateTax_Post_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSStateTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeUSStateTax Detail is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH EmployeeUSStateTax Details",
        "summary": "EmployeeUSStateTax_Patch_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSStateTax"
        ],
        "operationId": "EmployeeUSStateTax_Patch_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSStateTax"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSStateTax Detail is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/USTaxStatuses": {
      "get": {
        "description": "GET EmployeeUSTaxStatus Details",
        "summary": "EmployeeUSTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeUSTaxStatus"
        ],
        "operationId": "EmployeeUSTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSTaxStatus with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeUSTaxStatus"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST EmployeeUSTaxStatus Details",
        "summary": "EmployeeUSTaxStatus_Post_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSTaxStatus"
        ],
        "operationId": "EmployeeUSTaxStatus_Post_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSTaxStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A EmployeeUSTaxStatus Detail is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH EmployeeUSTaxStatus Details",
        "summary": "EmployeeUSTaxStatus_Patch_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeUSTaxStatus"
        ],
        "operationId": "EmployeeUSTaxStatus_Patch_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeUSTaxStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeUSTaxStatus Detail is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/EmployeeWorkAssignmentManagers": {
      "get": {
        "description": "GET EmployeeWorkAssignmentManager Details",
        "summary": "EmployeeWorkAssigmentManager_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeWorkAssigmentManager"
        ],
        "operationId": "EmployeeWorkAssigmentManager_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeWorkAssignmentManager with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeWorkAssignmentManager"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeWorkAssignmentManager",
        "summary": "EmployeeWorkAssigmentManager_Post_By_ewam_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeWorkAssigmentManager"
        ],
        "operationId": "EmployeeWorkAssigmentManager_Post_By_ewam_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkAssignmentManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeWorkAssignmentManager",
        "summary": "EmployeeWorkAssigmentManager_Patch_By_ewam_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeWorkAssigmentManager"
        ],
        "operationId": "EmployeeWorkAssigmentManager_Patch_By_ewam_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkAssignmentManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeWorkAssignmentManager is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/WorkAssignments": {
      "get": {
        "description": "GET WorkAssignment Details",
        "summary": "EmployeeWorkAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "EmployeeWorkAssignment"
        ],
        "operationId": "EmployeeWorkAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Work Assignments of employee with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeWorkAssignment"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a WorkAssignment",
        "summary": "EmployeeWorkAssignment_Post_By_workAssignment_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeWorkAssignment"
        ],
        "operationId": "EmployeeWorkAssignment_Post_By_workAssignment_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a Work Assignment",
        "summary": "EmployeeWorkAssignment_Patch_By_workAssignment_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "EmployeeWorkAssignment"
        ],
        "operationId": "EmployeeWorkAssignment_Patch_By_workAssignment_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Work Assignment is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/ESignatureOrder": {
      "post": {
        "description": "POST e-signature order status.",
        "summary": "ESignatureOrder_Post_By_requestXML_clientNamespace",
        "tags": [
          "ESignatureOrder"
        ],
        "operationId": "ESignatureOrder_Post_By_requestXML_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "xml": {
                "attribute": false,
                "wrapped": false
              },
              "type": "array",
              "items": {
                "xml": {
                  "name": "body",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP OK response indicating the acceptance of e-signature order status.",
            "headers": {}
          }
        }
      }
    },
    "/{clientNamespace}/V1/I9Orders/{i9OrderId}": {
      "patch": {
        "description": "PATCH (Update) an I-9 order",
        "summary": "I9Orders_Patch_By_i9Order_i9OrderId_isValidateOnly_clientNamespace",
        "tags": [
          "I9Orders"
        ],
        "operationId": "I9Orders_Patch_By_i9Order_i9OrderId_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "i9OrderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the I-9 order on the I-9 partner's system. The value of this parameter needs to match the value for the I9OrderId property in the request body."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Details about the I-9 order to update.",
            "schema": {
              "$ref": "#/definitions/I9Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The I-9 order is updated, no response body.",
            "headers": {}
          }
        }
      }
    },
    "/{clientNamespace}/V1/JobFeeds": {
      "get": {
        "description": "Get a list of all the internal job postings.",
        "summary": "JobFeeds_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace",
        "tags": [
          "JobFeeds"
        ],
        "operationId": "JobFeeds_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Company name. Example: XYZ Co."
          },
          {
            "name": "parentCompanyName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Parent Company name. Example: Ceridian"
          },
          {
            "name": "internalJobBoardCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "XRefCode of Job Board. Example: CANDIDATEPORTAL"
          },
          {
            "name": "includeActivePostingOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, then exclude inactive postings from the result. If False, then the 'Last Update Time From' and 'Last Update Time To' parameters are required and the range specified between the 'Last Update Time From' and 'Last Update Time To' parameters must not be larger than 1 month. Example: True"
          },
          {
            "name": "lastUpdateTimeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "lastUpdateTimeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56"
          },
          {
            "name": "datePostedFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "A starting timestamp of job posting date. Example: 2017-01-01T13:24:56"
          },
          {
            "name": "datePostedTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "An ending timestamp of job posting date. Example: 2017-02-01T13:24:56"
          },
          {
            "name": "htmlDescription",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "A flag to feed the jobs over with html formatting or plain text description"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of all the internal job postings based on specified filter parameters.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_JobFeed"
            },
            "headers": {}
          }
        }
      }
    },
    "/{clientNamespace}/V1/Jobs": {
      "get": {
        "description": "GET a List of Jobs",
        "summary": "Jobs_Get_By_contextDate_clientNamespace",
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Get_By_contextDate_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which job data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Job XRefCodes meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Job"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST (Add) a Job",
        "summary": "Jobs_Post_By_job_isValidateOnly_clientNamespace",
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Post_By_job_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Job is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Jobs/{XrefCode}": {
      "get": {
        "description": "GET a List of Jobs",
        "summary": "Jobs_Get_By_XrefCode_clientNamespace",
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Get_By_XrefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "XrefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Job with the requested XRefCode.",
            "schema": {
              "$ref": "#/definitions/Payload_Job"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Jobs/{xRefCode}": {
      "patch": {
        "description": "PATCH (Update) a Job",
        "summary": "Jobs_Patch_By_job_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Patch_By_job_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Job is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/LaborCosts": {
      "get": {
        "description": "",
        "summary": "LaborCosts_GetLaborCostEstimate_By_locationNum_businessDate_clientNamespace",
        "tags": [
          "LaborCosts"
        ],
        "operationId": "LaborCosts_GetLaborCostEstimate_By_locationNum_businessDate_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locationNum",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "businessDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time",
            "description": ""
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Labor cost result in the segment of 15 minutes.",
            "schema": {
              "$ref": "#/definitions/Payload_LaborCostResult"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/MaritalStatuses": {
      "get": {
        "description": "GET MaritalStatus Details",
        "summary": "MaritalStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "MaritalStatus"
        ],
        "operationId": "MaritalStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Marital Statuses of employee with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeMaritalStatus"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a MaritalStatus",
        "summary": "MaritalStatus_Post_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "MaritalStatus"
        ],
        "operationId": "MaritalStatus_Post_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeMaritalStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A MaritalStatus is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a MaritalStatus",
        "summary": "MaritalStatus_Patch_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "MaritalStatus"
        ],
        "operationId": "MaritalStatus_Patch_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeMaritalStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The MaritalStatus is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/OrgUnits": {
      "get": {
        "description": "Get a list of OrgUnits",
        "summary": "OrgUnits_Get_By_clientNamespace",
        "tags": [
          "OrgUnits"
        ],
        "operationId": "OrgUnits_Get_By_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of OrgUnit XRefCodes meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Location"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST (Add) an OrgUnit",
        "summary": "OrgUnits_Post_By_orgUnit_isValidateOnly_clientNamespace",
        "tags": [
          "OrgUnits"
        ],
        "operationId": "OrgUnits_Post_By_orgUnit_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Org Unit is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/OrgUnits/{XrefCode}": {
      "get": {
        "description": "Get OrgUnit details",
        "summary": "OrgUnits_Get_By_XrefCode_contextDate_expand_includeChildOrgUnits_clientNamespace",
        "tags": [
          "OrgUnits"
        ],
        "operationId": "OrgUnits_Get_By_XrefCode_contextDate_expand_includeChildOrgUnits_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "XrefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which org unit data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the orgunit master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document."
          },
          {
            "name": "includeChildOrgUnits",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, the immediate child org units’ information under the org unit being retrieved will be returned as well.  The default value is FALSE if parameter is not specified."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Org Unit with the requested XRefCode.",
            "schema": {
              "$ref": "#/definitions/Payload_Location"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/OrgUnits/{xRefCode}": {
      "patch": {
        "description": "PATCH (Update) an OrgUnit",
        "summary": "OrgUnits_Patch_By_orgUnit_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "OrgUnits"
        ],
        "operationId": "OrgUnits_Patch_By_orgUnit_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Org Unit is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Addresses": {
      "get": {
        "description": "GET PersonAddress Details",
        "summary": "PersonAddress_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "PersonAddress"
        ],
        "operationId": "PersonAddress_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The PersonAddress with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonAddress"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a PersonAddress",
        "summary": "PersonAddress_Post_By_personAddress_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "PersonAddress"
        ],
        "operationId": "PersonAddress_Post_By_personAddress_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/PersonAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A PersonAddress is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a PersonAddress",
        "summary": "PersonAddress_Patch_By_personAddress_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "PersonAddress"
        ],
        "operationId": "PersonAddress_Patch_By_personAddress_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/PersonAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PersonAddress is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/Contacts": {
      "get": {
        "description": "GET PersonContact Details",
        "summary": "PersonContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "PersonContact"
        ],
        "operationId": "PersonContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The PersonContact with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonContact"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a PersonContact",
        "summary": "PersonContact_Post_By_personContact_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "PersonContact"
        ],
        "operationId": "PersonContact_Post_By_personContact_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/PersonContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a PersonContact",
        "summary": "PersonContact_Patch_By_personContact_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "PersonContact"
        ],
        "operationId": "PersonContact_Patch_By_personContact_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/PersonContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PersonContact is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Positions": {
      "get": {
        "description": "Get a list of Positions",
        "summary": "Positions_Get_By_contextDate_clientNamespace",
        "tags": [
          "Positions"
        ],
        "operationId": "Positions_Get_By_contextDate_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Position XRefCodes meeting the search criteria.",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_Position"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST (Add) a Position",
        "summary": "Positions_Post_By_position_isValidateOnly_clientNamespace",
        "tags": [
          "Positions"
        ],
        "operationId": "Positions_Post_By_position_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Position is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Positions/{XrefCode}": {
      "get": {
        "description": "Get Position details",
        "summary": "Positions_Get_By_XrefCode_contextDate_expand_clientNamespace",
        "tags": [
          "Positions"
        ],
        "operationId": "Positions_Get_By_XrefCode_contextDate_expand_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "XrefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the Position. The value provided must be the exact match for a Position; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the position master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Position with the requested XRefCode.",
            "schema": {
              "$ref": "#/definitions/Payload_Position"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Positions/{xRefCode}": {
      "patch": {
        "description": "PATCH (Update) a Position",
        "summary": "Positions_Patch_By_position_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "Positions"
        ],
        "operationId": "Positions_Patch_By_position_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the position. The value provided must be the exact match for a position; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Position is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/ReportMetadata": {
      "get": {
        "description": "GET a List of Report Metadata",
        "summary": "Reports_GetReportMetadataAsync_By_clientNamespace",
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetReportMetadataAsync_By_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata for all Reports",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_ReportMetadata"
            },
            "examples": {
              "application/json": {
                "Data": [
                  {
                    "Name": "string",
                    "Description": "string",
                    "XRefCode": "string",
                    "MaxRows": 0
                  }
                ],
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/ReportMetadata/{xRefCode}": {
      "get": {
        "description": "GET Report Metadata for the given XRefCode",
        "summary": "Reports_GetReportMetadataAsync_By_xRefCode_clientNamespace",
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetReportMetadataAsync_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The Metadata for the Report matching the requested XRefCode",
            "schema": {
              "$ref": "#/definitions/Payload_IEnumerable_ReportMetadata"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Reports/{xRefCode}": {
      "get": {
        "description": "GET Report",
        "summary": "Reports_GetReportAsync_By_xRefCode_pageSize_clientNamespace",
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetReportAsync_By_xRefCode_pageSize_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of records returned per page in the paginated response"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "reportParameters",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A list of key value pairs for those reports which take as input user supplied parameter values."
          }
        ],
        "responses": {
          "200": {
            "description": "report that match the given request",
            "schema": {
              "$ref": "#/definitions/PaginatedPayload_Report"
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/Payload_Object"
            },
            "examples": {
              "application/json": {
                "ProcessResults": [
                  {
                    "Code": "string",
                    "Context": "string",
                    "Level": "string",
                    "Message": "string"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/TransmissionService": {
      "post": {
        "description": "",
        "summary": "TransmissionService_Post_By_clientNamespace",
        "tags": [
          "TransmissionService"
        ],
        "operationId": "TransmissionService_Post_By_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/UserPayAdjustCodeGroups": {
      "get": {
        "description": "GET UserPayAdjCodeGroup Details",
        "summary": "UserPayAdjustCodeGroup_Get_By_xRefCode_clientNamespace",
        "tags": [
          "UserPayAdjustCodeGroup"
        ],
        "operationId": "UserPayAdjustCodeGroup_Get_By_xRefCode_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The UserPayAdjCodeGroup with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserPayAdjustCodeGroup"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a UserPayAdjCodeGroup",
        "summary": "UserPayAdjustCodeGroup_Post_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "UserPayAdjustCodeGroup"
        ],
        "operationId": "UserPayAdjustCodeGroup_Post_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/UserPayAdjustCodeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The UserPayAdjCodeGroup is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a UserPayAdjCodeGroup",
        "summary": "UserPayAdjustCodeGroup_Patch_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "UserPayAdjustCodeGroup"
        ],
        "operationId": "UserPayAdjustCodeGroup_Patch_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/UserPayAdjustCodeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The UserPayAdjCodeGroup is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    },
    "/{clientNamespace}/V1/Employees/{xRefCode}/WorkContracts": {
      "get": {
        "description": "GET EmployeeWorkContract Details",
        "summary": "WorkContract_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "tags": [
          "WorkContract"
        ],
        "operationId": "WorkContract_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "contextDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "contextDateRangeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56"
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeWorkContract with the requested XRefCode.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeWorkContract"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "post": {
        "description": "POST a EmployeeWorkContract",
        "summary": "WorkContract_Post_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "WorkContract"
        ],
        "operationId": "WorkContract_Post_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An Employee is created, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      },
      "patch": {
        "description": "PATCH a EmployeeWorkContract",
        "summary": "WorkContract_Patch_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace",
        "tags": [
          "WorkContract"
        ],
        "operationId": "WorkContract_Patch_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "xRefCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          },
          {
            "name": "isValidateOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database."
          },
          {
            "name": "clientNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Uniquely identifies the client's Dayforce instance. Is needed to login."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.",
            "schema": {
              "$ref": "#/definitions/EmployeeWorkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The EmployeeWorkContract is updated, no response body.",
            "headers": {}
          },
          "400": {
            "description": "Request is malformed.  Correct and resubmit.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          },
          "500": {
            "description": "An unexpected server error occurred.",
            "schema": {
              "$ref": "#/definitions/ProcessResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeeSSOAccount": {
      "title": "EmployeeSSOAccount",
      "type": "object",
      "properties": {
        "LoginName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProcessResult": {
      "title": "ProcessResult",
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Level": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Payload_IEnumerable_EmployeeAvailability": {
      "title": "Payload_IEnumerable_EmployeeAvailability",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeAvailability"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "EmployeeAvailability": {
      "title": "EmployeeAvailability",
      "type": "object",
      "properties": {
        "DateOfRequest": {
          "type": "string",
          "format": "date-time"
        },
        "UnAvailable": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "StartTime1": {
          "type": "string"
        },
        "EndTime1": {
          "type": "string"
        },
        "StartTime2": {
          "type": "string"
        },
        "EndTime2": {
          "type": "string"
        }
      }
    },
    "Payload_Object": {
      "title": "Payload_Object",
      "type": "object",
      "properties": {
        "Data": {
          "type": "object"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "CandidateAssessmentScores": {
      "title": "CandidateAssessmentScores",
      "type": "object",
      "properties": {
        "CreationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "CandidateAssessmentGuid": {
          "type": "string",
          "format": "uuid"
        },
        "OverallScore": {
          "$ref": "#/definitions/AssessmentScore"
        },
        "IsRecommended": {
          "type": "boolean"
        },
        "DetailedScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentScore"
          }
        }
      }
    },
    "AssessmentScore": {
      "title": "AssessmentScore",
      "type": "object",
      "properties": {
        "ShortName": {
          "type": "string"
        },
        "Score": {
          "type": "string"
        },
        "ScoreType": {
          "type": "string"
        },
        "ScoreBand": {
          "type": "string"
        },
        "PassFailed": {
          "type": "boolean"
        }
      }
    },
    "CandidateAssessmentReports": {
      "title": "CandidateAssessmentReports",
      "type": "object",
      "properties": {
        "CreationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "CandidateAssessmentGuid": {
          "type": "string",
          "format": "uuid"
        },
        "Reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentReport"
          }
        }
      }
    },
    "AssessmentReport": {
      "title": "AssessmentReport",
      "type": "object",
      "properties": {
        "ShortName": {
          "type": "string"
        },
        "ReportLink": {
          "type": "string"
        }
      }
    },
    "CandidateGradingModel": {
      "title": "CandidateGradingModel",
      "type": "object",
      "properties": {
        "JobPostingApplicationId": {
          "type": "integer",
          "format": "int32"
        },
        "Grade": {
          "type": "string"
        },
        "ReportCardLink": {
          "type": "string"
        },
        "ReferenceCode": {
          "type": "string"
        }
      }
    },
    "ClientMetadata": {
      "title": "ClientMetadata",
      "type": "object",
      "properties": {
        "ServiceVersion": {
          "type": "string"
        },
        "ServiceUri": {
          "type": "string"
        }
      }
    },
    "Payload_IEnumerable_Object": {
      "title": "Payload_IEnumerable_Object",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Department": {
      "title": "Department",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDocumentManagementSecurityGroup": {
      "title": "EmployeeDocumentManagementSecurityGroup",
      "type": "object",
      "properties": {
        "DocMgmtSecurityGroup": {
          "$ref": "#/definitions/DocMgmtSecurityGroup"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DocMgmtSecurityGroup": {
      "title": "DocMgmtSecurityGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Payload_ArchiveDocument": {
      "title": "Payload_ArchiveDocument",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/ArchiveDocument"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "ArchiveDocument": {
      "title": "ArchiveDocument",
      "type": "object",
      "properties": {
        "DocumentType": {
          "type": "string"
        },
        "DocumentGroup": {
          "type": "string"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "SourceReportUniqueId": {
          "type": "string",
          "format": "uuid"
        },
        "PublishDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "Title": {
          "type": "string"
        },
        "PageCount": {
          "type": "integer",
          "format": "int32"
        },
        "CultureId": {
          "type": "integer",
          "format": "int32"
        },
        "Contents": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "SizeBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Payload_IEnumerable_Document": {
      "title": "Payload_IEnumerable_Document",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Document": {
      "title": "Document",
      "type": "object",
      "properties": {
        "DocumentGUID": {
          "type": "string",
          "format": "uuid"
        },
        "DocumentName": {
          "type": "string"
        },
        "DocumentType": {
          "$ref": "#/definitions/DocumentType"
        },
        "FileName": {
          "type": "string"
        },
        "UploadedDate": {
          "type": "string",
          "format": "date-time"
        },
        "UploadedBy": {
          "$ref": "#/definitions/UploadedBy"
        }
      }
    },
    "DocumentType": {
      "title": "DocumentType",
      "type": "object",
      "properties": {
        "ShortName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        }
      }
    },
    "UploadedBy": {
      "title": "UploadedBy",
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "LoginId": {
          "type": "string"
        }
      }
    },
    "EmployeeEmergencyContact": {
      "title": "EmployeeEmergencyContact",
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "Relationship": {
          "$ref": "#/definitions/RelationshipType"
        },
        "Addresses": {
          "$ref": "#/definitions/EmergencyContactPersonAddressCollection"
        },
        "Contacts": {
          "$ref": "#/definitions/EmergencyContactPersonContactCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RelationshipType": {
      "title": "RelationshipType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmergencyContactPersonAddressCollection": {
      "title": "EmergencyContactPersonAddressCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmergencyContactPersonAddress"
          }
        }
      }
    },
    "EmergencyContactPersonContactCollection": {
      "title": "EmergencyContactPersonContactCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmergencyContactPersonContact"
          }
        }
      }
    },
    "EmergencyContactPersonAddress": {
      "title": "EmergencyContactPersonAddress",
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "Address3": {
          "type": "string"
        },
        "Address4": {
          "type": "string"
        },
        "Address5": {
          "type": "string"
        },
        "Address6": {
          "type": "string"
        },
        "County": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ContactInformationType": {
          "$ref": "#/definitions/ContactInformationType"
        },
        "IsPayrollMailing": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmergencyContactPersonContact": {
      "title": "EmergencyContactPersonContact",
      "type": "object",
      "properties": {
        "ContactNumber": {
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "ElectronicAddress": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ContactInformationType": {
          "$ref": "#/definitions/ContactInformationType"
        },
        "IsForSystemCommunications": {
          "type": "boolean"
        },
        "IsPreferredContactMethod": {
          "type": "boolean"
        },
        "IsUnlistedNumber": {
          "type": "boolean"
        },
        "FormattedNumber": {
          "type": "string"
        },
        "IsVerified": {
          "type": "boolean"
        },
        "IsRejected": {
          "type": "boolean"
        },
        "ShowRejectedWarning": {
          "type": "boolean"
        },
        "NumberOfVerificationRequests": {
          "type": "integer",
          "format": "int32"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Country": {
      "title": "Country",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "State": {
      "title": "State",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ContactInformationType": {
      "title": "ContactInformationType",
      "type": "object",
      "properties": {
        "ContactInformationTypeGroup": {
          "$ref": "#/definitions/ContactInformationTypeGroup"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ContactInformationTypeGroup": {
      "title": "ContactInformationTypeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCANFederalTax": {
      "title": "EmployeeCANFederalTax",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TotalClaimAmount": {
          "type": "number",
          "format": "double"
        },
        "IsNonResident": {
          "type": "boolean"
        },
        "MultipleEmployer": {
          "type": "boolean"
        },
        "IncomeLessThanClaim": {
          "type": "boolean"
        },
        "DistrictTaxDeduction": {
          "type": "number",
          "format": "double"
        },
        "AuthorizedTaxCredits": {
          "type": "number",
          "format": "double"
        },
        "EstimatedExpense": {
          "type": "number",
          "format": "double"
        },
        "EstimatedRemuneration": {
          "type": "number",
          "format": "double"
        },
        "AdditionalAmount": {
          "type": "number",
          "format": "double"
        },
        "PrescribedAreaDeduction": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCANStateTax": {
      "title": "EmployeeCANStateTax",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "TotalClaimAmount": {
          "type": "number",
          "format": "double"
        },
        "PrescribedAreaDeduction": {
          "type": "number",
          "format": "double"
        },
        "MaintenanceDeduction": {
          "type": "number",
          "format": "double"
        },
        "AuthorizedTaxCredits": {
          "type": "number",
          "format": "double"
        },
        "QuebecDevelopmentFunds": {
          "type": "number",
          "format": "double"
        },
        "EstimatedExpense": {
          "type": "number",
          "format": "double"
        },
        "EstimatedRemuneration": {
          "type": "number",
          "format": "double"
        },
        "AdditionalAmount": {
          "type": "number",
          "format": "double"
        },
        "LabourSponsoredFunds": {
          "type": "number",
          "format": "double"
        },
        "HasQuebecHealthContributionExemption": {
          "type": "boolean"
        },
        "IncomeLessThanClaim": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCANTaxStatus": {
      "title": "EmployeeCANTaxStatus",
      "type": "object",
      "properties": {
        "ProvinceCode": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TaxPropertyCollection": {
          "$ref": "#/definitions/TaxPropertyCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TaxPropertyCollection": {
      "title": "TaxPropertyCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxProperty"
          }
        }
      }
    },
    "TaxProperty": {
      "title": "TaxProperty",
      "type": "object",
      "properties": {
        "PropertyCodeName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeClockDeviceGroup": {
      "title": "EmployeeClockDeviceGroup",
      "type": "object",
      "properties": {
        "ClockDeviceGroup": {
          "$ref": "#/definitions/ClockDeviceGroup"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ClockDeviceGroup": {
      "title": "ClockDeviceGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCompensation": {
      "title": "EmployeeCompensation",
      "type": "object",
      "properties": {
        "EmployeeNumber": {
          "type": "string"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "PayGrade": {
          "$ref": "#/definitions/PayGrade"
        },
        "PayType": {
          "$ref": "#/definitions/PayType"
        },
        "PayGroup": {
          "$ref": "#/definitions/PayGroup"
        },
        "PayClass": {
          "$ref": "#/definitions/PayClass"
        },
        "EmploymentStatusReason": {
          "$ref": "#/definitions/EmploymentStatusReason"
        },
        "AlternateRate": {
          "type": "number",
          "format": "double"
        },
        "AverageDailyHours": {
          "type": "number",
          "format": "double"
        },
        "AverageOvertimeRate": {
          "type": "number",
          "format": "double"
        },
        "BaseRate": {
          "type": "number",
          "format": "double"
        },
        "BaseRateManuallySet": {
          "type": "boolean"
        },
        "BaseSalary": {
          "type": "number",
          "format": "double"
        },
        "DailyRate": {
          "type": "number",
          "format": "double"
        },
        "NormalWeeklyHours": {
          "type": "number",
          "format": "double"
        },
        "NormalSemiMonthlyHoursTop": {
          "type": "number",
          "format": "double"
        },
        "NormalSemiMonthlyHoursBottom": {
          "type": "number",
          "format": "double"
        },
        "LastPayEditDate": {
          "type": "string",
          "format": "date-time"
        },
        "VacationRate": {
          "type": "number",
          "format": "double"
        },
        "MinimumRate": {
          "type": "number",
          "format": "double"
        },
        "ControlRate": {
          "type": "number",
          "format": "double"
        },
        "MaximumRate": {
          "type": "number",
          "format": "double"
        },
        "RateMidPoint": {
          "type": "number",
          "format": "double"
        },
        "MinimumSalary": {
          "type": "number",
          "format": "double"
        },
        "ControlSalary": {
          "type": "number",
          "format": "double"
        },
        "MaximumSalary": {
          "type": "number",
          "format": "double"
        },
        "SalaryMidPoint": {
          "type": "number",
          "format": "double"
        },
        "CompRatio": {
          "type": "number",
          "format": "double"
        },
        "ChangePercent": {
          "type": "number",
          "format": "double"
        },
        "ChangeValue": {
          "type": "number",
          "format": "double"
        },
        "PreviousBaseSalary": {
          "type": "number",
          "format": "double"
        },
        "PreviousBaseRate": {
          "type": "number",
          "format": "double"
        },
        "PayPolicy": {
          "$ref": "#/definitions/PayPolicy"
        },
        "RatePolicy": {
          "$ref": "#/definitions/JobStepPolicy"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayGrade": {
      "title": "PayGrade",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayType": {
      "title": "PayType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayGroup": {
      "title": "PayGroup",
      "type": "object",
      "properties": {
        "PayFrequency": {
          "$ref": "#/definitions/PayFrequency"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayClass": {
      "title": "PayClass",
      "type": "object",
      "properties": {
        "LedgerCode": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentStatusReason": {
      "title": "EmploymentStatusReason",
      "type": "object",
      "properties": {
        "IsCompChangeReason": {
          "type": "boolean"
        },
        "IsLeaveReason": {
          "type": "boolean"
        },
        "IsPositionChangeReason": {
          "type": "boolean"
        },
        "IsTerminationReason": {
          "type": "boolean"
        },
        "IsVoluntaryReason": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayPolicy": {
      "title": "PayPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobStepPolicy": {
      "title": "JobStepPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayFrequency": {
      "title": "PayFrequency",
      "type": "object",
      "properties": {
        "PayFrequencyType": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeUSFederalTax": {
      "title": "EmployeeUSFederalTax",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "FilingStatus": {
          "$ref": "#/definitions/FederalFilingStatus"
        },
        "Allowances": {
          "type": "integer",
          "format": "int32"
        },
        "AdditionalAmount": {
          "type": "number",
          "format": "double"
        },
        "IsTaxExempt": {
          "type": "boolean"
        },
        "IsLocked": {
          "type": "boolean"
        },
        "TwoJobs": {
          "type": "boolean"
        },
        "DependentTaxCredit": {
          "type": "number",
          "format": "double"
        },
        "OtherIncome": {
          "type": "number",
          "format": "double"
        },
        "Deductions": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FederalFilingStatus": {
      "title": "FederalFilingStatus",
      "type": "object",
      "properties": {
        "CountryCode": {
          "type": "string"
        },
        "FederalFilingStatusCode": {
          "type": "string"
        },
        "CalculationCode": {
          "type": "string"
        },
        "PayrollOutput": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeConfidentialIdentification": {
      "title": "EmployeeConfidentialIdentification",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ConfidentialIdentificationType": {
          "$ref": "#/definitions/ConfidentialIdentificationType"
        },
        "CountryCode": {
          "type": "string"
        },
        "ExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "IDNumber": {
          "type": "string"
        },
        "PlaceOfIssue": {
          "type": "string"
        },
        "IssueDate": {
          "type": "string",
          "format": "date-time"
        },
        "UseForRTW": {
          "type": "boolean"
        },
        "RTWDocReview": {
          "type": "string"
        },
        "RTWDocReviewOn": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ConfidentialIdentificationType": {
      "title": "ConfidentialIdentificationType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCourse": {
      "title": "EmployeeCourse",
      "type": "object",
      "properties": {
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "CompletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "CertificationExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "Course": {
          "$ref": "#/definitions/Course"
        },
        "EmployeeTrainingProgram": {
          "$ref": "#/definitions/EmployeeTrainingProgram"
        },
        "CertificationNumber": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Score": {
          "type": "string"
        },
        "PassFail": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Course": {
      "title": "Course",
      "type": "object",
      "properties": {
        "CourseCode": {
          "type": "string"
        },
        "CourseType": {
          "$ref": "#/definitions/CourseType"
        },
        "CourseProvider": {
          "$ref": "#/definitions/CourseProvider"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeTrainingProgram": {
      "title": "EmployeeTrainingProgram",
      "type": "object",
      "properties": {
        "TrainingProgram": {
          "$ref": "#/definitions/TrainingProgram"
        },
        "EnrollmentDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CourseType": {
      "title": "CourseType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CourseProvider": {
      "title": "CourseProvider",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TrainingProgram": {
      "title": "TrainingProgram",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDefaultLabor": {
      "title": "EmployeeDefaultLabor",
      "type": "object",
      "properties": {
        "Position": {
          "$ref": "#/definitions/Position"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "PayAdjCode": {
          "$ref": "#/definitions/PayAdjCode"
        },
        "Project": {
          "$ref": "#/definitions/Project"
        },
        "Docket": {
          "$ref": "#/definitions/Docket"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Position": {
      "title": "Position",
      "type": "object",
      "properties": {
        "AverageDailyHours": {
          "type": "number",
          "format": "double"
        },
        "ClockTransferCode": {
          "type": "string"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EmploymentIndicator": {
          "$ref": "#/definitions/EmploymentIndicator"
        },
        "Executive": {
          "type": "boolean"
        },
        "FTE": {
          "type": "number",
          "format": "double"
        },
        "IsNonService": {
          "type": "boolean"
        },
        "IsWCBExempt": {
          "type": "boolean"
        },
        "LedgerCode": {
          "type": "string"
        },
        "Officer": {
          "type": "boolean"
        },
        "PayClass": {
          "$ref": "#/definitions/PayClass"
        },
        "PayGroup": {
          "$ref": "#/definitions/PayGroup"
        },
        "PayType": {
          "$ref": "#/definitions/PayType"
        },
        "PositionTerm": {
          "$ref": "#/definitions/PositionTerm"
        },
        "PPACAFullTime": {
          "type": "boolean"
        },
        "SemiMonthlyBottomHours": {
          "type": "number",
          "format": "double"
        },
        "SemiMonthlyTopHours": {
          "type": "number",
          "format": "double"
        },
        "StandardCostRate": {
          "type": "number",
          "format": "double"
        },
        "WeeklyHours": {
          "type": "number",
          "format": "double"
        },
        "DefaultTargetBonus": {
          "type": "number",
          "format": "double"
        },
        "PositionAssignments": {
          "$ref": "#/definitions/PositionAssignmentCollection"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "OrgLevel": {
          "$ref": "#/definitions/OrgLevel"
        },
        "PhysicalLocation": {
          "type": "boolean"
        },
        "BusinessPhone": {
          "type": "string"
        },
        "ContactBusinessPhone": {
          "type": "string"
        },
        "ContactCellPhone": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "OpeningDate": {
          "type": "string",
          "format": "date-time"
        },
        "ClosingDate": {
          "type": "string",
          "format": "date-time"
        },
        "ComparableLocation": {
          "$ref": "#/definitions/HRConfigurationEntity"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "Zone": {
          "$ref": "#/definitions/Zone"
        },
        "StartDayOfWeek": {
          "type": "integer",
          "format": "int32"
        },
        "GeoCity": {
          "$ref": "#/definitions/City"
        },
        "Timezone": {
          "$ref": "#/definitions/TimeZone"
        },
        "County": {
          "type": "string"
        },
        "IsOrgManaged": {
          "type": "boolean"
        },
        "IsMobileOrg": {
          "type": "boolean"
        },
        "PublicName": {
          "type": "string"
        },
        "ClockTransferCode": {
          "type": "string"
        },
        "ContactEmail": {
          "type": "string"
        },
        "ContactName": {
          "type": "string"
        },
        "LedgerCode": {
          "type": "string"
        },
        "StateCode": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "LegalEntity": {
          "$ref": "#/definitions/LegalEntity"
        },
        "OrgUnitLegalEntities": {
          "$ref": "#/definitions/OrgUnitLegalEntityCollection"
        },
        "OrgUnitParents": {
          "$ref": "#/definitions/OrgUnitParentCollection"
        },
        "ChildOrgUnits": {
          "$ref": "#/definitions/ChildLocationCollection"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayAdjCode": {
      "title": "PayAdjCode",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Project": {
      "title": "Project",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Docket": {
      "title": "Docket",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Job": {
      "title": "Job",
      "type": "object",
      "properties": {
        "EmployeeEEO": {
          "$ref": "#/definitions/EmployeeEEO"
        },
        "IsUnionJob": {
          "type": "boolean"
        },
        "JobQualifications": {
          "type": "string"
        },
        "JobRank": {
          "type": "integer",
          "format": "int32"
        },
        "JobUDFString1": {
          "type": "string"
        },
        "JobUDFString2": {
          "type": "string"
        },
        "JobUDFString3": {
          "type": "string"
        },
        "LedgerCode": {
          "type": "string"
        },
        "NOC": {
          "type": "string"
        },
        "JobClassification": {
          "$ref": "#/definitions/JobClassification"
        },
        "JobFunction": {
          "$ref": "#/definitions/JobFunction"
        },
        "PayGrade": {
          "$ref": "#/definitions/PayGrade"
        },
        "Union": {
          "$ref": "#/definitions/DFUnion"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "FLSAStatus": {
          "$ref": "#/definitions/FLSAStatus"
        },
        "JobFamily": {
          "$ref": "#/definitions/JobFamily"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentIndicator": {
      "title": "EmploymentIndicator",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PositionTerm": {
      "title": "PositionTerm",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PositionAssignmentCollection": {
      "title": "PositionAssignmentCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PositionAssignment"
          }
        }
      }
    },
    "OrgLevel": {
      "title": "OrgLevel",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HRConfigurationEntity": {
      "title": "HRConfigurationEntity",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        }
      }
    },
    "Zone": {
      "title": "Zone",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "City": {
      "title": "City",
      "type": "object",
      "properties": {
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TimeZone": {
      "title": "TimeZone",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LegalEntity": {
      "title": "LegalEntity",
      "type": "object",
      "properties": {
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "LegalEntityAddress": {
          "$ref": "#/definitions/Address"
        },
        "LegalIdNumber": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrgUnitLegalEntityCollection": {
      "title": "OrgUnitLegalEntityCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrgUnitLegalEntity"
          }
        }
      }
    },
    "OrgUnitParentCollection": {
      "title": "OrgUnitParentCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrgUnitParent"
          }
        }
      }
    },
    "ChildLocationCollection": {
      "title": "ChildLocationCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildLocation"
          }
        }
      }
    },
    "EmployeeEEO": {
      "title": "EmployeeEEO",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobClassification": {
      "title": "JobClassification",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobFunction": {
      "title": "JobFunction",
      "type": "object",
      "properties": {
        "Level": {
          "type": "integer",
          "format": "int32"
        },
        "UsableForExternalPosting": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DFUnion": {
      "title": "DFUnion",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FLSAStatus": {
      "title": "FLSAStatus",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobFamily": {
      "title": "JobFamily",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PositionAssignment": {
      "title": "PositionAssignment",
      "type": "object",
      "properties": {
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "BudgetedHeadCount": {
          "type": "number",
          "format": "double"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "Address3": {
          "type": "string"
        },
        "Address4": {
          "type": "string"
        },
        "Address5": {
          "type": "string"
        },
        "Address6": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrgUnitLegalEntity": {
      "title": "OrgUnitLegalEntity",
      "type": "object",
      "properties": {
        "LegalEntity": {
          "$ref": "#/definitions/HRConfigurationEntity"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrgUnitParent": {
      "title": "OrgUnitParent",
      "type": "object",
      "properties": {
        "ParentOrgUnit": {
          "$ref": "#/definitions/HRConfigurationEntity"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ChildLocation": {
      "title": "ChildLocation",
      "type": "object",
      "properties": {
        "OrgLevel": {
          "$ref": "#/definitions/OrgLevel"
        },
        "OrgUnitLegalEntities": {
          "$ref": "#/definitions/OrgUnitLegalEntityCollection"
        },
        "OrgUnitParents": {
          "$ref": "#/definitions/OrgUnitParentCollection"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDirectDeposit": {
      "title": "EmployeeDirectDeposit",
      "type": "object",
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "BankName": {
          "type": "string"
        },
        "BankNumber": {
          "type": "string"
        },
        "BuildingSocietyNumber": {
          "type": "string"
        },
        "DepositNumber": {
          "type": "integer",
          "format": "int32"
        },
        "DepositValue": {
          "type": "number",
          "format": "double"
        },
        "PayMethod": {
          "$ref": "#/definitions/PayMethod"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "IsPercentage": {
          "type": "boolean"
        },
        "IsRemainder": {
          "type": "boolean"
        },
        "NumberOfPreNoteDays": {
          "type": "integer",
          "format": "int32"
        },
        "PrenoteFileRunPayDate": {
          "type": "string",
          "format": "date-time"
        },
        "PrenoteFileSentOn": {
          "type": "string",
          "format": "date-time"
        },
        "RequiresPreNote": {
          "type": "boolean"
        },
        "RoutingTransitNumber": {
          "type": "string"
        },
        "PayCardType": {
          "type": "string"
        },
        "FinancialInstitution": {
          "$ref": "#/definitions/FinancialInstitution"
        },
        "AccountHolder": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayMethod": {
      "title": "PayMethod",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FinancialInstitution": {
      "title": "FinancialInstitution",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeCANEmploymentInsuranceRate": {
      "title": "EmployeeCANEmploymentInsuranceRate",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LegalEntity": {
          "$ref": "#/definitions/LegalEntity"
        },
        "RateGroup": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEmploymentAgreement": {
      "title": "EmployeeEmploymentAgreement",
      "type": "object",
      "properties": {
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string",
          "format": "uuid"
        },
        "EmploymentAgreementType": {
          "$ref": "#/definitions/EmploymentAgreementType"
        },
        "EmploymentAgreementPopulation": {
          "$ref": "#/definitions/EmploymentAgreementPopulation"
        },
        "EmploymentAgreementDetails": {
          "$ref": "#/definitions/EmploymentAgreementDetails"
        },
        "EmploymentAgreementTaxRegime": {
          "$ref": "#/definitions/EmploymentAgreementTaxRegime"
        },
        "EmploymentAgreementDuration": {
          "$ref": "#/definitions/EmploymentAgreementDuration"
        },
        "EmploymentAgreementSettlement": {
          "$ref": "#/definitions/EmploymentAgreementSettlement"
        },
        "GovernmentIdentifier": {
          "type": "string"
        },
        "AgreementReason": {
          "$ref": "#/definitions/EmploymentStatusReason"
        },
        "AgreementEndReason": {
          "$ref": "#/definitions/EmploymentStatusReason"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementType": {
      "title": "EmploymentAgreementType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementPopulation": {
      "title": "EmploymentAgreementPopulation",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementDetails": {
      "title": "EmploymentAgreementDetails",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementTaxRegime": {
      "title": "EmploymentAgreementTaxRegime",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementDuration": {
      "title": "EmploymentAgreementDuration",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentAgreementSettlement": {
      "title": "EmploymentAgreementSettlement",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEmploymentStatus": {
      "title": "EmployeeEmploymentStatus",
      "type": "object",
      "properties": {
        "EmployeeNumber": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EmploymentStatus": {
          "$ref": "#/definitions/EmploymentStatus"
        },
        "EmploymentStatusGroup": {
          "$ref": "#/definitions/EmploymentStatusGroup"
        },
        "PayType": {
          "$ref": "#/definitions/PayType"
        },
        "PayGroup": {
          "$ref": "#/definitions/PayGroup"
        },
        "PayTypeGroup": {
          "$ref": "#/definitions/PayTypeGroup"
        },
        "PayClass": {
          "$ref": "#/definitions/PayClass"
        },
        "PunchPolicy": {
          "$ref": "#/definitions/PunchPolicy"
        },
        "PayPolicy": {
          "$ref": "#/definitions/PayPolicy"
        },
        "PayHolidayGroup": {
          "$ref": "#/definitions/PayHolidayGroup"
        },
        "EmployeeGroup": {
          "$ref": "#/definitions/EmployeeGroup"
        },
        "EntitlementPolicy": {
          "$ref": "#/definitions/EntitlementPolicy"
        },
        "ShiftRotation": {
          "$ref": "#/definitions/ShiftRotation"
        },
        "ShiftRotationDayOffset": {
          "type": "integer",
          "format": "int64"
        },
        "ShiftRotationStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreateShiftRotationShift": {
          "type": "boolean"
        },
        "TimeOffPolicy": {
          "$ref": "#/definitions/TimeOffPolicy"
        },
        "ShiftTradePolicy": {
          "$ref": "#/definitions/ShiftTradePolicy"
        },
        "AttendancePolicy": {
          "$ref": "#/definitions/AttendancePolicy"
        },
        "SchedulePolicy": {
          "$ref": "#/definitions/EmployeeSchedulePolicy"
        },
        "OvertimeGroup": {
          "$ref": "#/definitions/EmployeeOvertimeGroup"
        },
        "PayrollPolicy": {
          "$ref": "#/definitions/PayrollPolicy"
        },
        "JobStepPolicy": {
          "$ref": "#/definitions/JobStepPolicy"
        },
        "AlternateRate": {
          "type": "number",
          "format": "double"
        },
        "AverageDailyHours": {
          "type": "number",
          "format": "double"
        },
        "AverageOvertimeRate": {
          "type": "number",
          "format": "double"
        },
        "BaseRate": {
          "type": "number",
          "format": "double"
        },
        "BaseRateManuallySet": {
          "type": "boolean"
        },
        "BaseSalary": {
          "type": "number",
          "format": "double"
        },
        "PeriodicSalary": {
          "type": "number",
          "format": "double"
        },
        "DailyRate": {
          "type": "number",
          "format": "double"
        },
        "EmploymentStatusReason": {
          "$ref": "#/definitions/EmploymentStatusReason"
        },
        "NormalWeeklyHours": {
          "type": "number",
          "format": "double"
        },
        "NormalSemiMonthlyHoursTop": {
          "type": "number",
          "format": "double"
        },
        "NormalSemiMonthlyHoursBottom": {
          "type": "number",
          "format": "double"
        },
        "ScheduleChangePolicy": {
          "$ref": "#/definitions/ScheduleChangePolicy"
        },
        "AuthorizationPolicy": {
          "$ref": "#/definitions/AuthorizationPolicy"
        },
        "WorkContractPremiumPolicy": {
          "$ref": "#/definitions/WorkContractPremiumPolicy"
        },
        "LastPayEditDate": {
          "type": "string",
          "format": "date-time"
        },
        "VacationRate": {
          "type": "number",
          "format": "double"
        },
        "TargetBonus": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentStatus": {
      "title": "EmploymentStatus",
      "type": "object",
      "properties": {
        "IsBenefitArrearsEnabled": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentStatusGroup": {
      "title": "EmploymentStatusGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayTypeGroup": {
      "title": "PayTypeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PunchPolicy": {
      "title": "PunchPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayHolidayGroup": {
      "title": "PayHolidayGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeGroup": {
      "title": "EmployeeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EntitlementPolicy": {
      "title": "EntitlementPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ShiftRotation": {
      "title": "ShiftRotation",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TimeOffPolicy": {
      "title": "TimeOffPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ShiftTradePolicy": {
      "title": "ShiftTradePolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AttendancePolicy": {
      "title": "AttendancePolicy",
      "type": "object",
      "properties": {
        "TrackingBasedOn": {
          "type": "integer",
          "format": "int32"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeSchedulePolicy": {
      "title": "EmployeeSchedulePolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeOvertimeGroup": {
      "title": "EmployeeOvertimeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayrollPolicy": {
      "title": "PayrollPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ScheduleChangePolicy": {
      "title": "ScheduleChangePolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorizationPolicy": {
      "title": "AuthorizationPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkContractPremiumPolicy": {
      "title": "WorkContractPremiumPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEmploymentType": {
      "title": "EmployeeEmploymentType",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EmploymentType": {
          "$ref": "#/definitions/EmploymentTypeConfig"
        },
        "TaxPayerId": {
          "type": "string"
        },
        "DBAName": {
          "type": "string"
        },
        "GamingProfitsDistributions": {
          "type": "boolean"
        },
        "IR35": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmploymentTypeConfig": {
      "title": "EmploymentTypeConfig",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEthnicity": {
      "title": "EmployeeEthnicity",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "Ethnicity": {
          "$ref": "#/definitions/DFEthnicity"
        },
        "ManagerEthnicity": {
          "$ref": "#/definitions/DFEthnicity"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DFEthnicity": {
      "title": "DFEthnicity",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHighlyCompensatedEmployeeIndicator": {
      "title": "EmployeeHighlyCompensatedEmployeeIndicator",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "IsHCE": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHealthWellness": {
      "title": "EmployeeHealthWellness",
      "type": "object",
      "properties": {
        "TobaccoUser": {
          "type": "string"
        },
        "DateLastSmoked": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHRIncident": {
      "title": "EmployeeHRIncident",
      "type": "object",
      "properties": {
        "HRIncidentNotes": {
          "$ref": "#/definitions/EmployeeHRIncidentNoteCollection"
        },
        "OrgUnit": {
          "$ref": "#/definitions/OrgUnitDetailConfiguration"
        },
        "HRIncidentState": {
          "type": "string"
        },
        "OpenDate": {
          "type": "string",
          "format": "date-time"
        },
        "HRIncidentAction": {
          "$ref": "#/definitions/HRIncidentAction"
        },
        "HRIncidentType": {
          "$ref": "#/definitions/HRIncidentType"
        },
        "ClosedDate": {
          "type": "string",
          "format": "date-time"
        },
        "HRIncidentDate": {
          "type": "string",
          "format": "date-time"
        },
        "HRIncidentBeganWork": {
          "type": "string",
          "format": "date-time"
        },
        "HRIncidentEventTime": {
          "type": "string",
          "format": "date-time"
        },
        "SafetyHealthType": {
          "$ref": "#/definitions/SafetyHealthType"
        },
        "HRIncidentInjury": {
          "$ref": "#/definitions/HRIncidentInjury"
        },
        "HRIncidentBodyPart": {
          "$ref": "#/definitions/HRIncidentBodyPart"
        },
        "Died": {
          "type": "boolean"
        },
        "HRIncidentArea": {
          "type": "string"
        },
        "TaskBeingPerformed": {
          "type": "string"
        },
        "CausedObject": {
          "type": "string"
        },
        "CausedAction": {
          "type": "string"
        },
        "PrivacyCase": {
          "type": "boolean"
        },
        "DoctorName": {
          "type": "string"
        },
        "EmergencyRoom": {
          "type": "boolean"
        },
        "HospitalOvernight": {
          "type": "boolean"
        },
        "Hospital": {
          "type": "string"
        },
        "HospitalStreet": {
          "type": "string"
        },
        "HospitalCity": {
          "type": "string"
        },
        "HospitalStateCode": {
          "type": "string"
        },
        "HospitalZip": {
          "type": "string"
        },
        "DateReturnToWork": {
          "type": "string",
          "format": "date-time"
        },
        "DaysLost": {
          "type": "number",
          "format": "double"
        },
        "DaysRestricted": {
          "type": "number",
          "format": "double"
        },
        "DateDied": {
          "type": "string",
          "format": "date-time"
        },
        "QuestionableClaim": {
          "type": "boolean"
        },
        "IsDaysLost": {
          "type": "boolean"
        },
        "WCBCaseNumber": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHRIncidentNoteCollection": {
      "title": "EmployeeHRIncidentNoteCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeHRIncidentNote"
          }
        }
      }
    },
    "OrgUnitDetailConfiguration": {
      "title": "OrgUnitDetailConfiguration",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "ChildSortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "IsPhysicalLocation": {
          "type": "boolean"
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "LedgerCode": {
          "type": "string"
        },
        "ParentSortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "OrgLevel": {
          "$ref": "#/definitions/OrgLevel"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HRIncidentAction": {
      "title": "HRIncidentAction",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HRIncidentType": {
      "title": "HRIncidentType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SafetyHealthType": {
      "title": "SafetyHealthType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HRIncidentInjury": {
      "title": "HRIncidentInjury",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HRIncidentBodyPart": {
      "title": "HRIncidentBodyPart",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHRIncidentNote": {
      "title": "EmployeeHRIncidentNote",
      "type": "object",
      "properties": {
        "DateAdded": {
          "type": "string",
          "format": "date-time"
        },
        "Notes": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeLocation": {
      "title": "EmployeeLocation",
      "type": "object",
      "properties": {
        "IsPrimary": {
          "type": "boolean"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "EmployeeLocationAuthorities": {
          "$ref": "#/definitions/EmployeeLocationAuthorityCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeLocationAuthorityCollection": {
      "title": "EmployeeLocationAuthorityCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeLocationAuthority"
          }
        }
      }
    },
    "EmployeeLocationAuthority": {
      "title": "EmployeeLocationAuthority",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "AuthorityType": {
          "$ref": "#/definitions/AuthorityType"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorityType": {
      "title": "AuthorityType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeManager": {
      "title": "EmployeeManager",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ManagerXRefCode": {
          "type": "string"
        },
        "ManagerFirstName": {
          "type": "string"
        },
        "ManagerMiddleName": {
          "type": "string"
        },
        "ManagerLastName": {
          "type": "string"
        },
        "DerivationMethod": {
          "type": "integer",
          "format": "int32"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeOnboardingPolicy": {
      "title": "EmployeeOnboardingPolicy",
      "type": "object",
      "properties": {
        "OnboardingPolicy": {
          "$ref": "#/definitions/OnboardingPolicy"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "IsInternalHire": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OnboardingPolicy": {
      "title": "OnboardingPolicy",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeOrgUnitInformation": {
      "title": "EmployeeOrgUnitInformation",
      "type": "object",
      "properties": {
        "OrgUnitDetail": {
          "$ref": "#/definitions/OrgUnitDetailConfiguration"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeePayAdjustCodeGroup": {
      "title": "EmployeePayAdjustCodeGroup",
      "type": "object",
      "properties": {
        "PayAdjCodeGroup": {
          "$ref": "#/definitions/PayAdjCodeGroup"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayAdjCodeGroup": {
      "title": "PayAdjCodeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeePayGradeRate": {
      "title": "EmployeePayGradeRate",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "WorkAssignmentEffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "WorkAssignmentEffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "PayGrade": {
          "$ref": "#/definitions/PayGrade"
        },
        "MinimumRate": {
          "type": "number",
          "format": "double"
        },
        "ControlRate": {
          "type": "number",
          "format": "double"
        },
        "MaximumRate": {
          "type": "number",
          "format": "double"
        },
        "RateMidPoint": {
          "type": "number",
          "format": "double"
        },
        "MinimumSalary": {
          "type": "number",
          "format": "double"
        },
        "ControlSalary": {
          "type": "number",
          "format": "double"
        },
        "MaximumSalary": {
          "type": "number",
          "format": "double"
        },
        "SalaryMidPoint": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeePerformanceRating": {
      "title": "EmployeePerformanceRating",
      "type": "object",
      "properties": {
        "Comments": {
          "type": "string"
        },
        "NextReviewDate": {
          "type": "string",
          "format": "date-time"
        },
        "PerformanceCycle": {
          "$ref": "#/definitions/PerformanceCycle"
        },
        "PerformanceRatingScale": {
          "$ref": "#/definitions/PFRatingScale"
        },
        "PerformanceRating": {
          "$ref": "#/definitions/PerformanceRating"
        },
        "RatingScore": {
          "type": "number",
          "format": "double"
        },
        "ReviewDate": {
          "type": "string",
          "format": "date-time"
        },
        "Reviewer": {
          "$ref": "#/definitions/BaseEmployee"
        },
        "ReviewPeriodStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "ReviewPeriodEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PerformanceCycle": {
      "title": "PerformanceCycle",
      "type": "object",
      "properties": {
        "CycleStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "CycleEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PFRatingScale": {
      "title": "PFRatingScale",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PerformanceRating": {
      "title": "PerformanceRating",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BaseEmployee": {
      "title": "BaseEmployee",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "NewXRefCode": {
          "type": "string"
        },
        "CommonName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Initials": {
          "type": "string"
        },
        "MaidenName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "PreferredLastName": {
          "type": "string"
        },
        "SecondLastName": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeePropertyValue": {
      "title": "EmployeePropertyValue",
      "type": "object",
      "properties": {
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EmployeeProperty": {
          "$ref": "#/definitions/EmployeeProperty"
        },
        "BitValue": {
          "type": "boolean"
        },
        "NumberValue": {
          "type": "number",
          "format": "double"
        },
        "OptionValue": {
          "$ref": "#/definitions/EmployeePropertyOption"
        },
        "StringValue": {
          "type": "string"
        },
        "DateTimeValue": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeProperty": {
      "title": "EmployeeProperty",
      "type": "object",
      "properties": {
        "DataType": {
          "type": "integer",
          "format": "int32"
        },
        "EmployeeCardinality": {
          "type": "integer",
          "format": "int32"
        },
        "IsEditable": {
          "type": "boolean"
        },
        "DataTypeParam": {
          "type": "string"
        },
        "GenerateHREvent": {
          "type": "boolean"
        },
        "Sequence": {
          "type": "integer",
          "format": "int32"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeePropertyOption": {
      "title": "EmployeePropertyOption",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaginatedPayload_IEnumerable_EmployeePunch": {
      "title": "PaginatedPayload_IEnumerable_EmployeePunch",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeePunch"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        },
        "Paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "EmployeePunch": {
      "title": "EmployeePunch",
      "type": "object",
      "properties": {
        "PunchXRefCode": {
          "type": "string"
        },
        "EmployeeXRefCode": {
          "type": "string"
        },
        "PunchStatus": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TimeStartRaw": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEndRaw": {
          "type": "string",
          "format": "date-time"
        },
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "LocationXRefCode": {
          "type": "string"
        },
        "PositionXRefCode": {
          "type": "string"
        },
        "DepartmentXRefCode": {
          "type": "string"
        },
        "JobXRefCode": {
          "type": "string"
        },
        "DocketXRefCode": {
          "type": "string"
        },
        "DocketQuantity": {
          "type": "number",
          "format": "double"
        },
        "ProjectXRefCode": {
          "type": "string"
        },
        "PayAdjustmentXRefCode": {
          "type": "string"
        },
        "StartExceptionCode": {
          "type": "string"
        },
        "EndExceptionCode": {
          "type": "string"
        },
        "EmployeeComment": {
          "type": "string"
        },
        "ManagerComment": {
          "type": "string"
        },
        "BusinessDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "IsOnCall": {
          "type": "boolean"
        },
        "FuturePunch": {
          "type": "boolean"
        },
        "AssumedTimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "AssumedTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestampUtc": {
          "type": "string",
          "format": "date-time"
        },
        "MealBreaks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MealBreaks"
          }
        },
        "Transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transfers"
          }
        },
        "LaborMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LaborMetrics"
          }
        }
      }
    },
    "Paging": {
      "title": "Paging",
      "type": "object",
      "properties": {
        "Next": {
          "type": "string"
        }
      }
    },
    "MealBreaks": {
      "title": "MealBreaks",
      "type": "object",
      "properties": {
        "PunchXRefCode": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TimeStartRaw": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEndRaw": {
          "type": "string",
          "format": "date-time"
        },
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "StartExceptionCode": {
          "type": "string"
        },
        "EndExceptionCode": {
          "type": "string"
        },
        "IsAutoInjected": {
          "type": "boolean"
        },
        "LastModifiedTimestampUtc": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Transfers": {
      "title": "Transfers",
      "type": "object",
      "properties": {
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeStartRaw": {
          "type": "string",
          "format": "date-time"
        },
        "LocationXRefCode": {
          "type": "string"
        },
        "PositionXRefCode": {
          "type": "string"
        },
        "ProjectXRefCode": {
          "type": "string"
        },
        "DocketXRefCode": {
          "type": "string"
        },
        "DocketQuantity": {
          "type": "number",
          "format": "double"
        },
        "PayAdjustmentXRefCode": {
          "type": "string"
        },
        "EmployeeComment": {
          "type": "string"
        },
        "ManagerComment": {
          "type": "string"
        },
        "LaborMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LaborMetrics"
          }
        }
      }
    },
    "LaborMetrics": {
      "title": "LaborMetrics",
      "type": "object",
      "properties": {
        "LaborMetricsTypeXRefCode": {
          "type": "string"
        },
        "LaborMetricsCodeXRefCode": {
          "type": "string"
        }
      }
    },
    "PaginatedPayload_IEnumerable_EmployeeRawPunch": {
      "title": "PaginatedPayload_IEnumerable_EmployeeRawPunch",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeRawPunch"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        },
        "Paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "EmployeeRawPunch": {
      "title": "EmployeeRawPunch",
      "type": "object",
      "properties": {
        "RawPunchXRefCode": {
          "type": "string"
        },
        "PunchState": {
          "type": "string"
        },
        "PayDate": {
          "type": "string",
          "format": "date-time"
        },
        "EmployeeXRefCode": {
          "type": "string"
        },
        "EmployeeBadge": {
          "type": "string"
        },
        "RawPunchTime": {
          "type": "string",
          "format": "date-time"
        },
        "WasOfflinePunch": {
          "type": "boolean"
        },
        "ExtraData": {
          "$ref": "#/definitions/PunchExtraData"
        },
        "PunchType": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "PunchDevice": {
          "type": "string"
        },
        "SupervisorBadge": {
          "type": "string"
        },
        "IsDuplicate": {
          "type": "boolean"
        },
        "RejectedReason": {
          "type": "string"
        },
        "LocationXRefCode": {
          "type": "string"
        },
        "PositionXRefCode": {
          "type": "string"
        },
        "DepartmentXRefCode": {
          "type": "string"
        },
        "JobXRefCode": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "PunchOrigin": {
          "type": "string"
        },
        "Latitude": {
          "type": "number",
          "format": "double"
        },
        "Longitude": {
          "type": "number",
          "format": "double"
        },
        "Accuracy": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PunchExtraData": {
      "title": "PunchExtraData",
      "type": "object",
      "properties": {
        "DocketXRefCode": {
          "type": "string"
        },
        "ProjectXRefCode": {
          "type": "string"
        },
        "PositionXRefCode": {
          "type": "string"
        },
        "LocationXRefCode": {
          "type": "string"
        },
        "Quantity": {
          "type": "number",
          "format": "double"
        },
        "MealWaiver": {
          "type": "string"
        },
        "BreakAttestation": {
          "type": "boolean"
        },
        "BioFailure": {
          "type": "boolean"
        },
        "FaceVerificationFailure": {
          "type": "boolean"
        },
        "LaborMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PunchLaborMetric"
          }
        },
        "DocketClockTransferCode": {
          "type": "string"
        },
        "ProjectClockTransferCode": {
          "type": "string"
        },
        "PositionClockTransferCode": {
          "type": "string"
        },
        "LocationClockTransferCode": {
          "type": "string"
        }
      }
    },
    "PunchLaborMetric": {
      "title": "PunchLaborMetric",
      "type": "object",
      "properties": {
        "TypeXRefCode": {
          "type": "string"
        },
        "CodeXRefCode": {
          "type": "string"
        },
        "TypeClockTransferCode": {
          "type": "string"
        },
        "CodeClockTransferCode": {
          "type": "string"
        }
      }
    },
    "EmployeeRawPunchForSubmit": {
      "title": "EmployeeRawPunchForSubmit",
      "type": "object",
      "properties": {
        "EmployeeBadge": {
          "type": "string"
        },
        "RawPunchTime": {
          "type": "string"
        },
        "PunchType": {
          "type": "string"
        },
        "PunchDevice": {
          "type": "string"
        },
        "SupervisorBadge": {
          "type": "string"
        },
        "LocationXRefCode": {
          "type": "string"
        },
        "LocationClockTransferCode": {
          "type": "string"
        },
        "PositionXRefCode": {
          "type": "string"
        },
        "PositionClockTransferCode": {
          "type": "string"
        },
        "DocketXRefCode": {
          "type": "string"
        },
        "DocketClockTransferCode": {
          "type": "string"
        },
        "ProjectXRefCode": {
          "type": "string"
        },
        "ProjectClockTransferCode": {
          "type": "string"
        },
        "LaborMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PunchLaborMetric"
          }
        },
        "Quantity": {
          "type": "number",
          "format": "double"
        },
        "MealWaiver": {
          "type": "string"
        },
        "BreakAttestation": {
          "type": "boolean"
        }
      }
    },
    "EmployeeRole": {
      "title": "EmployeeRole",
      "type": "object",
      "properties": {
        "IsDefault": {
          "type": "boolean"
        },
        "Role": {
          "$ref": "#/definitions/Role"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "IsPrestartRole": {
          "type": "boolean"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Role": {
      "title": "Role",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Payload_IEnumerable_Employee": {
      "title": "Payload_IEnumerable_Employee",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Employee": {
      "title": "Employee",
      "type": "object",
      "properties": {
        "AvatarUri": {
          "type": "string"
        },
        "BadgeNumber": {
          "type": "string"
        },
        "BioExempt": {
          "type": "boolean"
        },
        "BirthDate": {
          "type": "string",
          "format": "date-time"
        },
        "BirthCountry": {
          "type": "string"
        },
        "BirthState": {
          "type": "string"
        },
        "BirthCity": {
          "type": "string"
        },
        "ChecksumTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "ClockSupervisor": {
          "type": "boolean"
        },
        "COBRANotificationSentDate": {
          "type": "string",
          "format": "date-time"
        },
        "COBRANotificationStatus": {
          "type": "integer",
          "format": "int32"
        },
        "Culture": {
          "$ref": "#/definitions/Culture"
        },
        "DateOfDeath": {
          "type": "string",
          "format": "date-time"
        },
        "EligibleForRehire": {
          "type": "string"
        },
        "EmployeePin": {
          "type": "string"
        },
        "EntitlementOverrideDate": {
          "type": "string",
          "format": "date-time"
        },
        "EstimatedReturnDate": {
          "type": "string",
          "format": "date-time"
        },
        "ExportDate": {
          "type": "string",
          "format": "date-time"
        },
        "FederatedId": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "HireDate": {
          "type": "string",
          "format": "date-time"
        },
        "HomePhone": {
          "type": "string"
        },
        "IsAboriginal": {
          "type": "string"
        },
        "IsVisibleMinority": {
          "type": "string"
        },
        "EmployeeLatestUpdatedTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "LastPayrollNewHireExportDate": {
          "type": "string",
          "format": "date-time"
        },
        "Nationality": {
          "type": "string"
        },
        "NewHireApprovalDate": {
          "type": "string",
          "format": "date-time"
        },
        "NewHireApproved": {
          "type": "boolean"
        },
        "NewHireApprovedBy": {
          "type": "string"
        },
        "OriginalHireDate": {
          "type": "string",
          "format": "date-time"
        },
        "PhotoExempt": {
          "type": "boolean"
        },
        "PPACAOverrideDate": {
          "type": "string",
          "format": "date-time"
        },
        "RegisteredDisabled": {
          "type": "string"
        },
        "RequiresExitInterview": {
          "type": "boolean"
        },
        "SeniorityDate": {
          "type": "string",
          "format": "date-time"
        },
        "SocialSecurityNumber": {
          "type": "string"
        },
        "SSNCountryCode": {
          "type": "string"
        },
        "SSNExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "TaxExempt": {
          "type": "boolean"
        },
        "TaxpayerId": {
          "type": "string"
        },
        "TerminationDate": {
          "type": "string",
          "format": "date-time"
        },
        "VeteranSeparationDate": {
          "type": "string",
          "format": "date-time"
        },
        "FirstTimeAccessEmailSentCount": {
          "type": "integer",
          "format": "int32"
        },
        "FirstTimeAccessVerificationAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "SendFirstTimeAccessEmail": {
          "type": "boolean"
        },
        "EmployeeBadge": {
          "$ref": "#/definitions/EmployeeBadge"
        },
        "PreStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "PayrollKey": {
          "type": "string"
        },
        "LoginId": {
          "type": "string"
        },
        "HomeOrganization": {
          "$ref": "#/definitions/Location"
        },
        "EmployeeNumber": {
          "type": "string"
        },
        "EmploymentStatuses": {
          "$ref": "#/definitions/EmployeeEmploymentStatusCollection"
        },
        "WorkAssignments": {
          "$ref": "#/definitions/EmployeeWorkAssignmentCollection"
        },
        "Contacts": {
          "$ref": "#/definitions/PersonContactCollection"
        },
        "Addresses": {
          "$ref": "#/definitions/PersonAddressCollection"
        },
        "Roles": {
          "$ref": "#/definitions/EmployeeRoleCollection"
        },
        "EmployeeManagers": {
          "$ref": "#/definitions/EmployeeManagerCollection"
        },
        "EmployeeWorkAssignmentManagers": {
          "$ref": "#/definitions/EmployeeWorkAssignmentManagerCollection"
        },
        "CompensationSummary": {
          "$ref": "#/definitions/EmployeeCompensationCollection"
        },
        "SSOAccounts": {
          "$ref": "#/definitions/AppUserSSOCollection"
        },
        "MaritalStatuses": {
          "$ref": "#/definitions/EmployeeMaritalStatusCollection"
        },
        "Locations": {
          "$ref": "#/definitions/EmployeeLocationCollection"
        },
        "BioSensitivityLevel": {
          "$ref": "#/definitions/BioSensitivityLevel"
        },
        "CitizenshipType": {
          "$ref": "#/definitions/CitizenshipType"
        },
        "SchoolYear": {
          "$ref": "#/definitions/SchoolYear"
        },
        "HealthWellnessDetails": {
          "$ref": "#/definitions/EmployeeHealthWellnessCollection"
        },
        "Courses": {
          "$ref": "#/definitions/EmployeeCourseCollection"
        },
        "HRIncidents": {
          "$ref": "#/definitions/EmployeeHRIncidentCollection"
        },
        "Skills": {
          "$ref": "#/definitions/EmployeeSkillCollection"
        },
        "TrainingPrograms": {
          "$ref": "#/definitions/EmployeeTrainingProgramCollection"
        },
        "UnionMemberships": {
          "$ref": "#/definitions/EmployeeUnionCollection"
        },
        "EmploymentTypes": {
          "$ref": "#/definitions/EmployeeEmploymentTypeCollection"
        },
        "HighlyCompensatedEmployees": {
          "$ref": "#/definitions/HighlyCompensatedEmployeeCollection"
        },
        "PayGradeRates": {
          "$ref": "#/definitions/EmployeePayGradeRateCollection"
        },
        "DirectDeposits": {
          "$ref": "#/definitions/EmployeeDirectDepositCollection"
        },
        "CANFederalTaxes": {
          "$ref": "#/definitions/EmployeeCANFederalTaxCollection"
        },
        "CANStateTaxes": {
          "$ref": "#/definitions/EmployeeCANStateTaxCollection"
        },
        "USFederalTaxes": {
          "$ref": "#/definitions/EmployeeUSFederalTaxCollection"
        },
        "USStateTaxes": {
          "$ref": "#/definitions/EmployeeUSStateTaxCollection"
        },
        "EmergencyContacts": {
          "$ref": "#/definitions/EmergencyContactCollection"
        },
        "Ethnicities": {
          "$ref": "#/definitions/EmployeeEthnicityCollection"
        },
        "VeteranStatuses": {
          "$ref": "#/definitions/EmployeeVeteransStatusCollection"
        },
        "EmployeeProperties": {
          "$ref": "#/definitions/EmployeePropertyValueCollection"
        },
        "LaborDefaults": {
          "$ref": "#/definitions/EmployeeDefaultLaborCollection"
        },
        "DocumentManagementSecurityGroups": {
          "$ref": "#/definitions/DocMgmtSecurityGroupUserMapCollection"
        },
        "ClockDeviceGroups": {
          "$ref": "#/definitions/EmployeeClockDeviceGroupCollection"
        },
        "EmployeePayAdjustCodeGroups": {
          "$ref": "#/definitions/EmployeePayAdjCodeGroupListCollection"
        },
        "UserPayAdjustCodeGroups": {
          "$ref": "#/definitions/UserPayAdjCodeGroupCollection"
        },
        "WorkContracts": {
          "$ref": "#/definitions/EmployeeWorkContractCollection"
        },
        "PerformanceRatings": {
          "$ref": "#/definitions/EmployeePerformanceRatingCollection"
        },
        "EIRates": {
          "$ref": "#/definitions/EmployeeEIRateCollection"
        },
        "USTaxStatuses": {
          "$ref": "#/definitions/EmployeeUSTaxStatusCollection"
        },
        "CANTaxStatuses": {
          "$ref": "#/definitions/EmployeeCANTaxStatusCollection"
        },
        "OrgUnitInfos": {
          "$ref": "#/definitions/EmployeeOrgUnitInfoCollection"
        },
        "ManagedEmployees": {
          "$ref": "#/definitions/EmployeeWorkAssignmentManagerCollection"
        },
        "ConfidentialIdentification": {
          "$ref": "#/definitions/EmployeeConfidentialIdentificationCollection"
        },
        "EmploymentAgreements": {
          "$ref": "#/definitions/EmployeeEmploymentAgreementCollection"
        },
        "GenderIdentity": {
          "$ref": "#/definitions/GenderIdentity"
        },
        "OnboardingPolicies": {
          "$ref": "#/definitions/EmployeeOnboardingPolicyCollection"
        },
        "PayPeriodInformation": {
          "$ref": "#/definitions/PayPeriodInformationCollection"
        },
        "EarningElections": {
          "$ref": "#/definitions/EmployeeEarningsCollection"
        },
        "DeductionElections": {
          "$ref": "#/definitions/EmployeeDeductionsCollection"
        },
        "LastActiveManagers": {
          "$ref": "#/definitions/EmployeeManagerCollection"
        },
        "XRefCode": {
          "type": "string"
        },
        "NewXRefCode": {
          "type": "string"
        },
        "CommonName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Initials": {
          "type": "string"
        },
        "MaidenName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "PreferredLastName": {
          "type": "string"
        },
        "SecondLastName": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Culture": {
      "title": "Culture",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeBadge": {
      "title": "EmployeeBadge",
      "type": "object",
      "properties": {
        "BadgeNumber": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEmploymentStatusCollection": {
      "title": "EmployeeEmploymentStatusCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEmploymentStatus"
          }
        }
      }
    },
    "EmployeeWorkAssignmentCollection": {
      "title": "EmployeeWorkAssignmentCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWorkAssignment"
          }
        }
      }
    },
    "PersonContactCollection": {
      "title": "PersonContactCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonContact"
          }
        }
      }
    },
    "PersonAddressCollection": {
      "title": "PersonAddressCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddress"
          }
        }
      }
    },
    "EmployeeRoleCollection": {
      "title": "EmployeeRoleCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeRole"
          }
        }
      }
    },
    "EmployeeManagerCollection": {
      "title": "EmployeeManagerCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeManager"
          }
        }
      }
    },
    "EmployeeWorkAssignmentManagerCollection": {
      "title": "EmployeeWorkAssignmentManagerCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWorkAssignmentManager"
          }
        }
      }
    },
    "EmployeeCompensationCollection": {
      "title": "EmployeeCompensationCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCompensation"
          }
        }
      }
    },
    "AppUserSSOCollection": {
      "title": "AppUserSSOCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeSSOAccount"
          }
        }
      }
    },
    "EmployeeMaritalStatusCollection": {
      "title": "EmployeeMaritalStatusCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeMaritalStatus"
          }
        }
      }
    },
    "EmployeeLocationCollection": {
      "title": "EmployeeLocationCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeLocation"
          }
        }
      }
    },
    "BioSensitivityLevel": {
      "title": "BioSensitivityLevel",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CitizenshipType": {
      "title": "CitizenshipType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SchoolYear": {
      "title": "SchoolYear",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeHealthWellnessCollection": {
      "title": "EmployeeHealthWellnessCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeHealthWellness"
          }
        }
      }
    },
    "EmployeeCourseCollection": {
      "title": "EmployeeCourseCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCourse"
          }
        }
      }
    },
    "EmployeeHRIncidentCollection": {
      "title": "EmployeeHRIncidentCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeHRIncident"
          }
        }
      }
    },
    "EmployeeSkillCollection": {
      "title": "EmployeeSkillCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeSkill"
          }
        }
      }
    },
    "EmployeeTrainingProgramCollection": {
      "title": "EmployeeTrainingProgramCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeTrainingProgram"
          }
        }
      }
    },
    "EmployeeUnionCollection": {
      "title": "EmployeeUnionCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeUnionMembership"
          }
        }
      }
    },
    "EmployeeEmploymentTypeCollection": {
      "title": "EmployeeEmploymentTypeCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEmploymentType"
          }
        }
      }
    },
    "HighlyCompensatedEmployeeCollection": {
      "title": "HighlyCompensatedEmployeeCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeHighlyCompensatedEmployeeIndicator"
          }
        }
      }
    },
    "EmployeePayGradeRateCollection": {
      "title": "EmployeePayGradeRateCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeePayGradeRate"
          }
        }
      }
    },
    "EmployeeDirectDepositCollection": {
      "title": "EmployeeDirectDepositCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDirectDeposit"
          }
        }
      }
    },
    "EmployeeCANFederalTaxCollection": {
      "title": "EmployeeCANFederalTaxCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCANFederalTax"
          }
        }
      }
    },
    "EmployeeCANStateTaxCollection": {
      "title": "EmployeeCANStateTaxCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCANStateTax"
          }
        }
      }
    },
    "EmployeeUSFederalTaxCollection": {
      "title": "EmployeeUSFederalTaxCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeUSFederalTax"
          }
        }
      }
    },
    "EmployeeUSStateTaxCollection": {
      "title": "EmployeeUSStateTaxCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeUSStateTax"
          }
        }
      }
    },
    "EmergencyContactCollection": {
      "title": "EmergencyContactCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEmergencyContact"
          }
        }
      }
    },
    "EmployeeEthnicityCollection": {
      "title": "EmployeeEthnicityCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEthnicity"
          }
        }
      }
    },
    "EmployeeVeteransStatusCollection": {
      "title": "EmployeeVeteransStatusCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeVeteransStatus"
          }
        }
      }
    },
    "EmployeePropertyValueCollection": {
      "title": "EmployeePropertyValueCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeePropertyValue"
          }
        }
      }
    },
    "EmployeeDefaultLaborCollection": {
      "title": "EmployeeDefaultLaborCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDefaultLabor"
          }
        }
      }
    },
    "DocMgmtSecurityGroupUserMapCollection": {
      "title": "DocMgmtSecurityGroupUserMapCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDocumentManagementSecurityGroup"
          }
        }
      }
    },
    "EmployeeClockDeviceGroupCollection": {
      "title": "EmployeeClockDeviceGroupCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeClockDeviceGroup"
          }
        }
      }
    },
    "EmployeePayAdjCodeGroupListCollection": {
      "title": "EmployeePayAdjCodeGroupListCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeePayAdjustCodeGroup"
          }
        }
      }
    },
    "UserPayAdjCodeGroupCollection": {
      "title": "UserPayAdjCodeGroupCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserPayAdjustCodeGroup"
          }
        }
      }
    },
    "EmployeeWorkContractCollection": {
      "title": "EmployeeWorkContractCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWorkContract"
          }
        }
      }
    },
    "EmployeePerformanceRatingCollection": {
      "title": "EmployeePerformanceRatingCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeePerformanceRating"
          }
        }
      }
    },
    "EmployeeEIRateCollection": {
      "title": "EmployeeEIRateCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCANEmploymentInsuranceRate"
          }
        }
      }
    },
    "EmployeeUSTaxStatusCollection": {
      "title": "EmployeeUSTaxStatusCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeUSTaxStatus"
          }
        }
      }
    },
    "EmployeeCANTaxStatusCollection": {
      "title": "EmployeeCANTaxStatusCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCANTaxStatus"
          }
        }
      }
    },
    "EmployeeOrgUnitInfoCollection": {
      "title": "EmployeeOrgUnitInfoCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeOrgUnitInformation"
          }
        }
      }
    },
    "EmployeeConfidentialIdentificationCollection": {
      "title": "EmployeeConfidentialIdentificationCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeConfidentialIdentification"
          }
        }
      }
    },
    "EmployeeEmploymentAgreementCollection": {
      "title": "EmployeeEmploymentAgreementCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEmploymentAgreement"
          }
        }
      }
    },
    "GenderIdentity": {
      "title": "GenderIdentity",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeOnboardingPolicyCollection": {
      "title": "EmployeeOnboardingPolicyCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeOnboardingPolicy"
          }
        }
      }
    },
    "PayPeriodInformationCollection": {
      "title": "PayPeriodInformationCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayPeriodInformation"
          }
        }
      }
    },
    "EmployeeEarningsCollection": {
      "title": "EmployeeEarningsCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEarning"
          }
        }
      }
    },
    "EmployeeDeductionsCollection": {
      "title": "EmployeeDeductionsCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDeduction"
          }
        }
      }
    },
    "EmployeeWorkAssignment": {
      "title": "EmployeeWorkAssignment",
      "type": "object",
      "properties": {
        "Position": {
          "$ref": "#/definitions/Position"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "EmploymentIndicator": {
          "$ref": "#/definitions/EmploymentIndicator"
        },
        "EmploymentStatusReason": {
          "$ref": "#/definitions/EmploymentStatusReason"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "FlatAmount": {
          "type": "number",
          "format": "double"
        },
        "FTE": {
          "type": "number",
          "format": "double"
        },
        "IsPAPrimaryWorkSite": {
          "type": "boolean"
        },
        "IsPrimary": {
          "type": "boolean"
        },
        "IsStatutory": {
          "type": "boolean"
        },
        "IsVirtual": {
          "type": "boolean"
        },
        "BusinessTitle": {
          "type": "string"
        },
        "JobSetLevel": {
          "$ref": "#/definitions/JobSetLevel"
        },
        "LaborPercentage": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "MultiJSalaryAllocationPercent": {
          "type": "number",
          "format": "double"
        },
        "ParticipateInReciprocalTaxCalculation": {
          "type": "boolean"
        },
        "PositionTerm": {
          "$ref": "#/definitions/PositionTerm"
        },
        "PRBankAccountBranchAddress": {
          "$ref": "#/definitions/BankAccountBranchAddress"
        },
        "WorkLocationOverride": {
          "$ref": "#/definitions/WorkLocationOverride"
        },
        "Rank": {
          "type": "integer",
          "format": "int64"
        },
        "JobRate": {
          "type": "number",
          "format": "double"
        },
        "TipTypeGroup": {
          "$ref": "#/definitions/TipTypeGroup"
        },
        "LedgerCode": {
          "type": "string"
        }
      }
    },
    "PersonContact": {
      "title": "PersonContact",
      "type": "object",
      "properties": {
        "ContactNumber": {
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "ElectronicAddress": {
          "type": "string"
        },
        "Extension": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ContactInformationType": {
          "$ref": "#/definitions/ContactInformationType"
        },
        "IsForSystemCommunications": {
          "type": "boolean"
        },
        "IsPreferredContactMethod": {
          "type": "boolean"
        },
        "IsUnlistedNumber": {
          "type": "boolean"
        },
        "FormattedNumber": {
          "type": "string"
        },
        "IsVerified": {
          "type": "boolean"
        },
        "IsRejected": {
          "type": "boolean"
        },
        "ShowRejectedWarning": {
          "type": "boolean"
        },
        "NumberOfVerificationRequests": {
          "type": "integer",
          "format": "int32"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PersonAddress": {
      "title": "PersonAddress",
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "Address3": {
          "type": "string"
        },
        "Address4": {
          "type": "string"
        },
        "Address5": {
          "type": "string"
        },
        "Address6": {
          "type": "string"
        },
        "County": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ContactInformationType": {
          "$ref": "#/definitions/ContactInformationType"
        },
        "IsPayrollMailing": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeWorkAssignmentManager": {
      "title": "EmployeeWorkAssignmentManager",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TerminationDate": {
          "type": "string",
          "format": "date-time"
        },
        "EmploymentStatusGroupXRefCode": {
          "type": "string"
        },
        "ManagerXRefCode": {
          "type": "string"
        },
        "ManagerName": {
          "type": "string"
        },
        "ActiveEmployeePosition": {
          "$ref": "#/definitions/Position"
        },
        "ActiveEmployeeLocation": {
          "$ref": "#/definitions/Location"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeMaritalStatus": {
      "title": "EmployeeMaritalStatus",
      "type": "object",
      "properties": {
        "MaritalStatus": {
          "$ref": "#/definitions/MaritalStatus"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeSkill": {
      "title": "EmployeeSkill",
      "type": "object",
      "properties": {
        "Skill": {
          "$ref": "#/definitions/Skill"
        },
        "SkillLevel": {
          "$ref": "#/definitions/SkillLevel"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastAssignedBy": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeUnionMembership": {
      "title": "EmployeeUnionMembership",
      "type": "object",
      "properties": {
        "UnionMembershipDate": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "Union": {
          "$ref": "#/definitions/DFUnion"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeUSStateTax": {
      "title": "EmployeeUSStateTax",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "FilingStatus": {
          "$ref": "#/definitions/StateFilingStatus"
        },
        "Allowances": {
          "type": "integer",
          "format": "int32"
        },
        "AdditionalAmount": {
          "type": "number",
          "format": "double"
        },
        "DependentAllowances": {
          "type": "integer",
          "format": "int32"
        },
        "PersonalAllowances": {
          "type": "integer",
          "format": "int32"
        },
        "AdditionalAllowances": {
          "type": "integer",
          "format": "int32"
        },
        "IsTaxExempt": {
          "type": "boolean"
        },
        "AlternateCalculationCode": {
          "type": "string"
        },
        "ExemptionAmount": {
          "type": "number",
          "format": "double"
        },
        "AdditionalTaxPercent": {
          "type": "number",
          "format": "double"
        },
        "AdditionalExemptionAmount": {
          "type": "number",
          "format": "double"
        },
        "IsLocked": {
          "type": "boolean"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeVeteransStatus": {
      "title": "EmployeeVeteransStatus",
      "type": "object",
      "properties": {
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "IsVevraa": {
          "type": "boolean"
        },
        "VeteransStatus": {
          "$ref": "#/definitions/DFVeteransStatus"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserPayAdjustCodeGroup": {
      "title": "UserPayAdjustCodeGroup",
      "type": "object",
      "properties": {
        "PayAdjCodeGroup": {
          "$ref": "#/definitions/PayAdjCodeGroup"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeWorkContract": {
      "title": "EmployeeWorkContract",
      "type": "object",
      "properties": {
        "AverageNumOfDays": {
          "type": "number",
          "format": "double"
        },
        "BaseHours": {
          "type": "number",
          "format": "double"
        },
        "BaseComplementaryHours": {
          "type": "number",
          "format": "double"
        },
        "ContractWorkPercent": {
          "type": "number",
          "format": "double"
        },
        "CreateShiftOnHolidays": {
          "type": "boolean"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "FullTimeHours": {
          "type": "number",
          "format": "double"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "WorkContract": {
          "$ref": "#/definitions/WorkContract"
        },
        "WorkPatternLengthDays": {
          "type": "integer",
          "format": "int32"
        },
        "WorkPatterns": {
          "$ref": "#/definitions/EmployeeWorkPatternCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeUSTaxStatus": {
      "title": "EmployeeUSTaxStatus",
      "type": "object",
      "properties": {
        "StateCode": {
          "type": "string"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "TaxPropertyCollection": {
          "$ref": "#/definitions/TaxPropertyCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PayPeriodInformation": {
      "title": "PayPeriodInformation",
      "type": "object",
      "properties": {
        "PayGroup": {
          "$ref": "#/definitions/PayGroupBrief"
        },
        "PayPeriodStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "PayPeriodEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEarning": {
      "title": "EmployeeEarning",
      "type": "object",
      "properties": {
        "ContinuePaymentOnStatutoryPay": {
          "type": "boolean"
        },
        "IsOptOut": {
          "type": "integer",
          "format": "int32"
        },
        "Earning": {
          "$ref": "#/definitions/Earning"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "ElectionSchedule": {
          "$ref": "#/definitions/ElectionSchedule"
        },
        "ElectionStartPayGroup": {
          "$ref": "#/definitions/PayGroup"
        },
        "ElectionStartPayPeriodStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsBlocked": {
          "type": "boolean"
        },
        "LimitAmount": {
          "type": "number",
          "format": "double"
        },
        "LimitPercent": {
          "type": "number",
          "format": "double"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "Position": {
          "$ref": "#/definitions/Position"
        },
        "EmployeeEarningParameters": {
          "$ref": "#/definitions/EmployeeEarningParameterCollection"
        },
        "EmployeeEarningLimits": {
          "$ref": "#/definitions/EmployeeEarningLimitCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDeduction": {
      "title": "EmployeeDeduction",
      "type": "object",
      "properties": {
        "Deduction": {
          "$ref": "#/definitions/Deduction"
        },
        "EffectiveStart": {
          "type": "string",
          "format": "date-time"
        },
        "EffectiveEnd": {
          "type": "string",
          "format": "date-time"
        },
        "ElectionStartPayPeriodStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "ElectionStartPayGroup": {
          "$ref": "#/definitions/PayGroup"
        },
        "ElectionSchedule": {
          "$ref": "#/definitions/ElectionSchedule"
        },
        "IsBlocked": {
          "type": "boolean"
        },
        "Position": {
          "$ref": "#/definitions/Position"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "ContinuePaymentOnStatutoryPay": {
          "type": "boolean"
        },
        "IsOptOut": {
          "type": "integer",
          "format": "int32"
        },
        "EmployeeDeductionParameters": {
          "$ref": "#/definitions/EmployeeDeductionParameterCollection"
        },
        "EmployeeDeductionLimits": {
          "$ref": "#/definitions/EmployeeDeductionLimitCollection"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "JobSetLevel": {
      "title": "JobSetLevel",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BankAccountBranchAddress": {
      "title": "BankAccountBranchAddress",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkLocationOverride": {
      "title": "WorkLocationOverride",
      "type": "object",
      "properties": {
        "County": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "LocationName": {
          "type": "string"
        },
        "LocationAddress": {
          "$ref": "#/definitions/LocationAddress"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TipTypeGroup": {
      "title": "TipTypeGroup",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MaritalStatus": {
      "title": "MaritalStatus",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Skill": {
      "title": "Skill",
      "type": "object",
      "properties": {
        "SkillType": {
          "$ref": "#/definitions/SkillType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SkillLevel": {
      "title": "SkillLevel",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StateFilingStatus": {
      "title": "StateFilingStatus",
      "type": "object",
      "properties": {
        "CountryCode": {
          "type": "string"
        },
        "StateCode": {
          "type": "string"
        },
        "StateFilingStatusCode": {
          "type": "string"
        },
        "CalculationCode": {
          "type": "string"
        },
        "PayrollOutput": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DFVeteransStatus": {
      "title": "DFVeteransStatus",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkContract": {
      "title": "WorkContract",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeWorkPatternCollection": {
      "title": "EmployeeWorkPatternCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWorkPattern"
          }
        }
      }
    },
    "PayGroupBrief": {
      "title": "PayGroupBrief",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Earning": {
      "title": "Earning",
      "type": "object",
      "properties": {
        "CalculationType": {
          "$ref": "#/definitions/CalculationType"
        },
        "CreditJournalNumber": {
          "type": "string"
        },
        "DebitJournalNumber": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "EarningCode": {
          "$ref": "#/definitions/EarningCode"
        },
        "IsDecliningBalance": {
          "type": "boolean"
        },
        "IsGenerated": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ElectionSchedule": {
      "title": "ElectionSchedule",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEarningParameterCollection": {
      "title": "EmployeeEarningParameterCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEarningParameter"
          }
        }
      }
    },
    "EmployeeEarningLimitCollection": {
      "title": "EmployeeEarningLimitCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeEarningLimit"
          }
        }
      }
    },
    "Deduction": {
      "title": "Deduction",
      "type": "object",
      "properties": {
        "CalculationType": {
          "$ref": "#/definitions/CalculationType"
        },
        "DeductionCode": {
          "$ref": "#/definitions/DeductionCode"
        },
        "DeductionType": {
          "$ref": "#/definitions/DeductionType"
        },
        "DisplayName": {
          "type": "string"
        },
        "DebitJournalNumber": {
          "type": "string"
        },
        "CreditJournalNumber": {
          "type": "string"
        },
        "IsDecliningBalance": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDeductionParameterCollection": {
      "title": "EmployeeDeductionParameterCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDeductionParameter"
          }
        }
      }
    },
    "EmployeeDeductionLimitCollection": {
      "title": "EmployeeDeductionLimitCollection",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeDeductionLimit"
          }
        }
      }
    },
    "LocationAddress": {
      "title": "LocationAddress",
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/State"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "City": {
          "type": "string"
        },
        "County": {
          "type": "string"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SkillType": {
      "title": "SkillType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeWorkPattern": {
      "title": "EmployeeWorkPattern",
      "type": "object",
      "properties": {
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "ShiftTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "ShiftTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "WorkPatternDayIndex": {
          "type": "integer",
          "format": "int32"
        },
        "Deparment": {
          "$ref": "#/definitions/Department"
        },
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "ShiftType": {
          "$ref": "#/definitions/WorkPatternShiftType"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "OrgLocationType": {
          "$ref": "#/definitions/OrgLocationType"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CalculationType": {
      "title": "CalculationType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EarningCode": {
      "title": "EarningCode",
      "type": "object",
      "properties": {
        "EarningType": {
          "$ref": "#/definitions/EarningType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEarningParameter": {
      "title": "EmployeeEarningParameter",
      "type": "object",
      "properties": {
        "EarningParameter": {
          "$ref": "#/definitions/EarningParameter"
        },
        "Value": {
          "type": "number",
          "format": "double"
        },
        "PayGroupValue": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeEarningLimit": {
      "title": "EmployeeEarningLimit",
      "type": "object",
      "properties": {
        "EarningLimit": {
          "$ref": "#/definitions/EarningLimit"
        },
        "LimitAmount": {
          "type": "number",
          "format": "double"
        },
        "LimitPercent": {
          "type": "number",
          "format": "double"
        },
        "PayGroupLimitAmount": {
          "type": "number",
          "format": "double"
        },
        "PayGroupLimitPercent": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeductionCode": {
      "title": "DeductionCode",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeductionType": {
      "title": "DeductionType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDeductionParameter": {
      "title": "EmployeeDeductionParameter",
      "type": "object",
      "properties": {
        "DeductionParameter": {
          "$ref": "#/definitions/DeductionParameter"
        },
        "Value": {
          "type": "number",
          "format": "double"
        },
        "PayGroupValue": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EmployeeDeductionLimit": {
      "title": "EmployeeDeductionLimit",
      "type": "object",
      "properties": {
        "DeductionLimit": {
          "$ref": "#/definitions/DeductionLimit"
        },
        "LimitAmount": {
          "type": "number",
          "format": "double"
        },
        "LimitPercent": {
          "type": "number",
          "format": "double"
        },
        "PayGroupLimitAmount": {
          "type": "number",
          "format": "double"
        },
        "PayGroupLimitPercent": {
          "type": "number",
          "format": "double"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkPatternShiftType": {
      "title": "WorkPatternShiftType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrgLocationType": {
      "title": "OrgLocationType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EarningType": {
      "title": "EarningType",
      "type": "object",
      "properties": {
        "CodeName": {
          "type": "string"
        },
        "IsGLAllocatedDebit": {
          "type": "boolean"
        },
        "IsGLAllocatedCredit": {
          "type": "boolean"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EarningParameter": {
      "title": "EarningParameter",
      "type": "object",
      "properties": {
        "CodeName": {
          "type": "string"
        },
        "ParameterAccessType": {
          "$ref": "#/definitions/ParameterAccessType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EarningLimit": {
      "title": "EarningLimit",
      "type": "object",
      "properties": {
        "LimitAccessType": {
          "$ref": "#/definitions/LimitAccessType"
        },
        "AccumulationType": {
          "$ref": "#/definitions/AccumulationType"
        },
        "LimitType": {
          "$ref": "#/definitions/LimitType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeductionParameter": {
      "title": "DeductionParameter",
      "type": "object",
      "properties": {
        "ParameterAccessType": {
          "$ref": "#/definitions/ParameterAccessType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeductionLimit": {
      "title": "DeductionLimit",
      "type": "object",
      "properties": {
        "LimitAccessType": {
          "$ref": "#/definitions/LimitAccessType"
        },
        "AccumulationType": {
          "$ref": "#/definitions/AccumulationType"
        },
        "LimitType": {
          "$ref": "#/definitions/LimitType"
        },
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ParameterAccessType": {
      "title": "ParameterAccessType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LimitAccessType": {
      "title": "LimitAccessType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccumulationType": {
      "title": "AccumulationType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LimitType": {
      "title": "LimitType",
      "type": "object",
      "properties": {
        "XRefCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "LongName": {
          "type": "string"
        },
        "LastModifiedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Payload_List_Employee": {
      "title": "Payload_List_Employee",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_Employee": {
      "title": "Payload_Employee",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Employee"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_IEnumerable_ProcessResult": {
      "title": "Payload_IEnumerable_ProcessResult",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "I9Order": {
      "title": "I9Order",
      "type": "object",
      "properties": {
        "I9OrderId": {
          "type": "string"
        },
        "OrderStatusXRefCode": {
          "type": "string"
        },
        "EVerify": {
          "$ref": "#/definitions/EVerify"
        }
      }
    },
    "EVerify": {
      "title": "EVerify",
      "type": "object",
      "properties": {
        "EVerifyCaseNumber": {
          "type": "string"
        },
        "EVerifyStatus": {
          "type": "string"
        },
        "EVerifyStatusDate": {
          "type": "string",
          "format": "date-time"
        },
        "EVerifyStatusDesc": {
          "type": "string"
        }
      }
    },
    "Payload_IEnumerable_JobFeed": {
      "title": "Payload_IEnumerable_JobFeed",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobFeed"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "JobFeed": {
      "title": "JobFeed",
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ClientSiteName": {
          "type": "string"
        },
        "ClientSiteXRefCode": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "ParentCompanyName": {
          "type": "string"
        },
        "JobDetailsUrl": {
          "type": "string"
        },
        "ApplyUrl": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Education": {
          "type": "string"
        },
        "JobFamily": {
          "type": "string"
        },
        "JobFunction": {
          "type": "string"
        },
        "EmploymentIndicator": {
          "type": "string"
        },
        "Qualifications": {
          "type": "string"
        },
        "DatePosted": {
          "type": "string",
          "format": "date-time"
        },
        "LastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "ReferenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "JobReferenceNumber": {
          "type": "string"
        },
        "CandidatesUrl": {
          "type": "string"
        },
        "CultureCode": {
          "type": "string"
        },
        "ParentRequisitionCode": {
          "type": "integer",
          "format": "int32"
        },
        "MinHiringRate": {
          "type": "number",
          "format": "double"
        },
        "MaxHiringRate": {
          "type": "number",
          "format": "double"
        },
        "HiringRate": {
          "type": "number",
          "format": "double"
        },
        "JobType": {
          "type": "integer",
          "format": "int32"
        },
        "TravelPercentage": {
          "type": "number",
          "format": "double"
        },
        "TravelRequired": {
          "type": "integer",
          "format": "int32"
        },
        "TelecommutePercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Payload_IEnumerable_Job": {
      "title": "Payload_IEnumerable_Job",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_Job": {
      "title": "Payload_Job",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Job"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_LaborCostResult": {
      "title": "Payload_LaborCostResult",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/LaborCostResult"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "LaborCostResult": {
      "title": "LaborCostResult",
      "type": "object",
      "properties": {
        "LocationXRefCode": {
          "type": "string"
        },
        "CalendarDate": {
          "type": "string",
          "format": "date-time"
        },
        "Totals": {
          "$ref": "#/definitions/LaborCostTotalResult"
        },
        "Intervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LaborCostTimeInterval"
          }
        }
      }
    },
    "LaborCostTotalResult": {
      "title": "LaborCostTotalResult",
      "type": "object",
      "properties": {
        "LaborCost": {
          "type": "number",
          "format": "double"
        },
        "LaborHours": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LaborCostTimeInterval": {
      "title": "LaborCostTimeInterval",
      "type": "object",
      "properties": {
        "IntervalStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "IntervalEndTime": {
          "type": "string",
          "format": "date-time"
        },
        "Totals": {
          "$ref": "#/definitions/LaborCostTotalResult"
        }
      }
    },
    "Payload_IEnumerable_Location": {
      "title": "Payload_IEnumerable_Location",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_Location": {
      "title": "Payload_Location",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Location"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_IEnumerable_Position": {
      "title": "Payload_IEnumerable_Position",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Position"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_Position": {
      "title": "Payload_Position",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Position"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "Payload_IEnumerable_ReportMetadata": {
      "title": "Payload_IEnumerable_ReportMetadata",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportMetadata"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "ReportMetadata": {
      "title": "ReportMetadata",
      "description": "This class provides information about a report.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the Report.\r\nThe name will be localized, based on the Session Culture.",
          "type": "string"
        },
        "Description": {
          "description": "Description of the Report.\r\nThe description will be localized, based on the Session Culture.",
          "type": "string"
        },
        "XRefCode": {
          "description": "Reference Code for the Report.\r\nThis is a unique, human readable, code used to identify the Report.",
          "type": "string"
        },
        "MaxRows": {
          "description": "Maximum number of rows the Report will return as part of it's ResultSet.\r\nIf the MaxRows is assigned -1, it will execute to include all possible rows in it's ResultSet.",
          "type": "integer",
          "format": "int32"
        },
        "ColumnMetadata": {
          "description": "An array of ReportColumnMetadata objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportColumnMetadata"
          }
        },
        "Parameters": {
          "description": "Collection of report parameters defined by the report.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterMetadata"
          }
        }
      }
    },
    "ReportColumnMetadata": {
      "title": "ReportColumnMetadata",
      "description": "This class encapsulates the report data generated during the execution of the report.",
      "type": "object",
      "properties": {
        "CodeName": {
          "description": "CodeName is a unique name that can be used with code\r\nto refer to this specific column.  Its value should be consistent.",
          "type": "string"
        },
        "DisplayName": {
          "description": "This is a name as defined by a user when developing this report.  This name\r\nwould be a human facing name that would be used on a printed report.\r\nThis field is used as the key to the values dictionary",
          "type": "string"
        },
        "DataType": {
          "description": "This is a string representation of the data type.",
          "type": "string"
        }
      }
    },
    "ReportParameterMetadata": {
      "title": "ReportParameterMetadata",
      "description": "Report meta data that defines report parameters.\r\nParameter values are supplied by the end-user for execution.\r\nAll parameters must be supplied during execution.\r\nNot all Parameters have default value.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "DisplayName": {
          "description": "Human readable name of the parameter.",
          "type": "string"
        },
        "ReportParameterMetadataId": {
          "description": "Unique Id of parameter.",
          "type": "string",
          "format": "uuid"
        },
        "DataType": {
          "description": "Data type of the parameter.",
          "type": "string"
        },
        "Operator": {
          "description": "Operator type of the parameter, such as =, &lt;, &gt;=, etc...\r\nNot all parameters have operator type.\r\nFor example, SQL Parameters don't have operators.",
          "type": "string"
        },
        "DefaultValue": {
          "description": "Default value that will be used if no other value is provided for the parameter.\r\nNot all parameters have default value.\r\nEnd-user needs to supply a value in here if the parameter doesn't have value.\r\nReference values should contain Ids and be comma separated. E.g \"1,2,3\"",
          "type": "string"
        },
        "IsRequired": {
          "description": "True if a value needs to be supplied.",
          "type": "boolean"
        },
        "AvailableValues": {
          "description": "List of available values a parameter can have.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListValue"
          }
        }
      }
    },
    "ListValue": {
      "title": "ListValue",
      "type": "object",
      "properties": {
        "ListValueId": {
          "description": "The Id of the list item.  This value would be passed as the parameter value.\r\nMultiple Id's can be passed as a parameter value if comma separated.",
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "description": "The name that can be displayed in a list to the user.",
          "type": "string"
        }
      }
    },
    "Payload_List_ReportMetadata": {
      "title": "Payload_List_ReportMetadata",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportMetadata"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "PaginatedPayload_Report": {
      "title": "PaginatedPayload_Report",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Report"
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        },
        "Paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "Report": {
      "title": "Report",
      "description": "This class encapsulates the report data generated during the execution of the report.",
      "type": "object",
      "properties": {
        "XRefCode": {
          "description": "Reference Code for the Report.\r\nThis is a unique, human readable, code used to identify the Report.",
          "type": "string"
        },
        "Rows": {
          "description": "An array of Dictionary objects which contain the report data. \r\nEach dictionary object represents a row: the key is column name and the values is the column value for the row.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Payload_IEnumerable_EmployeeSchedule": {
      "title": "Payload_IEnumerable_EmployeeSchedule",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeSchedule"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "EmployeeSchedule": {
      "title": "EmployeeSchedule",
      "type": "object",
      "properties": {
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "DepartmentXRefCode": {
          "type": "string"
        },
        "JobXRefCode": {
          "type": "string"
        },
        "OrgUnitXRefCode": {
          "type": "string"
        },
        "OrgLocationTypeXRefCode": {
          "type": "string"
        },
        "PayAdjCodeXRefCode": {
          "type": "string"
        },
        "DocketXRefCode": {
          "type": "string"
        },
        "ProjectXRefCode": {
          "type": "string"
        },
        "Published": {
          "type": "boolean"
        },
        "Breaks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Breaks"
          }
        },
        "Activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "Skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skills"
          }
        },
        "LaborMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LaborMetric"
          }
        }
      }
    },
    "Breaks": {
      "title": "Breaks",
      "type": "object",
      "properties": {
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "Type": {
          "type": "string"
        }
      }
    },
    "Activity": {
      "title": "Activity",
      "type": "object",
      "properties": {
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "XRefCode": {
          "type": "string"
        }
      }
    },
    "Skills": {
      "title": "Skills",
      "type": "object",
      "properties": {
        "SkillXRefCode": {
          "type": "string"
        },
        "SkillLevelXRefCode": {
          "type": "string"
        },
        "IsMandatory": {
          "type": "boolean"
        }
      }
    },
    "LaborMetric": {
      "title": "LaborMetric",
      "type": "object",
      "properties": {
        "CodeXRefCode": {
          "type": "string"
        },
        "TypeXRefCode": {
          "type": "string"
        }
      }
    },
    "Payload_IEnumerable_EmployeeTimeAwayFromWork": {
      "title": "Payload_IEnumerable_EmployeeTimeAwayFromWork",
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeTimeAwayFromWork"
          }
        },
        "ProcessResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessResult"
          }
        }
      }
    },
    "EmployeeTimeAwayFromWork": {
      "title": "EmployeeTimeAwayFromWork",
      "type": "object",
      "properties": {
        "DateOfRequest": {
          "type": "string",
          "format": "date-time"
        },
        "TimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "TimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "NetHours": {
          "type": "number",
          "format": "double"
        },
        "ManagerComment": {
          "type": "string"
        },
        "EmployeeComment": {
          "type": "string"
        },
        "ReasonName": {
          "type": "string"
        },
        "AllDay": {
          "type": "boolean"
        },
        "HalfDay": {
          "type": "boolean"
        },
        "DailyElapsedHours": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "V1CandidateAssessmentScores500Error": {
      "title": "V1CandidateAssessmentScores500Error",
      "example": {
        "ProcessResults": [
          {
            "Code": "string",
            "Context": "string",
            "Level": "string",
            "Message": "string"
          }
        ]
      },
      "type": "object",
      "properties": {
        "ProcessResults": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "ProcessResults"
      ]
    }
  },
  "tags": [
    {
      "name": "AppUserSSO",
      "description": ""
    },
    {
      "name": "Employees",
      "description": ""
    },
    {
      "name": "CandidateAssessment",
      "description": ""
    },
    {
      "name": "ClientMetadata",
      "description": ""
    },
    {
      "name": "Departments",
      "description": ""
    },
    {
      "name": "DocMgmtSecurityGroup",
      "description": ""
    },
    {
      "name": "Documents",
      "description": ""
    },
    {
      "name": "EmergencyContact",
      "description": ""
    },
    {
      "name": "EmployeeCANFederalTax",
      "description": ""
    },
    {
      "name": "EmployeeCANStateTax",
      "description": ""
    },
    {
      "name": "EmployeeCANTaxStatus",
      "description": ""
    },
    {
      "name": "EmployeeClockDeviceGroup",
      "description": ""
    },
    {
      "name": "EmployeeCompensation",
      "description": ""
    },
    {
      "name": "EmployeeConfidentialIdentification",
      "description": ""
    },
    {
      "name": "EmployeeCourse",
      "description": ""
    },
    {
      "name": "EmployeeDefaultLabor",
      "description": ""
    },
    {
      "name": "EmployeeDirectDeposit",
      "description": ""
    },
    {
      "name": "EmployeeEIRate",
      "description": ""
    },
    {
      "name": "EmployeeEmploymentAgreement",
      "description": ""
    },
    {
      "name": "EmployeeEmploymentStatus",
      "description": ""
    },
    {
      "name": "EmployeeEmploymentType",
      "description": ""
    },
    {
      "name": "EmployeeEthnicity",
      "description": ""
    },
    {
      "name": "EmployeeHCE",
      "description": ""
    },
    {
      "name": "EmployeeHealthWellness",
      "description": ""
    },
    {
      "name": "EmployeeHRIncident",
      "description": ""
    },
    {
      "name": "EmployeeLocation",
      "description": ""
    },
    {
      "name": "EmployeeManagers",
      "description": ""
    },
    {
      "name": "EmployeeOnboardingPolicies",
      "description": ""
    },
    {
      "name": "EmployeeOrgUnitInfo",
      "description": ""
    },
    {
      "name": "EmployeePayAdjustCodeGroup",
      "description": ""
    },
    {
      "name": "EmployeePayGradeRate",
      "description": ""
    },
    {
      "name": "EmployeePerformanceRating",
      "description": ""
    },
    {
      "name": "EmployeePropertyValue",
      "description": ""
    },
    {
      "name": "EmployeePunches",
      "description": ""
    },
    {
      "name": "EmployeeRawPunches",
      "description": ""
    },
    {
      "name": "EmployeeRole",
      "description": ""
    },
    {
      "name": "EmployeeSkill",
      "description": ""
    },
    {
      "name": "EmployeeTrainingProgram",
      "description": ""
    },
    {
      "name": "EmployeeUnion",
      "description": ""
    },
    {
      "name": "EmployeeUSFederalTax",
      "description": ""
    },
    {
      "name": "EmployeeUSStateTax",
      "description": ""
    },
    {
      "name": "EmployeeUSTaxStatus",
      "description": ""
    },
    {
      "name": "EmployeeWorkAssigmentManager",
      "description": ""
    },
    {
      "name": "EmployeeWorkAssignment",
      "description": ""
    },
    {
      "name": "ESignatureOrder",
      "description": ""
    },
    {
      "name": "I9Orders",
      "description": ""
    },
    {
      "name": "JobFeeds",
      "description": ""
    },
    {
      "name": "Jobs",
      "description": ""
    },
    {
      "name": "LaborCosts",
      "description": ""
    },
    {
      "name": "MaritalStatus",
      "description": ""
    },
    {
      "name": "OrgUnits",
      "description": ""
    },
    {
      "name": "PersonAddress",
      "description": ""
    },
    {
      "name": "PersonContact",
      "description": ""
    },
    {
      "name": "Positions",
      "description": ""
    },
    {
      "name": "Reports",
      "description": ""
    },
    {
      "name": "TransmissionService",
      "description": ""
    },
    {
      "name": "UserPayAdjustCodeGroup",
      "description": ""
    },
    {
      "name": "WorkContract",
      "description": ""
    }
  ]
}