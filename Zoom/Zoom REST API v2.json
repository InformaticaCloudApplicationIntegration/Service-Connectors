{
  "x-stoplight": {
    "docs": {
      "showModels": false,
      "includeDownloadLink": true
    }
  },
  "swagger": "2.0",
  "info": {
    "title": "Zoom API",
    "description": "The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).\nAll endpoints are available via `https` and are located at `api.zoom.us/v2/`.\n\nFor instance you can list all users on an account via `https://api.zoom.us/v2/users/`.",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/",
      "email": "developersupport@zoom.us"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0.0",
    "termsOfService": "https://zoom.us/terms"
  },
  "host": "api.zoom.us",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/phone/numbers": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPhone numbers listed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call.",
                  "type": "integer"
                },
                "total_records": {
                  "description": "The total number of records returned.",
                  "type": "integer"
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the Phone Number."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number in E164 format."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "internal",
                          "external"
                        ],
                        "description": "Source of phone number."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the number.",
                        "enum": [
                          "pending",
                          "available"
                        ]
                      },
                      "number_type": {
                        "type": "string",
                        "description": "The type of number. Values can be one of the following:<br>\n`toll`, `tollfree`",
                        "enum": [
                          "toll",
                          "tollfree"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "Location (city, state and country) where the Phone number is assigned."
                      },
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique Identifier of the user to whom the number has been assigned."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user to whom the number has been assigned."
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number of the Phone."
                          },
                          "type": {
                            "type": "string",
                            "description": "Indicates who the phone number belongs to.<br>\n`user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).\n`autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>",
                            "enum": [
                              "user",
                              "callQueue",
                              "autoReceptionist",
                              "commonAreaPhone"
                            ]
                          }
                        }
                      },
                      "site": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the site where the phone number is assigned."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": 2,\n  \"phone_numbers\": [\n    {\n      \"id\": \"execvbfgbgr\",\n      \"number\": \"0000111100\",\n      \"source\": \"internal\",\n      \"status\": \"pending\",\n      \"number_type\": \"tollfree\",\n      \"location\": \"Milpitas,California,United States\",\n      \"assignee\": {\n        \"id\": \"cgfdgfghghim\",\n        \"name\": \"Peter Jenner\",\n        \"extension_number\": 012,\n        \"type\": \"user\"\n      },\n      \"site\": {\n        \"id\": \"sdfsdfgrg\",\n        \"name\": \"SF office\"\n      }\n    },\n    {\n      \"id\": \"fdgfdgfdh\",\n      \"number\": \"111111111\",\n      \"source\": \"external\",\n      \"status\": \"available\",\n      \"number_type\": \"toll\",\n      \"location\": \"San Jose,California,United States\",\n      \"assignee\": {\n        \"id\": \"dfgdfghdfhgh\",\n        \"name\": \"Receptionist\",\n        \"extension_number\": 001\n        \"type\": \"autoReceptionist\"\n      },\n      \"site\": {\n        \"id\": \"jhdfsdghfdg\",\n        \"name\": \"San Jose office\"\n      }\n    }\n  ]\n}"
            }
          }
        },
        "summary": "List Phone Numbers",
        "description": "A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to list all Zoom Phone numbers in a Zoom account. You can filter the response based on your needs by using query parameters.\n\n**Prerequisites:**<br>\n* Pro or higher plan with Zoom phone license<br>\n**Scope:** `phone:read:admin`<br> ",
        "operationId": "listAccountPhoneNumbers",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Query response by number assignment. The value can be one of the following:<br>\n`assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>\n\n`all`: Include both assigned and unassigned numbers in the response.\n",
            "enum": [
              "assigned",
              "unassigned",
              "all"
            ]
          },
          {
            "in": "query",
            "name": "extension_type",
            "type": "string",
            "description": "The type of assignee to whom the number is assigned. The value can be one of the following:<br>\n`user`<br> `callQueue`<br> `autoReceptionist`<br>\n`commonAreaPhone`",
            "enum": [
              "user",
              "callQueue",
              "autoReceptionist",
              "commonAreaPhone"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30,
            "description": "The number of records returned within a single API call.",
            "maximum": 100
          },
          {
            "in": "query",
            "name": "number_type",
            "type": "string",
            "description": "The type of phone number. The value can be either `toll` or `tollfree`.",
            "enum": [
              "toll",
              "tollfree"
            ]
          },
          {
            "in": "query",
            "name": "pending_numbers",
            "type": "boolean",
            "description": "Include or exclude pending numbers in the response. The value can be either `true` or `false`."
          }
        ]
      }
    },
    "/sip_phones": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSIP Phones listed successfully.\n\n**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
            "schema": {
              "type": "object",
              "properties": {
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned for the request made."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned within a single API call."
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of all the records available across pages."
                },
                "phones": {
                  "type": "array",
                  "description": "SIP phones object.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the SIP Phone."
                      },
                      "user_email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The name or IP address of your provider’s SIP domain. (example: CDC.WEB).\n"
                      },
                      "register_server": {
                        "type": "string",
                        "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                      },
                      "transport_protocol": {
                        "type": "string",
                        "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                        "enum": [
                          "UDP",
                          "TCP",
                          "TLS",
                          "AUTO"
                        ]
                      },
                      "proxy_server": {
                        "type": "string",
                        "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty."
                      },
                      "register_server2": {
                        "type": "string",
                        "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                      },
                      "transport_protocol2": {
                        "type": "string",
                        "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                        "enum": [
                          "UDP",
                          "TCP",
                          "TLS",
                          "AUTO"
                        ]
                      },
                      "proxy_server2": {
                        "type": "string",
                        "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty."
                      },
                      "register_server3": {
                        "type": "string",
                        "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                      },
                      "transport_protocol3": {
                        "type": "string",
                        "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                        "enum": [
                          "UDP",
                          "TCP",
                          "TLS",
                          "AUTO"
                        ]
                      },
                      "proxy_server3": {
                        "type": "string",
                        "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty."
                      },
                      "registration_expire_time": {
                        "type": "integer",
                        "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. "
                      },
                      "user_name": {
                        "type": "string",
                        "description": "The phone number associated with the user in the SIP account. "
                      },
                      "password": {
                        "type": "string",
                        "description": "The password generated for the user in the SIP account.\n"
                      },
                      "authorization_name": {
                        "type": "string",
                        "description": "Authorization name of the user  registered for SIP Phone."
                      },
                      "voice_mail": {
                        "type": "string",
                        "description": "The number to dial for checking voicemail."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 1,
                "total_records": 1,
                "phones": [
                  {
                    "id": "123456",
                    "user_email": "CfRE2opiq3HokO@someemailtype.com",
                    "domain": "CDC.WEB",
                    "register_server": "192.168.0.100",
                    "transport_protocol": "UDP",
                    "proxy_server": "192.168.0.10",
                    "register_server2": "192.168.0.100",
                    "transport_protocol2": "UDP",
                    "proxy_server2": "192.168.0.10",
                    "register_server3": "192.168.0.100",
                    "transport_protocol3": "UDP",
                    "proxy_server3": "192.168.0.10",
                    "registration_expire_time": 60,
                    "user_name": "1008",
                    "password": "apassword1",
                    "authorization_name": "testname",
                    "voice_mail": "4000"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad Request\n\n"
          }
        },
        "summary": "List SIP Phones",
        "description": "Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`<br> <br>\n",
        "operationId": "listSipPhones",
        "tags": [
          "SIP Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          },
          {
            "in": "query",
            "name": "search_key",
            "type": "string",
            "description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned within a single API call."
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nSIP Phone Created.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br> Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>\n**Error Code:** `300`<br>SIP Phone with the same email already exists.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n\n\n"
          }
        },
        "summary": "Create SIP Phone",
        "description": "Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`\n<br> \n\n",
        "operationId": "createSIPPhone",
        "tags": [
          "SIP Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "The name or IP address of your provider’s SIP domain. (example: CDC.WEB)."
                },
                "register_server": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server."
                },
                "register_server2": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol2": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server2": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty."
                },
                "register_server3": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol3": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server3": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty."
                },
                "registration_expire_time": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 127,
                  "default": 60,
                  "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server."
                },
                "user_name": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "The phone number associated with the user in the SIP account."
                },
                "password": {
                  "type": "string",
                  "description": "The password generated for the user in the SIP account."
                },
                "authorization_name": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Authorization name of the user  registered for SIP Phone."
                },
                "user_email": {
                  "type": "string",
                  "description": "The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.",
                  "format": "email",
                  "maxLength": 64
                },
                "voice_mail": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "The number to dial for checking voicemail."
                }
              },
              "required": [
                "domain",
                "register_server",
                "proxy_server",
                "user_name",
                "password",
                "authorization_name",
                "user_email",
                "voice_mail"
              ]
            },
            "x-examples": {
              "application/json": {
                "user_email": "CfRE2opiq3HokO@someemailtype.com",
                "domain": "CDC.WEB",
                "register_server": "192.168.0.100",
                "transport_protocol": "UDP",
                "proxy_server": "192.168.0.10",
                "registration_expire_time": 60,
                "user_name": "1008",
                "password": "apassword1",
                "authorization_name": "testname",
                "voice_mail": "4000"
              }
            }
          }
        ]
      }
    },
    "/sip_phones/{phoneId}": {
      "patch": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.\n"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSIP Phone information updated successfully.\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\n SIP phone not found: phoneId.<br>\n The SIP phone with this phoneId was not found on this account.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.\n\n"
          }
        },
        "summary": "Update SIP Phone",
        "description": "Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`\n<br> ",
        "tags": [
          "SIP Phone"
        ],
        "operationId": "updateSIPPhone",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "phoneId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "The name or IP address of your provider’s SIP domain. (example: CDC.WEB)."
                },
                "register_server": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server."
                },
                "register_server2": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol2": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server2": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server."
                },
                "register_server3": {
                  "type": "string",
                  "description": "IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address."
                },
                "transport_protocol3": {
                  "type": "string",
                  "description": "Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.",
                  "enum": [
                    "UDP",
                    "TCP",
                    "TLS",
                    "AUTO"
                  ]
                },
                "proxy_server3": {
                  "type": "string",
                  "description": "IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server."
                },
                "registration_expire_time": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 127,
                  "default": 60,
                  "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server."
                },
                "user_name": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "The phone number associated with the user in the SIP account."
                },
                "password": {
                  "type": "string",
                  "description": "The password generated for the user in the SIP account."
                },
                "authorization_name": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Authorization name of the user  registered for SIP Phone."
                },
                "voice_mail": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "The number to dial for checking voicemail."
                }
              },
              "required": [
                "domain",
                "register_server",
                "proxy_server",
                "register_server2",
                "proxy_server2",
                "register_server3",
                "proxy_server3",
                "user_name",
                "password",
                "authorization_name",
                "voice_mail"
              ]
            },
            "x-examples": {
              "application/json": {
                "domain": "CDC.WEB",
                "register_server": "192.168.0.100",
                "transport_protocol": "UDP",
                "proxy_server": "192.168.0.10",
                "registration_expire_time": 60,
                "user_name": "1008",
                "password": "apassword1",
                "authorization_name": "testname",
                "voice_mail": "4000"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "phoneId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSIP Phone deleted.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "300": {
            "description": "**Error Code:** `300`The SIP phone with this phoneId was not found on this account."
          }
        },
        "summary": "Delete SIP Phone",
        "description": "Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to delete a specific SIP phone on a Zoom account.<br><br>\n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`\n<br> ",
        "operationId": "deleteSIPPhone",
        "tags": [
          "SIP Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "phoneId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API."
          }
        ]
      }
    },
    "/rooms": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nA list of Zoom Rooms returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned within a single API call."
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "rooms": {
                  "type": "array",
                  "description": "List of existing Zoom Rooms.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the Zoom Room."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Zoom Room."
                      },
                      "activation_code": {
                        "type": "string",
                        "description": "Activation Code is the code that is used to complete the setup of the Zoom Room."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the Zoom Room.",
                        "enum": [
                          "Offline",
                          "Available",
                          "InMeeting",
                          "UnderConstruction"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_size": 30,
                "rooms": [
                  {
                    "id": "387434ryewr334",
                    "name": "testZoomRooms",
                    "activation_code": "1200",
                    "status": "Available"
                  },
                  {
                    "id": "4ryewr33sjfkds",
                    "name": "MyZoomRooms",
                    "activation_code": "eu34355empor",
                    "status": "Offline"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Rooms"
        ],
        "summary": "List Zoom Rooms",
        "description": "Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to list all the existing [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:read:admin`<br> ",
        "operationId": "listZoomRooms",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "description": "The status of the Zoom Room.",
            "enum": [
              "Offline",
              "Available",
              "InMeeting",
              "UnderConstruction"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Type of the Zoom Rooms.",
            "enum": [
              "ZoomRoom",
              "SchedulingDisplayOnly",
              "DigitalSignageOnly"
            ]
          },
          {
            "in": "query",
            "name": "unassigned_rooms",
            "type": "boolean",
            "default": false,
            "description": "Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet."
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location_id",
            "type": "string",
            "description": "Parent location ID of the Zoom Room."
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nZoom Room added successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the Zoom Room."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Zoom Room."
                },
                "type": {
                  "type": "string",
                  "description": "Type of the Zoom Room.",
                  "enum": [
                    "ZoomRoom",
                    "SchedulingDisplayOnly",
                    "DigitalSignageOnly"
                  ]
                },
                "location_id": {
                  "type": "string",
                  "description": "Location ID of the location where the Zoom Room was added."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "abcdefgg",
                "name": "Cool ZoomRoom",
                "type": "SchedulingDisplayOnly",
                "location_id": "434gfg0is"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAt least one normal Zoom Rooms required.<br><br>\n**Error Code:** `300`<br>\nInvalid parent location id {location_id}.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n\n**Error Code:** `4801`<br>\nLocation not found:{location_id}"
          }
        },
        "summary": "Add a Zoom Room",
        "description": "Use this API to [add a Zoom Room](https://support.zoom.us/hc/en-us/articles/202822279-Add-Zoom-Rooms-on-Web-Portal) to a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> ",
        "operationId": "addARoom",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Zoom Room."
                },
                "type": {
                  "type": "string",
                  "description": "Type of the Zoom Room. ",
                  "enum": [
                    "ZoomRoom",
                    "SchedulingDisplayOnly",
                    "DigitalSignageOnly"
                  ]
                },
                "location_id": {
                  "type": "string",
                  "description": "**Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location. \n\nThis ID can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Cool ZoomRoom",
                "type": "SchedulingDisplayOnly",
                "location_id": "434gfg0is"
              }
            }
          }
        ]
      }
    },
    "/phone/sites": {
      "post": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSite created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Site ID: Unique Identifier for a site."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the site."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ingjgjfhi",
                "name": "San Jose Site"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nInvalid site code length.<br>\nCountry information is invalid.<br>\nThis address could not be validated / geocoded."
          }
        },
        "summary": "Create a Phone Site",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to create a [Site](https://support.zoom.us/hc/en-us/articles/360020809672).<br>\n**Prerequisites:**<br>\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n* Pro or a higher account with Zoom Phone enabled.\n**Scope:** `phone:write:admin`<br> \n\n\n\n\n",
        "operationId": "createPhoneSite",
        "tags": [
          "Phone Site"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Site.",
                  "minLength": 1,
                  "maxLength": 255
                },
                "site_code": {
                  "type": "integer",
                  "description": "Identifier for a site. If site code is enabled, this field is required."
                },
                "auto_receptionist_name": {
                  "type": "string",
                  "description": "Display name of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) for the site."
                },
                "default_emergency_address": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string",
                      "description": "Two lettered country code (Aplha-2 code in ISO-3166) standard of the Site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                      "minLength": 2,
                      "maxLength": 2
                    },
                    "address_line1": {
                      "type": "string",
                      "description": "Address Line 1 of the  [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of house number and street name."
                    },
                    "address_line2": {
                      "type": "string",
                      "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of Building number, floor number, unit, etc."
                    },
                    "city": {
                      "type": "string",
                      "description": "City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address)."
                    },
                    "zip": {
                      "type": "string",
                      "description": "Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address)."
                    },
                    "state_code": {
                      "type": "string",
                      "description": "State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address)."
                    }
                  },
                  "required": [
                    "country",
                    "address_line1",
                    "city",
                    "zip",
                    "state_code"
                  ]
                }
              },
              "required": [
                "name",
                "auto_receptionist_name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "San Jose Site",
                "site_code": 123,
                "auto_receptionist_name": "Benjamin",
                "default_emergency_address": {
                  "country": "US",
                  "address_line1": "100 Awesome St",
                  "city": "San Jose",
                  "zip": "95113",
                  "state_code": "CA",
                  "address_line2": "Unit 5"
                }
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call."
                },
                "total_records": {
                  "type": "string",
                  "description": "Total number of records returned."
                },
                "sites": {
                  "type": "array",
                  "description": "List of site(s).",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Site ID. Unique Identifier of the site."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Site."
                      },
                      "site_code": {
                        "type": "string",
                        "description": "Site Code"
                      },
                      "main_auto_receptionist": {
                        "type": "object",
                        "description": "Auto Receptionist for each site.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-)."
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "Extension number"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the auto receptionist."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 2,
                "sites": [
                  {
                    "id": "CESAfgkwporiw3WA",
                    "name": "Main Site",
                    "site_code": 10,
                    "main_auto_receptionist": {
                      "id": "NMyfgfgfhdghsVg",
                      "extension_id": "E6Khfhfhf4idr8A",
                      "extension_number": 10801,
                      "name": "Main Auto Receptionist"
                    }
                  },
                  {
                    "id": "fwfhfghbghghfgcuw",
                    "name": "SAC office",
                    "site_code": 12,
                    "main_auto_receptionist": {
                      "id": "t1s55343ggfg3wwg",
                      "extension_id": "V7AIhaaaaaaaaRyTw",
                      "extension_number": 12001,
                      "name": "SAC Office Auto Receptionist"
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "List Phone Sites",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to list all the [sites](https://support.zoom.us/hc/en-us/articles/360020809672) that have been created for an account.<br>\n**Prerequisites:**<br>\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n* Pro or a higher account with Zoom Phone enabled.\n\n**Scope:** `phone:read:admin`<br> ",
        "operationId": "listPhoneSites",
        "tags": [
          "Phone Site"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ]
      }
    },
    "/phone/sites/{siteId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSite information retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Site ID. Unique Identifier of the site."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Site."
                },
                "site_code": {
                  "type": "integer",
                  "description": "[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)"
                },
                "main_auto_receptionist": {
                  "type": "object",
                  "description": "[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier for the Auto Receptionist."
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "Extension ID"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "Extension number"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the auto receptionist."
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "CEfghfghhWA",
                "name": "Main Site",
                "site_code": 10,
                "main_auto_receptionist": {
                  "id": "NMyfgfhghhsVg",
                  "extension_id": "E6Khfghgfr8A",
                  "extension_number": 10801,
                  "name": "Main Auto Receptionist"
                }
              }
            }
          },
          "400": {
            "description": "**Error Code:** `400`<br>\nSite does not exist."
          }
        },
        "summary": "Get Phone Site Details",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to get information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).\n\n\n**Prerequisites:** <br>\n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).<br>\n**Scope:** `phone:read:admin`<br> \n\n",
        "operationId": "getASite",
        "parameters": [
          {
            "in": "path",
            "name": "siteId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Site."
          }
        ],
        "tags": [
          "Phone Site"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "siteId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPhone Site deleted.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nUnable to transfer to the same site.<br>\nMain company number can not change {phoneNumber}.<br>\nSite does not exist."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**<br><br>\n**Error Code:** `409`<br>\nConflict target extension number, try later."
          }
        },
        "summary": "Delete a Phone Site",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to delete a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) in a Zoom account. To delete a site, in the query parameter, you must provide the Site ID of another site where the assets of current site (users, numbers and phones) can be transferred to.  You cannot use this API to delete the main site.\n\n**Prerequisites:** <br>\n* Account must have a Pro or a higher plan with Zoom Phone license. \n* [Multiple Sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) must be enabled.<br>\n**Scope:** `phone:write:admin`\n<br> \n\n",
        "operationId": "deletePhoneSite",
        "tags": [
          "Phone Site"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "siteId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Site."
          },
          {
            "in": "query",
            "name": "transfer_site_id",
            "type": "string",
            "required": true,
            "description": "The Site ID of another site where the assets of the current site (users, numbers and phones) can be transferred to."
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSite details updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Site does not exist.<br><br>\n**Error Code:** `400`<br>\nSite Code is disabled.<br>\nInvalid site code length."
          }
        },
        "summary": "Update Phone Site Details",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to update information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).\n\n\n**Prerequisites:** <br>\n* Account must have a Pro or a higher plan with Zoom Phone license.\n* **Scope:** `phone:write:admin`<br> \n\n",
        "operationId": "updateSiteDetails",
        "tags": [
          "Phone Site"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "siteId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Site."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the site."
                },
                "site_code": {
                  "description": "[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).",
                  "type": "integer"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "SJ-site",
                "site_code": 47973154
              }
            }
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nContact returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call. Default value is `1`.",
                  "maximum": 25
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID of the contact."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the contact."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the contact."
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the contact."
                      },
                      "presence_status": {
                        "type": "string",
                        "description": "Presence status of the contact in Zoom Client. The value of this field can be one of the following:\n`Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`",
                        "enum": [
                          "Do_Not_Disturb",
                          "away",
                          "Available",
                          "Offline"
                        ]
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "Phone number of the user."
                      },
                      "sip_phone_number": {
                        "type": "string",
                        "description": "SIP Phone number of the user. Returned only if user has SIP phone enabled."
                      },
                      "direct_numbers": {
                        "type": "array",
                        "description": "Direct Number(s) of a user who has Zoom Phone license assigned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extension_number": {
                        "type": "string",
                        "description": "Extension Number of a user who has Zoom Phone license assigned."
                      },
                      "im_group_id": {
                        "type": "string",
                        "description": "Unique Identifier of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients. "
                      },
                      "im_group_name": {
                        "type": "string",
                        "description": "Name of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients. "
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_size": 1,
                "next_page_token": " ",
                "contacts": [
                  {
                    "id": "isds324bdfsf",
                    "email": "qui@djfsd.sdfjhdf",
                    "first_name": "John",
                    "last_name": "Doe",
                    "presence_status": "Offline",
                    "phone_number": "00000000",
                    "sip_phone_number": "11111111",
                    "direct_numbers": [
                      111111,
                      222222
                    ],
                    "extension_number": "010",
                    "im_group_id": "fhksdhfew34hjds",
                    "im_group_name": "Engineering"
                  }
                ]
              }
            }
          }
        },
        "summary": "Search Company Contacts",
        "tags": [
          "Contacts"
        ],
        "description": "A user under an organization's Zoom account has internal users listed under Company Contacts in the Zoom Client. Use this API to search users that are in the company contacts of a Zoom account. Using the `search_key` query parameter, provide either first name, last name or the email address of the user that you would like to search for. Optionally, set `query_presence_status` to `true` in order to include the presence status of a contact. <br><br>\n\n**Scopes:** `contact:read:admin`, `contact:read`<br>\n ",
        "operationId": "searchCompanyContacts",
        "parameters": [
          {
            "in": "query",
            "name": "search_key",
            "type": "string",
            "description": "Provide the keyword - either first name, last name or email of the contact whom you have to search for.",
            "required": true
          },
          {
            "in": "query",
            "name": "query_presence_status",
            "type": "string",
            "description": "Set `query_presence_status` to `true` in order to include the presence status of a contact in the response."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records to be returned with a single API call.",
            "maximum": 25,
            "default": 1
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ]
      }
    },
    "/chat/users/{userId}/messages": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:**`200`<br>\nList of chat messages returned.",
            "schema": {
              "type": "object",
              "description": "Chat message object.",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "The date provided in the query parameter. If a date is not provided, the default value is the **current date**.",
                  "format": "date"
                },
                "page_size": {
                  "description": "The number of records returned with a single API call.",
                  "default": 10,
                  "type": "integer"
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\n"
                },
                "messages": {
                  "type": "array",
                  "description": "List of message(s).",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID: Unique Identifier of the message."
                      },
                      "message": {
                        "type": "string",
                        "description": "The message content."
                      },
                      "sender": {
                        "type": "string",
                        "description": "The email address of the sender of the message."
                      },
                      "date_time": {
                        "type": "string",
                        "description": "The date-time at which the message was sent."
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp of the message in microseconds.",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "date": "2019-09-17",
                "page_size": 10,
                "next_page_token": "",
                "messages": [
                  {
                    "id": "F3CbafdljsfjkdfgBA7",
                    "message": "And you?",
                    "sender": "myemail@someemailaddr.com",
                    "date_time": "2019-09-17T20:25:21Z",
                    "timestamp": 1568751921626
                  },
                  {
                    "id": "B0DbfdgdfhAAfgf237000",
                    "message": "I am good",
                    "sender": "myemail@someemailaddr.com",
                    "date_time": "2019-09-17T20:25:17Z",
                    "timestamp": 1568751917976
                  },
                  {
                    "id": "C9Bbdfgd4sad301",
                    "message": "How are you",
                    "sender": "myfriendsemail@someemailaddr.us",
                    "date_time": "2019-09-17T20:24:13Z",
                    "timestamp": 1568751853297
                  },
                  {
                    "id": "769fgdgdfgfd4566F7B96665",
                    "message": "hello",
                    "sender": "myfriendsemail@someemailaddr.us",
                    "date_time": "2019-09-17T20:22:26Z",
                    "timestamp": 1568751746769
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad request.\n**Error Code:** `200`<br> No permission to access chat messages with the other user.<br>\n**Error Code:** `200` <br>This Zoom User is not the correct contact or a member of the channel.<br>\n**Error Code:** `300` <br>The next page token is invalid or expired.<br>\n**Error Code:** `300` <br>Must provide either contact or channel parameter.<br>\n**Error Code:** `300` <br>Only provide past chat messages in recent 6 months.<br>\n**Error Code:** `1010`<br>User does not belong to this account: $userId<br>\n**Error Code:** `1001`<br>User does not exist: $userId<br>"
          }
        },
        "summary": "List User's Chat Messages",
        "description": "A Zoom user can have conversations with other Zoom users via chat. Use this API to list the current user's chat messages between the user and an individual contact or a chat channel.<br> In the query parameter, you must provide either of the following:<br>\n* `to_contact`: The email address of the contact with whom the user conversed by sending/receiving messages.\n* `to_channel`: The channel ID of the channel to/from which the user has sent and/or received messages.\n<br> **Specify a date** in the `date` query parameter to view messages from that date. If a date is not provided, the default value for the query will be the **current date**.<br>\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"><b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n<br>**Scopes:** `chat_message:read`<br>\n \n\n",
        "operationId": "getChatMessages",
        "parameters": [
          {
            "in": "query",
            "name": "to_contact",
            "type": "string",
            "description": "The email address of a chat contact with whom the current user chatted. Messages that were sent and/or received between the user and the contact is displayed.\n\nNote: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel. "
          },
          {
            "in": "query",
            "name": "to_channel",
            "type": "string",
            "description": "The channel Id of a channel inside which current user had chat converstations. Messages that were sent and/or received between the user and the channel is displayed.\n\nNote: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel. "
          },
          {
            "in": "query",
            "name": "date ",
            "type": "string",
            "format": "date",
            "description": "The query date for which you would like to get the chat messages."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned with a single API call. ",
            "maximum": 50,
            "default": 10
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "tags": [
          "Chat Messages"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/chat/users/me/messages": {
      "post": {
        "responses": {
          "201": {
            "description": "**Status Code:** `201`<br>\nMessage sent.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Message ID: Unique Identifier of the message."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ex35785hgdfjgt"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`<br>\nMessage sending failed.\n**Error Code:** `200`<br>\nThis Zoom User is not the correct contact or a member of the channel."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $contact."
          }
        },
        "summary": "Send a Chat Message",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "The message to be sent.",
                  "maxLength": 1024
                },
                "to_contact": {
                  "type": "string",
                  "description": "The email address of the contact to whom you would like to send the message."
                },
                "to_channel": {
                  "type": "string",
                  "description": "The Channel Id of the channel where you would like to send a message."
                }
              },
              "required": [
                "message"
              ]
            },
            "x-examples": {
              "application/json": {
                "message": "It's a beautiful day.",
                "to_contact": "sky@jsefbbfdsfmail.com"
              }
            }
          }
        ],
        "description": "Send chat messages on Zoom to either an individual user who is in your contact list or to a [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) of which you are a member. To send a message to a contact, provide the contact's email address in the `to_contact` field. Similary, to send a message to a channel, provide the Channel Id of the Channel in `to_channel` field.<br>\n\n<br>**Scopes:** `chat_message:write`<br>\n  <br>\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b>\n\t<a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n",
        "operationId": "sendaChatMessage",
        "tags": [
          "Chat Messages"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/chat/users/me/messages/{messageId}": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMessage updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBar request<br>\n**Error Code:** `200`<br>\nThis Zoom User is not the correct contact or a member of the channel.<br>\nOnly the sender of this message can make updates.<br>\n**Error Code:** `300`<br>\nThis message does not exist: $messageId <br> Must provide either contact or channel parameter.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code**: `1001`<br>\nUser does not exist: $userId."
          }
        },
        "summary": "Update a Message",
        "description": "Each chat message has a unique identifier. Use this API to edit a chat message that you previously sent to either a contact or a channel in Zoom by providing the ID of the message as the value of the `messageId` parameter. The ID can be retrieved from List User's Chat Messages API. Additionally, as a query parameter, you must provide either the **email address** of the contact or the **Channel ID** of the channel where the message was sent. \n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_message:write`\t<br>\n \n\n\n\n",
        "operationId": "editMessage",
        "tags": [
          "Chat Messages"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "type": "string",
            "required": true,
            "description": "Message ID: Unique Identifier of the message."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "The edited message."
                },
                "to_contact": {
                  "type": "string",
                  "description": "The email address of the contact to whom the message was sent.<br>\nYou must provide either `to_contact` or `to_channel` parameter in the API request."
                },
                "to_channel": {
                  "type": "string",
                  "description": "The Channel ID of the channel where you sent the message.<br>You must provide either `to_contact` or `to_channel` parameter in the API request.\n Channel ID can be retrieved from List User's Channels API. "
                }
              }
            },
            "x-examples": {
              "application/json": {
                "message": "This is an edited message. It is a gloomy day today.",
                "to_contact": "theemailofmyfriend@sksjgsdf.fhdgfgdh"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "messageId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**Status Code:** `204`<br>\nMessage deleted.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br>\nThe contact or the channel parameter provided is invalid.<br>\nOnly the sender of this message can delete the message.\n**Error Code:** `300`<br>This message does not exist: $messageId<br>Must provide either contact or channel parameter."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $userId."
          }
        },
        "summary": "Delete a Message",
        "description": "Delete a chat message that you previously sent to a contact or a channel. In the query parameter, you must provide either of the following:<br>\n* `to_contact`: The email address of the contact to whom you sent the message. Use this parameter to delete a message sent to an individual contact in Zoom.\n* `to_channel`: The channel ID of the channel where you sent the message. Use this parameter to delete a message sent to a channel in Zoom.\n\n<p style=\"background-color:#e1f5fe;color:#01579b;padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_message:write`<br>\n \n",
        "operationId": "deleteChatMessage",
        "tags": [
          "Chat Messages"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "type": "string",
            "required": true,
            "description": "Message ID"
          },
          {
            "in": "query",
            "name": "to_contact",
            "type": "string",
            "description": "The userId or email address of a chat contact to whom you previously sent the message.\n\nNote: You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel respectively. "
          },
          {
            "in": "query",
            "name": "to_channel",
            "type": "string",
            "description": "The channel Id of the channel where you would like to send the message.\n\nYou must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel "
          }
        ]
      }
    },
    "/chat/users/me/channels": {
      "get": {
        "responses": {
          "200": {
            "description": "**Status Code**: `200` <br>\nUser's channels returned.",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "The total number of records found."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call.\nDefault value: 30.",
                  "maximum": 100
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "channels": {
                  "type": "array",
                  "description": "Chat Channel object(s).",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Channel ID: Unique identifier of the Channel."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the channel."
                      },
                      "type": {
                        "type": "integer",
                        "description": "Type of the channel. The value can be one of the following:<br>\n`1`: **Private channel.** In this type of channel, members must be invited to join a channel.<br>\n`2`: **Private channel with users that belong to the same Zoom account**. Members in this channel should be invited and the members should be from the same organization.<br>\n`3`: **Public channel.** Anyone can search for this channel and join the channel.<br>\n`4`: New chat. This is an instant channel which can be created by adding members to a new chat. "
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"total_records\": 2,\n  \"page_size\": 10,\n  \"channels\": [\n    {\n      \"id\": \"ullamdsfjhgdsn663isi\",\n      \"name\": \"Happiness Channel\",\n      \"type\": 2\n    },\n    {\n      \"id\": \"dsfdfrgtre23324663isi\",\n      \"name\": \"Sales team\",\n      \"type\": 2\n    },\n  ]\n}"
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad request.\n**Error Code**: `300`<br>\nThe next page token is either invalid or has expired.",
            "examples": {
              "application/json": {}
            }
          }
        },
        "summary": "List User's Channels",
        "description": "Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to list a user's chat channels. \n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope**: `chat_channel:read`<br>\n ",
        "operationId": "getChannels",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned from a single API call.",
            "default": 10,
            "maximum": 50
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. The expiration period for this token is 15 minutes."
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "**Status Code**: `201` <br>\nChannel created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Channel ID: Unique Identifier for the Channel."
                },
                "name": {
                  "type": "string",
                  "description": "Channel name."
                },
                "type": {
                  "description": "Channel type.",
                  "type": "integer"
                },
                "jid": {
                  "type": "string",
                  "description": "Channel JID. "
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "id8977ullamco",
                "name": "Happy Channel",
                "type": 1,
                "jid": "nisi73624365536st"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nNot found.<br>\n**Error Code**: `5301`<br>\nChannel creation failed, please try again later."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code**: `1001`<br>\nUser not found: $userId."
          }
        },
        "summary": "Create a Channel",
        "description": "Zoom chat channels allow users to communicate via chat in private or public groups. Use this API to create a channel for a user.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scopes**: `chat_channel:write`<br>\n \n",
        "operationId": "createChannel",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the channel.",
                  "maxLength": 128
                },
                "type": {
                  "type": "integer",
                  "description": "Type of the channel. The value can be one of the following:<br>\n`1`: Private channel. In this type of channel, members must be invited to join a channel.<br>\n`2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>\n`3`: Public channel. Anyone can search for this channel and join the channel.<br>\n`4`: New chat. This is an instant channel which can be created by adding members to a new chat. ",
                  "enum": [
                    1,
                    2,
                    3
                  ]
                },
                "members": {
                  "type": "array",
                  "description": "Member(s) to include in the channel. A max of 5 members can be added to the channel at once with this API.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Member's email address."
                      }
                    },
                    "required": [
                      "email"
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/chat/users/me/contacts": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>List of user's contacts returned.",
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call.\nDefault value: 30.",
                  "maximum": 100
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "contacts": {
                  "type": "array",
                  "description": "The contacts object.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Contact Id."
                      },
                      "email": {
                        "type": "string",
                        "description": "Contact's email address.",
                        "format": "email"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Contact's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Contact's last name."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_size": 10,
                "next_page_token": "shdjksA4",
                "contacts": [
                  {
                    "id": "44ABCDEfgjWHABBxw",
                    "email": "someemail@somemail.com",
                    "first_name": "Brandon",
                    "last_name": "Ghimire"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe next page token is invalid or has expired."
          }
        },
        "description": "A user under an organization’s Zoom account has internal users listed under Company Contacts in the Zoom Client. A Zoom user can also add another Zoom user as a [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts). Call this API to list all the contacts of a Zoom user. Zoom contacts are categorized into \"company contacts\" and \"external contacts\". You must specify the contact type in the `type` query parameter. If you do not specify, by default, the type will be set as company contact.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope**: `chat_contact:read`<br>\n ",
        "summary": "List User's Contacts",
        "operationId": "getUserContacts",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "default": "company",
            "description": "The type of contact. The value can be one of the following:\n`company`: Contacts from the user's organization.\n`external`: External contacts. "
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned with a single API call.",
            "maximum": 50,
            "default": 10
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
          }
        ]
      }
    },
    "/chat/users/me/contacts/{contactId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nContact information returned.\n\n\n",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User ID of the contact."
                },
                "email": {
                  "type": "string",
                  "description": "Contact's email address.",
                  "format": "email"
                },
                "first_name": {
                  "type": "string",
                  "description": "Contact's first name"
                },
                "last_name": {
                  "type": "string",
                  "description": "Contact's last name"
                },
                "presence_status": {
                  "type": "string",
                  "description": "Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`",
                  "enum": [
                    "Do_Not_Disturb",
                    "away",
                    "Available",
                    "Offline"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "u487547sic45ing",
                "email": "dhgdj@djkfhd.dhgfdh",
                "first_name": "Vikram",
                "last_name": "Grg",
                "presence_status": "Do_Not_Disturb"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad request\n**Error Code:** `200`<br>The Zoom User is not a contact of the user: $userId\n**Error Code:** `5301`<br>Get Chat contact presence status failed."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $userId"
          }
        },
        "summary": "Get User's Contact Details",
        "description": "A user under an organization’s Zoom account has internal users listed under Company Contacts in the Zoom Client. A Zoom user can also add another Zoom user as a [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts). Call this API to get information on a specific contact of the Zoom user.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope**: `chat_contact:read`<br>\n ",
        "operationId": "getUserContact",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "type": "string",
            "description": "The user's contact Id or email address. The contact can be either a company contact or an external contact.",
            "required": true
          },
          {
            "in": "query",
            "name": "query_presence_status",
            "type": "boolean",
            "description": "The presence status of the contact. \nInclude this query parameter with a value of `true` to get the presence status of the contact in the response."
          }
        ]
      },
      "parameters": [
        {
          "name": "contactId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/chat/channels/{channelId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nChannel returned.<br>\n\n\n\n",
            "schema": {
              "type": "object",
              "description": "The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). ",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Channel Id."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the channel.",
                  "maxLength": 128
                },
                "type": {
                  "type": "integer",
                  "description": "Type of the channel. The value can be one of the following:<br>\n`1`: Private channel. In this type of channel, members must be invited to join a channel.<br>\n`2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>\n`3`: Public channel. Anyone can search for this channel and join the channel.<br>",
                  "enum": [
                    1,
                    2,
                    3
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ut1234sgfsdf",
                "name": "Leah",
                "type": 1
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad Request\n**Error Code:** `200`<br> No permission to access another user’s channel info."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nChannel does not exist: $channelId."
          }
        },
        "summary": "Get a Channel",
        "description": "Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to get information about a specific channel. \n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:read`\t<br>\n ",
        "operationId": "getChannel",
        "tags": [
          "Chat Channels"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel ID: Unique Identifier of a channel."
          }
        ]
      },
      "parameters": [
        {
          "name": "channelId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**Status Code:** `204`\nChannel updated.",
            "schema": {}
          },
          "400": {
            "description": "**Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `200`<br>\nNo permission to update this channel.<br>\n**Error Code:** `5301`<br>\nUpdate channel failed."
          }
        },
        "summary": "Update a Channel",
        "description": "Zoom chat channels allow users to communicate via chat in private or public channels. Use this API to update the name of a specific channel that you created. \n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:write`\t<br>\n ",
        "operationId": "updateChannel",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel Id."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "A new name for the channel."
                }
              },
              "required": [
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Share happiness channel"
              }
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nChannel deleted.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>\nNo permission to delete this channel.<br>\n**Error Code:** `5301`<br> Delete channel failed."
          }
        },
        "summary": "Delete a Channel",
        "description": "Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to delete a specific channel. \n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:write`<br>\n ",
        "operationId": "deleteChannel",
        "tags": [
          "Chat Channels"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel ID: Unique Identifier of a channel."
          }
        ]
      }
    },
    "/chat/channels/{channelId}/members": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of channel members returned.\n\n",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "The total number of records returned."
                },
                "page_size": {
                  "type": "integer",
                  "default": 30,
                  "description": "The number of records returned with a single API call. ",
                  "maximum": 100
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "members": {
                  "type": "array",
                  "description": "Members in a channel.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Member ID: Unique Identifier of the member."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the member.",
                        "format": "email"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Member's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Member's last name."
                      },
                      "role": {
                        "type": "string",
                        "description": "The role of the member. The value can be one of these: `owner`, `admin`, `member`. ",
                        "enum": [
                          "admin",
                          "owner",
                          "member"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 2,
                "page_size": 30,
                "next_page_token": "",
                "members": [
                  {
                    "id": "laboris3764763ull",
                    "email": "IiUQCUCLs@XKmztyJAAU.di",
                    "first_name": "Harry",
                    "last_name": "King",
                    "role": "admin"
                  },
                  {
                    "id": "eul21dfabore",
                    "email": "hJUWLsYtyw@ljXwqOlyNCvBjtkLOx.eox",
                    "first_name": "Alisha",
                    "last_name": "Sapkota",
                    "role": "member"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad Request<br>\n**Error Code:** `200`<br>\nNo permission to access the channel members.<br>\n**Error Code:** `300`<br>\nThe next page token is either invalid or has expired."
          }
        },
        "summary": "List Channel Members",
        "description": "A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. List all the members of a channel using this API.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scopes:** `chat_channel:read`<br>\n ",
        "operationId": "listChannelMembers",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel Id."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned with a single API call.",
            "maximum": 100,
            "default": 30
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
          }
        ]
      },
      "parameters": [
        {
          "name": "channelId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nMembers invited to the channel.",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "Member Ids of the members.",
                  "items": {
                    "type": "string"
                  }
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time at which the member(s) are added to the channe."
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": [
                  "abc4545fdgfdhg",
                  "lgfdkhg123456"
                ],
                "added_at": "2019-09-27T00:14:46Z"
              }
            }
          },
          "400": {
            "description": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`\nInvite Channel members failed.<br>\n**Error Code:** `200`<br>\nNo permission to invite channel members. "
          }
        },
        "summary": "Invite Channel Members",
        "description": "A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to invite members that are in your contact list to a channel. The maximum number of members that can be added at once with this API is 5. \n\n<p style=\"background-color:#e7f3fe;\"><strong>Note:</strong> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:write`<br>\n ",
        "operationId": "inviteChannelMembers",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel ID: Unique Identifier of the channel."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "description": "Members of a channel. You can invite up to a max number of 5 members with a single API call.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email adress of the member.",
                        "format": "email"
                      }
                    },
                    "required": [
                      "email"
                    ]
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "members": [
                  {
                    "email": "rtxbZkoL6ZVr@BKRUfQISqmtCCeuGPP.ma"
                  },
                  {
                    "email": "Rl7NtxV2wGf6@INybVUUu.fphl"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "/chat/channels/{channelId}/members/me": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`\nSuccessfully joined the channel.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Member Id of the user who joined the public channel."
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time at which a user joined the channel."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "lbborum-12fiasf-abaa",
                "added_at": "2018-12-11T15:06:32.633Z"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `5301`<br> Join channel failed."
          }
        },
        "summary": "Join a Channel",
        "description": "A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to join a channel that is open for anyone in the same organization to join. You cannot use this API to join private channels that only allows invited members to be a part of it.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:write`<br>\n ",
        "operationId": "joinChannel",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel Id."
          }
        ]
      },
      "parameters": [
        {
          "name": "channelId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nLeft channel successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> Bad Request.<br>\n**Error Code:** `5301`<br> Leave channel failed."
          }
        },
        "summary": "Leave a Channel",
        "description": "If you're no longer interested in being a member of an existing channel, you can leave the channel at any time. Use this API to leave a specific channel. After leaving the channel, you can no longer access information from that channel.\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n**Scope:** `chat_channel:write`<br>\n ",
        "operationId": "leaveChannel",
        "tags": [
          "Chat Channels"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Channel ID: Unique Identifier of a channel."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "summary": "List Sub Accounts",
        "description": "List all the Sub Accounts under the Master Account.<br><br>\nOnly Master Accounts can create and have Sub Accounts. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [ISV team](https://zoom.us/plan/api) for more details.\n<br>\n<br>**Prerequisites:**<br>\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**: `account:read:admin`\n<br> ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accounts",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Account list returned.",
            "schema": {
              "title": "Account List",
              "description": "List of Accounts.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Account object in the account list.",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "description": "List of Account objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Account ID."
                          },
                          "account_name": {
                            "type": "string",
                            "description": "Account name."
                          },
                          "owner_email": {
                            "type": "string",
                            "description": "Account owner email.",
                            "example": "john.doe@zoom.us"
                          },
                          "account_type": {
                            "type": "string",
                            "description": "Account type."
                          },
                          "seats": {
                            "type": "integer",
                            "description": "Account seats."
                          },
                          "subscription_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Account subscription start date and time."
                          },
                          "subscription_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Account subscription end date and time."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Account creation date and time."
                          },
                          "account_number": {
                            "type": "string",
                            "description": "Account Number of the account."
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "integer",
                "page_number": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "accounts": [
                  {
                    "id": "string [uuid]",
                    "account_name": "string",
                    "owner_email": "string",
                    "account_type": "string",
                    "seats": "integer",
                    "subscription_start_time": "string [date-time]",
                    "subscription_end_time": "string [date-time]",
                    "created_at": "string [date-time]"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Sub Account",
        "description": "Create a Sub Account under the Master Account. <aside>Your account must be a Master Account in order to create Sub Accounts. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details. Please note that the created account user will receive a confirmation email.</aside><br><br>\n**Prerequisites:**<br>\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**: `account:write:admin`<br>\n ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Account.",
            "schema": {
              "type": "object",
              "description": "The account object represents an account on Zoom. The account owner is the user who created the account or had an account created for them. You can read more about the Zoom account structure <a href='https://medium.com/zoom-developer-blog/a-brief-look-at-zoom-account-structures-1d19c745bf8a' target='_blank'>here</a>.",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "User's first name."
                },
                "last_name": {
                  "type": "string",
                  "description": "User's last name."
                },
                "email": {
                  "type": "string",
                  "description": "User's email address."
                },
                "password": {
                  "type": "string",
                  "description": "User's password.",
                  "minimum": 8
                },
                "options": {
                  "type": "object",
                  "description": "Account options object.",
                  "properties": {
                    "share_rc": {
                      "type": "boolean",
                      "description": "Enable/disable the option for a Sub Account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the Master Account. Virtual Room Connectors can only be used by On-prem users.",
                      "default": false
                    },
                    "room_connectors": {
                      "type": "string",
                      "description": "Specify the IP addresses of the Room Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_rc` is set to `true`."
                    },
                    "share_mc": {
                      "type": "boolean",
                      "description": "Enable/disable the option for a Sub Account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the Master Account. Meeting Connectors can only be used by On-prem users.",
                      "default": false
                    },
                    "meeting_connectors": {
                      "type": "string",
                      "description": "Specify the IP addresses of the Meeting Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_mc` is set to `true`."
                    },
                    "pay_mode": {
                      "type": "string",
                      "description": "Payee:<br>`master` - Master account holder pays.<br>`sub` - Sub account holder pays.",
                      "enum": [
                        "master",
                        "sub"
                      ],
                      "x-enum-descriptions": [
                        "Master account holder pays",
                        "Sub account holder pays"
                      ],
                      "default": "master"
                    }
                  }
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "password"
              ]
            },
            "x-examples": {
              "application/json": {
                "first_name": "string",
                "last_name": "string",
                "email": "string",
                "password": "string",
                "options": {
                  "share_rc": "boolean",
                  "room_connectors": "string",
                  "share_mc": "boolean",
                  "meeting_connectors": "string",
                  "pay_mode": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created.",
            "headers": {
              "Content-Location": {
                "description": "Location of the created account.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Account ID."
                },
                "owner_id": {
                  "type": "string",
                  "description": "Account owner ID."
                },
                "owner_email": {
                  "type": "string",
                  "description": "Account owner email."
                },
                "created_at": {
                  "type": "string",
                  "description": "Account created date time."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "string",
                "owner_id": "string",
                "owner_email": "string",
                "created_at": "string"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1107`<br>\nEmail domain is blocked.<br>\n**Error Code:** `1111`<br>\nPassword can’t use the same characters. <br>\nPassword can’t use continuation character such as '’abc’’,’’123’’.\n\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409`<br>\n**Error Code:** `1005`<br>\nEmail{email} has already been used."
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "summary": "Get a Sub Account",
        "description": "Get a Sub Account under the Master Account. Your account must be a Master Account in order to retrieve Sub Accounts. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [ISV team](https://zoom.us/plan/api) for more details.<br><br>\n**Prerequisites:**\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**: `account:write:admin`<br>\n \n",
        "tags": [
          "Accounts"
        ],
        "operationId": "account",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code**: `200`<br>\nAccount object returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Account ID."
                },
                "owner_id": {
                  "type": "string",
                  "description": "Account owner ID."
                },
                "owner_email": {
                  "type": "string",
                  "description": "Account owner email."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Account creation date and time."
                },
                "options": {
                  "type": "object",
                  "description": "Account options object.",
                  "properties": {
                    "share_rc": {
                      "type": "boolean",
                      "description": "Enable/disable the option for a Sub Account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the Master Account. Virtual Room Connectors can only be used by On-prem users.",
                      "default": false
                    },
                    "room_connectors": {
                      "type": "string",
                      "description": "Specify the IP addresses of the Room Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_rc` is set to `true`."
                    },
                    "share_mc": {
                      "type": "boolean",
                      "description": "Enable/disable the option for a Sub Account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the Master Account. Meeting Connectors can only be used by On-prem users.",
                      "default": false
                    },
                    "meeting_connectors": {
                      "type": "string",
                      "description": "Specify the IP addresses of the Meeting Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_mc` is set to `true`."
                    },
                    "pay_mode": {
                      "type": "string",
                      "description": "Payee:<br>`master` - Master account holder pays.<br>`sub` - Sub account holder pays.",
                      "enum": [
                        "master",
                        "sub"
                      ],
                      "x-enum-descriptions": [
                        "Master account holder pays",
                        "Sub account holder pays"
                      ],
                      "default": "master"
                    }
                  }
                },
                "vanity_url": {
                  "type": "string",
                  "description": "Account Vanit URL"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "string",
                "owner_id": "string",
                "owner_email": "string",
                "created_at": "string [date-time]",
                "options": {
                  "share_rc": "boolean",
                  "room_connectors": "string",
                  "share_mc": "boolean",
                  "meeting_connectors": "string",
                  "pay_mode": "string"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code**: `404`<br>\n**Error Code:** `2001`<br> This account does not exist or does not belong to you:{subAccountId}."
          }
        }
      },
      "delete": {
        "summary": "Disassociate a Sub Account",
        "description": "Disassociate a Sub Account from the Master Account. This will leave the Sub Account intact but it will no longer be associated with the master account.<br>  <aside>Your account must be a Master Account in order to disassociate Sub Accounts. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside> <br>\n\n**Prerequisites:**\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**: `account:write:admin`<br>\n ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountDisassociate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`<br>Account deleted.",
            "examples": {}
          },
          "404": {
            "description": "**HTTP Status Code**: `404` <br> \n**Error Code:** `2000`<br> Cannot disassociate a paid account. <br>\n**Error Code:** `2001`<br> This account does not exist or does not belong to you: {subAccountId}."
          }
        }
      }
    },
    "/accounts/{accountId}/options": {
      "patch": {
        "summary": "Update Options",
        "description": "Update a Sub Account's options under the Master Account.<br> <aside>Your account must be a Master Account in order to update the options for Sub Accounts. Zoom only assigns this privilege to trusted partners. </aside>\n\n**Prerequisites:**\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**: `account:write:admin`<br>\n ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountOptionsUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Account options object.",
              "properties": {
                "share_rc": {
                  "type": "boolean",
                  "description": "Enable/disable the option for a Sub Account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the Master Account. Virtual Room Connectors can only be used by On-prem users.",
                  "default": false
                },
                "room_connectors": {
                  "type": "string",
                  "description": "Specify the IP addresses of the Room Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_rc` is set to `true`."
                },
                "share_mc": {
                  "type": "boolean",
                  "description": "Enable/disable the option for a Sub Account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the Master Account. Meeting Connectors can only be used by On-prem users.",
                  "default": false
                },
                "meeting_connectors": {
                  "type": "string",
                  "description": "Specify the IP addresses of the Meeting Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_mc` is set to `true`."
                },
                "pay_mode": {
                  "type": "string",
                  "description": "Payee:<br>`master` - Master account holder pays.<br>`sub` - Sub account holder pays.",
                  "enum": [
                    "master",
                    "sub"
                  ],
                  "x-enum-descriptions": [
                    "Master account holder pays",
                    "Sub account holder pays"
                  ],
                  "default": "master"
                }
              }
            },
            "x-examples": {}
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nSub account has plan already, you can't change pay mode."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nAccount options updated.",
            "examples": {
              "application/json": {
                "share_rc": "boolean",
                "room_connectors": "string",
                "share_mc": "boolean",
                "meeting_connectors": "string",
                "pay_mode": "string"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {subAccountId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "summary": "Get Settings",
        "description": "Get the settings of a Sub Account under a Master Account.<br>\nTo get the settings of a Master Account, use `me` as the value for the `accountId` path parameter.<br><br>\n **Prerequisites**:\n * The Sub Account must be a paid account.<br>\n**Scopes**: `account:read:admin`\n<br> ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettings",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true,
            "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account."
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br> Account settings returned. \n**Error Code:** `200`<br>\nOnly available for Paid account.",
            "examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": "boolean",
                  "participant_video": "boolean",
                  "audio_type": "string",
                  "join_before_host": "boolean",
                  "use_pmi_for_scheduled_meetings": "boolean",
                  "use_pmi_for_instant_meetings": "boolean",
                  "enforce_login": "boolean",
                  "enforce_login_with_domains": "boolean",
                  "enforce_login_domains": "string",
                  "not_store_meeting_topic": "boolean",
                  "force_pmi_jbh_password": "boolean",
                  "require_password_for_scheduling_new_meetings": "boolean",
                  "require_password_for_scheduled_meetings": "boolean",
                  "require_password_for_instant_meetings": "boolean",
                  "require_password_for_pmi_meetings": "string"
                },
                "in_meeting": {
                  "e2e_encryption": "boolean",
                  "chat": "boolean",
                  "private_chat": "boolean",
                  "auto_saving_chat": "boolean",
                  "entry_exit_chime": "string",
                  "record_play_own_voice": "boolean",
                  "feedback": "boolean",
                  "post_meeting_feedback": "boolean",
                  "co_host": "boolean",
                  "polling": "boolean",
                  "attendee_on_hold": "boolean",
                  "show_meeting_control_toolbar": "boolean",
                  "allow_show_zoom_windows": "boolean",
                  "annotation": "boolean",
                  "whiteboard": "boolean",
                  "webinar_question_answer": "boolean",
                  "anonymous_question_answer": "boolean",
                  "breakout_room": "boolean",
                  "closed_caption": "boolean",
                  "far_end_camera_control": "boolean",
                  "group_hd": "boolean",
                  "virtual_background": "boolean",
                  "watermark": "boolean",
                  "alert_guest_join": "boolean",
                  "auto_answer": "boolean",
                  "p2p_connetion": "boolean",
                  "p2p_ports": "boolean",
                  "ports_range": "string",
                  "sending_default_email_invites": "boolean",
                  "use_html_format_email": "boolean",
                  "dscp_marking": "boolean",
                  "dscp_audio": "integer",
                  "dscp_video": "integer",
                  "stereo_audio": "boolean",
                  "original_audio": "boolean",
                  "screen_sharing": "boolean",
                  "remote_control": "boolean"
                },
                "email_notification": {
                  "cloud_recording_avaliable_reminder": "boolean",
                  "jbh_reminder": "boolean",
                  "cancel_meeting_reminder": "boolean",
                  "low_host_count_reminder": "boolean",
                  "alternative_host_reminder": "boolean",
                  "schedule_for_reminder": "boolean"
                },
                "zoom_rooms": {
                  "upcoming_meeting_alert": "boolean",
                  "start_airplay_manually": "boolean",
                  "weekly_system_restart": "boolean",
                  "list_meetings_with_calendar": "boolean",
                  "zr_post_meeting_feedback": "boolean",
                  "ultrasonic": "boolean",
                  "force_private_meeting": "boolean",
                  "hide_host_information": "boolean",
                  "cmr_for_instant_meeting": "boolean",
                  "auto_start_stop_scheduled_meetings": "boolean"
                },
                "security": {
                  "admin_change_name_pic": "boolean",
                  "import_photos_from_devices": "boolean",
                  "hide_billing_info": "boolean"
                },
                "recording": {
                  "local_recording": "boolean",
                  "cloud_recording": "boolean",
                  "record_speaker_view": "boolean",
                  "record_gallery_view": "boolean",
                  "record_audio_file": "boolean",
                  "save_chat_text": "boolean",
                  "show_timestamp": "boolean",
                  "recording_audio_transcript": "boolean",
                  "auto_recording": "string",
                  "cloud_recording_download": "boolean",
                  "cloud_recording_download_host": "boolean",
                  "account_user_access_recording": "boolean",
                  "auto_delete_cmr": "boolean",
                  "auto_delete_cmr_days": "integer"
                },
                "telephony": {
                  "third_party_audio": "boolean",
                  "audio_conference_info": "string"
                },
                "tsp": {
                  "call_out": "boolean",
                  "call_out_countries": [
                    "string"
                  ],
                  "show_international_numbers_link": "boolean",
                  "display_toll_free_numbers": "boolean"
                },
                "integration": {
                  "google_calendar": "boolean",
                  "google_drive": "boolean",
                  "dropbox": "boolean",
                  "box": "boolean",
                  "microsoft_one_drive": "boolean",
                  "kubi": "boolean"
                },
                "feature": {
                  "meeting_capacity": "integer"
                }
              }
            },
            "schema": {
              "oneOf": [
                {
                  "title": "Account settings",
                  "type": "object",
                  "properties": {
                    "schedule_meting": {
                      "type": "object",
                      "description": "Account Settings: Schedule Meeting.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with the host video on."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start meetings with the participant video on. Participants can change this setting during the meeting."
                        },
                        "audio_type": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip",
                            "thirdParty"
                          ],
                          "x-enum-descriptions": [
                            "Telephony and VoIP",
                            "Audio PSTN telephony only",
                            "VoIP only",
                            "3rd party audio conference"
                          ]
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host arrives."
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only Zoom users who are signed in can join meetings."
                        },
                        "enforce_login_with_domains": {
                          "type": "boolean",
                          "description": "Only signed in users with a specific domain can join meetings."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed in users with a specified domain can join the meeting. "
                        },
                        "not_store_meeting_topic": {
                          "type": "boolean",
                          "description": "Always display \"Zoom Meeting\" as the meeting topic."
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "Require a password for Personal Meetings if attendees can join before host."
                        },
                        "use_pmi_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
                        },
                        "use_pmi_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
                          "enum": [
                            "jbh_only",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Only meetings with Join Before Host enabled",
                            "All meetings using PMI",
                            "Disabled"
                          ]
                        }
                      }
                    },
                    "in_meeting": {
                      "type": "object",
                      "description": "Account Settings: In Meeting.",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "Require that all meetings are encrypted using AES."
                        },
                        "chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send a message that is visible to all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "description": "Allow a meeting participant to send a private message to another participant."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "description": "Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "description": "Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.",
                          "enum": [
                            "host",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Heard by host only",
                            "Heard by host and all attendees",
                            "Disable"
                          ]
                        },
                        "record_play_own_voice": {
                          "type": "boolean",
                          "description": "Record and play their own voice."
                        },
                        "feedback": {
                          "type": "boolean",
                          "description": "Add a \"Feedback\" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting."
                        },
                        "post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Display a thumbs up or down survey at the end of each meeting."
                        },
                        "co_host": {
                          "type": "boolean",
                          "description": "Allow the host to add co-hosts."
                        },
                        "polling": {
                          "type": "boolean",
                          "description": "Add \"Polls\" to the meeting controls."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "description": "Allow hosts to temporarily remove an attendee from a meeting."
                        },
                        "show_meeting_control_toolbar": {
                          "type": "boolean",
                          "description": "Always show the meeting control toolbar."
                        },
                        "allow_show_zoom_windows": {
                          "type": "boolean",
                          "description": "Show the Zoom desktop application when sharing screens. "
                        },
                        "annotation": {
                          "type": "boolean",
                          "description": "Allow participants to use annotation tools to add information to shared screens."
                        },
                        "whiteboard": {
                          "type": "boolean",
                          "description": "Allow participants to share a whiteboard that includes annotation tools."
                        },
                        "webinar_question_answer": {
                          "type": "boolean",
                          "description": "Allow a Q&A in a webinar."
                        },
                        "anonymous_question_answer": {
                          "type": "boolean",
                          "description": "Allow an anonymous Q&A in a webinar."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "description": "Allow host to split meeting participants into separate, smaller rooms."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "description": "Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. "
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "description": "Allow another user to take control of your camera during a meeting."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "description": "Activate higher quality video for host and participants.\nPlease note: This will use more bandwidth."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings."
                        },
                        "watermark": {
                          "type": "boolean",
                          "description": "Add a watermark when viewing a shared screen."
                        },
                        "alert_guest_join": {
                          "type": "boolean",
                          "description": "Identify guest participants in a meeting or webinar."
                        },
                        "auto_answer": {
                          "type": "boolean",
                          "description": "Enable users to see and add contacts to the \"auto-answer group\" in the chat contact list. Any call from members of this group will automatically be answered."
                        },
                        "p2p_connetion": {
                          "type": "boolean",
                          "description": "Peer to peer connection while only two people are in a meeting."
                        },
                        "p2p_ports": {
                          "type": "boolean",
                          "description": "Peer to peer listening ports range."
                        },
                        "ports_range": {
                          "type": "string",
                          "description": "The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.",
                          "default": ""
                        },
                        "sending_default_email_invites": {
                          "type": "boolean",
                          "description": "Only show the default email when sending email invites."
                        },
                        "use_html_format_email": {
                          "type": "boolean",
                          "description": "Use HTML formatted email for the Outlook plugin."
                        },
                        "dscp_marking": {
                          "type": "boolean",
                          "description": "DSCP marking."
                        },
                        "dscp_audio": {
                          "type": "integer",
                          "description": "DSCP audio.",
                          "minimum": 1,
                          "maximum": 63
                        },
                        "dscp_video": {
                          "type": "integer",
                          "description": "DSCP video.",
                          "minimum": 1,
                          "maximum": 63
                        },
                        "stereo_audio": {
                          "type": "boolean",
                          "description": "Allow users to select stereo audio in their client settings."
                        },
                        "original_audio": {
                          "type": "boolean",
                          "description": "Allow users to select original sound in their client settings."
                        },
                        "screen_sharing": {
                          "type": "boolean",
                          "description": "Allow screen sharing."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "description": "Allow users to request remote control."
                        },
                        "allow_live_streaming": {
                          "type": "boolean",
                          "description": "Allow live streaming."
                        },
                        "workplace_by_facebook": {
                          "type": "boolean",
                          "description": "Workplace by facebook."
                        },
                        "custom_live_streaming_service": {
                          "type": "boolean",
                          "description": "Custom live streaming."
                        },
                        "custom_service_instructions": {
                          "type": "string",
                          "description": "Custom service instructions."
                        }
                      }
                    },
                    "email_notification": {
                      "type": "object",
                      "description": "Account Settings: Notification.",
                      "properties": {
                        "cloud_recording_avaliable_reminder": {
                          "type": "boolean",
                          "description": "Notify host when cloud recording is available."
                        },
                        "jbh_reminder": {
                          "type": "boolean",
                          "description": "Notify the host when participants join the meeting before them."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "description": "Notify the host and participants when a meeting is cancelled."
                        },
                        "low_host_count_reminder": {
                          "type": "boolean",
                          "description": "Notify user when host licenses are running low."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "description": "Notify when an alternative host is set or removed from a meeting."
                        },
                        "schedule_for_reminder": {
                          "type": "boolean",
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "zoom_rooms": {
                      "type": "object",
                      "description": "Account Settings: Zoom Rooms.",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "Upcoming meeting alert."
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Start AirPlay service manually."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "Weekly system restart."
                        },
                        "list_meetings_with_calendar": {
                          "type": "boolean",
                          "description": "Display meeting list with calendar integration."
                        },
                        "zr_post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Zoom Room post meeting feedback."
                        },
                        "ultrasonic": {
                          "type": "boolean",
                          "description": "Automatic direct sharing using an ultrasonic proximity signal."
                        },
                        "force_private_meeting": {
                          "type": "boolean",
                          "description": "Shift all meetings to private."
                        },
                        "hide_host_information": {
                          "type": "boolean",
                          "description": "Hide host and meeting ID from private meetings."
                        },
                        "cmr_for_instant_meeting": {
                          "type": "boolean",
                          "description": "Cloud recording for instant meetings."
                        },
                        "auto_start_stop_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Automatic start and stop for scheduled meetings."
                        }
                      }
                    },
                    "security": {
                      "type": "object",
                      "description": "Account Settings: Security.",
                      "properties": {
                        "admin_change_name_pic": {
                          "type": "boolean",
                          "description": "Only account administrators can change a user's username and picture."
                        },
                        "import_photos_from_devices": {
                          "type": "boolean",
                          "description": "Allow users to import photos from a photo library on a  device."
                        },
                        "hide_billing_info": {
                          "type": "boolean",
                          "description": "Hide billing information."
                        }
                      }
                    },
                    "recording": {
                      "type": "object",
                      "description": "Account Settings: Recording.",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Allow hosts and participants to record the meeting using a local file."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "description": "Allow hosts to record and save the meeting in the cloud."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "description": "Record the active speaker with a shared screen."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "description": "Record the gallery view with a shared screen."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "description": "Save the chat text from the meeting."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "description": "Add a timestamp to the recording."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Automatically transcribe the audio of the meeting or webinar to the cloud."
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record on local",
                            "Record on cloud",
                            "Disabled"
                          ]
                        },
                        "cloud_recording_download": {
                          "type": "boolean",
                          "description": "Cloud recording downloads."
                        },
                        "cloud_recording_download_host": {
                          "type": "boolean",
                          "description": "Only the host can download cloud recordings."
                        },
                        "account_user_access_recording": {
                          "type": "boolean",
                          "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings."
                        },
                        "auto_delete_cmr": {
                          "type": "boolean",
                          "description": "Allow Zoom to permanantly delete recordings automatically after a specified number of days."
                        },
                        "auto_delete_cmr_days": {
                          "type": "integer",
                          "description": "When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings."
                        }
                      }
                    },
                    "telephony": {
                      "type": "object",
                      "description": "Account Settings: Telephony.",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Users can join the meeting using the existing third party audio configuration."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "description": "Third party audio conference info."
                        }
                      }
                    },
                    "integration": {
                      "type": "object",
                      "description": "Account Settings: Integration.",
                      "properties": {
                        "google_calendar": {
                          "type": "boolean",
                          "description": "Enable meetings to be scheduled using Google Calendar."
                        },
                        "google_drive": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Google Drive."
                        },
                        "dropbox": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Dropbox account."
                        },
                        "box": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Box account."
                        },
                        "microsoft_one_drive": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account."
                        },
                        "kubi": {
                          "type": "boolean",
                          "description": "Enable users to control a connected Kubi device from within a Zoom meeting."
                        }
                      }
                    },
                    "feature": {
                      "type": "object",
                      "description": "Account Settings: Feature.",
                      "properties": {
                        "meeting_capacity": {
                          "type": "integer",
                          "description": "Set the maximum number of participants a host can have in a single meeting."
                        }
                      }
                    },
                    "tsp": {
                      "type": "object",
                      "description": "Account Settings: TSP.",
                      "properties": {
                        "call_out": {
                          "type": "boolean",
                          "description": "Call Out"
                        },
                        "call_out_countries": {
                          "type": "array",
                          "items": {},
                          "description": "Call Out Countries/Regions"
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show international numbers link on the invitation email"
                        },
                        "display_toll_free_numbers": {
                          "type": "boolean",
                          "description": "Display toll-free numbers"
                        }
                      }
                    }
                  }
                },
                {
                  "title": "AccountSettingsAuthentication",
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "description": "Meeting Authentication Options",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domians"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "internally",
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domians"
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {subAccountId}."
          }
        }
      },
      "patch": {
        "summary": "Update Settings",
        "description": "Update the settings of a Sub Account that is under a Master Account.<br> To update the settings of the Master Account, use `me` as the value of the `accountId` path parameter.<br><br>\n**Prerequisites**:\n * The Sub Account must be a paid account.<br>\n**Scopes**: `account:write:admin`\n<br> ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettingsUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "title": "Account settings",
                  "type": "object",
                  "properties": {
                    "schedule_meting": {
                      "type": "object",
                      "description": "Account Settings: Schedule Meeting.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with the host video on."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start meetings with the participant video on. Participants can change this setting during the meeting."
                        },
                        "audio_type": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip",
                            "thirdParty"
                          ],
                          "x-enum-descriptions": [
                            "Telephony and VoIP",
                            "Audio PSTN telephony only",
                            "VoIP only",
                            "3rd party audio conference"
                          ]
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host arrives."
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only Zoom users who are signed in can join meetings."
                        },
                        "enforce_login_with_domains": {
                          "type": "boolean",
                          "description": "Only signed in users with a specific domain can join meetings."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed in users with a specified domain can join the meeting. "
                        },
                        "not_store_meeting_topic": {
                          "type": "boolean",
                          "description": "Always display \"Zoom Meeting\" as the meeting topic."
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "Require a password for Personal Meetings if attendees can join before host."
                        },
                        "use_pmi_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
                        },
                        "use_pmi_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
                          "enum": [
                            "jbh_only",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Only meetings with Join Before Host enabled",
                            "All meetings using PMI",
                            "Disabled"
                          ]
                        }
                      }
                    },
                    "in_meeting": {
                      "type": "object",
                      "description": "Account Settings: In Meeting.",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "Require that all meetings are encrypted using AES."
                        },
                        "chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send a message that is visible to all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "description": "Allow a meeting participant to send a private message to another participant."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "description": "Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "description": "Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.",
                          "enum": [
                            "host",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Heard by host only",
                            "Heard by host and all attendees",
                            "Disable"
                          ]
                        },
                        "record_play_own_voice": {
                          "type": "boolean",
                          "description": "Record and play their own voice."
                        },
                        "feedback": {
                          "type": "boolean",
                          "description": "Add a \"Feedback\" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting."
                        },
                        "post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Display a thumbs up or down survey at the end of each meeting."
                        },
                        "co_host": {
                          "type": "boolean",
                          "description": "Allow the host to add co-hosts."
                        },
                        "polling": {
                          "type": "boolean",
                          "description": "Add \"Polls\" to the meeting controls."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "description": "Allow hosts to temporarily remove an attendee from a meeting."
                        },
                        "show_meeting_control_toolbar": {
                          "type": "boolean",
                          "description": "Always show the meeting control toolbar."
                        },
                        "allow_show_zoom_windows": {
                          "type": "boolean",
                          "description": "Show the Zoom desktop application when sharing screens. "
                        },
                        "annotation": {
                          "type": "boolean",
                          "description": "Allow participants to use annotation tools to add information to shared screens."
                        },
                        "whiteboard": {
                          "type": "boolean",
                          "description": "Allow participants to share a whiteboard that includes annotation tools."
                        },
                        "webinar_question_answer": {
                          "type": "boolean",
                          "description": "Allow a Q&A in a webinar."
                        },
                        "anonymous_question_answer": {
                          "type": "boolean",
                          "description": "Allow an anonymous Q&A in a webinar."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "description": "Allow host to split meeting participants into separate, smaller rooms."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "description": "Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. "
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "description": "Allow another user to take control of your camera during a meeting."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "description": "Activate higher quality video for host and participants.\nPlease note: This will use more bandwidth."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings."
                        },
                        "watermark": {
                          "type": "boolean",
                          "description": "Add a watermark when viewing a shared screen."
                        },
                        "alert_guest_join": {
                          "type": "boolean",
                          "description": "Identify guest participants in a meeting or webinar."
                        },
                        "auto_answer": {
                          "type": "boolean",
                          "description": "Enable users to see and add contacts to the \"auto-answer group\" in the chat contact list. Any call from members of this group will automatically be answered."
                        },
                        "p2p_connetion": {
                          "type": "boolean",
                          "description": "Peer to peer connection while only two people are in a meeting."
                        },
                        "p2p_ports": {
                          "type": "boolean",
                          "description": "Peer to peer listening ports range."
                        },
                        "ports_range": {
                          "type": "string",
                          "description": "The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.",
                          "default": ""
                        },
                        "sending_default_email_invites": {
                          "type": "boolean",
                          "description": "Only show the default email when sending email invites."
                        },
                        "use_html_format_email": {
                          "type": "boolean",
                          "description": "Use HTML formatted email for the Outlook plugin."
                        },
                        "dscp_marking": {
                          "type": "boolean",
                          "description": "DSCP marking."
                        },
                        "dscp_audio": {
                          "type": "integer",
                          "description": "DSCP audio.",
                          "minimum": 1,
                          "maximum": 63
                        },
                        "dscp_video": {
                          "type": "integer",
                          "description": "DSCP video.",
                          "minimum": 1,
                          "maximum": 63
                        },
                        "stereo_audio": {
                          "type": "boolean",
                          "description": "Allow users to select stereo audio in their client settings."
                        },
                        "original_audio": {
                          "type": "boolean",
                          "description": "Allow users to select original sound in their client settings."
                        },
                        "screen_sharing": {
                          "type": "boolean",
                          "description": "Allow screen sharing."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "description": "Allow users to request remote control."
                        },
                        "allow_live_streaming": {
                          "type": "boolean",
                          "description": "Allow live streaming."
                        },
                        "workplace_by_facebook": {
                          "type": "boolean",
                          "description": "Workplace by facebook."
                        },
                        "custom_live_streaming_service": {
                          "type": "boolean",
                          "description": "Custom live streaming."
                        },
                        "custom_service_instructions": {
                          "type": "string",
                          "description": "Custom service instructions."
                        }
                      }
                    },
                    "email_notification": {
                      "type": "object",
                      "description": "Account Settings: Notification.",
                      "properties": {
                        "cloud_recording_avaliable_reminder": {
                          "type": "boolean",
                          "description": "Notify host when cloud recording is available."
                        },
                        "jbh_reminder": {
                          "type": "boolean",
                          "description": "Notify the host when participants join the meeting before them."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "description": "Notify the host and participants when a meeting is cancelled."
                        },
                        "low_host_count_reminder": {
                          "type": "boolean",
                          "description": "Notify user when host licenses are running low."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "description": "Notify when an alternative host is set or removed from a meeting."
                        },
                        "schedule_for_reminder": {
                          "type": "boolean",
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "zoom_rooms": {
                      "type": "object",
                      "description": "Account Settings: Zoom Rooms.",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "Upcoming meeting alert."
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Start AirPlay service manually."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "Weekly system restart."
                        },
                        "list_meetings_with_calendar": {
                          "type": "boolean",
                          "description": "Display meeting list with calendar integration."
                        },
                        "zr_post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Zoom Room post meeting feedback."
                        },
                        "ultrasonic": {
                          "type": "boolean",
                          "description": "Automatic direct sharing using an ultrasonic proximity signal."
                        },
                        "force_private_meeting": {
                          "type": "boolean",
                          "description": "Shift all meetings to private."
                        },
                        "hide_host_information": {
                          "type": "boolean",
                          "description": "Hide host and meeting ID from private meetings."
                        },
                        "cmr_for_instant_meeting": {
                          "type": "boolean",
                          "description": "Cloud recording for instant meetings."
                        },
                        "auto_start_stop_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Automatic start and stop for scheduled meetings."
                        }
                      }
                    },
                    "security": {
                      "type": "object",
                      "description": "Account Settings: Security.",
                      "properties": {
                        "admin_change_name_pic": {
                          "type": "boolean",
                          "description": "Only account administrators can change a user's username and picture."
                        },
                        "import_photos_from_devices": {
                          "type": "boolean",
                          "description": "Allow users to import photos from a photo library on a  device."
                        },
                        "hide_billing_info": {
                          "type": "boolean",
                          "description": "Hide billing information."
                        }
                      }
                    },
                    "recording": {
                      "type": "object",
                      "description": "Account Settings: Recording.",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Allow hosts and participants to record the meeting using a local file."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "description": "Allow hosts to record and save the meeting in the cloud."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "description": "Record the active speaker with a shared screen."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "description": "Record the gallery view with a shared screen."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "description": "Save the chat text from the meeting."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "description": "Add a timestamp to the recording."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Automatically transcribe the audio of the meeting or webinar to the cloud."
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record on local",
                            "Record on cloud",
                            "Disabled"
                          ]
                        },
                        "cloud_recording_download": {
                          "type": "boolean",
                          "description": "Cloud recording downloads."
                        },
                        "cloud_recording_download_host": {
                          "type": "boolean",
                          "description": "Only the host can download cloud recordings."
                        },
                        "account_user_access_recording": {
                          "type": "boolean",
                          "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings."
                        },
                        "auto_delete_cmr": {
                          "type": "boolean",
                          "description": "Allow Zoom to permanantly delete recordings automatically after a specified number of days."
                        },
                        "auto_delete_cmr_days": {
                          "type": "integer",
                          "description": "When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings."
                        }
                      }
                    },
                    "telephony": {
                      "type": "object",
                      "description": "Account Settings: Telephony.",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Users can join the meeting using the existing third party audio configuration."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "description": "Third party audio conference info."
                        }
                      }
                    },
                    "integration": {
                      "type": "object",
                      "description": "Account Settings: Integration.",
                      "properties": {
                        "google_calendar": {
                          "type": "boolean",
                          "description": "Enable meetings to be scheduled using Google Calendar."
                        },
                        "google_drive": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Google Drive."
                        },
                        "dropbox": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Dropbox account."
                        },
                        "box": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Box account."
                        },
                        "microsoft_one_drive": {
                          "type": "boolean",
                          "description": "Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account."
                        },
                        "kubi": {
                          "type": "boolean",
                          "description": "Enable users to control a connected Kubi device from within a Zoom meeting."
                        }
                      }
                    },
                    "feature": {
                      "type": "object",
                      "description": "Account Settings: Feature.",
                      "properties": {
                        "meeting_capacity": {
                          "type": "integer",
                          "description": "Set the maximum number of participants a host can have in a single meeting."
                        }
                      }
                    },
                    "tsp": {
                      "type": "object",
                      "description": "Account Settings: TSP.",
                      "properties": {
                        "call_out": {
                          "type": "boolean",
                          "description": "Call Out"
                        },
                        "call_out_countries": {
                          "type": "array",
                          "items": {},
                          "description": "Call Out Countries/Regions"
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show international numbers link on the invitation email"
                        },
                        "display_toll_free_numbers": {
                          "type": "boolean",
                          "description": "Display toll-free numbers"
                        }
                      }
                    }
                  }
                },
                {
                  "title": "AccountSettingsAuthenticationUpdate",
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Meeting Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": " Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": " Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "enforce_login",
                                "enforce_login_with_domains"
                              ],
                              "description": " Authentication type"
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": " Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "enum": [
                                "update",
                                "delete",
                                "add"
                              ],
                              "description": " Authentication Action"
                            },
                            "domains": {
                              "type": "string",
                              "description": " Authentication domains"
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Authentication type",
                              "enum": [
                                "internally",
                                "enforce_login",
                                "enforce_login_with_domains"
                              ]
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": "Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "description": "Authentication action",
                              "enum": [
                                "update",
                                "delete",
                                "add"
                              ]
                            },
                            "domains": {
                              "type": "string",
                              "description": "Authentication domains"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "schedule_meting": {
                  "host_video": "boolean",
                  "participant_video": "boolean",
                  "audio_type": "string",
                  "join_before_host": "boolean",
                  "enforce_login": "boolean",
                  "enforce_login_with_domains": "boolean",
                  "enforce_login_domains": "string",
                  "not_store_meeting_topic": "boolean",
                  "force_pmi_jbh_password": "boolean",
                  "require_password_for_scheduling_new_meetings": "boolean",
                  "require_password_for_scheduled_meetings": "boolean",
                  "require_password_for_instant_meetings": "boolean",
                  "require_password_for_pmi_meetings": "string",
                  "use_pmi_for_scheduled_meetings": "boolean",
                  "use_pmi_for_instant_meetings": "boolean"
                },
                "in_meeting": {
                  "e2e_encryption": "boolean",
                  "chat": "boolean",
                  "private_chat": "boolean",
                  "auto_saving_chat": "boolean",
                  "feedback": "boolean",
                  "post_meeting_feedback": "boolean",
                  "co_host": "boolean",
                  "polling": "boolean",
                  "attendee_on_hold": "boolean",
                  "show_meeting_control_toolbar": "boolean",
                  "allow_show_zoom_windows": "boolean",
                  "annotation": "boolean",
                  "whiteboard": "boolean",
                  "webinar_question_answer": "boolean",
                  "anonymous_question_answer": "boolean",
                  "breakout_room": "boolean",
                  "closed_caption": "boolean",
                  "far_end_camera_control": "boolean",
                  "group_hd": "boolean",
                  "virtual_background": "boolean",
                  "watermark": "boolean",
                  "alert_guest_join": "boolean",
                  "auto_answer": "boolean",
                  "p2p_connetion": "boolean",
                  "p2p_ports": "boolean",
                  "ports_range": "string",
                  "sending_default_email_invites": "boolean",
                  "use_html_format_email": "boolean",
                  "dscp_marking": "boolean",
                  "dscp_audio": "integer",
                  "dscp_video": "integer",
                  "stereo_audio": "boolean",
                  "original_audio": "boolean",
                  "screen_sharing": "boolean",
                  "remote_control": "boolean"
                },
                "email_notification": {
                  "cloud_recording_avaliable_reminder": "boolean",
                  "jbh_reminder": "boolean",
                  "cancel_meeting_reminder": "boolean",
                  "low_host_count_reminder": "boolean",
                  "alternative_host_reminder": "boolean"
                },
                "zoom_rooms": {
                  "upcoming_meeting_alert": "boolean",
                  "start_airplay_manually": "boolean",
                  "weekly_system_restart": "boolean",
                  "list_meetings_with_calendar": "boolean",
                  "zr_post_meeting_feedback": "boolean",
                  "ultrasonic": "boolean",
                  "force_private_meeting": "boolean",
                  "hide_host_information": "boolean",
                  "cmr_for_instant_meeting": "boolean",
                  "auto_start_stop_scheduled_meetings": "boolean"
                },
                "security": {
                  "admin_change_name_pic": "boolean",
                  "import_photos_from_devices": "boolean",
                  "hide_billing_info": "boolean"
                },
                "recording": {
                  "local_recording": "boolean",
                  "cloud_recording": "boolean",
                  "record_speaker_view": "boolean",
                  "record_gallery_view": "boolean",
                  "record_audio_file": "boolean",
                  "save_chat_text": "boolean",
                  "show_timestamp": "boolean",
                  "recording_audio_transcript": "boolean",
                  "auto_recording": "string",
                  "cloud_recording_download": "boolean",
                  "cloud_recording_download_host": "boolean",
                  "account_user_access_recording": "boolean",
                  "auto_delete_cmr": "boolean",
                  "auto_delete_cmr_days": "integer"
                },
                "telephony": {
                  "third_party_audio": "boolean",
                  "audio_conference_info": "string"
                },
                "tsp": {
                  "call_out": "boolean",
                  "call_out_countries": [
                    "string"
                  ],
                  "show_international_numbers_link": "boolean",
                  "display_toll_free_numbers": "boolean"
                },
                "integration": {
                  "google_calendar": "boolean",
                  "google_drive": "boolean",
                  "dropbox": "boolean",
                  "box": "boolean",
                  "microsoft_one_drive": "boolean",
                  "kubi": "boolean"
                },
                "feature": {
                  "meeting_capacity": "integer"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br> Only available for Paid account."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>Account settings updated.",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300` <br>Invalid domains, please separate multiple domains by semicolon."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to you: {subAccountId}."
          }
        }
      }
    },
    "/accounts/{accountId}/managed_domains": {
      "get": {
        "summary": "Get Managed Domains",
        "description": "Get a Sub Account's [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-).<br><br>\n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have Master and Sub Accounts options enabled. <br><br>\nTo get managed domains of the Master Account, provide `me` as the value for accountId in the path parameter. Provide the Sub Account's Account ID as the value of accountId path parameter to get managed domains of the Sub Account.\n\n**Prerequisites:**<br>\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope:** `account:read:admin`<br>\n \n\n",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountManagedDomain",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the account. To retrieve locked settings of the Master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a Sub Account, provide the Account ID of the Sub Account in this field."
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nAccount managed domains returned.\n**Error Code:** `200`<br>\nOnly available for paid account.\n\n",
            "schema": {
              "type": "object",
              "description": "List of managed domains.",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "Total records."
                },
                "domains": {
                  "type": "array",
                  "description": "List of managed domain objects.",
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "domain": {
                            "type": "string",
                            "description": "Domain name."
                          },
                          "status": {
                            "type": "string",
                            "description": "Domain status."
                          }
                        }
                      }
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code**: `2001`<br>\nThis account does not exist or does not belong to you:{subAccountId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/accounts/{accountId}/trusted_domains": {
      "get": {
        "summary": "Get Trusted Domains",
        "description": "Get trusted domains of a Sub Account. To get the trusted domains of a Master Account, use `me` as the value for the `accountId` path parameter.\n\n**Prerequisites:**<br>\n* The Sub Account must be a paid account.<br>\n**Scope:** `account:read:admin`<br> ",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountTrustedDomain",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nAccount trusted domains returned<br>\n**Error Code:** `2001`<br> This account does not exist or does not belong to you:{subAccountId}.",
            "schema": {
              "properties": {
                "trusted_domains": {
                  "type": "array",
                  "description": "List of trusted domains",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br> This account does not exist or does not belong to you:{subAccountId}."
          }
        }
      }
    },
    "/accounts/{accountId}/billing": {
      "get": {
        "summary": "Get Billing Information",
        "description": "Get [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) of a Sub Account under a Master Account.<br>Only Master Accounts can use this API. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.<br>\n\n**Prerequisites:**\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**:`billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBilling",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nAccount billing contact information returned.",
            "schema": {
              "type": "object",
              "description": "Billing Contact object.",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "Billing Contact's first name."
                },
                "last_name": {
                  "type": "string",
                  "description": "Billing Contact's last name."
                },
                "email": {
                  "type": "string",
                  "description": "Billing Contact's email address."
                },
                "phone_number": {
                  "type": "string",
                  "description": "Billing Contact's phone number."
                },
                "address": {
                  "type": "string",
                  "description": "Billing Contact's address."
                },
                "apt": {
                  "type": "string",
                  "description": "Billing Contact's apartment/suite."
                },
                "city": {
                  "type": "string",
                  "description": "Billing Contact's city."
                },
                "state": {
                  "type": "string",
                  "description": "Billing Contact's state."
                },
                "zip": {
                  "type": "string",
                  "description": "Billing Contact's zip/postal code."
                },
                "country": {
                  "type": "string",
                  "description": "Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format."
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "phone_number",
                "address",
                "city",
                "state",
                "zip",
                "country"
              ]
            },
            "examples": {
              "application/json": {
                "first_name": "string",
                "last_name": "string",
                "email": "string",
                "phone_number": "string",
                "address": "string",
                "apt": "string",
                "city": "string",
                "state": "string",
                "zip": "string",
                "country": "string"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> This sub account is paid by self."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {subAccountId}. <br>\nThis account does not exist or does not belong to this master account: {subAccountId}.\n\n\n"
          }
        }
      },
      "patch": {
        "summary": "Update Billing Information",
        "description": "Update [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) for a Sub Account under a Master account. <aside>This API can only be used to update Billing information of Pro or higher Sub Accounts whose billing charges are paid by their Master account. Only Master Accounts can use this API. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br>\n\n**Prerequisites:**\n* Pro or a higher paid account with Master Account option enabled. <br>\n**Scope**:`billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBillingUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Billing Contact object.",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "Billing Contact's first name."
                },
                "last_name": {
                  "type": "string",
                  "description": "Billing Contact's last name."
                },
                "email": {
                  "type": "string",
                  "description": "Billing Contact's email address."
                },
                "phone_number": {
                  "type": "string",
                  "description": "Billing Contact's phone number."
                },
                "address": {
                  "type": "string",
                  "description": "Billing Contact's address."
                },
                "apt": {
                  "type": "string",
                  "description": "Billing Contact's apartment/suite."
                },
                "city": {
                  "type": "string",
                  "description": "Billing Contact's city."
                },
                "state": {
                  "type": "string",
                  "description": "Billing Contact's state."
                },
                "zip": {
                  "type": "string",
                  "description": "Billing Contact's zip/postal code."
                },
                "country": {
                  "type": "string",
                  "description": "Billing Contact's country."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "first_name": "string",
                "last_name": "string",
                "email": "string",
                "phone_number": "string",
                "address": "string",
                "apt": "string",
                "city": "string",
                "state": "string",
                "zip": "string",
                "country": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nThis account does not have a subscription. Subscribe a plan for this sub account."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nAccount billing contact information updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>\nInvalid country parameter: {country}.<br>\nInvalid state parameter: {state}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {subAccountId}.<br>\nThis account does not exist or does not belong to this master account: {subAccountId}.\n\n\n\n"
          }
        }
      }
    },
    "/accounts/{accountId}/plans": {
      "get": {
        "summary": "Get Plan Information",
        "description": "Get plan information for a Sub Account under the Master account.  <aside> This API can only be used by a Master Account that pays for the billing charges of the associated Pro or a higher Sub Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br>\n**Scopes:** `billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlans",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:**`200`<br>\nAccount's plans returned.\n",
            "schema": {
              "type": "object",
              "description": "Account Plans object.",
              "properties": {
                "plan_base": {
                  "type": "object",
                  "description": "Account base plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                "plan_zoom_rooms": {
                  "type": "object",
                  "description": "Account plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account plan number of hosts."
                    }
                  }
                },
                "plan_room_connector": {
                  "type": "object",
                  "description": "Account plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account plan number of hosts."
                    }
                  }
                },
                "plan_large_meeting": {
                  "type": "array",
                  "description": "Additional large meeting Plans.",
                  "items": {
                    "type": "object",
                    "description": "Account plan object.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "Account plan number of hosts."
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "type": "array",
                  "description": "Additional webinar plans.",
                  "items": {
                    "type": "object",
                    "description": "Account plan object.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "Account plan number of hosts."
                      }
                    }
                  }
                },
                "plan_recording": {
                  "type": "string",
                  "description": "Additional cloud recording plan."
                },
                "plan_audio": {
                  "type": "object",
                  "description": "Additional audio conferencing <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\">plan type.</a>",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Additional audio conferencing <a href=\"/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "tollfree_countries": {
                      "type": "string",
                      "description": "Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \"ID\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."
                    },
                    "premium_countries": {
                      "type": "string",
                      "description": "Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \"ID\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."
                    },
                    "callout_countries": {
                      "type": "string",
                      "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                    },
                    "ddi_numbers": {
                      "type": "integer",
                      "description": "Dedicated dial-In numbers."
                    }
                  }
                },
                "plan_phone": {
                  "type": "object",
                  "title": "PhonePlan",
                  "description": "Phone Plan Object",
                  "properties": {
                    "plan_base": {
                      "type": "object",
                      "description": "Additional phone base plans.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                        },
                        "callout_countries": {
                          "type": "string",
                          "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                        }
                      }
                    },
                    "plan_calling": {
                      "type": "array",
                      "description": "Additional phone calling plans.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "plan_number": {
                      "type": "array",
                      "description": "Additional phone number plans.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "plan_base"
              ]
            },
            "examples": {
              "application/json": {
                "plan_base": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_zoom_rooms": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_room_connector": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_large_meeting": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_recording": "string",
                "plan_audio": {
                  "type": "string",
                  "tollfree_countries": "string",
                  "premium_countries": "string",
                  "callout_countries": "string",
                  "ddi_numbers": "integer"
                },
                "plan_phone": {
                  "plan_base": {
                    "type": "string",
                    "callout_countries": "string"
                  },
                  "plan_calling": [
                    {
                      "type": "string",
                      "hosts": "integer"
                    }
                  ],
                  "plan_number": [
                    {
                      "type": "string",
                      "hosts": "integer"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:**`404`<br>\nAccount not found."
          }
        }
      },
      "post": {
        "summary": "Subscribe to Plans",
        "description": "Subscribe plans for a Sub Account under a Master Account. <aside> The plans can only be subscribed for an existing free Sub Account and the subscriptions charge for these plans should be paid by a Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br>\n**Scopes**: `billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanCreate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "type": "object",
                      "description": "Billing Contact object.",
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "description": "Billing Contact's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "description": "Billing Contact's last name."
                        },
                        "email": {
                          "type": "string",
                          "description": "Billing Contact's email address."
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "Billing Contact's phone number."
                        },
                        "address": {
                          "type": "string",
                          "description": "Billing Contact's address."
                        },
                        "apt": {
                          "type": "string",
                          "description": "Billing Contact's apartment/suite."
                        },
                        "city": {
                          "type": "string",
                          "description": "Billing Contact's city."
                        },
                        "state": {
                          "type": "string",
                          "description": "Billing Contact's state."
                        },
                        "zip": {
                          "type": "string",
                          "description": "Billing Contact's zip/postal code."
                        },
                        "country": {
                          "type": "string",
                          "description": "Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format."
                        }
                      },
                      "required": [
                        "first_name",
                        "last_name",
                        "email",
                        "phone_number",
                        "address",
                        "city",
                        "state",
                        "zip",
                        "country"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Account Plans object.",
                  "properties": {
                    "plan_base": {
                      "type": "object",
                      "description": "Account base plan object.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                        },
                        "hosts": {
                          "type": "integer",
                          "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
                        }
                      },
                      "required": [
                        "type",
                        "hosts"
                      ]
                    },
                    "plan_zoom_rooms": {
                      "type": "object",
                      "description": "Account plan object.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                        },
                        "hosts": {
                          "type": "integer",
                          "description": "Account plan number of hosts."
                        }
                      }
                    },
                    "plan_room_connector": {
                      "type": "object",
                      "description": "Account plan object.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                        },
                        "hosts": {
                          "type": "integer",
                          "description": "Account plan number of hosts."
                        }
                      }
                    },
                    "plan_large_meeting": {
                      "type": "array",
                      "description": "Additional large meeting Plans.",
                      "items": {
                        "type": "object",
                        "description": "Account plan object.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer",
                            "description": "Account plan number of hosts."
                          }
                        }
                      }
                    },
                    "plan_webinar": {
                      "type": "array",
                      "description": "Additional webinar plans.",
                      "items": {
                        "type": "object",
                        "description": "Account plan object.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer",
                            "description": "Account plan number of hosts."
                          }
                        }
                      }
                    },
                    "plan_recording": {
                      "type": "string",
                      "description": "Additional cloud recording plan."
                    },
                    "plan_audio": {
                      "type": "object",
                      "description": "Additional audio conferencing <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\">plan type.</a>",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Additional audio conferencing <a href=\"/api-reference/other-references/plans\">plan type.</a>"
                        },
                        "tollfree_countries": {
                          "type": "string",
                          "description": "Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \"ID\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."
                        },
                        "premium_countries": {
                          "type": "string",
                          "description": "Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \"ID\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."
                        },
                        "callout_countries": {
                          "type": "string",
                          "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                        },
                        "ddi_numbers": {
                          "type": "integer",
                          "description": "Dedicated dial-In numbers."
                        }
                      }
                    },
                    "plan_phone": {
                      "type": "object",
                      "title": "PhonePlan",
                      "description": "Phone Plan Object",
                      "properties": {
                        "plan_base": {
                          "type": "object",
                          "description": "Additional phone base plans.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                            },
                            "callout_countries": {
                              "type": "string",
                              "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                            }
                          }
                        },
                        "plan_calling": {
                          "type": "array",
                          "description": "Additional phone calling plans.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                              },
                              "hosts": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "plan_number": {
                          "type": "array",
                          "description": "Additional phone number plans.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                              },
                              "hosts": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "plan_base"
                  ]
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "contact": {
                  "first_name": "string",
                  "last_name": "string",
                  "email": "string",
                  "phone_number": "string",
                  "address": "string",
                  "apt": "string",
                  "city": "string",
                  "state": "string",
                  "zip": "string",
                  "country": "string"
                },
                "plan_base": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_zoom_rooms": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_room_connector": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_large_meeting": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_recording": "string",
                "plan_audio": {
                  "type": "string",
                  "tollfree_countries": "string",
                  "premium_countries": "string",
                  "callout_countries": "string",
                  "ddi_numbers": "integer"
                },
                "plan_phone": {
                  "plan_base": {
                    "type": "string",
                    "callout_countries": "string"
                  },
                  "plan_calling": [
                    {
                      "type": "string",
                      "hosts": "integer"
                    }
                  ],
                  "plan_number": [
                    {
                      "type": "string",
                      "hosts": "integer"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOne zuora account only can have one active billing subscription.<br>\nCan’t subscribe 25-participants pro plan for this sub-account.<br>\nCan’t subscribe 50-participants pro plan for this sub-account.<br>\nIn order to take advantage of your account’s special pricing, please add Pro host licenses instead and they will be assigned to your Zoom Rooms automatically."
          },
          "201": {
            "description": "**HTTP Status Code:**`201`<br>\nAccount plans updated.",
            "schema": {
              "type": "object",
              "description": "Account Plans object.",
              "properties": {
                "plan_base": {
                  "type": "object",
                  "description": "Account base plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                "plan_zoom_rooms": {
                  "type": "object",
                  "description": "Account plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account plan number of hosts."
                    }
                  }
                },
                "plan_room_connector": {
                  "type": "object",
                  "description": "Account plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Account plan number of hosts."
                    }
                  }
                },
                "plan_large_meeting": {
                  "type": "array",
                  "description": "Additional large meeting Plans.",
                  "items": {
                    "type": "object",
                    "description": "Account plan object.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "Account plan number of hosts."
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "type": "array",
                  "description": "Additional webinar plans.",
                  "items": {
                    "type": "object",
                    "description": "Account plan object.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "Account plan number of hosts."
                      }
                    }
                  }
                },
                "plan_recording": {
                  "type": "string",
                  "description": "Additional cloud recording plan."
                },
                "plan_audio": {
                  "type": "object",
                  "description": "Additional audio conferencing <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\">plan type.</a>",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Additional audio conferencing <a href=\"/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "tollfree_countries": {
                      "type": "string",
                      "description": "Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \"ID\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."
                    },
                    "premium_countries": {
                      "type": "string",
                      "description": "Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \"ID\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."
                    },
                    "callout_countries": {
                      "type": "string",
                      "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                    },
                    "ddi_numbers": {
                      "type": "integer",
                      "description": "Dedicated dial-In numbers."
                    }
                  }
                },
                "plan_phone": {
                  "type": "object",
                  "title": "PhonePlan",
                  "description": "Phone Plan Object",
                  "properties": {
                    "plan_base": {
                      "type": "object",
                      "description": "Additional phone base plans.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                        },
                        "callout_countries": {
                          "type": "string",
                          "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                        }
                      }
                    },
                    "plan_calling": {
                      "type": "array",
                      "description": "Additional phone calling plans.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "plan_number": {
                      "type": "array",
                      "description": "Additional phone number plans.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                          },
                          "hosts": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "plan_base"
              ]
            },
            "examples": {
              "application/json": {
                "plan_base": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_zoom_rooms": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_room_connector": {
                  "type": "string",
                  "hosts": "integer"
                },
                "plan_large_meeting": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "string",
                    "hosts": "integer"
                  }
                ],
                "plan_recording": "string",
                "plan_audio": {
                  "type": "string",
                  "tollfree_countries": "string",
                  "premium_countries": "string",
                  "callout_countries": "string",
                  "ddi_numbers": "integer"
                }
              }
            }
          },
          "300": {
            "description": "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than buy hosts.<br>\nBuy hosts/active hosts must be equal or larger than {MinActiveHost}.<br>\nThis bundle plan doesn’t support active host.<br>\nInvalid free trial end date time.<br>\nInvalid free trial start/end time.<br>\nToo long trial duration.\n\t"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> User not exist.<br> Invalid parameter: first_name<br>\nInvalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address\nInvalid parameter: city<br>Invalid parameter: phone_number<br>Invalid parameter: state<br>Invalid parameter: zip<br>Invalid country parameter: {country}<br>Invalid state parameter: {state}<br>Invalid field: plan_bundle<br>Can’t subscribe to base plan and bundle plan at the same time.<br>Cannot add plan for a Sub Account which is paid by self.<br>Cannot enable free trial again for Sub Account.<br>You cannot add a Sub Account because your Master Account owner prevented you from adding one.<br>\nCannot add plan for Sub account which is not free plan.<br>Error getting bundle.<br>Cannot process account.<br>Invalid host number.<br>Account doesn’t have the permission to purchase this plan.<br>Zoom Room plan {planCode} conflict with bundle plan.<br>Room Connector plan {planCode} conflict with bundle plan.<br>Large meeting plan {planCode} conflict with bundle plan.<br>\nWebinar plan {planCode} conflict with bundle plan.<br>Recording plan {planCode} conflict with bundle plan.<br>Invalid Cloud Recording Plan: {plan_recording}\nAudio conferencing plan {planCode} conflict with bundle plan.<br>Invalid Audio Conferencing Plan: {planCode}<br>Need at least one option from among the Toll-free, Premium and Call-out.<br>Failed to add zuora plans<br>Invalid Base Plan: {subAccountId}\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User not exist.<br> \n**Error Code:** `2001`<br> This account does not exist or does not belong to you: {subAccountId}.<br>\n\n"
          }
        }
      }
    },
    "/accounts/{accountId}/plans/base": {
      "put": {
        "summary": "Update a Base Plan",
        "description": "Update a base plan of a Sub Account. <aside> <aside> Only a Master Account can use this API to update the base plan of a Sub Account whose billing charges are paid by the Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br></aside><br><br>\n**Scopes:** `billing:master`<br><br>\n**Prerequisites:**<br>\n* The Sub Account must have a Pro or a higher plan.\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanBaseUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Account base plan object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                },
                "hosts": {
                  "type": "integer",
                  "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
                }
              },
              "required": [
                "type",
                "hosts"
              ]
            },
            "x-examples": {
              "application/json": {
                "type": "string",
                "hosts": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`\nFree trial and VIP account can't update sub plan.<br>\nYou do not have a subscription yet.<br>\n\n"
          },
          "204": {
            "description": "**HTTPS Status Code:** `204`<br>\nBase plan updated.",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nInsufficient number of hosts for business plan type.<br>\nInsufficient number of hosts for education plan type.<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>\n"
          }
        }
      }
    },
    "/accounts/{accountId}/plans/addons": {
      "post": {
        "summary": "Add an Additional Plan",
        "description": "Add an additional plan for a Sub Account. <br> <aside> Only a Master Account can use this API to subscribe addon plans for a Sub Account whose billing charges are paid by the Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br>\n<br>**Prerequisites:**<br>\n* Pro or a higher plan with Master Account enabled.\n* The Sub Account must be a paid account. The billing charges for the Sub Account must be paid by the Master Account.<br>\n**Scopes**: `billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanAddonCreate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Account plan object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                    },
                    "hosts": {
                      "type": "integer",
                      "description": "Number of hosts for this plan."
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Zoom Phone Plan `plan_phone`"
                    },
                    "plan_details": {
                      "type": "object",
                      "title": "PhonePlan",
                      "description": "Phone Plan Object",
                      "properties": {
                        "plan_base": {
                          "type": "object",
                          "description": "Additional phone base plans.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                            },
                            "callout_countries": {
                              "type": "string",
                              "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                            }
                          }
                        },
                        "plan_calling": {
                          "type": "array",
                          "description": "Additional phone calling plans.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                              },
                              "hosts": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "plan_number": {
                          "type": "array",
                          "description": "Additional phone number plans.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                              },
                              "hosts": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Zoom Phone Plan Object",
                  "required": [
                    "type",
                    "plan_details"
                  ]
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "type": "string",
                "hosts": "integer"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account plans updated."
          }
        }
      },
      "put": {
        "summary": "Update an Additional Plan",
        "description": "Update an additional plan for a sub account.<br><br> <aside> Only a Master Account can use this API to update the addon plans for a Sub Account whose billing charges are paid by the Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br>\n<br>**Prerequisites:**<br>\n* Pro or a higher plan with Master Account enabled.\n* The Sub Account must be a paid account. The billing charges for the Sub Account must be paid by the Master Account.<br>\n**Scopes**: `billing:master`<br>\n ",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanAddonUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "The account ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Account plan object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
                },
                "hosts": {
                  "type": "integer",
                  "description": "Number of hosts for this plan."
                }
              },
              "required": [
                "type",
                "hosts"
              ]
            },
            "x-examples": {
              "application/json": {
                "type": "string",
                "hosts": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nFree trial and VIP accounts can't update sub plans.<br>\nYou don’t have subscription for ({oldPlanCode}) yet.\n"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nAdditional plan updated for the account."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>This sub account is paid by self.<br>Invalid Additional Plan Type: {newPlanCode}.<br>Cannot update Additional plan for sub account which is free plan.<br>Invalid plan type.<br>\nAccount can’t buy this product.<br>Can not subscribe/update Additional Audio Conferencing Pay As You Go Plan for a sub account which base plan is not Business/Education.<br>\n**Error Code:** `3261`<br>\nFailed to change sub plan of account:{accountId}.<br>\nMust subscribe to a major plan first.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3200`<br>3200\nCannot find Zuora subscription for account:{accountId}.\n"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "List Groups",
        "description": "List [groups](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.\n\n**Prerequisite**: Pro or higher account.<br>\n**Scopes**: `group:read:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "parameters": [],
        "operationId": "groups",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of groups returned.<br>\n**Error Code:** `200`\nOnly available for paid accounts.",
            "schema": {
              "type": "object",
              "description": "List of Groups.",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "Total records."
                },
                "groups": {
                  "type": "array",
                  "description": "List of Group objects.",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Group ID."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Group object.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Group name."
                          },
                          "total_members": {
                            "type": "integer",
                            "description": "Total number of members in this group."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 2,
                "groups": [
                  {
                    "id": "hFK_GtF_e_TaVA808",
                    "name": "ipsum",
                    "total_members": 10
                  },
                  {
                    "id": "TaVA8QKik_123",
                    "name": "awesomegroup",
                    "total_members": 0
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Group",
        "description": "Create a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.\n\n**Prerequisite**: Pro or higher account.<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "myawesomegroup"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}"
          },
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nGroup created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created group",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID."
                },
                "name": {
                  "type": "string",
                  "description": "Group name."
                },
                "total_members": {
                  "type": "integer",
                  "description": "Group member count."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "string",
                "name": "string",
                "total_members": "integer"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `4130`<br>A group with this {groupId} does not exist.\n\n\n\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409`<br> **Error Code:** `4132`<br> Group name {groupName} is already in use."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/groups/{groupId}": {
      "get": {
        "summary": "Get a Group",
        "description": "Get a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "group",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br> Group returned.<br>\n**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID."
                },
                "name": {
                  "type": "string",
                  "description": "Group name."
                },
                "total_members": {
                  "type": "integer",
                  "description": "Total count of members in the group."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "chfhfhhfh_TKikJIX0",
                "name": "My test group",
                "total_members": 0
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nGroup does not belong to your account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Group",
        "description": "Update a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name. It must be unique to one account and less than 128 characters."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "amazinggroup"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The group does not belong to this account:{accountId}."
          },
          "204": {
            "description": "Group updated."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          },
          "409": {
            "description": "**Status Code:** `409`<br>\nConflict<br>\n**Error Code:** `4132`<br>\nGroup name {groupName} is already in use."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Group",
        "description": "Delete a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupDelete",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nGroup deleted."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nGroup member not found."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/groups/{groupId}/members": {
      "get": {
        "summary": "List Group Members ",
        "description": "List the members of a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembers",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br> Only available for paid account,{accountId}.",
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the user."
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the user. "
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the user."
                      },
                      "type": {
                        "type": "integer",
                        "description": "User type: <br> `1` - Basic<br> `2` - Licensed<br> `3` - On-prem"
                      }
                    }
                  }
                },
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned from this request."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned from a single API call."
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of records available across all pages."
                }
              }
            },
            "examples": {
              "application/json": {
                "members": [
                  {
                    "email": "",
                    "first_name": "Ram",
                    "id": "3542342",
                    "last_name": "Ghale",
                    "type": 1
                  }
                ],
                "page_count": 1,
                "page_number": 1,
                "page_size": 1,
                "total_records": 1
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add Group Members",
        "description": "Add members to a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembersCreate",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "description": "List of Group members",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User email. If the user ID is given then the user email should be ignored."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "members": [
                  {
                    "id": "36565387",
                    "email": "memberemail@somecompany.com"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Only available for paid account,{accountId}."
          },
          "201": {
            "description": "Member added.",
            "schema": {
              "properties": {
                "ids": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "string",
                "added_at": "string [date-time]"
              }
            }
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        }
      }
    },
    "/groups/{groupId}/members/{memberId}": {
      "delete": {
        "summary": "Delete a Group Member",
        "description": "Delete a member from a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) in a Zoom account.\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembersDelete",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "The member ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Only available for paid account,{accountId}."
          },
          "204": {
            "description": "Group member deleted."
          },
          "400": {
            "description": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `1010`<br>\nGroup does not belong to this account:{accountId}."
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "memberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nGroup member updated.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\n Only available for Paid account, {accountId}.<br><br>\n **Error Code:** `300`<br>\n The target_group_id can not be empty.<br><br>\n **Error Code:** `1010`<br>\n Group does not belong to this account:{accountId}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist."
          }
        },
        "summary": "Update a Group Member",
        "description": "If a user is a member in multiple groups, you can [set a primary group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-#h_d07c7dcd-4fd8-485a-b5fe-a322e8d21c09) for the user. The group member will use the primary group's settings by default. However, if settings are locked in other groups, those settings will continue to be locked for that user. By default, the primary group is the first group that user is added to.<br><br>\nUse this API to perform either of the following tasks:\n* Simultaneously remove a member from one group and move the member to a different group.\n* Set a primary group for the user<br><br>\n**Prerequisites:** \n* Pro or higher account<br> **Scopes:** `group:write:admin`\n",
        "operationId": "updateAGroupMember",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member's primary group, provide the groupId of the member's current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved."
          },
          {
            "in": "path",
            "name": "memberId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Specify the type of action to be performed:<br><br>\n`move`: Simultaneously remove a member from one group and move the member to a different group.<br>\n`set_primary`: Set a primary group for the user.\n",
                  "enum": [
                    "move",
                    "set_primary"
                  ]
                },
                "target_group_id": {
                  "type": "string",
                  "description": "Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br>\n\nTo move a user, use this field to specify the groupId of the group where the member is to be moved.<br>\n\nTo set a primary group for the user, provide the groupId of the group which is going to be the primary group."
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "set_primary",
                "target_group_id": "ifghhgt546pidatat"
              }
            }
          }
        ]
      }
    },
    "/h323/devices": {
      "get": {
        "summary": "List H.323/SIP Devices",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to list all H.323/SIP Devices on a Zoom account.<br><br>\n**Scopes:** `h323:read:admin`<br>\n <br>",
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "operationId": "deviceList",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of H.323/SIP devices returned.<br>\n**Error Code:** `200`<br>\nNo permission.",
            "schema": {
              "title": "H.323/SIP Device List",
              "description": "List of H.323/SIP Devices.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "devices": {
                      "type": "array",
                      "description": "List of H.323/SIP Device objects.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Device ID."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "The H.323/SIP device object.",
                            "description": "The H.323/SIP device object.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Device name.",
                                "maxLength": 64
                              },
                              "protocol": {
                                "type": "string",
                                "enum": [
                                  "H.323",
                                  "SIP"
                                ],
                                "x-enum-descriptions": [
                                  "H.323",
                                  "SIP"
                                ],
                                "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
                              },
                              "ip": {
                                "type": "string",
                                "description": "Device IP."
                              },
                              "encryption": {
                                "type": "string",
                                "enum": [
                                  "auto",
                                  "yes",
                                  "no"
                                ],
                                "x-enum-descriptions": [
                                  "auto",
                                  "yes",
                                  "no"
                                ],
                                "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
                              }
                            },
                            "required": [
                              "name",
                              "protocol",
                              "ip",
                              "encryption"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 1,
                "total_records": 1,
                "devices": [
                  {
                    "id": "abceHewahkrehwiK",
                    "name": "api_test_20190508",
                    "protocol": "H.323",
                    "ip": "127.0.0.1",
                    "encryption": "auto"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a H.323/SIP Device",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a H.323/SIP device to your Zoom account<br><br>\n**Scopes:** `h323:write:admin`<br>\n <br>",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "H.323/SIP device.",
            "schema": {
              "type": "object",
              "title": "The H.323/SIP device object.",
              "description": "The H.323/SIP device object.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Device name.",
                  "maxLength": 64
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "H.323",
                    "SIP"
                  ],
                  "x-enum-descriptions": [
                    "H.323",
                    "SIP"
                  ],
                  "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
                },
                "ip": {
                  "type": "string",
                  "description": "Device IP."
                },
                "encryption": {
                  "type": "string",
                  "enum": [
                    "auto",
                    "yes",
                    "no"
                  ],
                  "x-enum-descriptions": [
                    "auto",
                    "yes",
                    "no"
                  ],
                  "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
                }
              },
              "required": [
                "name",
                "protocol",
                "ip",
                "encryption"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "api_test",
                "protocol": "H.323",
                "ip": "127.0.0.1",
                "encryption": "auto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nNo permission."
          },
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nH.323/SIP device created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created device",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Device ID."
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "The H.323/SIP device object.",
                  "description": "The H.323/SIP device object.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Device name.",
                      "maxLength": 64
                    },
                    "protocol": {
                      "type": "string",
                      "enum": [
                        "H.323",
                        "SIP"
                      ],
                      "x-enum-descriptions": [
                        "H.323",
                        "SIP"
                      ],
                      "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
                    },
                    "ip": {
                      "type": "string",
                      "description": "Device IP."
                    },
                    "encryption": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "yes",
                        "no"
                      ],
                      "x-enum-descriptions": [
                        "auto",
                        "yes",
                        "no"
                      ],
                      "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
                    }
                  },
                  "required": [
                    "name",
                    "protocol",
                    "ip",
                    "encryption"
                  ]
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "string",
                "name": "string",
                "protocol": "string",
                "ip": "string",
                "encryption": "string"
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/h323/devices/{deviceId}": {
      "patch": {
        "summary": "Update a H.323/SIP Device",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit information of a H.323/SIP device from your Zoom account.<br><br>\n**Scopes:** `h323:write:admin`<br>\n <br>",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "description": "The device ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "The H.323/SIP device object.",
              "description": "The H.323/SIP device object.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Device name.",
                  "maxLength": 64
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "H.323",
                    "SIP"
                  ],
                  "x-enum-descriptions": [
                    "H.323",
                    "SIP"
                  ],
                  "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
                },
                "ip": {
                  "type": "string",
                  "description": "Device IP."
                },
                "encryption": {
                  "type": "string",
                  "enum": [
                    "auto",
                    "yes",
                    "no"
                  ],
                  "x-enum-descriptions": [
                    "auto",
                    "yes",
                    "no"
                  ],
                  "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
                }
              },
              "required": [
                "name",
                "protocol",
                "ip",
                "encryption"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "MyCoolDevice",
                "protocol": "H.323",
                "ip": "127.0.0.1",
                "encryption": "auto"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nH.323/SIP device updated.",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nH.323 Device does not exist: {deviceId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n"
          }
        }
      },
      "delete": {
        "summary": "Delete a H.323/SIP Device",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete a H.323/SIP device from your Zoom account.<br><br>\n**Scopes:** `h323:write:admin`<br>\n <br>",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceDelete",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "description": "The device ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "You do not have the permission to delete this device."
          },
          "204": {
            "description": "H.323/SIP device deleted."
          },
          "300": {
            "description": "H.323 device does not exist: {deviceId}."
          },
          "404": {
            "description": "H.323/SIP device not found."
          }
        }
      }
    },
    "/tracking_fields": {
      "get": {
        "summary": "List Tracking Fields",
        "description": "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to list all the tracking fields on your Zoom account.<br><br>\n**Scopes:** `trackingfield:read:admin`<br>\n <br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "tags": [
          "TrackingField"
        ],
        "parameters": [],
        "operationId": "trackingfieldList",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned.",
            "schema": {
              "type": "object",
              "title": "Tracking Field List",
              "description": "Tracking Field List",
              "allOf": [
                {
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Array of Tracking Fields",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of Tracking Field"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Tracking Field",
                            "description": "Tracking Field",
                            "properties": {
                              "field": {
                                "type": "string",
                                "description": "Label/ Name for the tracking field."
                              },
                              "required": {
                                "type": "boolean",
                                "description": "Tracking Field Required"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Tracking Field Visible"
                              },
                              "recommended_values": {
                                "type": "array",
                                "description": "Array of recommended values",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": "{\n  \"total_records\": 1,\n  \"tracking_fields\": [\n  {\n  \"id\": \"3746374637\",\n  \"field\": \"Meeting Purpose\",\n  \"required\": true,\n  \"visible\": false,\n  \"recommended_values\": [\n    \"Support\",\n    \"Onboarding\",\n    \"Sales\",\n    \"Other\"\n  ]\n}\n}"
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Tracking Field",
        "description": "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to create a new tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n <br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "tags": [
          "TrackingField"
        ],
        "operationId": "trackingfieldCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Tracking Field",
            "schema": {
              "type": "object",
              "title": "Tracking Field",
              "description": "Tracking Field",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Label/ Name for the tracking field."
                },
                "required": {
                  "type": "boolean",
                  "description": "Tracking Field Required"
                },
                "visible": {
                  "type": "boolean",
                  "description": "Tracking Field Visible"
                },
                "recommended_values": {
                  "type": "array",
                  "description": "Array of recommended values",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "field": "Meeting Purpose",
                "required": true,
                "visible": false,
                "recommended_values": [
                  "Support",
                  "Onboarding",
                  "Sales",
                  "Other"
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nTracking Field created",
            "headers": {
              "Content-Location": {
                "description": "Location of created tracking field",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Tracking Field ID"
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Tracking Field",
                  "description": "Tracking Field",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "Label/ Name for the tracking field."
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Tracking Field Required"
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Tracking Field Visible"
                    },
                    "recommended_values": {
                      "type": "array",
                      "description": "Array of recommended values",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/tracking_fields/{fieldId}": {
      "get": {
        "summary": "Get a Tracking Field",
        "description": "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br><br> When scheduling a meeting, the tracking field will be included in the meeting options.<br>Use this API to get information on a tracking field.<br><br>\n**Scopes:** `trackingfield:read:admin`<br>\n <br>\n**Prerequisites:**\n* Business, Education, API or higher plan\n",
        "tags": [
          "TrackingField"
        ],
        "operationId": "trackingfieldGet",
        "parameters": [
          {
            "in": "path",
            "name": "fieldId",
            "description": "The Tracking Field ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nTracking Field object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Tracking Field ID"
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Tracking Field",
                  "description": "Tracking Field",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "Label/ Name for the tracking field."
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Tracking Field Required"
                    },
                    "visible": {
                      "type": "boolean",
                      "description": "Tracking Field Visible"
                    },
                    "recommended_values": {
                      "type": "array",
                      "description": "Array of recommended values",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "fdfgdfgr23gr1",
                "field": "Meeting Purpose",
                "required": true,
                "visible": false,
                "recommended_values": [
                  "Support",
                  "Onboarding",
                  "Sales",
                  "Other"
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Tracking Field",
        "description": "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to update a tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n <br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "tags": [
          "TrackingField"
        ],
        "operationId": "trackingfieldUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "fieldId",
            "description": "The Tracking Field ID",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Tracking Field",
              "description": "Tracking Field",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Label/ Name for the tracking field."
                },
                "required": {
                  "type": "boolean",
                  "description": "Tracking Field Required"
                },
                "visible": {
                  "type": "boolean",
                  "description": "Tracking Field Visible"
                },
                "recommended_values": {
                  "type": "array",
                  "description": "Array of recommended values",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "field": "Meeting Purpose",
                "required": true,
                "visible": false,
                "recommended_values": [
                  "Support",
                  "Onboarding",
                  "Sales",
                  "Other"
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nTracking Field updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Tracking Field",
        "description": "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to delete a tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n <br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "tags": [
          "TrackingField"
        ],
        "operationId": "trackingfieldDelete",
        "parameters": [
          {
            "in": "path",
            "name": "fieldId",
            "description": "The Tracking Field ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nTracking Field deleted"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nTracking Field not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/im/groups": {
      "get": {
        "summary": "List IM Directory Groups",
        "description": "List [IM directory groups](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>\n**Scopes**: `imgroup:read:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nList of groups returned.\n**Error Code:** `200` <br>\nList of IM groups returned.<br>\nOnly available for paid account:{accountId}.",
            "schema": {
              "title": "IM Group List",
              "description": "List of IM Groups.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "groups": {
                      "type": "array",
                      "description": "List of group objects.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "IM group ID."
                              }
                            }
                          },
                          {
                            "description": "IM group object.",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Group object.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Group name."
                                  },
                                  "total_members": {
                                    "type": "integer",
                                    "description": "Total number of members in this group."
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. ",
                                    "default": "normal",
                                    "enum": [
                                      "normal",
                                      "shared",
                                      "restricted"
                                    ],
                                    "x-enum-descriptions": [
                                      "Only members can see the group automatically. Other people can search members in the group.",
                                      "All people in the account can see the group and members automatically",
                                      "Nobody can see the group or search members except the members in the group"
                                    ]
                                  },
                                  "search_by_domain": {
                                    "type": "boolean",
                                    "description": "Members can search for others in the same email domain."
                                  },
                                  "search_by_account": {
                                    "type": "boolean",
                                    "description": "Members can search for others under same account."
                                  },
                                  "search_by_ma_account": {
                                    "type": "boolean",
                                    "description": "Members can search for others under same master account - including all sub accounts."
                                  }
                                }
                              }
                            ],
                            "type": "object"
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_number": "1",
                "page_size": "1",
                "total_records": "1",
                "groups": [
                  {
                    "id": "sjvfkjfew34535",
                    "name": "MyAdminDirectoryGroup",
                    "total_members": "10",
                    "type": "shared",
                    "search_by_domain": "true",
                    "search_by_account": "false",
                    "search_by_ma_account": "false"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        }
      },
      "post": {
        "summary": "Create an IM Directory Group",
        "description": "Create an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\n**Scopes**: `imgroup:write:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name: must be unique to one account.",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "description": "IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group.",
                  "default": "normal",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ],
                  "x-enum-descriptions": [
                    "Only members can see the group automatically. Other people can search members in the group.",
                    "All people in the account can see the group and members automatically",
                    "Nobody can see the group or search members except the members in the group"
                  ]
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search for others in the same email domain."
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same account."
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same master account, including all sub accounts."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "MyAdminDirectoryGroup",
                "type": "shared",
                "search_by_domain": "true",
                "search_by_account": "false",
                "search_by_ma_account": "false"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}."
          },
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nIM Group created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created IM Group",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID."
                },
                "name": {
                  "type": "string",
                  "description": "Group name."
                },
                "total_members": {
                  "type": "integer",
                  "description": "Group member count."
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search for others in the same email domain."
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same account."
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same master account, including all sub accounts."
                }
              }
            },
            "examples": {
              "application/json": {},
              "new": {
                "id": "string",
                "name": "string",
                "total_members": "integer",
                "search_by_domain": "boolean",
                "search_by_account": "boolean",
                "search_by_ma_account": "boolean"
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n**Error Code:** `4132` <br>\nGroup name {groupName} is already in use."
          }
        }
      }
    },
    "/im/groups/{groupId}": {
      "get": {
        "summary": "Retrieve an IM Directory Group",
        "description": "Retrieve an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\nScopes: `imgroup:read:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nIM group object returned.<br>\n**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Group ID."
                    }
                  }
                },
                {
                  "description": "IM group object.",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Group object.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Group name."
                        },
                        "total_members": {
                          "type": "integer",
                          "description": "Total number of members in this group."
                        }
                      }
                    },
                    {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. ",
                          "default": "normal",
                          "enum": [
                            "normal",
                            "shared",
                            "restricted"
                          ],
                          "x-enum-descriptions": [
                            "Only members can see the group automatically. Other people can search members in the group.",
                            "All people in the account can see the group and members automatically",
                            "Nobody can see the group or search members except the members in the group"
                          ]
                        },
                        "search_by_domain": {
                          "type": "boolean",
                          "description": "Members can search for others in the same email domain."
                        },
                        "search_by_account": {
                          "type": "boolean",
                          "description": "Members can search for others under same account."
                        },
                        "search_by_ma_account": {
                          "type": "boolean",
                          "description": "Members can search for others under same master account - including all sub accounts."
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "string",
                "name": "string",
                "total_members": "integer",
                "type": "string",
                "search_by_domain": "boolean",
                "search_by_account": "boolean",
                "search_by_ma_account": "boolean"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** <br>\nIM Group not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        }
      },
      "patch": {
        "summary": "Update an IM Directory Group",
        "description": "Update an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\n**Scopes**: `imgroup:write:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name: must be unique to one account.",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "description": "IM Group types:<br>`normal` - Only group members can automatically see others in their group. Other people can search for members in the group.<br>`shared` - Everyone under the account can see the group and members automatically.<br>`restricted` - Nobody can see the group or search for members except for the members in the group.",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ],
                  "x-enum-descriptions": [
                    "Only members can see the group automatically. Other people can search members in the group.",
                    "All people in the account can see the group and members automatically",
                    "Nobody can see the group or search members except the members in the group"
                  ]
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search for others in the same email domain."
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same account."
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search for others under same master account, including all sub accounts."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "string",
                "type": "string",
                "search_by_domain": "boolean",
                "search_by_account": "boolean",
                "search_by_ma_account": "boolean"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group updated.",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130`<br>\nGroup does not exist:{groupId}."
          }
        }
      },
      "delete": {
        "summary": "Delete an IM Directory Group",
        "description": "Delete an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>\nScopes: `imgroup:write:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupDelete",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group deleted.\n\n",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        }
      }
    },
    "/im/groups/{groupId}/members": {
      "get": {
        "summary": "List IM Directory Group Members",
        "description": "List the members of an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>\n**Scope:** `imgroup:read:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembers",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nIM group member list returned.<br>\n**Error Code:** `200` <br> \nOnly available for paid account:{accountId}.",
            "schema": {
              "title": "Group Member List",
              "description": "List of Group Members.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "members": {
                      "type": "array",
                      "description": "List of Group member objects.",
                      "items": {
                        "type": "object",
                        "description": "Group member object.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User ID."
                          },
                          "email": {
                            "type": "string",
                            "description": "User email."
                          },
                          "first_name": {
                            "type": "string",
                            "description": "User first name."
                          },
                          "last_name": {
                            "type": "string",
                            "description": "User last name."
                          },
                          "type": {
                            "type": "integer",
                            "description": "User type.<br>\n`1` - Basic<br> `2` - Licensed<br> \n`3` - On-prem"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_number": "1",
                "page_size": "1",
                "total_records": "1",
                "members": [
                  {
                    "id": "dlfjdhq3430394",
                    "email": "fidsgkrdjksagf@someemail.dsfjksdh",
                    "first_name": "Rahul",
                    "last_name": "Ghimire",
                    "type": "2"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add IM Directory Group Members",
        "description": "Add members to an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>\n**Scope:** `imgroup:write:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembersCreate",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "description": "List of IM group members.",
                  "maximum": 10,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User email. If the user ID is given then ignore the user email. "
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": "{\n  \"members\": [\n    {\n      \"id\": \"dlfjdhq3430jh394\",\n      \"email\": \"fidsgkrcbdjksagf@someemail.dsfjksdh\",\n    }\n  ]\n}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}."
          },
          "201": {
            "description": "**HTTP Status Code:** `201` <br>\nMember added.",
            "schema": {
              "properties": {
                "ids": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "string",
                "added_at": "string [date-time]"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/im/groups/{groupId}/members/{memberId}": {
      "delete": {
        "summary": "Delete an IM Directory Group Member",
        "description": "Delete a member from an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>\nScopes: `imgroup:write:admin`<br>\n ",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembersDelete",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "The member ID.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nOnly available for paid account, {accountId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nIM group member deleted."
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing field: name.<br>\nCan not delete account from default group:{groupId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nIM Group or IM Group member not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/im/chat/sessions": {
      "get": {
        "summary": "Get IM Chat Sessions",
        "description": "Retrieve IM Chat sessions for a specified period of time. <aside>Note: This API only supports Oauth2.</aside><br>\n\n \n**Scopes:** `imchat:read, imchat:read:admin`<br> ",
        "tags": [
          "IM Chat"
        ],
        "operationId": "imChatSessions",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nArchived IM chat sessions returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The amount of records returns within a single API call. ",
                      "default": 30,
                      "maximum": 300
                    },
                    "next_page_token": {
                      "description": "The Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "sessions": {
                      "type": "array",
                      "description": "Array of session objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "description": "IM chat session ID."
                          },
                          "type": {
                            "type": "string",
                            "description": "IM chat session type.",
                            "enum": [
                              "Group",
                              "1:1"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "last_message_sent_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last message sent time."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-08-31",
                "to": "2019-09-12",
                "page_size": 30,
                "next_page_token": "vsdfjesfdhs",
                "sessions": [
                  {
                    "session_id": "dkhfgjd",
                    "type": "Group",
                    "name": "API overview meeting",
                    "last_message_sent_time": "2016-12-16T05:04:08.470Z"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nThe next page token is invalid or expired. <br>\nReport requested exceeds 6 month limit."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/im/chat/sessions/{sessionId}": {
      "get": {
        "summary": "Retrieve IM Chat Messages",
        "description": "Retrieve IM chat messages for a specified period of time. <aside>Note: This API only supports oauth2.</aside><br><br>\n\n**Scopes:** `imchat:read`<br>\n <br>\n\n",
        "tags": [
          "IM Chat"
        ],
        "operationId": "imChatMessages",
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "description": "IM chat session ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nArchived IM chat messages returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "session_id": {
                      "type": "string",
                      "description": "IM chat session ID."
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The amount of records returns within a single API call. ",
                      "default": 30,
                      "maximum": 300
                    },
                    "next_page_token": {
                      "description": "The Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "description": "Array of session objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "IM chat message content."
                          },
                          "sender": {
                            "type": "string",
                            "description": "IM chat message sender."
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "IM chat message sent time."
                          },
                          "action": {
                            "type": "string",
                            "description": "IM chat message action."
                          },
                          "action_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Action time."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "session_id": "string",
                "from": "string [date]",
                "to": "string [date]",
                "page_size": "integer",
                "next_page_token": "string",
                "messages": [
                  {
                    "message": "string",
                    "sender": "string",
                    "date_time": "string [date-time]",
                    "action": "string",
                    "action_time": "string [date-time]"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:**`300` <br>\nThe next page token is either invalid or has expired.<br>\nReport requested exceeds 6 month limit."
          }
        },
        "deprecated": true
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "summary": "List Meetings",
        "description": "List all the meetings that were scheduled for a user (meeting host).<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n ",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`scheduled` - All the scheduled meetings.<br>`live` - All the live meetings.<br>`upcoming` - All the upcoming meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "scheduled",
              "live",
              "upcoming"
            ],
            "x-enum-descriptions": [
              "all the scheduled meetings",
              "all the live meetings",
              "all the upcoming meetings"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of meeting objects returned.",
            "schema": {
              "title": "Group List",
              "description": "List of meetings.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "List of Meeting objects.",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "description": "Unique Meeting ID. Each meeting instance will generate its own Meeting UUID."
                              },
                              "id": {
                                "type": "string",
                                "description": "Meeting ID - also known as the meeting number."
                              },
                              "host_id": {
                                "type": "string",
                                "description": "ID of the user who is set as the host of the meeting."
                              },
                              "topic": {
                                "type": "string",
                                "description": "Meeting topic."
                              },
                              "type": {
                                "type": "integer",
                                "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  8
                                ],
                                "x-enum-descriptions": [
                                  "Instant Meeting",
                                  "Scheduled Meeting",
                                  "Recurring Meeting with no fixed time",
                                  "Recurring Meeting with fixed time"
                                ]
                              },
                              "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Meeting start time."
                              },
                              "duration": {
                                "type": "integer",
                                "description": "Meeting duration."
                              },
                              "timezone": {
                                "type": "string",
                                "description": "Timezone to format the meeting start time. "
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time of creation. "
                              },
                              "join_url": {
                                "type": "string",
                                "description": "Join URL."
                              },
                              "agenda": {
                                "type": "string",
                                "description": "Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting)."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 4,
                "meetings": [
                  {
                    "uuid": "mlghmfghlBBB",
                    "id": 11111,
                    "host_id": "abckjdfhsdkjf",
                    "topic": "Zoom Meeting",
                    "type": 2,
                    "start_time": "2019-08-16T02:00:00Z",
                    "duration": 30,
                    "timezone": "America/Los_Angeles",
                    "created_at": "2019-08-16T01:13:12Z",
                    "join_url": "https://zoom.us/j/11111"
                  },
                  {
                    "uuid": "J8H8eavweUcd321==",
                    "id": 2222,
                    "host_id": "abckjdfhsdkjf",
                    "topic": "TestMeeting",
                    "type": 2,
                    "start_time": "2019-08-16T19:00:00Z",
                    "duration": 60,
                    "timezone": "America/Los_Angeles",
                    "agenda": "RegistrationDeniedTest",
                    "created_at": "2019-08-16T18:30:46Z",
                    "join_url": "https://zoom.us/j/2222"
                  },
                  {
                    "uuid": "SGVTAcfSfCbbbb",
                    "id": 33333,
                    "host_id": "abckjdfhsdkjf",
                    "topic": "My Meeting",
                    "type": 2,
                    "start_time": "2019-08-16T22:00:00Z",
                    "duration": 60,
                    "timezone": "America/Los_Angeles",
                    "created_at": "2019-08-16T21:15:56Z",
                    "join_url": "https://zoom.us/j/33333"
                  },
                  {
                    "uuid": "64123avdfsMVA==",
                    "id": 44444,
                    "host_id": "abckjdfhsdkjf",
                    "topic": "MyTestPollMeeting",
                    "type": 2,
                    "start_time": "2019-08-29T18:00:00Z",
                    "duration": 60,
                    "timezone": "America/Los_Angeles",
                    "created_at": "2019-08-29T17:32:33Z",
                    "join_url": "https://zoom.us/j/4444"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Meeting",
        "description": "Create a meeting for a user. <br>This API has a daily rate limit of 100 requests per day. Therefore, only 100 **Create a Meeting** API requests are permitted within a 24 hour window for a user.<br>\n\n<aside>The <code>start_url</code> of a meeting is a URL using which a host or an alternative host can start a meeting. The expiration time for the <code>start_url</code> field is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, the recommended way to retrieve the updated value for the <code>start_url</code> field programmatically (after expiry) is by calling the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and referring to the value of the <code>start_url</code> field in the response.</aside><br><br>\nScopes: `meeting:write:admin` `meeting:write`",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingCreate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting object.",
            "schema": {
              "type": "object",
              "description": "Base object for meeting.",
              "properties": {
                "topic": {
                  "type": "string",
                  "description": "Meeting topic."
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
                  "default": 2,
                  "enum": [
                    1,
                    2,
                    3,
                    8
                  ],
                  "x-enum-descriptions": [
                    "Instant Meeting",
                    "Scheduled Meeting",
                    "Recurring Meeting with no fixed time",
                    "Recurring Meeting with fixed time"
                  ]
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. Example: \"2020-03-31T12:02:00Z\"\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration (minutes). Used for scheduled meetings only."
                },
                "timezone": {
                  "type": "string",
                  "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
                },
                "password": {
                  "type": "string",
                  "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
                  "maxLength": 10
                },
                "agenda": {
                  "type": "string",
                  "description": "Meeting description.",
                  "maxLength": 2000
                },
                "tracking_fields": {
                  "type": "array",
                  "description": "Tracking fields",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "Tracking fields type"
                      },
                      "value": {
                        "type": "string",
                        "description": "Tracking fields value"
                      }
                    },
                    "required": [
                      "field"
                    ]
                  }
                },
                "recurrence": {
                  "type": "object",
                  "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
                  "properties": {
                    "type": {
                      "type": "integer",
                      "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Daily",
                        "Weekly",
                        "Monthly"
                      ]
                    },
                    "repeat_interval": {
                      "type": "integer",
                      "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                    },
                    "weekly_days": {
                      "type": "string",
                      "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "monthly_day": {
                      "type": "integer",
                      "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                    },
                    "monthly_week": {
                      "type": "integer",
                      "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                      "enum": [
                        -1,
                        1,
                        2,
                        3,
                        4
                      ],
                      "x-enum-descriptions": [
                        "Last week",
                        "First week",
                        "Second week",
                        "Third week",
                        "Fourth week"
                      ]
                    },
                    "monthly_week_day": {
                      "type": "integer",
                      "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "x-enum-descriptions": [
                        "Sunday",
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday"
                      ]
                    },
                    "end_times": {
                      "type": "integer",
                      "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                      "default": 1,
                      "maximum": 50
                    },
                    "end_date_time": {
                      "type": "string",
                      "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "settings": {
                  "type": "object",
                  "description": "Meeting settings.",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start video when the host joins the meeting."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start video when participants join the meeting."
                    },
                    "cn_meeting": {
                      "type": "boolean",
                      "description": "Host meeting in China.",
                      "default": false
                    },
                    "in_meeting": {
                      "type": "boolean",
                      "description": "Host meeting in India.",
                      "default": false
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "default": false
                    },
                    "mute_upon_entry": {
                      "type": "boolean",
                      "description": "Mute participants upon entry.",
                      "default": false
                    },
                    "watermark": {
                      "type": "boolean",
                      "description": "Add watermark when viewing a shared screen.",
                      "default": false
                    },
                    "use_pmi": {
                      "type": "boolean",
                      "description": "Use Personal Meeting ID instead of an automatically generated meeting ID. It can only be used for scheduled meetings, instant meetings and recurring meetings with no fixed time.",
                      "default": false
                    },
                    "approval_type": {
                      "type": "integer",
                      "default": 2,
                      "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "x-enum-descriptions": [
                        "Automatically Approve",
                        "Manually Approve",
                        "No Registration Required"
                      ]
                    },
                    "registration_type": {
                      "type": "integer",
                      "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                      "default": 1,
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Attendees register once and can attend any of the occurrences",
                        "Attendees need to register for each occurrence to attend",
                        "Attendees register once and can choose one or more occurrences to attend"
                      ]
                    },
                    "audio": {
                      "type": "string",
                      "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                      "default": "both",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ],
                      "x-enum-descriptions": [
                        "Both Telephony and VoIP",
                        "Telephony only",
                        "VoIP only"
                      ]
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                      "default": "none",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ],
                      "x-enum-descriptions": [
                        "Record to local device",
                        "Record to cloud",
                        "No Recording"
                      ]
                    },
                    "enforce_login": {
                      "type": "boolean",
                      "description": "Only signed in users can join this meeting."
                    },
                    "enforce_login_domains": {
                      "type": "string",
                      "description": "Only signed in users with specified domains can join meetings."
                    },
                    "alternative_hosts": {
                      "type": "string",
                      "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                    },
                    "close_registration": {
                      "type": "boolean",
                      "description": "Close registration after event date",
                      "default": false
                    },
                    "waiting_room": {
                      "type": "boolean",
                      "description": "Enable waiting room",
                      "default": false
                    },
                    "global_dial_in_countries": {
                      "type": "array",
                      "description": "List of global dial-in countries",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "Contact name for registration"
                    },
                    "contact_email": {
                      "type": "string",
                      "description": "Contact email for registration"
                    },
                    "registrants_email_notification": {
                      "type": "boolean",
                      "description": "registrants email notification"
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`."
                    },
                    "authentication_option": {
                      "type": "string",
                      "description": "Specify the authentication type for users to join a meeting with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)."
                    },
                    "authentication_domains": {
                      "type": "string",
                      "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains."
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "topic": "string",
                "type": "integer",
                "start_time": "string [date-time]",
                "duration": "integer",
                "timezone": "string",
                "password": "string",
                "agenda": "string",
                "recurrence": {
                  "type": "integer",
                  "repeat_interval": "integer",
                  "weekly_days": "string",
                  "monthly_day": "integer",
                  "monthly_week": "integer",
                  "monthly_week_day": "integer",
                  "end_times": "integer",
                  "end_date_time": "string [date-time]"
                },
                "settings": {
                  "host_video": "boolean",
                  "participant_video": "boolean",
                  "cn_meeting": "boolean",
                  "in_meeting": "boolean",
                  "join_before_host": "boolean",
                  "mute_upon_entry": "boolean",
                  "watermark": "boolean",
                  "use_pmi": "boolean",
                  "approval_type": "integer",
                  "registration_type": "integer",
                  "audio": "string",
                  "auto_recording": "string",
                  "enforce_login": "boolean",
                  "enforce_login_domains": "string",
                  "alternative_hosts": "string",
                  "global_dial_in_countries": [
                    "string"
                  ],
                  "registrants_email_notification": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nMeeting created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created Meeting",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Meeting ID: Unique identifier of the meeting, also known as the meeting number.",
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Meeting object",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Meeting topic"
                    },
                    "type": {
                      "type": "integer",
                      "description": "Meeting Type",
                      "default": 2,
                      "enum": [
                        1,
                        2,
                        3,
                        8
                      ],
                      "x-enum-descriptions": [
                        "Instant Meeting",
                        "Scheduled Meeting",
                        "Recurring Meeting with no fixed time",
                        "Recurring Meeting with fixed time"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Meeting start date-time in UTC/GMT. Example: \"2020-03-31T12:02:00Z\""
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Meeting duration"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone to format start_time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time at which this meeting was created."
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Agenda"
                    },
                    "start_url": {
                      "type": "string",
                      "description": "URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
                    },
                    "join_url": {
                      "type": "string",
                      "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting."
                    },
                    "password": {
                      "type": "string",
                      "description": "Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`"
                    },
                    "h323_password": {
                      "type": "string",
                      "description": "H.323/SIP room system password"
                    },
                    "pmi": {
                      "type": "integer",
                      "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "format": "int64"
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        }
                      }
                    },
                    "occurrences": {
                      "type": "array",
                      "description": "Array of occurrence objects.",
                      "items": {
                        "type": "object",
                        "description": "Occurence object. This object is only returned for Recurring Webinars.",
                        "properties": {
                          "occurrence_id": {
                            "type": "string",
                            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration."
                          },
                          "status": {
                            "type": "string",
                            "description": "Occurrence status."
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "description": "Meeting settings.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start video when the host joins the meeting."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start video when participants join the meeting."
                        },
                        "cn_meeting": {
                          "type": "boolean",
                          "description": "Host meeting in China.",
                          "default": false
                        },
                        "in_meeting": {
                          "type": "boolean",
                          "description": "Host meeting in India.",
                          "default": false
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                          "default": false
                        },
                        "mute_upon_entry": {
                          "type": "boolean",
                          "description": "Mute participants upon entry.",
                          "default": false
                        },
                        "watermark": {
                          "type": "boolean",
                          "description": "Add watermark when viewing a shared screen.",
                          "default": false
                        },
                        "use_pmi": {
                          "type": "boolean",
                          "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                          "default": false
                        },
                        "approval_type": {
                          "type": "integer",
                          "default": 2,
                          "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-enum-descriptions": [
                            "Automatically Approve",
                            "Manually Approve",
                            "No Registration Required"
                          ]
                        },
                        "registration_type": {
                          "type": "integer",
                          "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                          "default": 1,
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Attendees register once and can attend any of the occurrences",
                            "Attendees need to register for each occurrence to attend",
                            "Attendees register once and can choose one or more occurrences to attend"
                          ]
                        },
                        "audio": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip"
                          ],
                          "x-enum-descriptions": [
                            "Both Telephony and VoIP",
                            "Telephony only",
                            "VoIP only"
                          ]
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "default": "none",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record to local device",
                            "Record to cloud",
                            "No Recording"
                          ]
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only signed in users can join this meeting."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed in users with specified domains can join meetings."
                        },
                        "alternative_hosts": {
                          "type": "string",
                          "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                        },
                        "close_registration": {
                          "type": "boolean",
                          "description": "Close registration after event date",
                          "default": false
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "description": "Enable waiting room",
                          "default": false
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "List of global dial-in countries",
                          "items": {
                            "type": "string"
                          }
                        },
                        "global_dial_in_numbers": {
                          "type": "array",
                          "description": "Global Dial-in Countries/Regions",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string",
                                "description": "Country code. For example, BR."
                              },
                              "country_name": {
                                "type": "string",
                                "description": "Full name of country. For example, Brazil."
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the number, if any. For example, Chicago."
                              },
                              "number": {
                                "type": "string",
                                "description": "Phone number. For example, +1 2332357613."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of number. ",
                                "enum": [
                                  "toll",
                                  "tollfree"
                                ]
                              }
                            }
                          }
                        },
                        "contact_name": {
                          "type": "string",
                          "description": "Contact name for registration"
                        },
                        "contact_email": {
                          "type": "string",
                          "description": "Contact email for registration"
                        },
                        "registrants_confirmation_email": {
                          "type": "boolean",
                          "description": "Send confirmation email to registrants"
                        },
                        "registrants_email_notification": {
                          "type": "boolean",
                          "description": "registrants email notification"
                        },
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "string",
                          "description": "Meeting authentication option id"
                        },
                        "authentication_domains": {
                          "type": "string",
                          "description": "Meeting authentication_domains"
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                        },
                        "weekly_days": {
                          "type": "string",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "created_at": "2019-09-05T16:54:14Z",
                "duration": 60,
                "host_id": "AbcDefGHi",
                "id": 1100000,
                "join_url": "https://zoom.us/j/1100000",
                "settings": {
                  "alternative_hosts": "",
                  "approval_type": 2,
                  "audio": "both",
                  "auto_recording": "local",
                  "close_registration": false,
                  "cn_meeting": false,
                  "enforce_login": false,
                  "enforce_login_domains": "",
                  "global_dial_in_countries": [
                    "US"
                  ],
                  "global_dial_in_numbers": [
                    {
                      "city": "New York",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 1000200200",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 6699006833",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 408000000",
                      "type": "toll"
                    }
                  ],
                  "host_video": false,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": false,
                  "participant_video": false,
                  "registrants_confirmation_email": true,
                  "use_pmi": false,
                  "waiting_room": false,
                  "watermark": false,
                  "registrants_email_notification": true
                },
                "start_time": "2019-08-30T22:00:00Z",
                "start_url": "https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw",
                "status": "waiting",
                "timezone": "America/New_York",
                "topic": "API Test",
                "type": 2,
                "uuid": "ng1MzyWNQaObxcf3+Gfm6A=="
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n"
          }
        }
      }
    },
    "/meetings/{meetingId}": {
      "get": {
        "summary": "Get a Meeting",
        "description": "Retrieve the details of a meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meeting",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "Meeting occurrence id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting object returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Unique meeting ID. Each meeting instance will generate its own Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.\n"
                    },
                    "id": {
                      "description": "Meeting ID: also known as the meeting number.",
                      "type": "integer"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user who is set as host of meeting."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Meeting object.",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Meeting topic."
                    },
                    "type": {
                      "type": "integer",
                      "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
                      "default": 2,
                      "enum": [
                        1,
                        2,
                        3,
                        8
                      ],
                      "x-enum-descriptions": [
                        "Instant Meeting",
                        "Scheduled Meeting",
                        "Recurring Meeting with no fixed time",
                        "Recurring Meeting with fixed time"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Meeting status",
                      "enum": [
                        "waiting",
                        "started",
                        "finished"
                      ],
                      "x-enum-descriptions": [
                        "Waiting",
                        "Started",
                        "Finished"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Meeting start time in GMT/UTC.\n"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Meeting duration."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone to format the meeting start time on the ."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of creation. "
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Agenda."
                    },
                    "start_url": {
                      "type": "string",
                      "description": "<br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
                    },
                    "join_url": {
                      "type": "string",
                      "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting."
                    },
                    "password": {
                      "type": "string",
                      "description": "Meeting password.",
                      "minimum": 8
                    },
                    "h323_password": {
                      "type": "string",
                      "description": "H.323/SIP room system password."
                    },
                    "encrypted_password": {
                      "type": "string",
                      "description": "Encrypted password for third party endpoints (H323/SIP)."
                    },
                    "pmi": {
                      "type": "integer",
                      "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "format": "int64"
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        }
                      }
                    },
                    "occurrences": {
                      "type": "array",
                      "description": "Array of occurrence objects.",
                      "items": {
                        "type": "object",
                        "description": "Occurence object. This object is only returned for Recurring Webinars.",
                        "properties": {
                          "occurrence_id": {
                            "type": "string",
                            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration."
                          },
                          "status": {
                            "type": "string",
                            "description": "Occurrence status."
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "description": "Meeting settings.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start video when the host joins the meeting."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start video when participants join the meeting."
                        },
                        "cn_meeting": {
                          "type": "boolean",
                          "description": "Host meeting in China.",
                          "default": false
                        },
                        "in_meeting": {
                          "type": "boolean",
                          "description": "Host meeting in India.",
                          "default": false
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                          "default": false
                        },
                        "mute_upon_entry": {
                          "type": "boolean",
                          "description": "Mute participants upon entry.",
                          "default": false
                        },
                        "watermark": {
                          "type": "boolean",
                          "description": "Add watermark when viewing a shared screen.",
                          "default": false
                        },
                        "use_pmi": {
                          "type": "boolean",
                          "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                          "default": false
                        },
                        "approval_type": {
                          "type": "integer",
                          "default": 2,
                          "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-enum-descriptions": [
                            "Automatically Approve",
                            "Manually Approve",
                            "No Registration Required"
                          ]
                        },
                        "registration_type": {
                          "type": "integer",
                          "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                          "default": 1,
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Attendees register once and can attend any of the occurrences",
                            "Attendees need to register for each occurrence to attend",
                            "Attendees register once and can choose one or more occurrences to attend"
                          ]
                        },
                        "audio": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip"
                          ],
                          "x-enum-descriptions": [
                            "Both Telephony and VoIP",
                            "Telephony only",
                            "VoIP only"
                          ]
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "default": "none",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record to local device",
                            "Record to cloud",
                            "No Recording"
                          ]
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only signed in users can join this meeting."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed in users with specified domains can join meetings."
                        },
                        "alternative_hosts": {
                          "type": "string",
                          "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                        },
                        "close_registration": {
                          "type": "boolean",
                          "description": "Close registration after event date",
                          "default": false
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "description": "Enable waiting room",
                          "default": false
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "List of global dial-in countries",
                          "items": {
                            "type": "string"
                          }
                        },
                        "global_dial_in_numbers": {
                          "type": "array",
                          "description": "Global Dial-in Countries/Regions",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string",
                                "description": "Country code. For example, BR."
                              },
                              "country_name": {
                                "type": "string",
                                "description": "Full name of country. For example, Brazil."
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the number, if any. For example, Chicago."
                              },
                              "number": {
                                "type": "string",
                                "description": "Phone number. For example, +1 2332357613."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of number. ",
                                "enum": [
                                  "toll",
                                  "tollfree"
                                ]
                              }
                            }
                          }
                        },
                        "contact_name": {
                          "type": "string",
                          "description": "Contact name for registration"
                        },
                        "contact_email": {
                          "type": "string",
                          "description": "Contact email for registration"
                        },
                        "registrants_confirmation_email": {
                          "type": "boolean",
                          "description": "Send confirmation email to registrants"
                        },
                        "registrants_email_notification": {
                          "type": "boolean",
                          "description": "registrants email notification"
                        },
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "string",
                          "description": "Meeting authentication option id"
                        },
                        "authentication_domains": {
                          "type": "string",
                          "description": "Meeting authentication_domains"
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                        },
                        "weekly_days": {
                          "type": "string",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "agenda": "API overview",
                "created_at": "2019-09-09T15:54:24Z",
                "duration": 60,
                "host_id": "ABcdofjdogh11111",
                "id": 1234555466,
                "join_url": "https://zoom.us/j/1234555466",
                "settings": {
                  "alternative_hosts": "kjxckfjxgfgjdfk@dkjfhdskhf.com",
                  "approval_type": 2,
                  "audio": "both",
                  "auto_recording": "local",
                  "close_registration": false,
                  "cn_meeting": false,
                  "enforce_login": false,
                  "enforce_login_domains": "mycompanydomain.com",
                  "global_dial_in_countries": [
                    "US"
                  ],
                  "global_dial_in_numbers": [
                    {
                      "city": "New York",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 000011100",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 6699006833",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 221122112211",
                      "type": "toll"
                    }
                  ],
                  "host_video": false,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": false,
                  "participant_video": false,
                  "registrants_confirmation_email": true,
                  "use_pmi": false,
                  "waiting_room": false,
                  "watermark": false,
                  "registrants_email_notification": true
                },
                "start_time": "2019-08-30T22:00:00Z",
                "start_url": "https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ",
                "status": "waiting",
                "timezone": "America/New_York",
                "topic": "My API Test",
                "type": 2,
                "uuid": "iAABBBcccdddd7A=="
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Meeting",
        "description": "Update the details of a meeting.<br>This API has a rate limit of 100 requests per day. Therefore, a meeting can only be updated for a maximum of 100 times within a 24 hour window.<br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "schedule_for": {
                      "type": "string",
                      "description": "Email or userId if you want to schedule meeting for another user."
                    }
                  }
                },
                {
                  "description": "Meeting object",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Base object for sessions.",
                      "properties": {
                        "topic": {
                          "type": "string",
                          "description": "Meeting topic."
                        },
                        "type": {
                          "type": "integer",
                          "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
                          "default": 2,
                          "enum": [
                            1,
                            2,
                            3,
                            8
                          ],
                          "x-enum-descriptions": [
                            "Instant Meeting",
                            "Scheduled Meeting",
                            "Recurring Meeting with no fixed time",
                            "Recurring Meeting with fixed time"
                          ]
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time."
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Meeting duration (minutes). Used for scheduled meetings only."
                        },
                        "timezone": {
                          "type": "string",
                          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
                        },
                        "password": {
                          "type": "string",
                          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
                          "maxLength": 10
                        },
                        "agenda": {
                          "type": "string",
                          "description": "Meeting description.",
                          "maxLength": 2000
                        },
                        "tracking_fields": {
                          "type": "array",
                          "description": "Tracking fields",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "description": "Tracking fields type"
                              },
                              "value": {
                                "type": "string",
                                "description": "Tracking fields value"
                              }
                            }
                          }
                        },
                        "recurrence": {
                          "type": "object",
                          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
                          "properties": {
                            "type": {
                              "type": "integer",
                              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                              "enum": [
                                1,
                                2,
                                3
                              ],
                              "x-enum-descriptions": [
                                "Daily",
                                "Weekly",
                                "Monthly"
                              ]
                            },
                            "repeat_interval": {
                              "type": "integer",
                              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                            },
                            "weekly_days": {
                              "type": "string",
                              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                              "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                              ]
                            },
                            "monthly_day": {
                              "type": "integer",
                              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                            },
                            "monthly_week": {
                              "type": "integer",
                              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                              "enum": [
                                -1,
                                1,
                                2,
                                3,
                                4
                              ],
                              "x-enum-descriptions": [
                                "Last week",
                                "First week",
                                "Second week",
                                "Third week",
                                "Fourth week"
                              ]
                            },
                            "monthly_week_day": {
                              "type": "integer",
                              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                              ],
                              "x-enum-descriptions": [
                                "Sunday",
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday"
                              ]
                            },
                            "end_times": {
                              "type": "integer",
                              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                              "default": 1,
                              "maximum": 50
                            },
                            "end_date_time": {
                              "type": "string",
                              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "settings": {
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Meeting settings.",
                              "properties": {
                                "host_video": {
                                  "type": "boolean",
                                  "description": "Start video when the host joins the meeting."
                                },
                                "participant_video": {
                                  "type": "boolean",
                                  "description": "Start video when participants join the meeting."
                                },
                                "cn_meeting": {
                                  "type": "boolean",
                                  "description": "Host meeting in China.",
                                  "default": false
                                },
                                "in_meeting": {
                                  "type": "boolean",
                                  "description": "Host meeting in India.",
                                  "default": false
                                },
                                "join_before_host": {
                                  "type": "boolean",
                                  "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                                  "default": false
                                },
                                "mute_upon_entry": {
                                  "type": "boolean",
                                  "description": "Mute participants upon entry.",
                                  "default": false
                                },
                                "watermark": {
                                  "type": "boolean",
                                  "description": "Add watermark when viewing a shared screen.",
                                  "default": false
                                },
                                "use_pmi": {
                                  "type": "boolean",
                                  "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                                  "default": false
                                },
                                "approval_type": {
                                  "type": "integer",
                                  "default": 2,
                                  "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "x-enum-descriptions": [
                                    "Automatically Approve",
                                    "Manually Approve",
                                    "No Registration Required"
                                  ]
                                },
                                "registration_type": {
                                  "type": "integer",
                                  "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                                  "default": 1,
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "x-enum-descriptions": [
                                    "Attendees register once and can attend any of the occurrences",
                                    "Attendees need to register for each occurrence to attend",
                                    "Attendees register once and can choose one or more occurrences to attend"
                                  ]
                                },
                                "audio": {
                                  "type": "string",
                                  "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                                  "default": "both",
                                  "enum": [
                                    "both",
                                    "telephony",
                                    "voip"
                                  ],
                                  "x-enum-descriptions": [
                                    "Both Telephony and VoIP",
                                    "Telephony only",
                                    "VoIP only"
                                  ]
                                },
                                "auto_recording": {
                                  "type": "string",
                                  "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                                  "default": "none",
                                  "enum": [
                                    "local",
                                    "cloud",
                                    "none"
                                  ],
                                  "x-enum-descriptions": [
                                    "Record to local device",
                                    "Record to cloud",
                                    "No Recording"
                                  ]
                                },
                                "enforce_login": {
                                  "type": "boolean",
                                  "description": "Only signed in users can join this meeting."
                                },
                                "enforce_login_domains": {
                                  "type": "string",
                                  "description": "Only signed in users with specified domains can join meetings."
                                },
                                "alternative_hosts": {
                                  "type": "string",
                                  "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                                },
                                "close_registration": {
                                  "type": "boolean",
                                  "description": "Close registration after event date",
                                  "default": false
                                },
                                "waiting_room": {
                                  "type": "boolean",
                                  "description": "Enable waiting room",
                                  "default": false
                                },
                                "global_dial_in_countries": {
                                  "type": "array",
                                  "description": "List of global dial-in countries",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "global_dial_in_numbers": {
                                  "type": "array",
                                  "description": "Global Dial-in Countries/Regions",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "country": {
                                        "type": "string",
                                        "description": "Country code. For example, BR."
                                      },
                                      "country_name": {
                                        "type": "string",
                                        "description": "Full name of country. For example, Brazil."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "City of the number, if any. For example, Chicago."
                                      },
                                      "number": {
                                        "type": "string",
                                        "description": "Phone number. For example, +1 2332357613."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type of number. ",
                                        "enum": [
                                          "toll",
                                          "tollfree"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "contact_name": {
                                  "type": "string",
                                  "description": "Contact name for registration"
                                },
                                "contact_email": {
                                  "type": "string",
                                  "description": "Contact email for registration"
                                },
                                "registrants_confirmation_email": {
                                  "type": "boolean",
                                  "description": "Send confirmation email to registrants"
                                },
                                "registrants_email_notification": {
                                  "type": "boolean",
                                  "description": "registrants email notification"
                                },
                                "meeting_authentication": {
                                  "type": "boolean",
                                  "description": "Only authenticated users can join meetings"
                                },
                                "authentication_option": {
                                  "type": "string",
                                  "description": "Meeting authentication option id"
                                },
                                "authentication_domains": {
                                  "type": "string",
                                  "description": "Meeting authentication_domains"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "registrants_confirmation_email": {
                                  "type": "boolean",
                                  "description": "Send confirmation Email to Registrants"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "topic": "Michael API Test",
                "type": 2,
                "start_time": "2019-08-30T18:00:00",
                "duration": 60,
                "timezone": "America/New_York",
                "password": "abcd",
                "agenda": "My Meeting",
                "settings": {
                  "host_video": false,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": false,
                  "participant_video": false,
                  "registrants_confirmation_email": true,
                  "use_pmi": false,
                  "waiting_room": false,
                  "watermark": false,
                  "approval_type": 0,
                  "alternative_hosts": "mycohost@someemail.com",
                  "global_dial_in_countries": [
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 1212121212121212",
                      "type": "toll"
                    }
                  ]
                }
              }
            }
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "type": "string",
            "description": "Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Meeting",
        "description": "Delete a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingDelete",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "schedule_for_reminder",
            "type": "boolean",
            "description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204` <br>\nMeeting deleted."
          },
          "400": {
            "description": "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot delete this meeting since it is in progress.<br>**Error Code**: `3003` <br>You are not the meeting host.<br>\n**Error Code**: `3007` <br>Sorry, you cannot delete this meeting since it has ended.<br>**Error Code**: `3018` <br>\nNot allowed to delete PMI.<br>**Error Code**: `3037` <br>Not allowed to delete PAC.\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/status": {
      "put": {
        "summary": "Update Meeting Status",
        "description": "End a meeting by updating its status.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingStatus",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "end"
                  ],
                  "x-enum-descriptions": [
                    "end a meeting"
                  ],
                  "description": "`end` - End a meeting."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "end"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting: {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/registrants": {
      "get": {
        "summary": "List Meeting Registrants",
        "description": "A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). Use this API to list users that have registered for a meeting.<br><br>\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrants",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
            "type": "string",
            "default": "approved",
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "x-enum-descriptions": [
              "registrants status is pending",
              "registrants status is approved",
              "registrants status is denied"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccessfully listedd meeting registrants.",
            "schema": {
              "title": "Registration List",
              "description": "List of users.",
              "allOf": [
                {
                  "title": "Registration List",
                  "description": "List of users.",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Pagination Object.",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "description": "The number of pages returned for the request made."
                        },
                        "page_number": {
                          "type": "integer",
                          "description": "The page number of the current results.",
                          "default": 1
                        },
                        "page_size": {
                          "type": "integer",
                          "description": "The number of records returned with a single API call.",
                          "default": 30,
                          "maximum": 300
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of all the records available across pages."
                        }
                      }
                    },
                    {
                      "properties": {
                        "registrants": {
                          "type": "array",
                          "description": "List of registrant objects.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Registrant ID."
                                  }
                                }
                              },
                              {
                                "description": " Registrant.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Registrant base object.",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "A valid email address of the registrant."
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "description": "Registrant's first name."
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "description": "Registrant's last name."
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "Registrant's address."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "Registrant's city."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Registrant's country."
                                      },
                                      "zip": {
                                        "type": "string",
                                        "description": "Registrant's Zip/Postal Code."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Registrant's State/Province."
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "Registrant's Phone number."
                                      },
                                      "industry": {
                                        "type": "string",
                                        "description": "Registrant's Industry."
                                      },
                                      "org": {
                                        "type": "string",
                                        "description": "Registrant's Organization."
                                      },
                                      "job_title": {
                                        "type": "string",
                                        "description": "Registrant's job title."
                                      },
                                      "purchasing_time_frame": {
                                        "type": "string",
                                        "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                                      },
                                      "role_in_purchase_process": {
                                        "type": "string",
                                        "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                                      },
                                      "no_of_employees": {
                                        "type": "string",
                                        "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                                      },
                                      "comments": {
                                        "type": "string",
                                        "description": "A field that allows registrants to provide any questions or comments that they might have."
                                      },
                                      "custom_questions": {
                                        "type": "array",
                                        "description": "Custom questions.",
                                        "items": {
                                          "type": "object",
                                          "description": "Custom Question.",
                                          "properties": {
                                            "title": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "email",
                                      "first_name",
                                      "last_name"
                                    ]
                                  }
                                ],
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                                  },
                                  "create_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time at which the registrant registered."
                                  },
                                  "join_url": {
                                    "type": "string",
                                    "format": "string",
                                    "description": "The URL using which an approved registrant can join the webinar."
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 1,
                "total_records": 1,
                "registrants": [
                  {
                    "email": "somemeail@emailprovider.com",
                    "first_name": "Tim",
                    "last_name": "S.",
                    "id": "zjkfsdfjdfhg",
                    "address": "11111 Awesome St",
                    "city": "Paris",
                    "country": "France",
                    "zip": "11000",
                    "state": "Ile-de-France",
                    "phone": "00000",
                    "industry": "Tech",
                    "org": "Growth",
                    "job_title": "Developer",
                    "purchasing_time_frame": "Within a month",
                    "role_in_purchase_process": "Not involved",
                    "no_of_employees": "1-20",
                    "comments": "Love using Zoom APIs",
                    "custom_questions": [
                      {
                        "title": "Did you enjoy the registration process?",
                        "value": "Yes, alot."
                      },
                      {
                        "title": "Would you like to register for our next meeting?",
                        "value": "Absolutely."
                      }
                    ],
                    "status": "approved",
                    "create_time": "2012-04-14T16:55:30.231Z",
                    "join_url": "https://success.zoom.us/j/0000000000000"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add Meeting Registrant",
        "description": "Register a participant for a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantCreate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_ids",
            "type": "string",
            "description": "Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": " Registrant.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Registrant base object.",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "A valid email address of the registrant."
                    },
                    "first_name": {
                      "type": "string",
                      "description": "Registrant's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "description": "Registrant's last name."
                    },
                    "address": {
                      "type": "string",
                      "description": "Registrant's address."
                    },
                    "city": {
                      "type": "string",
                      "description": "Registrant's city."
                    },
                    "country": {
                      "type": "string",
                      "description": "Registrant's country."
                    },
                    "zip": {
                      "type": "string",
                      "description": "Registrant's Zip/Postal Code."
                    },
                    "state": {
                      "type": "string",
                      "description": "Registrant's State/Province."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Registrant's Phone number."
                    },
                    "industry": {
                      "type": "string",
                      "description": "Registrant's Industry."
                    },
                    "org": {
                      "type": "string",
                      "description": "Registrant's Organization."
                    },
                    "job_title": {
                      "type": "string",
                      "description": "Registrant's job title."
                    },
                    "purchasing_time_frame": {
                      "type": "string",
                      "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                    },
                    "role_in_purchase_process": {
                      "type": "string",
                      "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                    },
                    "no_of_employees": {
                      "type": "string",
                      "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                    },
                    "comments": {
                      "type": "string",
                      "description": "A field that allows registrants to provide any questions or comments that they might have."
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Custom questions.",
                      "items": {
                        "type": "object",
                        "description": "Custom Question.",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "email",
                    "first_name",
                    "last_name"
                  ]
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "email": "myemail@mycompany.com",
                "first_name": "Mike",
                "last_name": "Brown",
                "address": "123 Main ST",
                "city": "San Jose",
                "country": "US",
                "zip": "95550",
                "state": "CA",
                "phone": "111-444-4444",
                "industry": "Tech",
                "org": "IT",
                "job_title": "DA",
                "purchasing_time_frame": "More Than 6 Months",
                "role_in_purchase_process": "Influencer",
                "no_of_employees": "1-20",
                "comments": "Excited to host you.",
                "custom_questions": [
                  {
                    "title": "Favorite thing about Zoom",
                    "value": "Meet Happy"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nRegistration created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "join_url": {
                  "type": "string",
                  "description": "Unique URL for this registrant to join the meeting. This URL should only be shared with the registrant for whom the API request was made.\nIf the meeting was [created](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) with manual approval type (`approval_type`: 1), the join URL will not be returned in the response."
                },
                "registrant_id": {
                  "type": "string",
                  "description": "Unique identifier of the registrant."
                },
                "start_time": {
                  "type": "string",
                  "description": "The start time for the meeting."
                },
                "topic": {
                  "type": "string",
                  "description": "Topic of the meeting."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 85746065,
                "join_url": "amet",
                "registrant_id": "a",
                "start_time": "culpa mollit",
                "topic": "reprehenderit ea ut ex Excepteur"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/registrants/status": {
      "put": {
        "summary": "Update Meeting Registrant Status",
        "description": "Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantStatus",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel registrant.<br>`deny` - Deny registrant.",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "approve",
                    "cancel",
                    "deny"
                  ],
                  "x-enum-descriptions": [
                    "Approve registrant",
                    "Cancel registrant",
                    "Deny registrant"
                  ]
                },
                "registrants": {
                  "type": "array",
                  "description": "List of registrants.",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "approve",
                "registrants": [
                  {
                    "id": "173525362",
                    "email": "someemail@companyname.com"
                  },
                  {
                    "id": "156234353456",
                    "email": "anotheremail@companyname.com"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRegistrant status updated."
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_meetings/{meetingUUID}": {
      "get": {
        "summary": "Get Past Meeting Details",
        "description": "Get details on a past meeting. <br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`\n\n> **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.",
        "tags": [
          "Meetings"
        ],
        "operationId": "pastMeetingDetails",
        "parameters": [
          {
            "in": "path",
            "name": "meetingUUID",
            "description": "The meeting UUID. Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting details returned.",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID."
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "host_id": {
                  "type": "integer",
                  "description": "Host ID."
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type."
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic."
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name."
                },
                "user_email": {
                  "type": "string",
                  "description": "User email."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time (GMT)."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time (GMT)."
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration."
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Sum of meeting minutes from all participants in the meeting."
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants."
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "string [uuid]",
                "id": "integer",
                "host_id": "integer",
                "type": "integer",
                "topic": "string",
                "user_name": "string",
                "user_email": "string",
                "start_time": "string [date-time]",
                "end_time": "string [date-time]",
                "duration": "integer",
                "total_minutes": "integer",
                "participants_count": "integer"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nMeeting not found<br><br>\n**Error Code:** `1010`<br>\nUser not exist: {userId}<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting info.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_meetings/{meetingUUID}/participants": {
      "get": {
        "summary": "Get Past Meeting Participants",
        "description": "Retrieve information on participants from a past meeting. <br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`\n\n**Prerequisites:**<br>\n* Paid account on a Pro or higher plan.\n\n<br> <br>  **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "pastMeetingParticipants",
        "parameters": [
          {
            "in": "path",
            "name": "meetingUUID",
            "description": "The meeting UUID. Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of meeting participant objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID."
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Email address of the user. This field will be returned if the user logged into Zoom to join the meeting."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_size": 30,
                "total_records": 1,
                "next_page_token": "aliqua",
                "participants": [
                  {
                    "id": "8b29rgg4bb",
                    "name": "Ram Shekhar",
                    "user_email": "ram.shekhar.123@fkdngfjg.fdghdfgj"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_meetings/{meetingId}/instances": {
      "get": {
        "summary": "List Ended Meeting Instances",
        "description": "Get a list of ended meeting instances<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n ",
        "tags": [
          "Meetings"
        ],
        "operationId": "pastMeetings",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of ended meeting instances returned.",
            "schema": {
              "type": "object",
              "title": "Meeting instances",
              "description": "List of Meetings",
              "allOf": [
                {
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "List of ended meeting instances.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "description": "MeetingUUID"
                              },
                              "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/polls": {
      "get": {
        "summary": "List Meeting Polls",
        "description": "Polls allow the meeting host to survey attendees. Use this API to list [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) of a meeting.<br><br>\n\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n \n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingPolls",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** <br>\nList polls of a Meeting  returned",
            "schema": {
              "type": "object",
              "title": "Poll List",
              "description": "Poll List",
              "allOf": [
                {
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    },
                    "polls": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of Poll"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                                "enum": [
                                  "notstart",
                                  "started",
                                  "ended",
                                  "sharing"
                                ],
                                "x-enum-descriptions": [
                                  "Poll not start",
                                  "Poll started",
                                  "Poll ended",
                                  "Poll is sharing"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Poll",
                            "description": "Poll",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Title for the poll."
                              },
                              "questions": {
                                "type": "array",
                                "description": "Array of Polls",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Question to be asked to the attendees."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                                      "enum": [
                                        "single",
                                        "multiple"
                                      ],
                                      "x-enum-descriptions": [
                                        "single answer",
                                        "multiple answer"
                                      ]
                                    },
                                    "answers": {
                                      "type": "array",
                                      "description": "Answers to the questions",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "total_records": 1,
                "polls": [
                  {
                    "id": "YB33NcABCdg_g1AAAxTQ",
                    "title": "Meeting Usefulness",
                    "status": "notstart",
                    "questions": [
                      {
                        "name": "How useful was this meeting?",
                        "type": "multiple",
                        "answers": [
                          "Extremely useful",
                          "Somewhat useful",
                          "Not useful at all"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**Error Code:** `404`\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Meeting Poll",
        "description": "Polls allow the meeting host to survey attendees. Use this API to create a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>\n\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n \n\n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Polling feature should be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingPollCreate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting poll object",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "title": "Meeting Usefulness",
                "questions": [
                  {
                    "name": "How useful was this meeting?",
                    "type": "multiple",
                    "answers": [
                      "Extremely useful",
                      "Somewhat useful",
                      "Not useful at all"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Meeting Poll",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Meeting Poll ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                      "enum": [
                        "notstart",
                        "started",
                        "ended",
                        "sharing"
                      ],
                      "x-enum-descriptions": [
                        "Poll not start",
                        "Poll started",
                        "Poll ended",
                        "Poll is sharing"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "abcdaaaeefffhhh",
                "status": "notstart",
                "title": "Meeting Usefulness",
                "questions": [
                  {
                    "name": "How useful was this meeting?",
                    "type": "multiple",
                    "answers": [
                      "Extremely useful",
                      "Somewhat useful",
                      "Not useful at all"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/polls/{pollId}": {
      "get": {
        "summary": "Get a Meeting Poll",
        "description": "Polls allow the meeting host to survey attendees. Use this API to get information about a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br><br>\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n \n\n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingPollGet",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nMeeting Poll object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Meeting Poll ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                      "enum": [
                        "notstart",
                        "started",
                        "ended",
                        "sharing"
                      ],
                      "x-enum-descriptions": [
                        "Poll not start",
                        "Poll started",
                        "Poll ended",
                        "Poll is sharing"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "abcdaaaeefffhhh",
                "status": "notstart",
                "title": "Meeting Usefulness",
                "questions": [
                  {
                    "name": "How useful was this meeting?",
                    "type": "multiple",
                    "answers": [
                      "Extremely useful",
                      "Somewhat useful",
                      "Not useful at all"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting Poll not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a Meeting Poll",
        "description": "Polls allow the meeting host to survey attendees. Use this API to update information of a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)<br><br>\n**Scopes**: `meeting:write:admin` `meeting:write`\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingPollUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting Poll",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "title": "Meeting Usefulness",
                "questions": [
                  {
                    "name": "Would you like to use our service again?",
                    "type": "multiple",
                    "answers": [
                      "Definitely",
                      "Probably",
                      "Not going to use it again"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting Poll Updated"
          },
          "404": {
            "description": "**Error Code:** `404` <br>\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Meeting Poll",
        "description": "Polls allow the meeting host to survey attendees. Use this API to delete a meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br>\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n \n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Polling feature should be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingPollDelete",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting Poll deleted"
          },
          "404": {
            "description": "**Error Code:** `404`\nMeeting Poll not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/registrants/questions": {
      "get": {
        "summary": "List Registration Questions ",
        "description": "List registration questions that will be displayed to users while [registering for a meeeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br>\n\n**Scopes:** `meeting:read`, `meeting:read:admin`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantsQuestionsGet",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Meeting Registrant Questions",
                  "description": "Meeting Registrant Questions",
                  "properties": {
                    "questions": {
                      "type": "array",
                      "description": "Array of Registrant Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "description": "Field name of the question.",
                            "enum": [
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "x-enum-descriptions": [
                              "Address",
                              "City",
                              "Country/Region",
                              "Zip/Postal Code",
                              "State/Province",
                              "Phone",
                              "Industry",
                              "Organization",
                              "Job Title",
                              "Purchasing Time Frame",
                              "Role in Purchase Process",
                              "Number of Employees",
                              "Questions & Comments"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Indicates whether or not the displayed fields are required to be filled out by registrants."
                          }
                        }
                      }
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Array of Registrant Custom Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the custom question."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the question being asked.",
                            "enum": [
                              "short",
                              "single"
                            ],
                            "x-enum-descriptions": [
                              "Short Answer",
                              "Single Answer"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Indicates whether or not the custom question is required to be answered by participants or not."
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "address",
                    "required": true
                  }
                ],
                "custom_questions": [
                  {
                    "title": "How long have you been working?",
                    "type": "short",
                    "required": false
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Registration Questions",
        "description": "Update registration questions that will be displayed to users while [registering for a meeeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br><br>\n**Scopes:** `meeting:write`, `meeting:write:admin`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantQuestionUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting Registrant Questions",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Meeting Registrant Questions",
                  "description": "Meeting Registrant Questions",
                  "properties": {
                    "questions": {
                      "type": "array",
                      "description": "Array of Registrant Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "description": "Field name of the question.",
                            "enum": [
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "x-enum-descriptions": [
                              "Address",
                              "City",
                              "Country/Region",
                              "Zip/Postal Code",
                              "State/Province",
                              "Phone",
                              "Industry",
                              "Organization",
                              "Job Title",
                              "Purchasing Time Frame",
                              "Role in Purchase Process",
                              "Number of Employees",
                              "Questions & Comments"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Indicates whether or not the displayed fields are required to be filled out by registrants."
                          }
                        }
                      }
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Array of Registrant Custom Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the custom question."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the question being asked.",
                            "enum": [
                              "short",
                              "single"
                            ],
                            "x-enum-descriptions": [
                              "Short Answer",
                              "Single Answer"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Indicates whether or not the custom question is required to be answered by participants or not."
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "address",
                    "required": true
                  }
                ],
                "custom_questions": [
                  {
                    "title": "How long have you been working?",
                    "type": "short",
                    "required": true
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/recordings": {
      "get": {
        "summary": "List All Recordings",
        "description": "When a user records a meeting by choosing the **Record to the Cloud** option, the video, audio, and chat text are recorded in the Zoom cloud. \n\nUse this API to list all [Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a user.<br><br>\n**Scopes:** `recording:read:admin` `recording:read`<br>\n <br>\n**Prerequisites:** \n* Pro or a higher plan.\n* Cloud Recording must be enabled on the user's account.",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingsList",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "mc",
            "description": "Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.",
            "type": "string",
            "default": "false"
          },
          {
            "in": "query",
            "name": "trash",
            "description": "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "format": "date",
            "description": "Start date in 'yyyy-mm-dd' format. (Within 6 month range)"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "format": "date",
            "description": "End date in 'yyyy-mm-dd' format. (Within 6 month range)"
          },
          {
            "in": "query",
            "type": "string",
            "name": "trash_type",
            "default": "meeting_recordings",
            "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `meeting_recordings`: List all meeting recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. "
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of recording objects returned.",
            "schema": {
              "title": "Recording List",
              "description": "List of recordings.",
              "allOf": [
                {
                  "type": "object",
                  "description": "DateTime Object.",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start Date."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End Date."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "title": "Recording List",
                      "description": "List of recordings.",
                      "items": {
                        "allOf": [
                          {
                            "description": "The recording meeting object.",
                            "allOf": [
                              {
                                "properties": {
                                  "uuid": {
                                    "type": "string",
                                    "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Meeting ID - also known as the meeting number."
                                  },
                                  "account_id": {
                                    "type": "string",
                                    "description": "Unique Identifier of the user account."
                                  },
                                  "host_id": {
                                    "type": "string",
                                    "description": "ID of the user set as host of meeting."
                                  },
                                  "topic": {
                                    "type": "string",
                                    "description": "Meeting topic."
                                  },
                                  "start_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time at which the meeting started."
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "Meeting duration."
                                  },
                                  "total_size": {
                                    "type": "string",
                                    "description": "Total size of the recording."
                                  },
                                  "recording_count": {
                                    "type": "string",
                                    "description": "Number of recording files returned in the response of this API call."
                                  }
                                }
                              },
                              {
                                "title": "Recording file List",
                                "description": "List of recording file.",
                                "allOf": [
                                  {
                                    "properties": {
                                      "recording_files": {
                                        "type": "array",
                                        "title": "Recording file List",
                                        "description": "List of recording file.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Recording file object.",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "description": "The recording file ID. Included in the response of general query."
                                                },
                                                "meeting_id": {
                                                  "type": "string",
                                                  "description": "The meeting ID. "
                                                },
                                                "recording_start": {
                                                  "type": "string",
                                                  "description": "The recording start time."
                                                },
                                                "recording_end": {
                                                  "type": "string",
                                                  "description": "The recording end time. Response in general query."
                                                },
                                                "file_type": {
                                                  "type": "string",
                                                  "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                                                },
                                                "file_size": {
                                                  "type": "number",
                                                  "description": "The recording file size."
                                                },
                                                "play_url": {
                                                  "type": "string",
                                                  "description": "The URL using which a recording file can be played."
                                                },
                                                "download_url": {
                                                  "type": "string",
                                                  "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
                                                },
                                                "status": {
                                                  "type": "string",
                                                  "description": "The recording status."
                                                },
                                                "deleted_time": {
                                                  "type": "string",
                                                  "description": "The time at which recording was deleted. Returned in the response only for trash query."
                                                },
                                                "recording_type": {
                                                  "type": "string",
                                                  "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ],
                                "type": "object"
                              }
                            ],
                            "type": "object"
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "from": "2019-08-15",
                "to": "2019-09-15",
                "page_count": 1,
                "page_size": 30,
                "total_records": 1,
                "next_page_token": "",
                "meetings": [
                  {
                    "uuid": "gkABCDEnCkPuA==",
                    "id": 1000000000000,
                    "account_id": "AbcjxkfhdEEE",
                    "host_id": "z8dfkgABBBBBBBfp8uQ",
                    "topic": "MyTestPollMeeting",
                    "type": 2,
                    "start_time": "2019-08-29T21:54:49Z",
                    "timezone": "America/Los_Angeles",
                    "duration": 1,
                    "total_size": 47383,
                    "recording_count": 1,
                    "share_url": "https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw",
                    "recording_files": [
                      {
                        "id": "589ABBBBB-8718e",
                        "meeting_id": "gkABCDEnCkPuA==",
                        "recording_start": "2019-08-29T21:54:55Z",
                        "recording_end": "2019-08-29T21:55:24Z",
                        "file_type": "M4A",
                        "file_size": 10098,
                        "play_url": "https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl",
                        "download_url": "https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl",
                        "status": "completed",
                        "recording_type": "audio_only"
                      },
                      {
                        "meeting_id": "gkABCDEnCkPuA==",
                        "recording_start": "2019-08-29T21:54:55Z",
                        "recording_end": "2019-08-29T21:55:24Z",
                        "file_type": "TIMELINE",
                        "download_url": "https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa"
                      },
                      {
                        "id": "96119b=kdfhf791",
                        "meeting_id": "gkABCDEnCkPuA==",
                        "recording_start": "2019-08-29T21:54:55Z",
                        "recording_end": "2019-08-29T21:55:24Z",
                        "file_type": "MP4",
                        "file_size": 37285,
                        "play_url": "https://api.zoom.us/recording/play/abcdkjfhdhfdhfj",
                        "download_url": "https://api.zoom.us/recording/download/abcdkjfhdhfdhfj",
                        "status": "completed",
                        "recording_type": "shared_screen_with_speaker_view"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings": {
      "get": {
        "summary": "Get Meeting Recordings",
        "description": "Get all the [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4) from a meeting.<br><br>\n**Scopes:** `recording:read:admin` `recording:read`<br>\n \n\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingGet",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nYou do not have the right permissions.\n**HTTP Status Code:** `200`<br>\nRecording object returned.<br>\n",
            "schema": {
              "allOf": [
                {
                  "description": "The recording meeting object.",
                  "allOf": [
                    {
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID."
                        },
                        "id": {
                          "type": "string",
                          "description": "Meeting ID - also known as the meeting number."
                        },
                        "account_id": {
                          "type": "string",
                          "description": "Unique Identifier of the user account."
                        },
                        "host_id": {
                          "type": "string",
                          "description": "ID of the user set as host of meeting."
                        },
                        "topic": {
                          "type": "string",
                          "description": "Meeting topic."
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the meeting started."
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Meeting duration."
                        },
                        "total_size": {
                          "type": "string",
                          "description": "Total size of the recording."
                        },
                        "recording_count": {
                          "type": "string",
                          "description": "Number of recording files returned in the response of this API call."
                        }
                      }
                    },
                    {
                      "title": "Recording file List",
                      "description": "List of recording file.",
                      "allOf": [
                        {
                          "properties": {
                            "recording_files": {
                              "type": "array",
                              "title": "Recording file List",
                              "description": "List of recording file.",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Recording file object.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The recording file ID. Included in the response of general query."
                                      },
                                      "meeting_id": {
                                        "type": "string",
                                        "description": "The meeting ID. "
                                      },
                                      "recording_start": {
                                        "type": "string",
                                        "description": "The recording start time."
                                      },
                                      "recording_end": {
                                        "type": "string",
                                        "description": "The recording end time. Response in general query."
                                      },
                                      "file_type": {
                                        "type": "string",
                                        "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                                      },
                                      "file_size": {
                                        "type": "number",
                                        "description": "The recording file size."
                                      },
                                      "play_url": {
                                        "type": "string",
                                        "description": "The URL using which a recording file can be played."
                                      },
                                      "download_url": {
                                        "type": "string",
                                        "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "The recording status."
                                      },
                                      "deleted_time": {
                                        "type": "string",
                                        "description": "The time at which recording was deleted. Returned in the response only for trash query."
                                      },
                                      "recording_type": {
                                        "type": "string",
                                        "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ],
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "gkABCDEbbbbbbbkPuA==",
                "id": 68000000031879,
                "account_id": "EABkdslfBBBdk",
                "host_id": "z8yBXksaAAjdhfsfdfkjgg",
                "topic": "MyTestPollMeeting",
                "type": 2,
                "start_time": "2019-08-29T21:54:49Z",
                "timezone": "America/Los_Angeles",
                "duration": 1,
                "total_size": 47383,
                "recording_count": 3,
                "share_url": "https://api.zoom.us/recording/share/abcdkhfdbbfdjbg",
                "recording_files": [
                  {
                    "id": "96119skjlfhdshkjf-djkfndjf0-f791",
                    "meeting_id": "gkABCDEbbbbbbbkPuA==",
                    "recording_start": "2019-08-29T21:54:55Z",
                    "recording_end": "2019-08-29T21:55:24Z",
                    "file_type": "MP4",
                    "file_size": 37285,
                    "play_url": "https://api.zoom.us/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                    "download_url": "https://api.zoom.us/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                    "status": "completed",
                    "recording_type": "shared_screen_with_speaker_view"
                  },
                  {
                    "id": "5890sfjkdsf-aaaakdf-fbbb618718e",
                    "meeting_id": "gkABCDEbbbbbbbkPuA==",
                    "recording_start": "2019-08-29T21:54:55Z",
                    "recording_end": "2019-08-29T21:55:24Z",
                    "file_type": "M4A",
                    "file_size": 10098,
                    "play_url": "https://api.zoom.us/recording/play/ABdkEEEfhlgldfjkglfghlkfdklhsg",
                    "download_url": "https://api.zoom.us/recording/download/ABdkEEEfhlgldfjkglfghlkfdklhsg",
                    "status": "completed",
                    "recording_type": "audio_only"
                  },
                  {
                    "meeting_id": "gkABCDEbbbbbbbkPuA==",
                    "recording_start": "2019-08-29T21:54:55Z",
                    "recording_end": "2019-08-29T21:55:24Z",
                    "file_type": "TIMELINE",
                    "download_url": "https://api.zoom.us/recording/download/e2ed-dlkjgdfkgh-kslsdbsjf1a"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>\nThere is no recording for this meeting."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Meeting Recordings",
        "description": "Delete all recording files of a meeting.<br><br>\n\n**Scopes:** `recording:write:admin` `recording:write`<br> <br>\n**Prerequisites**:\n* Cloud Recording should be enabled on the user's account.<br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDelete",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "action",
            "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.",
            "type": "string",
            "default": "trash",
            "enum": [
              "trash",
              "delete"
            ],
            "x-enum-descriptions": [
              "move recording to trash",
              "delete recording permanently"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200` <br>\nYou do not have the right permission."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}": {
      "delete": {
        "summary": "Delete a Meeting Recording File",
        "description": "Delete a sprecific recording file from a meeting.<br><br>\n**Scopes**: `recording:write:admin` `recording:write`<br>\n <br>",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDeleteOne",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "recordingId",
            "description": "The recording ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "action",
            "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.",
            "type": "string",
            "default": "trash",
            "enum": [
              "trash",
              "delete"
            ],
            "x-enum-descriptions": [
              "move recording to trash",
              "delete recording permanently"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording file deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br> \n**Error Code:** `3303` <br>\nYou can not delete an uncompleted meeting."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording file not found<br>\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301` <br> There is no recording for this meeting.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/status": {
      "put": {
        "summary": "Recover Meeting Recordings",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover all deleted [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a specific meeting.<br><br>\n**Scopes**: `recording:write:admin` `recording:write`<br>\n <br>\n**Prerequisites**:<br>\n* A Pro user with Cloud Recording enabled.",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "recover"
                  ],
                  "x-enum-descriptions": [
                    "recover meeting recording"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "recover"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nYou do not have the right permissions."
          },
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nDeleted recordings of the meeting recovered.",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n\n\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}/status": {
      "put": {
        "summary": "Recover a Single Recording",
        "description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the meeting.<br>\n**Scopes:** `recording:write:admin` `recording:write`<br>\n <br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdateOne",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "recordingId",
            "description": "The recording ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "recover"
                  ],
                  "x-enum-descriptions": [
                    "recover meeting recording"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "recover"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br> Meeting recording recovered.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>Meeting recording not found.<br>\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`There is no recording for this meeting."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/settings": {
      "get": {
        "summary": "Get Meeting Recording Settings",
        "description": "Retrieve settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).<br><br>\n**Scopes**: `recording:read:admin` `recording:read`<br>\n <br>",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingSettingUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nMeeting recording settings returned",
            "schema": {
              "title": "Recording settings",
              "type": "object",
              "properties": {
                "share_recording": {
                  "type": "string",
                  "description": "Determine how the meeting recording is shared.",
                  "enum": [
                    "publicly",
                    "internally",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Publicly",
                    "Internally(account members only)",
                    "None"
                  ]
                },
                "recording_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can view."
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Authentication Options."
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Authentication domains."
                },
                "viewer_download": {
                  "type": "boolean",
                  "description": "Determine whether a viewer can download the recording file or not."
                },
                "password": {
                  "type": "string",
                  "description": "Enable password protection for the recording by setting a password.",
                  "maxLength": 10
                },
                "on_demand": {
                  "type": "boolean",
                  "description": "Determine whether registration  isrequired to view the recording."
                },
                "approval_type": {
                  "type": "integer",
                  "description": "Approval type for the registration.<br>\n`0`- Automatically approve the registration when a user registers.<br>\n`1` - Manually approve or deny the registration of a user.<br>\n`2` - No registration required to view the recording.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Registrants can watch the recording directly after registration",
                    "Registrants will receive emails then watch the recording after you approve the registration",
                    "Disabled"
                  ]
                },
                "send_email_to_host": {
                  "type": "boolean",
                  "description": "Send an email to host when someone registers to view the recording. This applies for On-demand recordings only."
                },
                "show_social_share_buttons": {
                  "type": "boolean",
                  "description": "Show social share buttons on registration page. This applies for On-demand recordings only."
                }
              }
            },
            "examples": {
              "application/json": {
                "share_recording": "none",
                "recording_authentication": true,
                "authentication_option": "abc",
                "authentication_domains": "ccc.com",
                "viewer_download": false,
                "password": "dAbyzK1",
                "on_demand": false,
                "approval_type": 1,
                "send_email_to_host": true,
                "show_social_share_buttons": true
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Meeting Recording Settings",
        "description": "Update settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)<br><br>\n**Scopes**: `recording:write:admin` `recording:write`<br>\n <br>",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingSettingsUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting recording Settings",
            "schema": {
              "title": "Recording settings",
              "type": "object",
              "properties": {
                "share_recording": {
                  "type": "string",
                  "description": "Determine how the meeting recording is shared.",
                  "enum": [
                    "publicly",
                    "internally",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Publicly",
                    "Internally(account members only)",
                    "None"
                  ]
                },
                "recording_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can view."
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Authentication Options."
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Authentication domains."
                },
                "viewer_download": {
                  "type": "boolean",
                  "description": "Determine whether a viewer can download the recording file or not."
                },
                "password": {
                  "type": "string",
                  "description": "Enable password protection for the recording by setting a password.",
                  "maxLength": 10
                },
                "on_demand": {
                  "type": "boolean",
                  "description": "Determine whether registration  isrequired to view the recording."
                },
                "approval_type": {
                  "type": "integer",
                  "description": "Approval type for the registration.<br>\n`0`- Automatically approve the registration when a user registers.<br>\n`1` - Manually approve or deny the registration of a user.<br>\n`2` - No registration required to view the recording.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Registrants can watch the recording directly after registration",
                    "Registrants will receive emails then watch the recording after you approve the registration",
                    "Disabled"
                  ]
                },
                "send_email_to_host": {
                  "type": "boolean",
                  "description": "Send an email to host when someone registers to view the recording. This applies for On-demand recordings only."
                },
                "show_social_share_buttons": {
                  "type": "boolean",
                  "description": "Show social share buttons on registration page. This applies for On-demand recordings only."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "share_recording": "internally",
                "recording_authentication": true,
                "authentication_option": "abc",
                "authentication_domains": "ccc.com",
                "viewer_download": false,
                "password": "18idxa",
                "on_demand": true,
                "approval_type": 1,
                "send_email_to_host": true,
                "show_social_share_buttons": true
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting recording setting's updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found. "
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/registrants": {
      "get": {
        "summary": "List Recording Registrants",
        "description": "Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate) to view these recordings.\n\nUse this API to list registrants of **On-demand Cloud Recordings** of a past meeting.<br>\n**Scopes:** `recording:read:admin`, `recording:read`.<br>\n \n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "meetingRecordingRegistrants",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "status",
            "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
            "type": "string",
            "default": "approved",
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "x-enum-descriptions": [
              "registrants status is pending",
              "registrants status is approved",
              "registrants status is denied"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nRegistrants returned.",
            "schema": {
              "type": "object",
              "title": "Registration List",
              "description": "List of meeting recording registrant",
              "allOf": [
                {
                  "type": "object",
                  "title": "Recording Registration List",
                  "description": "List of Recording Registration",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Pagination Object.",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "description": "The number of pages returned for the request made."
                        },
                        "page_number": {
                          "type": "integer",
                          "description": "The page number of the current results.",
                          "default": 1
                        },
                        "page_size": {
                          "type": "integer",
                          "description": "The number of records returned with a single API call.",
                          "default": 30,
                          "maximum": 300
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of all the records available across pages."
                        }
                      }
                    },
                    {
                      "properties": {
                        "registrants": {
                          "type": "array",
                          "description": "List of Registrant objects",
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "description": " Registrant.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Registrant base object.",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "A valid email address of the registrant."
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "description": "Registrant's first name."
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "description": "Registrant's last name."
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "Registrant's address."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "Registrant's city."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Registrant's country."
                                      },
                                      "zip": {
                                        "type": "string",
                                        "description": "Registrant's Zip/Postal Code."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Registrant's State/Province."
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "Registrant's Phone number."
                                      },
                                      "industry": {
                                        "type": "string",
                                        "description": "Registrant's Industry."
                                      },
                                      "org": {
                                        "type": "string",
                                        "description": "Registrant's Organization."
                                      },
                                      "job_title": {
                                        "type": "string",
                                        "description": "Registrant's job title."
                                      },
                                      "purchasing_time_frame": {
                                        "type": "string",
                                        "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                                      },
                                      "role_in_purchase_process": {
                                        "type": "string",
                                        "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                                      },
                                      "no_of_employees": {
                                        "type": "string",
                                        "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                                      },
                                      "comments": {
                                        "type": "string",
                                        "description": "A field that allows registrants to provide any questions or comments that they might have."
                                      },
                                      "custom_questions": {
                                        "type": "array",
                                        "description": "Custom questions.",
                                        "items": {
                                          "type": "object",
                                          "description": "Custom Question.",
                                          "properties": {
                                            "title": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "email",
                                      "first_name",
                                      "last_name"
                                    ]
                                  }
                                ],
                                "type": "object"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 0,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "registrants": [
                  {
                    "id": "sskldsbdABBBBBBBB",
                    "first_name": "Shri",
                    "last_name": "Shree",
                    "email": "shriee@somekindofmail.com",
                    "address": "dsdsfsf st",
                    "city": "Paris",
                    "country": "France",
                    "zip": "3555354",
                    "state": "astate",
                    "phone": "000000",
                    "industry": "sfsdf",
                    "org": "dsadsfsf",
                    "job_title": "sfsdfsdf",
                    "purchasing_time_frame": "Within a month",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "40",
                    "comments": "Amazing!",
                    "custom_questions": [],
                    "status": "approved",
                    "create_time": "2019-08-29T23:04:08Z",
                    "share_url": "https://zoom.us/recording/share/IlA1ABCDDJHKNDkkkkkkkTziMw"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Recording Registrant",
        "description": "Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate) to view these recordings.\n\nUse this API to register a user to gain access to **On-demand Cloud Recordings** of a past meeting.<br>\n**Scopes:** `recording:write:admin`, `recording:write`.<br>\n \n\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "meetingRecordingRegistrantCreate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": " Registrant.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Registrant base object.",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "A valid email address of the registrant."
                    },
                    "first_name": {
                      "type": "string",
                      "description": "Registrant's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "description": "Registrant's last name."
                    },
                    "address": {
                      "type": "string",
                      "description": "Registrant's address."
                    },
                    "city": {
                      "type": "string",
                      "description": "Registrant's city."
                    },
                    "country": {
                      "type": "string",
                      "description": "Registrant's country."
                    },
                    "zip": {
                      "type": "string",
                      "description": "Registrant's Zip/Postal Code."
                    },
                    "state": {
                      "type": "string",
                      "description": "Registrant's State/Province."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Registrant's Phone number."
                    },
                    "industry": {
                      "type": "string",
                      "description": "Registrant's Industry."
                    },
                    "org": {
                      "type": "string",
                      "description": "Registrant's Organization."
                    },
                    "job_title": {
                      "type": "string",
                      "description": "Registrant's job title."
                    },
                    "purchasing_time_frame": {
                      "type": "string",
                      "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                    },
                    "role_in_purchase_process": {
                      "type": "string",
                      "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                    },
                    "no_of_employees": {
                      "type": "string",
                      "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                    },
                    "comments": {
                      "type": "string",
                      "description": "A field that allows registrants to provide any questions or comments that they might have."
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Custom questions.",
                      "items": {
                        "type": "object",
                        "description": "Custom Question.",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "email",
                    "first_name",
                    "last_name"
                  ]
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "email": "mmyemaill@mycompanydomain.com",
                "first_name": "Samriddhi",
                "last_name": "Harris",
                "address": "123 Main St",
                "city": "San Jose",
                "country": "US",
                "zip": "95550",
                "state": "CA",
                "phone": "000-444-4444",
                "industry": "Tech",
                "org": "IT",
                "job_title": "DA",
                "purchasing_time_frame": "More Than 6 Months",
                "role_in_purchase_process": "Influencer",
                "no_of_employees": "1-20",
                "comments": "Welcome to the meeting recording",
                "custom_questions": [
                  {
                    "title": "Favorite thing about Zoom",
                    "value": "Meet Happy"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` <br>\nRegistration submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "registrant_id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting Topic"
                },
                "share_url": {
                  "type": "string",
                  "description": "Share Url for the On-demand recording."
                }
              }
            },
            "examples": {
              "application/json": {
                "registrant_id": "veniamKIW1Sonseq",
                "id": 12345666,
                "topic": "cupidatat dolore quis minim aliquip",
                "share_url": "https://zoom.us/recording/share/IpAAABBBBBBA1aqqkzFFgiJ2jpR"
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\nMeeting recording not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/registrants/status": {
      "put": {
        "summary": "Update Recording Registrant's Status",
        "description": "A registrant can either be approved or denied from viewing the [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) recording. \nUse this API to update a registrant's status.\n\n**Scopes:** `recording:write:admin`, `recording:write`<br>\n \n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "meetingRecordingRegistrantStatus",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Registrant Status",
              "required": [
                "action"
              ],
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "approve",
                    "deny"
                  ],
                  "x-enum-descriptions": [
                    "Approve registrant",
                    "Deny registrant"
                  ]
                },
                "registrants": {
                  "type": "array",
                  "description": "List of registrants",
                  "maximum": 30,
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "approve",
                "registrants": [
                  {
                    "id": "644339795"
                  },
                  {
                    "id": "44220011"
                  },
                  {
                    "id": "55226611"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRegistrant status updated."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/recordings/registrants/questions": {
      "get": {
        "summary": "Get Registration Questions",
        "description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to retrieve a list of questions that are displayed for users to complete when registering to view the recording of a specific meeting.<br>\n**Scopes:** `recording:read:admin`, `recording:read`<br>\n \n\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingRegistrantsQuestionsGet",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nRecording Registrant Question object returned.",
            "schema": {
              "type": "object",
              "title": "Recording Registrant Questions",
              "description": "Recording Registrant Questions",
              "properties": {
                "questions": {
                  "type": "array",
                  "description": "Array of Registrant Questions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field_name": {
                        "type": "string",
                        "description": "Field name.",
                        "enum": [
                          "last_name",
                          "address",
                          "city",
                          "country",
                          "zip",
                          "state",
                          "phone",
                          "industry",
                          "org",
                          "job_title",
                          "purchasing_time_frame",
                          "role_in_purchase_process",
                          "no_of_employees",
                          "comments"
                        ],
                        "x-enum-descriptions": [
                          "Last Name",
                          "Address",
                          "City",
                          "Country/Region",
                          "Zip/Postal Code",
                          "State/Province",
                          "Phone",
                          "Industry",
                          "Organization",
                          "Job Title",
                          "Purchasing Time Frame",
                          "Role in Purchase Process",
                          "Number of Employees",
                          "Questions & Comments"
                        ]
                      },
                      "required": {
                        "type": "boolean",
                        "description": "State whether the field is required to be answered by the registrant or not."
                      }
                    }
                  }
                },
                "custom_questions": {
                  "type": "array",
                  "description": "Array of Registrant Custom Questions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the question."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of registration question and answers.",
                        "enum": [
                          "short",
                          "single",
                          "multiple"
                        ],
                        "x-enum-descriptions": [
                          "Short Answer",
                          "Single Answer",
                          "Multiple Answer"
                        ]
                      },
                      "required": {
                        "type": "boolean",
                        "description": "State whether registrants are required to answer custom questions or not."
                      },
                      "answers": {
                        "type": "array",
                        "description": "Answer choices for the question. Can not be used with Short answer type.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "address",
                    "required": false
                  }
                ],
                "custom_questions": [
                  {
                    "title": "Would you like us to contact you for a survey?",
                    "type": "multiple",
                    "required": false,
                    "answers": [
                      "Yes",
                      "No"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or registrant not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Registration Questions",
        "description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to update registration questions that are to be answered by users while registering to view a recording.<br>\n**Scopes:** `recording:write:admin`, `recording:write`<br> <br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingRegistrantQuestionUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Recording Registrant Questions",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Recording Registrant Questions",
                  "description": "Recording Registrant Questions",
                  "properties": {
                    "questions": {
                      "type": "array",
                      "description": "Array of Registrant Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "description": "Field name.",
                            "enum": [
                              "last_name",
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "x-enum-descriptions": [
                              "Last Name",
                              "Address",
                              "City",
                              "Country/Region",
                              "Zip/Postal Code",
                              "State/Province",
                              "Phone",
                              "Industry",
                              "Organization",
                              "Job Title",
                              "Purchasing Time Frame",
                              "Role in Purchase Process",
                              "Number of Employees",
                              "Questions & Comments"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether the field is required to be answered by the registrant or not."
                          }
                        }
                      }
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Array of Registrant Custom Questions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the question."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of registration question and answers.",
                            "enum": [
                              "short",
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "Short Answer",
                              "Single Answer",
                              "Multiple Answer"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether registrants are required to answer custom questions or not."
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answer choices for the question. Can not be used with Short answer type.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "job_title",
                    "required": true
                  },
                  {
                    "field_name": "last_name",
                    "required": true
                  }
                ],
                "custom_questions": [
                  {
                    "title": "Are you looking for a job?",
                    "type": "short",
                    "required": false
                  },
                  {
                    "title": "What kind of job are you looking for?",
                    "type": "multiple",
                    "required": false,
                    "answers": [
                      "Full-time",
                      "Part-time",
                      "Internship"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200`<br>\nRecording Registrant Questions Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings": {
      "get": {
        "summary": "List Meetings",
        "description": "List total live or past meetings that occurred during a specified period of time. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.<br><br>",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetings",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. <br>`live` - Live meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meetings",
              "past one user meetings",
              "live meetings"
            ]
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report in 'yyyy-mm-dd' format."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report in 'yyyy-mm-dd' format."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "Array of meeting objects.",
                      "items": {
                        "type": "object",
                        "title": "Meeting Metrics",
                        "description": "Meeting metric details.",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it."
                          },
                          "id": {
                            "type": "integer",
                            "description": "Meeting ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "host": {
                            "type": "string",
                            "description": "Host display name."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the host."
                          },
                          "user_type": {
                            "type": "string",
                            "description": "License type of the user."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting start time."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting end time."
                          },
                          "duration": {
                            "type": "string",
                            "description": "Meeting duration."
                          },
                          "participants": {
                            "type": "integer",
                            "description": "Meeting participant count."
                          },
                          "has_pstn": {
                            "type": "boolean",
                            "description": "Indicates whether or not the PSTN was used in the meeting."
                          },
                          "has_voip": {
                            "type": "boolean",
                            "description": "Indicates whether or not VoIP was used in the meeting."
                          },
                          "has_3rd_party_audio": {
                            "type": "boolean",
                            "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting."
                          },
                          "has_video": {
                            "type": "boolean",
                            "description": "Indicates whether or not video was used in the meeting."
                          },
                          "has_screen_share": {
                            "type": "boolean",
                            "description": "Indicates whether or not screenshare feature was used in the meeting."
                          },
                          "has_recording": {
                            "type": "boolean",
                            "description": "Indicates whether or not the recording feature was used in the meeting. "
                          },
                          "has_sip": {
                            "type": "boolean",
                            "description": "Indicates whether or not someone joined the meeting using SIP."
                          },
                          "in_room_participants": {
                            "type": "integer",
                            "description": "The number of Zoom Room participants in the meeting."
                          },
                          "dept": {
                            "type": "string",
                            "description": "Department of the host."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "string [date]",
                "to": "string [date]",
                "page_count": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "next_page_token": "string",
                "meetings": [
                  {
                    "uuid": "string [uuid]",
                    "id": "integer",
                    "topic": "string",
                    "host": "string",
                    "email": "string",
                    "user_type": "string",
                    "start_time": "string [date-time]",
                    "end_time": "string [date-time]",
                    "duration": "string",
                    "participants": "integer",
                    "has_pstn": "boolean",
                    "has_voip": "boolean",
                    "has_3rd_party_audio": "boolean",
                    "has_video": "boolean",
                    "has_screen_share": "boolean",
                    "has_recording": "boolean",
                    "has_sip": "boolean"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe next page token is invalid or expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings/{meetingId}": {
      "get": {
        "summary": "Get Meeting Details",
        "description": "Get details on live or past meetings. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.  <br>\n**Scopes:** `dashboard_meetings:read:admin`<br> <br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingDetail",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meeting",
              "past one user meeting",
              "live meeting"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "schema": {
              "type": "object",
              "title": "Meeting Metrics",
              "description": "Meeting metric details.",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it."
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic."
                },
                "host": {
                  "type": "string",
                  "description": "Host display name."
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the host."
                },
                "user_type": {
                  "type": "string",
                  "description": "License type of the user."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time."
                },
                "duration": {
                  "type": "string",
                  "description": "Meeting duration."
                },
                "participants": {
                  "type": "integer",
                  "description": "Meeting participant count."
                },
                "has_pstn": {
                  "type": "boolean",
                  "description": "Indicates whether or not the PSTN was used in the meeting."
                },
                "has_voip": {
                  "type": "boolean",
                  "description": "Indicates whether or not VoIP was used in the meeting."
                },
                "has_3rd_party_audio": {
                  "type": "boolean",
                  "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting."
                },
                "has_video": {
                  "type": "boolean",
                  "description": "Indicates whether or not video was used in the meeting."
                },
                "has_screen_share": {
                  "type": "boolean",
                  "description": "Indicates whether or not screenshare feature was used in the meeting."
                },
                "has_recording": {
                  "type": "boolean",
                  "description": "Indicates whether or not the recording feature was used in the meeting. "
                },
                "has_sip": {
                  "type": "boolean",
                  "description": "Indicates whether or not someone joined the meeting using SIP."
                },
                "in_room_participants": {
                  "type": "integer",
                  "description": "The number of Zoom Room participants in the meeting."
                },
                "dept": {
                  "type": "string",
                  "description": "Department of the host."
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "carreter@-2c9b447f3",
                "id": 33281536,
                "topic": "My meeting",
                "host": "cool host",
                "email": "so@djkfsfj.gh",
                "user_type": "Pro|Webinar100",
                "start_time": "2007-06-16T16:55:42.078Z",
                "end_time": "2007-06-16T16:59:42.078Z",
                "duration": "30",
                "participants": 4874645,
                "has_pstn": false,
                "has_voip": false,
                "has_3rd_party_audio": false,
                "has_video": false,
                "has_screen_share": false,
                "has_recording": false,
                "has_sip": false,
                "in_room_participants": 3
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings/{meetingId}/participants": {
      "get": {
        "summary": "List Meeting Participants",
        "description": "Get a list of participants from live or past meetings.<br><br>\nIf you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`. <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Scopes:** `dashboard_meetings:read:admin`<br> <br>\n**Prerequisites:** Business or a higher plan.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipants",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meeting",
              "past one user meeting",
              "live meeting"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "device": {
                            "type": "string",
                            "description": "The type of device using which the participant joined the meeting."
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant's IP address."
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant's location."
                          },
                          "network_type": {
                            "type": "string",
                            "description": "Participant's network type."
                          },
                          "microphone": {
                            "type": "string",
                            "description": "The type of Microphone that participant used during the meeting."
                          },
                          "speaker": {
                            "type": "string",
                            "description": "The type of speaker participant used during the meeting."
                          },
                          "data_center": {
                            "type": "string",
                            "description": "Data Center where participant's meeting data is stored."
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "Participant connection type."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant joined the meeting."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant left the meeting."
                          },
                          "share_application": {
                            "type": "boolean",
                            "description": "Indicates whether or not a user selected to share an iPhone/iPad app during the screenshare. "
                          },
                          "share_desktop": {
                            "type": "boolean",
                            "description": "Indicates whether or not a user selected to share their desktop during the screenshare. "
                          },
                          "share_whiteboard": {
                            "type": "boolean",
                            "description": "Indicates whether or not a user selected to share their whiteboard during the screenshare. "
                          },
                          "recording": {
                            "type": "boolean",
                            "description": "Indicates whether or not recording was used during the meeting."
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Name of Participant's PC."
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant's PC domain."
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant's MAC address."
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant's hard disk ID."
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant's Zoom Client version."
                          },
                          "in_room_participants": {
                            "type": "integer",
                            "description": "The number of participants who joined via Zoom Room."
                          },
                          "leave_reason": {
                            "type": "string",
                            "description": "Possible reasons for why participant left the meeting."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_size": 30,
                "total_records": 2,
                "next_page_token": "",
                "participants": [
                  {
                    "id": "d52f19c548b88490b5d16fcbd38",
                    "user_id": "32dsfsd4g5gd",
                    "user_name": "dojo",
                    "device": "WIN",
                    "ip_address": "127.0.0.1",
                    "location": "New York",
                    "network_type": "Wired",
                    "microphone": "Plantronics BT600",
                    "speaker": "Plantronics BT600",
                    "data_center": "SC",
                    "connection_type": "P2P",
                    "join_time": "2019-09-07T13:15:02.837Z",
                    "leave_time": "2019-09-07T13:15:09.837Z",
                    "share_application": false,
                    "share_desktop": true,
                    "share_whiteboard": true,
                    "recording": false,
                    "pc_name": "dojo's pc",
                    "domain": "Dojo-workspace",
                    "mac_addr": " 00:0a:95:9d:68:16",
                    "harddisk_id": "sed proident in",
                    "version": "4.4.55383.0716",
                    "leave_reason": "Dojo left the meeting.<br>Reason: Host ended the meeting."
                  },
                  {
                    "id": "z8aaaaaaCfp8uQ",
                    "user_id": "1670000000",
                    "user_name": "Rea",
                    "device": "Android",
                    "ip_address": "120.000.000",
                    "location": "San Jose (US)",
                    "network_type": "Wifi",
                    "data_center": "SC",
                    "connection_type": "UDP",
                    "join_time": "2019-08-02T15:31:48Z",
                    "leave_time": "2019-08-02T16:04:12Z",
                    "share_application": false,
                    "share_desktop": false,
                    "share_whiteboard": false,
                    "recording": false,
                    "pc_name": "Rea's PC",
                    "domain": "Rea-workspace",
                    "mac_addr": "",
                    "harddisk_id": "",
                    "version": "4.4.55383.0716",
                    "leave_reason": "Rea left the meeting.<br>Reason: Host closed the meeting."
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings/{meetingId}/participants/{participantId}/qos": {
      "get": {
        "summary": "Get Meeting Participant QOS",
        "description": "Retrieve the quality of service for participants from live or past meetings. This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields. <br><br>\n**Scopes:** `dashboard:read:admin`<br> ",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantQOS",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "participantId",
            "description": "Participant ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meeting",
              "single past user meetings",
              "live meeting"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature.",
            "schema": {
              "type": "object",
              "title": "Participant QOS",
              "description": "Participant QOS.",
              "properties": {
                "user_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Participant ID."
                },
                "user_name": {
                  "type": "string",
                  "description": "Participant display name."
                },
                "device": {
                  "type": "string",
                  "description": "The type of device using which the participant joined the meeting."
                },
                "ip_address": {
                  "type": "string",
                  "description": "Participant's IP address."
                },
                "location": {
                  "type": "string",
                  "description": "Participant's location."
                },
                "join_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which participant joined the meeting."
                },
                "leave_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which participant left the meeting."
                },
                "pc_name": {
                  "type": "string",
                  "description": "Participant's PC name."
                },
                "domain": {
                  "type": "string",
                  "description": "Participant's PC domain."
                },
                "mac_addr": {
                  "type": "string",
                  "description": "Participant's MAC address."
                },
                "harddisk_id": {
                  "type": "string",
                  "description": "Participant's hard disk ID."
                },
                "version": {
                  "type": "string",
                  "description": "Participant's Zoom Client version."
                },
                "user_qos": {
                  "type": "array",
                  "description": "Quality of service provided to the user.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date-time of QOS"
                      },
                      "audio_input": {
                        "type": "object",
                        "title": "QOS Object",
                        "description": "Quality of Service object.",
                        "properties": {
                          "bitrate": {
                            "type": "string",
                            "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                          },
                          "latency": {
                            "type": "string",
                            "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                          },
                          "jitter": {
                            "type": "string",
                            "description": "Jitter:  the variation in the delay of received packets."
                          },
                          "avg_loss": {
                            "type": "string",
                            "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                          },
                          "max_loss": {
                            "type": "string",
                            "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                          }
                        }
                      },
                      "audio_output": {
                        "type": "object",
                        "title": "QOS Object",
                        "description": "Quality of Service object.",
                        "properties": {
                          "bitrate": {
                            "type": "string",
                            "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                          },
                          "latency": {
                            "type": "string",
                            "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                          },
                          "jitter": {
                            "type": "string",
                            "description": "Jitter:  the variation in the delay of received packets."
                          },
                          "avg_loss": {
                            "type": "string",
                            "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                          },
                          "max_loss": {
                            "type": "string",
                            "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                          }
                        }
                      },
                      "video_input": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "video_output": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "as_input": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "as_output": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "cpu_usage": {
                        "type": "object",
                        "properties": {
                          "zoom_min_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Minimum CPU Usage"
                          },
                          "zoom_avg_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Average CPU Usage"
                          },
                          "zoom_max_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Maximum CPU Usage"
                          },
                          "system_max_cpu_usage": {
                            "type": "string",
                            "description": "System Maximum CPU Usage"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "user_id": "string [uuid]",
                "user_name": "string",
                "device": "string",
                "ip_address": "string",
                "location": "string",
                "join_time": "string [date-time]",
                "leave_time": "string [date-time]",
                "pc_name": "string",
                "domain": "string",
                "mac_addr": "string",
                "harddisk_id": "string",
                "version": "string",
                "user_qos": [
                  {
                    "date_time": "string [date-time]",
                    "audio_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string"
                    },
                    "audio_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string"
                    },
                    "video_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "video_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "as_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "as_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "cpu_usage": {
                      "zoom_min_cpu_usage": "string",
                      "zoom_avg_cpu_usage": "string",
                      "zoom_max_cpu_usage": "string",
                      "system_max_cpu_usage": "string"
                    }
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings/{meetingId}/participants/qos": {
      "get": {
        "summary": "List Meeting Participants QOS",
        "description": "Get a list of meeting participants from live or past meetings along with the quality of service they recieve during the meeting such as connection quality for sending/receiving video, audio, and shared content.<br>If you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`.<br> <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n**Scopes:** `dashboard_meetings:read:admin`<br> <br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantsQOS",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meeting",
              "single past user meetings",
              "live meeting"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items returned per page.",
            "type": "integer",
            "default": 1,
            "maximum": 10
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "schema": {
              "title": "Participant QOS List",
              "description": "Participant QOS list.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of items per page.",
                      "default": 1,
                      "maximum": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects.",
                      "items": {
                        "type": "object",
                        "title": "Participant QOS",
                        "description": "Participant QOS.",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "device": {
                            "type": "string",
                            "description": "The type of device using which the participant joined the meeting."
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant's IP address."
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant's location."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant joined the meeting."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant left the meeting."
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Participant's PC name."
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant's PC domain."
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant's MAC address."
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant's hard disk ID."
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant's Zoom Client version."
                          },
                          "user_qos": {
                            "type": "array",
                            "description": "Quality of service provided to the user.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date-time of QOS"
                                },
                                "audio_input": {
                                  "type": "object",
                                  "title": "QOS Object",
                                  "description": "Quality of Service object.",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "Jitter:  the variation in the delay of received packets."
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                    }
                                  }
                                },
                                "audio_output": {
                                  "type": "object",
                                  "title": "QOS Object",
                                  "description": "Quality of Service object.",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "Jitter:  the variation in the delay of received packets."
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                    }
                                  }
                                },
                                "video_input": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "video_output": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "as_input": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "as_output": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "cpu_usage": {
                                  "type": "object",
                                  "properties": {
                                    "zoom_min_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Minimum CPU Usage"
                                    },
                                    "zoom_avg_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Average CPU Usage"
                                    },
                                    "zoom_max_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Maximum CPU Usage"
                                    },
                                    "system_max_cpu_usage": {
                                      "type": "string",
                                      "description": "System Maximum CPU Usage"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "integer [int64]",
                "page_size": "integer",
                "total_records": "integer [int64]",
                "next_page_token": "string",
                "participants": [
                  {
                    "user_id": "string [uuid]",
                    "user_name": "string",
                    "device": "string",
                    "ip_address": "string",
                    "location": "string",
                    "join_time": "string [date-time]",
                    "leave_time": "string [date-time]",
                    "pc_name": "string",
                    "domain": "string",
                    "mac_addr": "string",
                    "harddisk_id": "string",
                    "version": "string",
                    "user_qos": [
                      {
                        "date_time": "string [date-time]",
                        "audio_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string"
                        },
                        "audio_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string"
                        },
                        "video_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "video_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "as_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "as_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "cpu_usage": {
                          "zoom_min_cpu_usage": "string",
                          "zoom_avg_cpu_usage": "string",
                          "zoom_max_cpu_usage": "string",
                          "system_max_cpu_usage": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/meetings/{meetingId}/participants/sharing": {
      "get": {
        "summary": "Get Sharing/Recording Details of Meeting Participants",
        "description": "Retrieve the sharing and recording details of participants from live or past meetings.<br><br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantShare",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-descriptions": [
              "past meeting",
              "single past user meetings",
              "live meeting"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of participants.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Participant UUID."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "details": {
                            "type": "array",
                            "description": "Array of sharing and recording details.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "description": "Type of content shared."
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Start time of sharing."
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "End time of sharing."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "next_page_token": "string",
                "participants": [
                  {
                    "id": "string",
                    "user_id": "string",
                    "user_name": "string",
                    "details": [
                      {
                        "content": "string",
                        "start_time": "string",
                        "end_time": "string"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars": {
      "get": {
        "summary": "List Webinars",
        "description": "List all the live or past webinars from a specified period of time. <br><br>\n**Scopes:** `dashboard:read:admin`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinars",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinars",
              "live webinars"
            ]
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report in 'yyyy-mm-dd' format."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report in 'yyyy-mm-dd' format."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "webinars": {
                      "type": "array",
                      "description": "Array of webinar objects.",
                      "items": {
                        "type": "object",
                        "title": "Webinar Metrics",
                        "description": "Webinar metric details.",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "Webinar ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "Webinar topic."
                          },
                          "host": {
                            "type": "string",
                            "description": "User display name."
                          },
                          "email": {
                            "type": "string",
                            "description": "User email."
                          },
                          "user_type": {
                            "type": "string",
                            "description": "User type."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Webinar start time."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Webinar end time."
                          },
                          "duration": {
                            "type": "string",
                            "description": "Webinar duration."
                          },
                          "participants": {
                            "type": "integer",
                            "description": "Webinar participant count."
                          },
                          "has_pstn": {
                            "type": "boolean",
                            "description": "Indicates whether or not PSTN was used for the Webinar."
                          },
                          "has_voip": {
                            "type": "boolean",
                            "description": "Indicates whether or not VoIP was used for the Webinar."
                          },
                          "has_3rd_party_audio": {
                            "type": "boolean",
                            "description": "Indicates whether or not TSP was used for the Webinar."
                          },
                          "has_video": {
                            "type": "boolean",
                            "description": "Indicates whether or not video was used for the Webinar."
                          },
                          "has_screen_share": {
                            "type": "boolean",
                            "description": "Indicates whether or not screen sharing was used for the Webinar."
                          },
                          "has_recording": {
                            "type": "boolean",
                            "description": "Indicates whether or not recording was used for the Webinar."
                          },
                          "has_sip": {
                            "type": "boolean",
                            "description": "Indicates whether or not SIP was used for the Webinar."
                          },
                          "dept": {
                            "type": "string",
                            "description": "Department of the host."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "string [date]",
                "to": "string [date]",
                "page_count": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "next_page_token": "string",
                "webinars": [
                  {
                    "uuid": "string [uuid]",
                    "id": "integer",
                    "topic": "string",
                    "host": "string",
                    "email": "string",
                    "user_type": "string",
                    "start_time": "string [date-time]",
                    "end_time": "string [date-time]",
                    "duration": "string",
                    "participants": "integer",
                    "has_pstn": "boolean",
                    "has_voip": "boolean",
                    "has_3rd_party_audio": "boolean",
                    "has_video": "boolean",
                    "has_screen_share": "boolean",
                    "has_recording": "boolean",
                    "has_sip": "boolean"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `200`<br>\nThe next page token is invalid or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars/{webinarId}": {
      "get": {
        "summary": "Get Webinar Details",
        "description": "Retrieve details from live or past webinars.<br><br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarDetail",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinar",
              "live webinar"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "type": "object",
              "title": "Webinar Metrics",
              "description": "Webinar metric details.",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Webinar UUID."
                },
                "id": {
                  "type": "integer",
                  "description": "Webinar ID."
                },
                "topic": {
                  "type": "string",
                  "description": "Webinar topic."
                },
                "host": {
                  "type": "string",
                  "description": "User display name."
                },
                "email": {
                  "type": "string",
                  "description": "User email."
                },
                "user_type": {
                  "type": "string",
                  "description": "User type."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar start time."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar end time."
                },
                "duration": {
                  "type": "string",
                  "description": "Webinar duration."
                },
                "participants": {
                  "type": "integer",
                  "description": "Webinar participant count."
                },
                "has_pstn": {
                  "type": "boolean",
                  "description": "Indicates whether or not PSTN was used for the Webinar."
                },
                "has_voip": {
                  "type": "boolean",
                  "description": "Indicates whether or not VoIP was used for the Webinar."
                },
                "has_3rd_party_audio": {
                  "type": "boolean",
                  "description": "Indicates whether or not TSP was used for the Webinar."
                },
                "has_video": {
                  "type": "boolean",
                  "description": "Indicates whether or not video was used for the Webinar."
                },
                "has_screen_share": {
                  "type": "boolean",
                  "description": "Indicates whether or not screen sharing was used for the Webinar."
                },
                "has_recording": {
                  "type": "boolean",
                  "description": "Indicates whether or not recording was used for the Webinar."
                },
                "has_sip": {
                  "type": "boolean",
                  "description": "Indicates whether or not SIP was used for the Webinar."
                },
                "dept": {
                  "type": "string",
                  "description": "Department of the host."
                }
              }
            },
            "examples": {
              "application/json": "{\n    \"uuid\": \"CJaaaaaaaEV6A==\",\n    \"id\": 00001,\n    \"topic\": \"MyTestWebinar\",\n    \"host\": \"Henry Chao\",\n    \"email\": \"hc@sdfdfdsfdfsdf.com\",\n    \"user_type\": \"Pro|Webinar1000\",\n    \"start_time\": \"2019-07-16T17:14:39Z\",\n    \"end_time\": \"2019-07-16T17:26:20Z\",\n    \"duration\": 12,\n    \"participants\": 1,\n    \"has_pstn\": false,\n    \"has_voip\": false,\n    \"has_3rd_party_audio\": false,\n    \"has_video\": false,\n    \"has_screen_share\": false,\n    \"has_recording\": false,\n    \"has_sip\": false\n}"
            }
          },
          "300": {
            "description": "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars/{webinarId}/participants": {
      "get": {
        "summary": "Get Webinar Participants",
        "description": "Retrieve details on participants from live or past webinars.<br><br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipants",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinar",
              "live webinar"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "device": {
                            "type": "string",
                            "description": "Participant device."
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant IP address."
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant location."
                          },
                          "network_type": {
                            "type": "string",
                            "description": "Participant network type."
                          },
                          "microphone": {
                            "type": "string",
                            "description": "Participant microphone."
                          },
                          "speaker": {
                            "type": "string",
                            "description": "Participant speaker."
                          },
                          "data_center": {
                            "type": "string",
                            "description": "Participant data center."
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "Participant connection type."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time."
                          },
                          "share_application": {
                            "type": "boolean",
                            "description": "Did the participant share an application?"
                          },
                          "share_desktop": {
                            "type": "boolean",
                            "description": "Did the participant share their desktop?"
                          },
                          "share_whiteboard": {
                            "type": "boolean",
                            "description": "Did the participant share their whiteboard?"
                          },
                          "recording": {
                            "type": "boolean",
                            "description": "Participant record?"
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Participant PC name."
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant domain."
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant MAC address."
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant hard disk ID."
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant version."
                          },
                          "leave_reason": {
                            "type": "string",
                            "description": "Possible reasons for why a participant left the Webinar.\n"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "next_page_token": "string",
                "participants": [
                  {
                    "id": "string [uuid]",
                    "user_id": "string",
                    "user_name": "string",
                    "device": "string",
                    "ip_address": "string",
                    "location": "string",
                    "network_type": "string",
                    "microphone": "string",
                    "speaker": "string",
                    "data_center": "string",
                    "connection_type": "string",
                    "join_time": "string [date-time]",
                    "leave_time": "string [date-time]",
                    "share_application": "boolean",
                    "share_desktop": "boolean",
                    "share_whiteboard": "boolean",
                    "recording": "boolean",
                    "pc_name": "string",
                    "domain": "string",
                    "mac_addr": "string",
                    "harddisk_id": "string",
                    "version": "string",
                    "leave_reason": "string"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars/{webinarId}/participants/{participantId}/qos": {
      "get": {
        "summary": "Get Webinar Participant QOS",
        "description": "Retrieve details on the quality of service that participants from live or past webinars recieved.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:** <br>\n* Business, Education or API Plan with Zoom Rooms set up.\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantQOS",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "participantId",
            "description": "Participant ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinar",
              "live webinar"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned.",
            "schema": {
              "type": "object",
              "title": "Participant QOS",
              "description": "Participant QOS.",
              "properties": {
                "user_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Participant ID."
                },
                "user_name": {
                  "type": "string",
                  "description": "Participant display name."
                },
                "device": {
                  "type": "string",
                  "description": "The type of device using which the participant joined the meeting."
                },
                "ip_address": {
                  "type": "string",
                  "description": "Participant's IP address."
                },
                "location": {
                  "type": "string",
                  "description": "Participant's location."
                },
                "join_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which participant joined the meeting."
                },
                "leave_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which participant left the meeting."
                },
                "pc_name": {
                  "type": "string",
                  "description": "Participant's PC name."
                },
                "domain": {
                  "type": "string",
                  "description": "Participant's PC domain."
                },
                "mac_addr": {
                  "type": "string",
                  "description": "Participant's MAC address."
                },
                "harddisk_id": {
                  "type": "string",
                  "description": "Participant's hard disk ID."
                },
                "version": {
                  "type": "string",
                  "description": "Participant's Zoom Client version."
                },
                "user_qos": {
                  "type": "array",
                  "description": "Quality of service provided to the user.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date-time of QOS"
                      },
                      "audio_input": {
                        "type": "object",
                        "title": "QOS Object",
                        "description": "Quality of Service object.",
                        "properties": {
                          "bitrate": {
                            "type": "string",
                            "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                          },
                          "latency": {
                            "type": "string",
                            "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                          },
                          "jitter": {
                            "type": "string",
                            "description": "Jitter:  the variation in the delay of received packets."
                          },
                          "avg_loss": {
                            "type": "string",
                            "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                          },
                          "max_loss": {
                            "type": "string",
                            "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                          }
                        }
                      },
                      "audio_output": {
                        "type": "object",
                        "title": "QOS Object",
                        "description": "Quality of Service object.",
                        "properties": {
                          "bitrate": {
                            "type": "string",
                            "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                          },
                          "latency": {
                            "type": "string",
                            "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                          },
                          "jitter": {
                            "type": "string",
                            "description": "Jitter:  the variation in the delay of received packets."
                          },
                          "avg_loss": {
                            "type": "string",
                            "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                          },
                          "max_loss": {
                            "type": "string",
                            "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                          }
                        }
                      },
                      "video_input": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "video_output": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "as_input": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "as_output": {
                        "title": "QOS Object",
                        "description": "Quality of service object.",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "QOS Object",
                            "description": "Quality of Service object.",
                            "properties": {
                              "bitrate": {
                                "type": "string",
                                "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                              },
                              "latency": {
                                "type": "string",
                                "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                              },
                              "jitter": {
                                "type": "string",
                                "description": "Jitter:  the variation in the delay of received packets."
                              },
                              "avg_loss": {
                                "type": "string",
                                "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                              },
                              "max_loss": {
                                "type": "string",
                                "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                              }
                            }
                          },
                          {
                            "properties": {
                              "resolution": {
                                "type": "string",
                                "description": "Resolution."
                              },
                              "frame_rate": {
                                "type": "string",
                                "description": "Frame rate."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "cpu_usage": {
                        "type": "object",
                        "properties": {
                          "zoom_min_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Minimum CPU Usage"
                          },
                          "zoom_avg_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Average CPU Usage"
                          },
                          "zoom_max_cpu_usage": {
                            "type": "string",
                            "description": "Zoom Maximum CPU Usage"
                          },
                          "system_max_cpu_usage": {
                            "type": "string",
                            "description": "System Maximum CPU Usage"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "user_id": "string [uuid]",
                "user_name": "string",
                "device": "string",
                "ip_address": "string",
                "location": "string",
                "join_time": "string [date-time]",
                "leave_time": "string [date-time]",
                "pc_name": "string",
                "domain": "string",
                "mac_addr": "string",
                "harddisk_id": "string",
                "version": "string",
                "user_qos": [
                  {
                    "date_time": "string [date-time]",
                    "audio_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string"
                    },
                    "audio_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string"
                    },
                    "video_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "video_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "as_input": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "as_output": {
                      "bitrate": "string",
                      "latency": "string",
                      "jitter": "string",
                      "avg_loss": "string",
                      "max_loss": "string",
                      "resolution": "string",
                      "frame_rate": "string"
                    },
                    "cpu_usage": {
                      "zoom_min_cpu_usage": "string",
                      "zoom_avg_cpu_usage": "string",
                      "zoom_max_cpu_usage": "string",
                      "system_max_cpu_usage": "string"
                    }
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars/{webinarId}/participants/qos": {
      "get": {
        "summary": "List Webinar Participant QOS",
        "description": "Retrieve a list of participants from live or past webinars and the quality of service they received.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:**\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantsQOS",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinar",
              "live webinar"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of items returned per page.",
            "type": "integer",
            "default": 1,
            "maximum": 10
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "title": "Participant QOS List",
              "description": "Participant QOS list.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of items per page.",
                      "default": 1,
                      "maximum": 10
                    },
                    "total_records": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects.",
                      "items": {
                        "type": "object",
                        "title": "Participant QOS",
                        "description": "Participant QOS.",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "device": {
                            "type": "string",
                            "description": "The type of device using which the participant joined the meeting."
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant's IP address."
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant's location."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant joined the meeting."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which participant left the meeting."
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Participant's PC name."
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant's PC domain."
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant's MAC address."
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant's hard disk ID."
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant's Zoom Client version."
                          },
                          "user_qos": {
                            "type": "array",
                            "description": "Quality of service provided to the user.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date-time of QOS"
                                },
                                "audio_input": {
                                  "type": "object",
                                  "title": "QOS Object",
                                  "description": "Quality of Service object.",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "Jitter:  the variation in the delay of received packets."
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                    }
                                  }
                                },
                                "audio_output": {
                                  "type": "object",
                                  "title": "QOS Object",
                                  "description": "Quality of Service object.",
                                  "properties": {
                                    "bitrate": {
                                      "type": "string",
                                      "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                    },
                                    "latency": {
                                      "type": "string",
                                      "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "description": "Jitter:  the variation in the delay of received packets."
                                    },
                                    "avg_loss": {
                                      "type": "string",
                                      "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                    },
                                    "max_loss": {
                                      "type": "string",
                                      "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                    }
                                  }
                                },
                                "video_input": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "video_output": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "as_input": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "as_output": {
                                  "title": "QOS Object",
                                  "description": "Quality of service object.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "QOS Object",
                                      "description": "Quality of Service object.",
                                      "properties": {
                                        "bitrate": {
                                          "type": "string",
                                          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                        },
                                        "latency": {
                                          "type": "string",
                                          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                        },
                                        "jitter": {
                                          "type": "string",
                                          "description": "Jitter:  the variation in the delay of received packets."
                                        },
                                        "avg_loss": {
                                          "type": "string",
                                          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                        },
                                        "max_loss": {
                                          "type": "string",
                                          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "resolution": {
                                          "type": "string",
                                          "description": "Resolution."
                                        },
                                        "frame_rate": {
                                          "type": "string",
                                          "description": "Frame rate."
                                        }
                                      }
                                    }
                                  ],
                                  "type": "object"
                                },
                                "cpu_usage": {
                                  "type": "object",
                                  "properties": {
                                    "zoom_min_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Minimum CPU Usage"
                                    },
                                    "zoom_avg_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Average CPU Usage"
                                    },
                                    "zoom_max_cpu_usage": {
                                      "type": "string",
                                      "description": "Zoom Maximum CPU Usage"
                                    },
                                    "system_max_cpu_usage": {
                                      "type": "string",
                                      "description": "System Maximum CPU Usage"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "integer [int64]",
                "page_size": "integer",
                "total_records": "integer [int64]",
                "next_page_token": "string",
                "participants": [
                  {
                    "user_id": "string [uuid]",
                    "user_name": "string",
                    "device": "string",
                    "ip_address": "string",
                    "location": "string",
                    "join_time": "string [date-time]",
                    "leave_time": "string [date-time]",
                    "pc_name": "string",
                    "domain": "string",
                    "mac_addr": "string",
                    "harddisk_id": "string",
                    "version": "string",
                    "user_qos": [
                      {
                        "date_time": "string [date-time]",
                        "audio_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string"
                        },
                        "audio_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string"
                        },
                        "video_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "video_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "as_input": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "as_output": {
                          "bitrate": "string",
                          "latency": "string",
                          "jitter": "string",
                          "avg_loss": "string",
                          "max_loss": "string",
                          "resolution": "string",
                          "frame_rate": "string"
                        },
                        "cpu_usage": {
                          "zoom_min_cpu_usage": "string",
                          "zoom_avg_cpu_usage": "string",
                          "zoom_max_cpu_usage": "string",
                          "system_max_cpu_usage": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/webinars/{webinarId}/participants/sharing": {
      "get": {
        "summary": "Get Sharing/Recording Details of Webinar Participants",
        "description": "Retrieve the sharing and recording details of participants from live or past webinars. <br><br>\n**Scopes:** `dashboard:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantShare",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The webinar type.",
            "type": "string",
            "default": "live",
            "enum": [
              "past",
              "live"
            ],
            "x-enum-descriptions": [
              "past webinar",
              "live webinar"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of participants.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Participant UUID."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "details": {
                            "type": "array",
                            "description": "Array of sharing and recording details.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "description": "Type of content shared."
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Start time of sharing."
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "End time of sharing."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": "integer",
                "page_size": "integer",
                "total_records": "integer",
                "next_page_token": "string",
                "participants": [
                  {
                    "id": "string",
                    "user_id": "string",
                    "user_name": "string",
                    "details": [
                      {
                        "content": "string",
                        "start_time": "string",
                        "end_time": "string"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/zoomrooms": {
      "get": {
        "summary": "List Zoom Rooms",
        "description": "List information on all Zoom Rooms in an account.<br><br>\n**Scopes:** `dashboard_zr:read:admin`\n**Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardZoomRooms",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of Zoom rooms returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "title": "Zoom Room List",
              "description": "Zoom Room List",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "array",
                      "description": "Array of Zoom Rooms",
                      "items": {
                        "type": "object",
                        "title": "Zoom Room",
                        "description": "Zoom room.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Zoom room ID."
                          },
                          "room_name": {
                            "type": "string",
                            "description": "Zoom room name."
                          },
                          "calender_name": {
                            "type": "string",
                            "description": "Zoom calendar name."
                          },
                          "email": {
                            "type": "string",
                            "description": "Zoom room email."
                          },
                          "account_type": {
                            "type": "string",
                            "description": "Zoom room email type."
                          },
                          "status": {
                            "type": "string",
                            "description": "Zoom room status."
                          },
                          "device_ip": {
                            "type": "string",
                            "description": "Zoom room device IP."
                          },
                          "camera": {
                            "type": "string",
                            "description": "Zoom room camera."
                          },
                          "microphone": {
                            "type": "string",
                            "description": "Zoom room microphone."
                          },
                          "speaker": {
                            "type": "string",
                            "description": "Zoom room speaker."
                          },
                          "last_start_time": {
                            "type": "string",
                            "description": "Zoom room last start time."
                          },
                          "location": {
                            "type": "string",
                            "description": "Zoom room location."
                          },
                          "health": {
                            "type": "string"
                          },
                          "issues": {
                            "type": "array",
                            "description": "Zoom Room issues.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "zoom_rooms": [
                  {
                    "id": "EbgjgjhghZY9wh0A",
                    "room_name": "testZoomRoom",
                    "calendar_name": "ghjghdjd@sjdfhjdf.gjgg",
                    "email": "ghjghdjd@sjdfhjdf.gjgg",
                    "account_type": "Work Email",
                    "status": "Offline",
                    "device_ip": "Computer : 10.10.26.49",
                    "camera": "Integrated Webcam",
                    "microphone": "Microphone Array (Realtek Audio)",
                    "speaker": "Speakers / Headphones (Realtek Audio)",
                    "last_start_time": "2019-08-29T16:37:07Z",
                    "issues": [
                      "Zoom room is offline"
                    ],
                    "health": "critical"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/zoomrooms/{zoomroomId}": {
      "get": {
        "summary": "Get Zoom Rooms Details",
        "description": "The Zoom Rooms dashboard metrics lets you know the type of configuration a Zoom room has and details on the meetings held in that room. \n\nUse this API to retrieve information on a specific room.<br><br>\n**Scopes:** `dashboard_zr:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardZoomRoom",
        "parameters": [
          {
            "in": "path",
            "name": "zoomroomId",
            "description": "The Zoom room ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nZoom room returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "title": "Zoom Room",
                  "description": "Zoom room.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Zoom room ID."
                    },
                    "room_name": {
                      "type": "string",
                      "description": "Zoom room name."
                    },
                    "calender_name": {
                      "type": "string",
                      "description": "Zoom calendar name."
                    },
                    "email": {
                      "type": "string",
                      "description": "Zoom room email."
                    },
                    "account_type": {
                      "type": "string",
                      "description": "Zoom room email type."
                    },
                    "status": {
                      "type": "string",
                      "description": "Zoom room status."
                    },
                    "device_ip": {
                      "type": "string",
                      "description": "Zoom room device IP."
                    },
                    "camera": {
                      "type": "string",
                      "description": "Zoom room camera."
                    },
                    "microphone": {
                      "type": "string",
                      "description": "Zoom room microphone."
                    },
                    "speaker": {
                      "type": "string",
                      "description": "Zoom room speaker."
                    },
                    "last_start_time": {
                      "type": "string",
                      "description": "Zoom room last start time."
                    },
                    "location": {
                      "type": "string",
                      "description": "Zoom room location."
                    },
                    "issues": {
                      "type": "array",
                      "description": "Issues encountered by the Zoom Room.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "health": {
                      "type": "string",
                      "description": "Health of the Zoom Room."
                    }
                  }
                },
                {
                  "properties": {
                    "live_meeting": {
                      "type": "object",
                      "title": "Meeting Metrics",
                      "description": "Meeting metric details.",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it."
                        },
                        "id": {
                          "type": "integer",
                          "description": "Meeting ID."
                        },
                        "topic": {
                          "type": "string",
                          "description": "Meeting topic."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host display name."
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address of the host."
                        },
                        "user_type": {
                          "type": "string",
                          "description": "License type of the user."
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Meeting start time."
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Meeting end time."
                        },
                        "duration": {
                          "type": "string",
                          "description": "Meeting duration."
                        },
                        "participants": {
                          "type": "integer",
                          "description": "Meeting participant count."
                        },
                        "has_pstn": {
                          "type": "boolean",
                          "description": "Indicates whether or not the PSTN was used in the meeting."
                        },
                        "has_voip": {
                          "type": "boolean",
                          "description": "Indicates whether or not VoIP was used in the meeting."
                        },
                        "has_3rd_party_audio": {
                          "type": "boolean",
                          "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting."
                        },
                        "has_video": {
                          "type": "boolean",
                          "description": "Indicates whether or not video was used in the meeting."
                        },
                        "has_screen_share": {
                          "type": "boolean",
                          "description": "Indicates whether or not screenshare feature was used in the meeting."
                        },
                        "has_recording": {
                          "type": "boolean",
                          "description": "Indicates whether or not the recording feature was used in the meeting. "
                        },
                        "has_sip": {
                          "type": "boolean",
                          "description": "Indicates whether or not someone joined the meeting using SIP."
                        },
                        "in_room_participants": {
                          "type": "integer",
                          "description": "The number of Zoom Room participants in the meeting."
                        },
                        "dept": {
                          "type": "string",
                          "description": "Department of the host."
                        }
                      }
                    },
                    "past_meetings": {
                      "allOf": [
                        {
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date",
                              "description": "Start date for this report in 'yyyy-mm-dd' format."
                            },
                            "to": {
                              "type": "string",
                              "format": "date",
                              "description": "End date for this report in 'yyyy-mm-dd' format."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Pagination object.",
                          "properties": {
                            "page_count": {
                              "type": "integer",
                              "description": "The number of pages returned for the request made."
                            },
                            "page_size": {
                              "type": "integer",
                              "description": "The number of records returned within a single API call.",
                              "default": 30,
                              "maximum": 300
                            },
                            "total_records": {
                              "type": "integer",
                              "description": "The number of all records available across pages."
                            },
                            "next_page_token": {
                              "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "properties": {
                            "meetings": {
                              "type": "array",
                              "description": "Array of meeting objects.",
                              "items": {
                                "type": "object",
                                "title": "Meeting Metrics",
                                "description": "Meeting metric details.",
                                "properties": {
                                  "uuid": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it."
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "Meeting ID."
                                  },
                                  "topic": {
                                    "type": "string",
                                    "description": "Meeting topic."
                                  },
                                  "host": {
                                    "type": "string",
                                    "description": "Host display name."
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "Email address of the host."
                                  },
                                  "user_type": {
                                    "type": "string",
                                    "description": "License type of the user."
                                  },
                                  "start_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Meeting start time."
                                  },
                                  "end_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Meeting end time."
                                  },
                                  "duration": {
                                    "type": "string",
                                    "description": "Meeting duration."
                                  },
                                  "participants": {
                                    "type": "integer",
                                    "description": "Meeting participant count."
                                  },
                                  "has_pstn": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not the PSTN was used in the meeting."
                                  },
                                  "has_voip": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not VoIP was used in the meeting."
                                  },
                                  "has_3rd_party_audio": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting."
                                  },
                                  "has_video": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not video was used in the meeting."
                                  },
                                  "has_screen_share": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not screenshare feature was used in the meeting."
                                  },
                                  "has_recording": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not the recording feature was used in the meeting. "
                                  },
                                  "has_sip": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not someone joined the meeting using SIP."
                                  },
                                  "in_room_participants": {
                                    "type": "integer",
                                    "description": "The number of Zoom Room participants in the meeting."
                                  },
                                  "dept": {
                                    "type": "string",
                                    "description": "Department of the host."
                                  }
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": "object"
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "account_type": "Work Email",
                "calendar_name": "testZoomRoom",
                "camera": "Integrated Webcam",
                "device_ip": "Computer : 10.10.10.10; Controller : 11.11.11.11",
                "email": "hdfjdfs@someemail.dhfdhfd",
                "health": "critical",
                "id": "fdjdsfdYYYYY",
                "issues": [
                  "Zoom room is offline"
                ],
                "last_start_time": "2020-01-30T17:47:47Z",
                "live_meeting": {},
                "microphone": "Microphone Array (Realtek Audio)",
                "past_meetings": {
                  "from": "2020-03-01",
                  "meetings": [],
                  "next_page_token": "",
                  "page_count": 0,
                  "page_size": 30,
                  "to": "2020-03-02",
                  "total_records": 0
                },
                "room_name": "testZoomRoom",
                "speaker": "Speakers / Headphones (Realtek Audio)",
                "status": "Offline"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe next page token is either invalid or has expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/crc": {
      "get": {
        "summary": "Get CRC Port Usage",
        "description": "A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom meeting. \n\nUse this API to get the hour by hour CRC Port usage for a specified period of time. <aside class='notice'>We will provide the report for a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is set to \"2017-10-10\", we will adjust \"from\" to \"2017-09-10\".</aside><br><br>\n**Prerequisites:**<br>\n* Business, Education or API Plan.\n* Room Connector must be enabled on the account.<br><br>\n**Scopes:** `dashboard_crc:read:admin`<br> ",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardCRC",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nCRC usage returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report."
                    }
                  }
                },
                {
                  "properties": {
                    "crc_ports_usage": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date_time": {
                            "type": "string",
                            "description": "The date and time of the port usage.",
                            "format": "date-time"
                          },
                          "crc_ports_hour_usage": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "hour": {
                                  "type": "string",
                                  "description": "Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23."
                                },
                                "max_usage": {
                                  "type": "integer",
                                  "description": "The maximum number of concurrent ports that are being used in that hour."
                                },
                                "total_usage": {
                                  "type": "integer",
                                  "description": "The total number of H.323/SIP connections in that hour."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "from": "2019-04-03",
                "to": "2019-04-04",
                "crc_ports_usage": [
                  {
                    "date_time": "2019-05-01T15:13:39.424Z",
                    "crc_ports_hour_usage": [
                      {
                        "hour": "sed",
                        "max_usage": 8,
                        "total_usage": 14
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/im": {
      "get": {
        "summary": "Get IM Metrics",
        "description": "Get [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4) on how users are utilizing the Zoom Chat Client.<br><br> <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n**Scope:** `dashboard_im:read:admin`<br>\n**Prerequisites:**<br>\n* Business or a higher plan.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardIM",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nIM details returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "User ID."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name."
                          },
                          "email": {
                            "type": "string",
                            "description": "User email.",
                            "format": "email"
                          },
                          "total_send": {
                            "type": "integer",
                            "description": "Total number of messages sent by the user."
                          },
                          "total_receive": {
                            "type": "integer",
                            "description": "Total number of messages received by the user."
                          },
                          "group_send": {
                            "type": "integer",
                            "description": "Total number of messages sent by the user in channels."
                          },
                          "group_receive": {
                            "type": "integer",
                            "description": "Total number of messages received by the user in channels."
                          },
                          "calls_send": {
                            "type": "integer",
                            "description": "Total number of instant meeting calls made by the user."
                          },
                          "calls_receive": {
                            "type": "integer",
                            "description": "Total number of instant meeting calls received by the user."
                          },
                          "files_send": {
                            "type": "integer",
                            "description": "Total number of files sent by the user."
                          },
                          "files_receive": {
                            "type": "integer",
                            "description": "Total number of files received by the user."
                          },
                          "images_send": {
                            "type": "integer",
                            "description": "Total number of images sent by the user."
                          },
                          "images_receive": {
                            "type": "integer",
                            "description": "Total number of images received by the user."
                          },
                          "voice_send": {
                            "type": "integer",
                            "description": "Total number of voice files sent by the user."
                          },
                          "voice_receive": {
                            "type": "integer",
                            "description": "Total number of voice files received by the user."
                          },
                          "videos_send": {
                            "type": "integer",
                            "description": "Total number of video files sent by the user."
                          },
                          "videos_receive": {
                            "type": "integer",
                            "description": "Total number of video files received by the user. "
                          },
                          "emoji_send": {
                            "type": "integer",
                            "description": "Total number of emojis sent by the user."
                          },
                          "emoji_receive": {
                            "type": "integer",
                            "description": "Total number of emojis received by the user."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-04-09",
                "to": "2019-05-09",
                "page_count": 1,
                "page_size": 1,
                "total_records": 1,
                "users": [
                  {
                    "user_id": "sdfjk393lklrf",
                    "user_name": "culpa ipsum",
                    "email": "ipsum@ipsumemailksfj.sfhkf",
                    "total_send": 20,
                    "total_receive": 30,
                    "group_send": 5,
                    "group_receive": 5,
                    "calls_send": 1,
                    "calls_receive": 5,
                    "files_send": 3,
                    "files_receive": 8,
                    "images_send": 5,
                    "images_receive": 2,
                    "voice_send": 0,
                    "voice_receive": 3,
                    "videos_send": 1,
                    "videos_receive": 2,
                    "emoji_send": 4,
                    "emoji_receive": 5
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/client/feedback": {
      "get": {
        "summary": "List Zoom Meetings Client Feedbacks",
        "description": "Retrieve survey results from [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Prerequisites:**\n* Business or higher account\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.\n\n**Scope:** `account:read:admin`<br>\n ",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardClientFeedback",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned.",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "format": "date",
                  "description": "Start date for this report"
                },
                "to": {
                  "type": "string",
                  "format": "date",
                  "description": "End date for this report"
                },
                "total_records": {
                  "type": "integer",
                  "description": "The number of all records available across pages"
                },
                "client_feedbacks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feedback_id": {
                        "type": "string",
                        "description": "Feedback Id"
                      },
                      "feedback_name": {
                        "type": "string",
                        "description": "Feedback Name"
                      },
                      "participants_count": {
                        "type": "integer",
                        "description": "The number of participants that upvoted the feedback."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "from": "2013-03-16",
                "to": "2013-04-16",
                "total_records": 2,
                "client_feedbacks": [
                  {
                    "feedback_id": "53532100000",
                    "feedback_name": "Poor audio quality.",
                    "participants_count": 1
                  },
                  {
                    "feedback_id": "53532100000",
                    "feedback_name": "They could not hear us.",
                    "participants_count": 2
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/zoomrooms/issues": {
      "get": {
        "summary": "Get Top 25 issues of Zoom Rooms",
        "description": "Get Top 25 issues of Zoom Rooms.<br>\n**Scopes:** `dashboard_zr:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Zoom Rooms set up.\n\n",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardZoomRoomIssue",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room Issue details returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    }
                  }
                },
                {
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "issue_name": {
                            "type": "string",
                            "description": "Issue Name.<br> The value of the this field could be one of the following:<br>\n* `Room Controller disconnected`<br>\n* `Room Controller connected`\n* `Selected camera has disconnected`\n* `Selected camera is reconnected`\n* `Selected microphone has disconnected`\n* `Selected microphone is reconnected`\n* `Selected speaker has disconnected`\n* `Selected speaker is reconnected`\n* `Zoom room is offline`\n* `Zoom room is online`\n* `High CPU usage is detected`\n* `Low bandwidth network is detected`\n* `{name} battery is low`\n* `{name} battery is normal`\n* `{name} disconnected`\n* `{name} connected`\n* `{name} is not charging`\n\nPossible values for {name}: <br>\n* Zoom Rooms Computer \n* Controller\n* Scheduling Display"
                          },
                          "zoom_rooms_count": {
                            "type": "integer",
                            "description": "Zoom Room Count of Issue"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "from": "2019-08-15",
                "to": "2019-09-15",
                "total_records": 2,
                "room_issues": [
                  {
                    "issue_name": "Controller disconnected",
                    "zoom_rooms_count": 1
                  },
                  {
                    "issue_name": "Controller is not charging",
                    "zoom_rooms_count": 1
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/issues/zoomrooms": {
      "get": {
        "summary": "Get Top 25 Zoom Rooms with Issues",
        "description": "Get information on top 25 Zoom Rooms with issues in a month. The month specified with the \"from\" and \"to\" range should fall within the last six months.<br>\n**Scope:** `dashboard_home:read:admin`<br> <br>\n**Prerequisites:**<br>\n* Business or a higher plan.\n* Zoom Room must be enabled in the account.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardIssueZoomRoom",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    }
                  }
                },
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Zoom Room ID"
                          },
                          "room_name": {
                            "type": "string",
                            "description": "Zoom Room Name"
                          },
                          "issues_count": {
                            "type": "integer",
                            "description": "Issue Count of Zoom Room"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/issues/zoomrooms/{zoomroomId}": {
      "get": {
        "summary": "Get Issues of Zoom Rooms ",
        "description": "Get information about the issues that occured on the Top 25 **Zoom Rooms with issues** in an acount. <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Scope:** `dashboard_home:read:admin`<br> <br>\n**Prerequisites:** <br>\n* Business or a higher plan.\n* Zoom Room must be enabled in the account.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardIssueDetailZoomRoom",
        "parameters": [
          {
            "in": "path",
            "name": "zoomroomId",
            "description": "The Zoom room ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "issue_details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "issue": {
                            "type": "string",
                            "description": "Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>\n* `Room Controller disconnected`<br>\n* `Room Controller connected`\n* `Selected camera has disconnected`\n* `Selected camera is reconnected`\n* `Selected microphone has disconnected`\n* `Selected microphone is reconnected`\n* `Selected speaker has disconnected`\n* `Selected speaker is reconnected`\n* `Zoom room is offline`\n* `Zoom room is online`\n* `High CPU usage is detected`\n* `Low bandwidth network is detected`\n* `{name} battery is low`\n* `{name} battery is normal`\n* `{name} disconnected`\n* `{name} connected`\n* `{name} is not charging`\n\nPossible values for {name}: <br>\n* Zoom Rooms Computer \n* Controller\n* Scheduling Display"
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which the issue was encountered."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-02-28",
                "to": "2019-03-28",
                "page_count": 1,
                "page_size": 1,
                "total_records": 1,
                "issue_details": [
                  {
                    "issue": "Zoom room is offline",
                    "time": "2019-03-07T11:17:00.956Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/daily": {
      "get": {
        "summary": "Get Daily Usage Report",
        "description": "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n ",
        "tags": [
          "Reports"
        ],
        "operationId": "reportDaily",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "description": "Year for this report",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "month",
            "description": "Month for this report",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}.",
            "schema": {
              "properties": {
                "year": {
                  "type": "integer",
                  "description": "Year for this report."
                },
                "month": {
                  "type": "integer",
                  "description": "Month for this report."
                },
                "dates": {
                  "type": "array",
                  "description": "Array of date objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for this object."
                      },
                      "new_users": {
                        "type": "integer",
                        "description": "Number of new users on this date."
                      },
                      "meetings": {
                        "type": "integer",
                        "description": "Number of meetings on this date."
                      },
                      "participants": {
                        "type": "integer",
                        "description": "Number of participants on this date."
                      },
                      "meeting_minutes": {
                        "type": "integer",
                        "description": "Number of meeting minutes on this date."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "year": 2019,
                "month": 6,
                "dates": [
                  {
                    "date": "2019-06-01",
                    "new_users": 3,
                    "meetings": 10,
                    "participants": 20,
                    "meeting_minutes": 100
                  },
                  {
                    "date": "2019-06-02",
                    "new_users": 0,
                    "meetings": 20,
                    "participants": 80,
                    "meeting_minutes": 200
                  },
                  {
                    "date": "2019-06-03",
                    "new_users": 10,
                    "meetings": 35,
                    "participants": 100,
                    "meeting_minutes": 380
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/users": {
      "get": {
        "summary": "Get Active/Inactive Host Reports",
        "description": "A user is considered to be an active host during the month specified in the \"from\" and \"to\" range, if the user has hosted at least one meeting during this period. If the user didn't host any meetings during this period, the user is considered to be inactive.<br>The Active Hosts report displays a list of meetings, participants, and meeting minutes for a specific time range, up to one month. The month should fall within the last six months.<br>The Inactive Hosts report pulls a list of users who were not active during a specific period of time. \nUse this API to retrieve an active or inactive host report for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months. <br>You can specify the type of report and date range using the query parameters.<br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportUsers",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "x-enum-descriptions": [
              "Active hosts",
              "Inactive hosts"
            ]
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "total_meetings": {
                      "type": "integer",
                      "description": "Number of meetings for this range."
                    },
                    "total_participants": {
                      "type": "integer",
                      "description": "Number of participants for this range."
                    },
                    "total_meeting_minutes": {
                      "type": "integer",
                      "description": "Number of meeting minutes for this range."
                    },
                    "users": {
                      "type": "array",
                      "description": "Array of user objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "User ID."
                          },
                          "email": {
                            "type": "string",
                            "description": "User email."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name."
                          },
                          "type": {
                            "type": "integer",
                            "description": "User type."
                          },
                          "dept": {
                            "type": "string",
                            "description": "User department."
                          },
                          "meetings": {
                            "type": "integer",
                            "description": "Number of meetings for user."
                          },
                          "participants": {
                            "type": "integer",
                            "description": "Number of participants in meetings for user."
                          },
                          "meeting_minutes": {
                            "type": "integer",
                            "description": "Number of meeting minutes for user."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-08-14",
                "to": "2019-09-14",
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 3,
                "total_meetings": 2,
                "total_participants": 10,
                "total_meeting_minutes": 10,
                "users": [
                  {
                    "id": "BzBAAAAAAAfprg",
                    "email": "reag12343@gmail.com",
                    "user_name": "cbcvbvcbvbc",
                    "type": 1,
                    "dept": "",
                    "meetings": 1,
                    "participants": 5,
                    "meeting_minutes": 5,
                    "last_client_version": "4.4.1242.0623(win)",
                    "last_login_time": "2019-09-13T16:21:40Z",
                    "create_time": "2019-09-13T16:20:30Z"
                  },
                  {
                    "id": "0CAAAAA6jxcA",
                    "email": "mynewemailgoog@gmail.com",
                    "user_name": "xgdzgdfg",
                    "type": 1,
                    "dept": "Business",
                    "meetings": 0,
                    "participants": 0,
                    "meeting_minutes": 0,
                    "last_client_version": "4.4.1242.0623(win)",
                    "last_login_time": "2019-07-23T00:28:00Z",
                    "create_time": "2019-07-23T00:27:34Z"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/users/{userId}/meetings": {
      "get": {
        "summary": "Get Meeting Reports",
        "description": "Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on a past meeting for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months.\n\nMeetings will only be returned in the response if the meeting has two or more unique participants.  <br><br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "enum": [
              "past",
              "pastOne"
            ],
            "default": "past",
            "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. "
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report."
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "Array of meeting objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Meeting UUID. Each meeting instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                          },
                          "id": {
                            "type": "integer",
                            "description": "Meeting ID."
                          },
                          "type": {
                            "type": "integer",
                            "description": "Meeting type."
                          },
                          "topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name."
                          },
                          "user_email": {
                            "type": "string",
                            "description": "User email."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting start time."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting end time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Meeting duration."
                          },
                          "total_minutes": {
                            "type": "integer",
                            "description": "Sum of meeting minutes from all participants in the meeting."
                          },
                          "participants_count": {
                            "type": "integer",
                            "description": "Number of meeting participants."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": "{\n    \"from\": \"2019-07-14\",\n    \"to\": \"2019-08-14\",\n    \"page_count\": 1,\n    \"page_size\": 30,\n    \"total_records\": 9,\n    \"next_page_token\": \"\",\n    \"meetings\": [\n        {\n            \"uuid\": \"/lqsAAAA5VBBBw==\",\n            \"id\": 12345,\n            \"host_id\": \"gdfg3434dsssfss\",\n            \"type\": 2,\n            \"topic\": \"MyTestMeetings\",\n            \"user_name\": \"Prashant Bhandari\",\n            \"user_email\": \"pb@hjdskfhds.fdskhfhds\",\n            \"start_time\": \"2019-07-15T23:24:52Z\",\n            \"end_time\": \"2019-07-15T23:30:19Z\",\n            \"duration\": 6,\n            \"total_minutes\": 11,\n            \"participants_count\": 2\n        },\n        {\n            \"uuid\": \"411bbbbbbcVyw==\",\n            \"id\": 000000,\n            \"host_id\": \"gdfg3434dsssfss\",\n            \"type\": 2,\n            \"topic\": \"My Meeting\",\n            \"user_name\": \"Raju Khanal\",\n            \"user_email\": \"srhkdjfh@jh.fsadghjm\",\n            \"start_time\": \"2019-07-16T17:14:39Z\",\n            \"end_time\": \"2019-07-16T17:26:20Z\",\n            \"duration\": 12,\n            \"total_minutes\": 17,\n            \"participants_count\": 2\n        }\n    ]\n}"
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        }
      }
    },
    "/report/meetings/{meetingId}": {
      "get": {
        "summary": "Get Meeting Detail Reports",
        "description": "Get a detailed report for a past meeting. <br>\n**Scopes:** `report:read:admin`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingDetails",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account.",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID. Each meeting instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type."
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic."
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name."
                },
                "user_email": {
                  "type": "string",
                  "description": "User email."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time."
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration."
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B"
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants."
                },
                "tracking_fields": {
                  "type": "array",
                  "description": "Tracking fields.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "Tracking fields type."
                      },
                      "value": {
                        "type": "string",
                        "description": "Tracking fields value."
                      }
                    }
                  }
                },
                "dept": {
                  "type": "string",
                  "description": "Department of the host."
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "sfsdfsdfc6122222d",
                "id": 1000000,
                "type": 2,
                "topic": "Awesome meeting",
                "user_name": "officia",
                "user_email": "officia@sdhgdfgh.fsdfs",
                "start_time": "2019-07-14T09:05:19.754Z",
                "end_time": "2019-08-14T09:05:19.754Z",
                "duration": 11,
                "total_minutes": 11,
                "participants_count": 4,
                "tracking_fields": [
                  {
                    "field": "Meeting Purpose",
                    "value": "Sales"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/meetings/{meetingId}/participants": {
      "get": {
        "summary": "Get Meeting Participant Reports",
        "description": "Get participant report for a past meeting.<br><br>\n**Scopes:** `report:read:admin`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingParticipants",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of meeting participant objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID."
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Participant email."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Participant duration."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_size": "30",
                "total_records": "1",
                "next_page_token": "",
                "participants": [
                  {
                    "id": "dskfjladjskfl",
                    "user_id": "sdfjkldsfdfgdfg",
                    "name": "Riya",
                    "user_email": "riya@jdfghsdfgsd.fdjfhdf",
                    "join_time": "2019-02-01T12:34:12.660Z",
                    "leave_time": "2019-03-01T12:34:12.660Z",
                    "duration": "20"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/meetings/{meetingId}/polls": {
      "get": {
        "summary": "Get Meeting Poll Reports",
        "description": "Retrieve a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. <br><br>\n**Scopes:** `report:read:admin`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingPolls",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting polls report returned.<br>\nThis is only available for paid account:{accountId}.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID. Each meeting instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time."
                },
                "questions": {
                  "type": "array",
                  "description": "Array of meeting question objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name.<br> If \"anonymous\" option is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email."
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 123456,
                "uuid": "gsdjfhsdfkhjdsf",
                "status": "ended",
                "start_time": "2019-02-01T12:34:12.660Z",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "Sam S",
                    "email": "myemail@jksdlfkjdf.djfk",
                    "question_details": [
                      {
                        "question": "How are you?",
                        "answer": "I am wonderful."
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/webinars/{webinarId}": {
      "get": {
        "summary": "Get Webinar Detail Reports",
        "description": "Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.  <br><br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan with Webinar add-on.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarDetails",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}.",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID. Each meeting instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type."
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic."
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name."
                },
                "user_email": {
                  "type": "string",
                  "description": "User email."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time."
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration."
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B"
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants."
                },
                "tracking_fields": {
                  "type": "array",
                  "description": "Tracking fields.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "Tracking fields type."
                      },
                      "value": {
                        "type": "string",
                        "description": "Tracking fields value."
                      }
                    }
                  }
                },
                "dept": {
                  "type": "string",
                  "description": "Department of the host."
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "urn4fe6caeb98",
                "id": 51788617,
                "type": 5,
                "topic": "My Health Webinar",
                "user_name": "Utfdfdget",
                "user_email": "fdsjkfhhkd@hkdfhkdf.ghfjd",
                "start_time": "2019-11-18T03:15:00.056Z",
                "end_time": "2019-11-18T03:15:20.056Z",
                "duration": 20,
                "total_minutes": 10,
                "participants_count": 13,
                "tracking_fields": [
                  {
                    "field": "Webinar Purpose",
                    "value": "Health awareness"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/webinars/{webinarId}/participants": {
      "get": {
        "summary": "Get Webinar Participant Reports",
        "description": "Get detailed report on each attendee of a webinar.<br><br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarParticipants",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account: {accountId}.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages."
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of webinar participant objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID."
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID."
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name."
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Participant email."
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time."
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Participant duration."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_size": "30",
                "total_records": "1",
                "next_page_token": "",
                "participants": [
                  {
                    "id": "dskfjladjskfl",
                    "user_id": "sdfjkldsfdfgdfg",
                    "name": "Riya",
                    "user_email": "riya@jdfghsdfgsd.fdjfhdf",
                    "join_time": "2019-02-01T12:34:12.660Z",
                    "leave_time": "2019-03-01T12:34:12.660Z",
                    "duration": "20"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nThe next page token is invalid or has expired.<br>\nCan not access the webinar information, {webinarId}."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/webinars/{webinarId}/polls": {
      "get": {
        "summary": "Get Webinar Poll Reports",
        "description": "Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarPolls",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID."
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Webinar UUID. Each webinar instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar start time."
                },
                "questions": {
                  "type": "array",
                  "description": "Array of webinar question objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name.<br><br> If the poll was created as an anonymous poll, participant's information will remain anonymous and the value of the `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email."
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 123456,
                "uuid": "gsdjfhsdfkhjdsf",
                "status": "ended",
                "start_time": "2019-02-01T12:34:12.660Z",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "Sam S",
                    "email": "myemail@jksdlfkjdf.djfk",
                    "question_details": [
                      {
                        "question": "How are you?",
                        "answer": "I am wonderful."
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/webinars/{webinarId}/qa": {
      "get": {
        "summary": "Get Webinar Q&A Report",
        "description": "The Question & Answer (Q&A) feature for webinars allows attendees to ask questions during the webinar and for the panelists, co-hosts and host to answer their questions.\n\nUse this API to retrieve a report on question and answers from past webinars. <br><br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarQA",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nMissing webinar subscription plan.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID."
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Webinar UUID. Each Webinar instance will generate its own UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar start time."
                },
                "questions": {
                  "type": "array",
                  "description": "Array of webinar question objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name.<br> \n\nIf anonymous [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&A without providing their name, the value of the `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email."
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 14321,
                "uuid": "urgvhge945",
                "start_time": "2019-02-01T12:34:12.660Z",
                "questions": [
                  {
                    "name": "Harry S",
                    "email": "pidufshdsuf@djdfdsfd.ghk",
                    "question_details": [
                      {
                        "question": "How often will you hold this webinar?",
                        "answer": "Once a month."
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/telephone": {
      "get": {
        "summary": "Get Telephone Reports",
        "description": "The Telephone report allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.\n\n**Scopes:** `report:read:admin`<br>\n <br>**Prerequisites:**<br>\n* Pro or higher plan.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportTelephone",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Audio types:<br>`1` - Toll-free Call-in & Call-out.\n`3` - SIP Connected Audio",
            "type": "string",
            "enum": [
              1,
              3
            ],
            "x-enum-descriptions": [
              "Toll-free Call-in & Call-out"
            ],
            "default": "1"
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nMissing toll-free audio conference plan subscription.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report."
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "telephony_usage": {
                      "type": "array",
                      "description": "Array of telephony objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "integer",
                            "description": "Meeting ID."
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "Telephone number."
                          },
                          "host_name": {
                            "type": "string",
                            "description": "User display name."
                          },
                          "host_email": {
                            "type": "string",
                            "description": "User email."
                          },
                          "dept": {
                            "type": "string",
                            "description": "User department."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting start time."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting end time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Meeting duration."
                          },
                          "total": {
                            "type": "number",
                            "description": "Total."
                          },
                          "country_name": {
                            "type": "string",
                            "description": "Country name."
                          },
                          "meeting_type": {
                            "type": "string",
                            "description": "Meeting type."
                          },
                          "call_in_number": {
                            "type": "string",
                            "description": "Call-in number."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": "{\n  \"from\": \"2019-06-20\",\n  \"to\": \"2019-07-20\",\n  \"page_count\": 1,\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": 1,\n  \"telephony_usage\": [\n    {\n      \"meeting_id\": 00000,\n      \"phone_number\": \"000002001\",\n      \"host_name\": \"minim c\",\n      \"host_email\": \"nadhkasdg@jdskfhdsf.hjhj\",\n      \"dept\": \"Billing\",\n      \"start_time\": \"2019-07-15T23:24:52Z\",\n      \"end_time\": \"2019-07-15T23:30:19Z\",\n      \"duration\": 6,\n      \"total\": 11,\n      \"country_name\": \"nulla laboris cillum\",\n      \"meeting_type\": \"voluptate\",\n      \"call_in_number\": \"occaecat et reprehenderit\"\n    }\n  ]\n}"
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/cloud_recording": {
      "get": {
        "summary": "Get Cloud Recording Usage Report",
        "description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day ealier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days. <br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n ",
        "tags": [
          "Reports"
        ],
        "operationId": "reportCloudRecording",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "properties": {
                    "cloud_recording_storage": {
                      "type": "array",
                      "description": "Array of cloud usage objects",
                      "items": {
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of the usage"
                          },
                          "usage": {
                            "type": "string",
                            "description": "Storage used on the date"
                          },
                          "plan_usage": {
                            "type": "string",
                            "description": "Paid storage"
                          },
                          "free_usage": {
                            "type": "string",
                            "description": "Free storage"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-09-14",
                "to": "2019-09-14",
                "cloud_recording_storage": [
                  {
                    "date": "2019-09-14",
                    "usage": "29 MB",
                    "plan_usage": "0",
                    "free_usage": "1 GB"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/operationlogs": {
      "get": {
        "summary": "Get Operation Logs Report",
        "description": "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.<br>\nUse this API to retrieve operation logs report for a specified period of time.<br>\n**Scopes:** `report:read:admin`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportOperationLogs",
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The amount of records returns within a single API call. ",
                      "default": 30,
                      "maximum": 300
                    },
                    "next_page_token": {
                      "description": "The Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "operation_logs": {
                      "type": "array",
                      "description": "Array of operation log objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the operation was performed."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The user who performed the operation."
                          },
                          "category_type": {
                            "type": "string",
                            "description": "Category type"
                          },
                          "action": {
                            "type": "string",
                            "description": "Action"
                          },
                          "operation_detail": {
                            "type": "string",
                            "description": "Operation detail"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2019-08-14",
                "to": "2019-09-14",
                "page_size": 30,
                "next_page_token": "czxcxdvxvddc",
                "operation_logs": [
                  {
                    "time": "2019-08-20T19:09:01Z",
                    "operator": "someuser@sfksfhksdfsf.com",
                    "category_type": "User",
                    "action": "Update",
                    "operation_detail": "Activate User sjkfhdsf@jdfgkhgd.com "
                  },
                  {
                    "time": "2019-08-20T18:59:56Z",
                    "operator": "anotheruser@sfhidshfidshufds.com",
                    "category_type": "User",
                    "action": "Update",
                    "operation_detail": "Deactivate User mynewemail@jdfkdshfhjdsf.ffasdm "
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "List Roles",
        "description": "List [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) on your account\n\n**Scopes:** `role:read:admin`<br>\n <br>\n**Prerequisites** :\n*  Pro or higher plan. \n*  For setting the initial role, you must be the Account Owner. \n*  For subsequent role management, you must be the Account Owner or user with role management permissions.",
        "tags": [
          "Roles"
        ],
        "operationId": "roles",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of roles returned.",
            "schema": {
              "type": "object",
              "title": "Role List",
              "description": "List of Roles",
              "allOf": [
                {
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    },
                    "roles": {
                      "type": "array",
                      "description": "List of Roles objects",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Role Id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Role Name"
                              },
                              "description": {
                                "type": "string",
                                "description": "Role Description"
                              },
                              "total_members": {
                                "type": "integer",
                                "description": "Total members in this role"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "total_records": 3,
                "roles": [
                  {
                    "id": "0",
                    "name": "Owner",
                    "description": "Account owner has full privileges to access and manage a Zoom account.",
                    "total_members": 1
                  },
                  {
                    "id": "1",
                    "name": "Admin",
                    "description": "Admins have wide range privileges to access and manage a Zoom account.",
                    "total_members": 0
                  },
                  {
                    "id": "2",
                    "name": "Member",
                    "description": "Members have access to basic Zoom video meeting functions but no account management privileges.",
                    "total_members": 1
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>**Error Code:** `4700`<br>Invalid access token, does not contain role:read:admin scope."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "**Status Code:** `200`<br>\nYou do not have the permission to create a role.",
            "schema": {}
          },
          "201": {
            "description": "**Status Code:** `201`<br>\nRole created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Role Id"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the role."
                },
                "total_members": {
                  "description": "Total members assigned to the role.",
                  "type": "integer"
                },
                "privileges": {
                  "type": "array",
                  "description": "[Privileges](https://marketplace.zoom.us/docs/api-reference/other-references/privileges) provided to the role.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nThe name field cannot be empty."
          }
        },
        "summary": "Create a Role",
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. \n\n**Pre-requisite:**<br>\n* Pro or higher plan.\n* For setting the initial role, you must be the Account Owner.<br>\n* For subsequent role management, you must be the Account Owner or user with role management permissions.<br>\n**Scopes:** `role:write:admin`<br>\n ",
        "operationId": "createRole",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the role."
                },
                "privileges": {
                  "type": "array",
                  "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "Group Administrator",
                "description": "A person with this role can view and manage groups.",
                "privileges": [
                  "User:Read",
                  "User:Edit",
                  "Group:Read",
                  "Group:Edit"
                ]
              }
            }
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/roles/{roleId}/members": {
      "get": {
        "summary": "List Members in a Role",
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to list all the members that are assigned a specific role.\n\n**Scope:** `role:read:admin`<br>\n <br>**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "tags": [
          "Roles"
        ],
        "operationId": "roleMembers",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "description": "The role ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess",
            "schema": {
              "type": "object",
              "title": "Role Members List",
              "description": "List of a Role Members",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "members": {
                      "type": "array",
                      "description": "List of a Role Members",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Member ID"
                              },
                              "email": {
                                "type": "string",
                                "description": "Member Email"
                              },
                              "first_name": {
                                "type": "string",
                                "description": "Member First Name"
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Member Last Name"
                              },
                              "type": {
                                "type": "integer",
                                "description": "Member Type"
                              },
                              "department": {
                                "type": "string",
                                "description": "Member Department"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "members": [
                  {
                    "id": "zadksadjBBBBBBB8uQ",
                    "email": "someemail.email.com",
                    "first_name": "Taylor",
                    "last_name": "Gomez",
                    "type": 2,
                    "department": "Chemistry"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Role not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Assign a Role to Members",
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to [assign a role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control#h_748b6fd8-5057-4cf4-bbfd-787909c09db0) to members.\n\n**Scopes:** `role:write:admin`<br>\n <br>\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "tags": [
          "Roles"
        ],
        "operationId": "AddRoleMembers",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "description": "The role ID",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "description": "Role members",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "description": "Array of userId/user email of users to whom you would like to assign this role. Upto 30 users can be assigned a role at once.",
                  "uniqueItems": false,
                  "maxItems": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID of the user to whom you would like to assign the role. "
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used.",
                        "format": "email"
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "members": [
                  {
                    "id": "dsfdsgrdgt"
                  },
                  {
                    "id": "sdkjsfdffds"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>Members Added",
            "headers": {
              "Content-Location": {
                "description": "Location of created members",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "string",
                  "description": "User ID"
                },
                "add_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time at which the members are assigned to the role."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `1034`\nRole does not exist.<br><br>\n**Error Code:** `300`<br>\nRoleId required.<br>\nCan’t delete or add members for Normal/Owner roles.<br><br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/roles/{roleId}/members/{memberId}": {
      "delete": {
        "summary": "Unassign a Member's Role",
        "description": "User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to unassign a user's role.\n\n**Scope:** `role:write:admin`<br>\n <br>\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "tags": [
          "Roles"
        ],
        "operationId": "roleMemberDelete",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "description": "The role ID",
            "type": "string",
            "required": true
          },
          {
            "name": "memberId",
            "description": "Member's ID",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nRole withdrawn from user."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Role or Member not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/tsp": {
      "get": {
        "summary": "Get Account's TSP Information",
        "description": "Get information on Telephony Service Provider on an account level.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n\n**Prerequisites:**<br>\n* A Pro or a higher plan.",
        "tags": [
          "TSP"
        ],
        "operationId": "tsp",
        "parameters": [],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nTSP account detail returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "tsp_provider": {
                  "type": "string",
                  "description": "Telephony Service Provider."
                },
                "enable": {
                  "type": "boolean",
                  "description": "Enable Telephony Service Provider for account users."
                },
                "dial_in_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country Code"
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number, length is less than 16",
                        "maxLength": 16
                      },
                      "type": {
                        "type": "string",
                        "description": "Dial-in number type."
                      }
                    }
                  }
                },
                "tsp_enabled": {
                  "type": "boolean",
                  "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features."
                },
                "master_account_setting_extended": {
                  "type": "boolean",
                  "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account."
                },
                "modify_credential_forbidden": {
                  "type": "boolean",
                  "description": "Control restriction on account users being able to modify their TSP credentials."
                },
                "dial_in_number_unrestricted": {
                  "type": "boolean",
                  "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers."
                },
                "tsp_bridge": {
                  "type": "string",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ],
                  "description": "Telephony bridge zone"
                }
              }
            },
            "examples": {
              "application/json": {
                "tsp_provider": "someprovidername",
                "enable": true,
                "dial_in_numbers": [
                  {
                    "code": "111",
                    "number": "000000000",
                    "type": "toll"
                  }
                ],
                "tsp_enabled": true,
                "master_account_setting_extended": false,
                "modify_credential_forbidden": true,
                "dial_in_number_unrestricted": false,
                "tsp_bridge": "string"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update account's TSP information",
        "description": "Update information of the Telephony Service Provider set up on an account.<br>\n**Prerequisites**:<br>\nTSP account option should be enabled.<br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "operationId": "tspUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "TSP Account",
            "schema": {
              "type": "object",
              "properties": {
                "tsp_provider": {
                  "type": "string",
                  "description": "3rd party audio conferencing provider"
                },
                "enable": {
                  "type": "boolean",
                  "description": "Enable 3rd party audio conferencing for account users"
                },
                "tsp_enabled": {
                  "type": "boolean",
                  "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features."
                },
                "master_account_setting_extended": {
                  "type": "boolean",
                  "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account."
                },
                "modify_credential_forbidden": {
                  "type": "boolean",
                  "description": "Control restriction on account users being able to modify their TSP credentials."
                },
                "dial_in_number_unrestricted": {
                  "type": "boolean",
                  "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers."
                },
                "tsp_bridge": {
                  "type": "string",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ],
                  "description": "Telephony bridge"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "tsp_provider": "string",
                "enable": "boolean",
                "tsp_enabled": "boolean",
                "master_account_setting_extended": "boolean",
                "modify_credential_forbidden": "boolean",
                "dial_in_number_unrestricted": "boolean",
                "tsp_bridge": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nTSP Account updated.",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n\n**Error Code:** `300`<br>\nInvalid parameter: tsp_bridge"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List Users",
        "description": "A Zoom account can have one or more users. Use this API to list users on your account.<br><br>\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>Starting August 18, 2019, if an account holds more than 5000 users, the response data will no longer be sorted by email.</p>\n\n**Scopes:** `user:read:admin`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users with an inactive status.<br>`pending` - Users with a pending status.",
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "x-enum-descriptions": [
              "users with active status",
              "users with inactive status",
              "users with pending status"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          },
          {
            "in": "query",
            "name": "role_id",
            "type": "string",
            "description": "Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API. "
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser list returned.",
            "schema": {
              "type": "object",
              "properties": {
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned for the request made."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results.",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "default": 30,
                  "description": "The number of records returned within a single API call.",
                  "maximum": 300
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of all the records available across pages."
                },
                "users": {
                  "type": "array",
                  "description": "List of user objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "User's first name.",
                        "maxLength": 64
                      },
                      "last_name": {
                        "type": "string",
                        "description": "User's last name.",
                        "maxLength": 64
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address.",
                        "default": "john.doe@gmail.com"
                      },
                      "type": {
                        "type": "integer",
                        "description": "User's plan type.<br>\n`1` - Basic.<br>\n`2` - Licensed.<br>\n`3` - On-prem.\n",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "description": "User's status",
                        "example": "active"
                      },
                      "pmi": {
                        "type": "integer",
                        "description": "Personal meeting ID of the user.",
                        "format": "int64"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "The time zone of the user."
                      },
                      "dept": {
                        "type": "string",
                        "description": "Department, if provided by the user."
                      },
                      "created_at": {
                        "type": "string",
                        "description": "The time when user's account was created.",
                        "format": "date-time"
                      },
                      "last_login_time": {
                        "type": "string",
                        "description": "User's last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.",
                        "format": "date-time"
                      },
                      "last_client_version": {
                        "type": "string",
                        "description": "The last client version that user used to login."
                      },
                      "group_ids": {
                        "type": "array",
                        "description": "IDs of groups where the user is a member.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "im_group_ids": {
                        "type": "array",
                        "description": "IDs of IM directory groups where the user is a member.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "verified": {
                        "type": "integer",
                        "description": "Display whether the user's email address for the Zoom account is verified or not. <br>\n`1` - Verified user email.<br>\n`0` - User's email not verified."
                      }
                    },
                    "required": [
                      "email",
                      "type"
                    ]
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"page_count\": 1,\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": 1,\n  \"users\": [\n    {\n      \"id\": \"z8yAAAAA8bbbQ\",\n      \"first_name\": \"Melina\",\n      \"last_name\": \"Ghimire\",\n      \"email\": \"mel@jfggdhfhdfj.djfhdsfh\",\n      \"type\": 2,\n      \"pmi\": 581111112,\n      \"timezone\": \"America/Los_Angeles\",\n      \"verified\": 1,\n      \"dept\": \"\",\n      \"created_at\": \"2018-11-15T01:10:08Z\",\n      \"last_login_time\": \"2019-09-13T21:08:52Z\",\n      \"last_client_version\": \"4.4.55383.0716(android)\",\n      \"pic_url\": \"https://lh4.googleusercontent.com/-someurl/photo.jpg\",\n      \"im_group_ids\": [\n        \"Abdsjkfhdhfj\"\n      ],\n      \"status\": \"active\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create Users",
        "description": "A Zoom account can have one or more users. Use this API to add a new user to your account.<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Specify how to create the new user: <br>`create` - User will get an email sent from Zoom. There is a confirmation link in this email. The user will then need to use the link to activate their Zoom account. The user can then set or change their password.<br>`autoCreate` - This action is provided for the enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain.<br>`custCreate` - Users created via this option do not have passwords and will not have the ability to log into the Zoom Web Portal or the Zoom Client. To use this option, you must contact the ISV Platform Sales team at isv@zoom.us.<br>`ssoCreate` - This action is provided for the enabled “Pre-provisioning SSO User” option. A user created in this way has no password. If not a basic user, a personal vanity URL using the user name (no domain) of the provisioning email will be generated. If the user name or PMI is invalid or occupied, it will use a random number or random personal vanity URL.",
                  "enum": [
                    "create",
                    "autoCreate",
                    "custCreate",
                    "ssoCreate"
                  ],
                  "x-enum-descriptions": [
                    "User will get an email sent from Zoom. There is a confirmation link in this email. User will then need to click this link to activate their account to the Zoom service. The user can set or change their password in Zoom. <br/>.",
                    "This action is provided for enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain without notifying the user. <br/>",
                    "This action is provided for API partner only. User created in this way has no password and is not able to log into the Zoom web site or client. <br/>",
                    "This action is provided for enabled \"Pre-provisioning SSO User\" option. User created in this way has no password. If it is not a basic user, will generate a Personal Vanity URL using user name (no domain) of the provisioning email. If user name or pmi is invalid or occupied, will use random number/random personal vanity URL. <br/>"
                  ]
                },
                "user_info": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "User email address.",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Basic",
                        "Licensed",
                        "On-prem"
                      ],
                      "description": "User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
                    },
                    "first_name": {
                      "type": "string",
                      "description": "User's first name: cannot contain more than 5 Chinese words.",
                      "maxLength": 64
                    },
                    "last_name": {
                      "type": "string",
                      "description": "User's last name: cannot contain more than 5 Chinese words.",
                      "maxLength": 64
                    },
                    "password": {
                      "type": "string",
                      "description": "User password. Only used for the \"autoCreate\" function. The password has to have a minimum of 8 characters and maximum of 32 characters. It must have at least one letter (a, b, c..), at least one number (1, 2, 3...) and include both uppercase and lowercase letters. It should not contain only one identical character repeatedly ('11111111' or 'aaaaaaaa') and it cannot contain consecutive characters ('12345678' or 'abcdefgh').",
                      "format": "password",
                      "minLength": 8,
                      "maxLength": 32
                    }
                  },
                  "required": [
                    "email",
                    "type"
                  ]
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "create",
                "user_info": {
                  "email": "dhjdfkghdskjf@fgkjfdlgjfkd.gh",
                  "type": 1,
                  "first_name": "Terry",
                  "last_name": "Jones"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nUser created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created User",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User ID."
                },
                "first_name": {
                  "type": "string",
                  "description": "User's first name.",
                  "maxLength": 64
                },
                "last_name": {
                  "type": "string",
                  "description": "User's last name.",
                  "maxLength": 64
                },
                "email": {
                  "type": "string",
                  "description": "User email address."
                },
                "type": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Basic",
                    "Licensed",
                    "On-prem"
                  ],
                  "description": "User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "string",
                "first_name": "string",
                "last_name": "string",
                "email": "string",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>\nInvalid parameter: password<br><br>\n**Error Code:** `200`<br>No privilege. <br>You can add max {maxNumber} free users. <br>\nYou can't add paid users. <br>You can add max {maxNumber} paid users. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>**Error Code:** `1009`<br>The user {email} already holds an active account.<br><br>**Error Code:** `1107`<br>Email domain is blocked<br>\n**Error Code:** `1108`<br>User type permission check failed.<br><br>\n**Error Code:** `1116`<br>Email address {email} doesn't match limited domains: {domains}<br><br>\n**Error Code:** `2002`<br>Only available for Enabled Pre-provisioning SSO Partners<br><br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}<br>",
            "examples": {}
          },
          "409": {
            "description": "**HTTP Status Code:** `409`<br>User with that email already exists<br>\n**Error Code:** `1005`<br>Email {email} has already been used.",
            "examples": {}
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a User",
        "description": "A Zoom account can have one or more users. Use this API to view information of a specific user on a Zoom account.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>If a user's status is pending, only `id` and `created_at` fields will be returned. The value of `created_at` will be the time at which the API call was made until the user activates their account.</p>",
        "tags": [
          "Users"
        ],
        "operationId": "user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "login_type",
            "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
            "type": "string",
            "enum": [
              "0",
              "1",
              "99",
              "100",
              "101"
            ],
            "x-enum-descriptions": [
              "Facebook",
              "Google",
              "API",
              "Zoom",
              "SSO"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nUser object returned.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The user object represents a specific user on Zoom.",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "description": "User's first name.",
                      "maxLength": 64
                    },
                    "last_name": {
                      "type": "string",
                      "description": "User's last name.",
                      "maxLength": 64
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email address.",
                      "default": "john.doe@email.com"
                    },
                    "type": {
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Basic",
                        "Licensed",
                        "On-prem"
                      ],
                      "description": "User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
                    },
                    "role_name": {
                      "type": "string",
                      "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name."
                    },
                    "pmi": {
                      "type": "integer",
                      "description": "Personal meeting ID.",
                      "format": "int64"
                    },
                    "use_pmi": {
                      "type": "boolean",
                      "description": "Use Personal Meeting ID for instant meetings.",
                      "default": false
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The time zone of the user."
                    },
                    "dept": {
                      "type": "string",
                      "description": "Department."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "User create time."
                    },
                    "last_login_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "User last login time."
                    },
                    "last_client_version": {
                      "type": "string",
                      "description": "User last login client version."
                    }
                  },
                  "required": [
                    "email",
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string",
                      "description": "Default language for the Zoom Web Portal."
                    },
                    "phone_country": {
                      "type": "string",
                      "description": "User's country for Company Phone Number."
                    },
                    "phone_number": {
                      "type": "string",
                      "description": "User's phone number."
                    },
                    "vanity_url": {
                      "type": "string",
                      "description": "Personal meeting room URL, if the user has one."
                    },
                    "personal_meeting_url": {
                      "type": "string",
                      "description": "User's personal meeting url."
                    },
                    "verified": {
                      "type": "integer",
                      "description": "Displays whether user is verified or not. <br>\n`1` - Account verified.<br>\n`0` - Account not verified."
                    },
                    "pic_url": {
                      "type": "string",
                      "description": "The URL for user's profile picture."
                    },
                    "cms_user_id": {
                      "type": "string",
                      "description": "CMS ID of user, only enabled for Kaltura integration."
                    },
                    "account_id": {
                      "type": "string",
                      "description": "User's account ID."
                    },
                    "host_key": {
                      "type": "string",
                      "description": "User's host key."
                    },
                    "use_pmi": {
                      "type": "boolean",
                      "default": false,
                      "description": "Displays `true` if user has enabled PMI for instant meetinsgs, `false` otherwise."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "active",
                        "inactive"
                      ],
                      "x-enum-descriptions": [
                        "Pending User",
                        "Active User",
                        "Inactive User"
                      ],
                      "description": "Status of user's account."
                    },
                    "group_ids": {
                      "type": "array",
                      "description": "IDs of the web groups user belongs to. ",
                      "items": {
                        "type": "string"
                      }
                    },
                    "im_group_ids": {
                      "type": "array",
                      "description": "IM IDs of the groups user belongs to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jid": {
                      "type": "string"
                    },
                    "job_title": {
                      "type": "string",
                      "description": "User's job title."
                    },
                    "company": {
                      "type": "string",
                      "description": "User's company."
                    },
                    "location": {
                      "type": "string",
                      "description": "User's location."
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": "{\n    \"id\": \"z8dsdsdsdsdCfp8uQ\",\n    \"first_name\": \"Harry\",\n    \"last_name\": \"Grande\",\n    \"email\": \"harryg@dfkjdslfjkdsfjkdsf.fsdfdfd\",\n    \"type\": 2,\n    \"role_name\": \"Owner\",\n    \"pmi\": 000000000,\n    \"use_pmi\": false,\n    \"personal_meeting_url\": \"https://zoom.us/j/6352635623323434343443\",\n    \"timezone\": \"America/Los_Angeles\",\n    \"verified\": 1,\n    \"dept\": \"\",\n    \"created_at\": \"2018-11-15T01:10:08Z\",\n    \"last_login_time\": \"2019-09-13T21:08:52Z\",\n    \"last_client_version\": \"4.4.55383.0716(android)\",\n    \"pic_url\": \"https://lh4.googleusercontent.com/-hsgfhdgsfghdsfghfd-photo.jpg\",\n    \"host_key\": \"0000\",\n    \"jid\": \"hghghfghdfghdfhgh@xmpp.zoom.us\",\n    \"group_ids\": [],\n    \"im_group_ids\": [\n        \"CcSAAAAAAABBBVoQ\"\n    ],\n    \"account_id\": \"EAAAAAbbbbbCCCCHMA\",\n    \"language\": \"en-US\",\n    \"phone_country\": \"USA\",\n    \"phone_number\": \"00000000\",\n    \"status\": \"active\"\n}"
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nInvite not exist. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        }
      },
      "patch": {
        "summary": "Update User",
        "description": "Update information on a user's Zoom [profile](https://support.zoom.us/hc/en-us/articles/201363203-My-Profile).<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n\n",
        "tags": [
          "Users"
        ],
        "operationId": "userUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "type": "object",
              "description": "The user update object represents a user on Zoom.",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "User's first name. Cannot contain more than 5 Chinese characters.",
                  "maxLength": 64
                },
                "last_name": {
                  "type": "string",
                  "description": "User's last name. Cannot contain more than 5 Chinese characters.",
                  "maxLength": 64
                },
                "type": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Basic",
                    "Licensed",
                    "On-prem"
                  ],
                  "description": "User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
                },
                "pmi": {
                  "type": "integer",
                  "description": "Personal meeting ID: length must be 10.",
                  "minLength": 10,
                  "maxLength": 10
                },
                "use_pmi": {
                  "type": "boolean",
                  "description": "Use Personal Meeting ID for instant meetings.",
                  "default": false
                },
                "timezone": {
                  "type": "string",
                  "description": "The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list."
                },
                "language": {
                  "type": "string",
                  "description": "language"
                },
                "dept": {
                  "type": "string",
                  "description": "Department for user profile: use for report."
                },
                "vanity_name": {
                  "type": "string",
                  "description": "Personal meeting room name."
                },
                "host_key": {
                  "type": "string",
                  "description": "Host key. It should be a 6-10 digit number.",
                  "minLength": 6,
                  "maxLength": 10
                },
                "cms_user_id": {
                  "type": "string",
                  "description": "Kaltura user ID."
                },
                "job_title": {
                  "type": "string",
                  "description": "User's job title.",
                  "maxLength": 128
                },
                "company": {
                  "type": "string",
                  "description": "User's company.",
                  "maxLength": 255
                },
                "location": {
                  "type": "string",
                  "description": "User's location.",
                  "maxLength": 256
                },
                "phone_number": {
                  "type": "string",
                  "description": "Phone number of the user. To update a phone number, you must also provide the `phone_country` field."
                },
                "phone_country": {
                  "type": "string",
                  "description": "[Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "first_name": "string",
                "last_name": "string",
                "type": "integer",
                "pmi": "integer",
                "timezone": "string [date-time]",
                "dept": "string",
                "vanity_name": "string",
                "host_key": "string",
                "cms_user_id": "string",
                "job_title": "string",
                "company": "string",
                "location": "string",
                "phone_number": "string",
                "phone_country": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "login_type",
            "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
            "type": "string",
            "enum": [
              "0",
              "1",
              "99",
              "100",
              "101"
            ],
            "x-enum-descriptions": [
              "Facebook",
              "Google",
              "API",
              "Zoom",
              "SSO"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `404` <br> \nUser updated.",
            "examples": {}
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nInvalid parameter: password",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> You can't add paid users.<br>You can add max {maxNumber} paid users.<br>Cannot update Room user to free: {userId}<br><br>\n**Error Code:** `1108`<br>User type permission check failed.<br><br>\n**Error Code:** `1109`<br>Host is not a paid user.\n**Error Code:** `1120`<br>Invite not exist. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>\n**Error Code:** `4100`<br>\nUser is already taken by a user from your account. Choose another Personal Link Name and try again."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Deleting a user permanently removes them and their data from Zoom. They will be able to create a new Zoom account with the same email address if they have access to it. An account owner or an account admin can transfer meetings, webinars and cloud recordings to another Zoom user before deleting, but if not transferred, they will be permanently deleted.<br><br>\n\nBy default, this API disassociates (unlinks) a user from the associated account. The disassociation will give them their own basic, free Zoom account. It will not be associated with your account, and they will be able to purchase their own licenses. You can transfer the user's data (meetings, webinars and cloud recordings) to another user before disassociation.<br> To permanently delete a user, specify \"delete\" as the value of the `action` query parameter.\n**Scopes:** `user:write:admin` `user:write`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "action",
            "description": "Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`",
            "type": "string",
            "default": "disassociate",
            "enum": [
              "disassociate",
              "delete"
            ],
            "x-enum-descriptions": [
              "Disassociate a user",
              "Permanently delete a user"
            ]
          },
          {
            "in": "query",
            "name": "transfer_email",
            "description": "Transfer email.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "transfer_meeting",
            "description": "Transfer meeting.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "transfer_webinar",
            "description": "Transfer webinar.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "transfer_recording",
            "description": "Transfer recording.",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nUser deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.\n**Error Code:** `200`<br>Cannot delete a user out of your account. <br>Cannot delete a Zoom Rooms user. <br><br>\n**Error Code:** `1000`<br>\nThe user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:** `1107`<br>Can not disassociate the user with managed domain<br><br>\n**Error Code:** `1117`<br>Can not disassociate Admin user<br><br>\n**Error Code:** `1120`<br>Invite not exist. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {email} not exist or not belong to this account.<br>"
          }
        }
      }
    },
    "/users/{userId}/assistants": {
      "get": {
        "summary": "List User Assistants",
        "description": "List a user's assistants.\n\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>\n**Prerequisites**: <br>\n* Current user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:read:admin` `user:read`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistants",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.",
            "schema": {
              "type": "object",
              "title": "User assistants List",
              "description": "List of user's assistants.",
              "properties": {
                "assistants": {
                  "type": "array",
                  "description": "List of User's assistants.",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Assistant's user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "Assistant's email address."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "assistants": [
                  {
                    "id": "ddgdfgfdgfgg",
                    "email": "sfhdfkjdf@hjdsf.fdjf"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        }
      },
      "post": {
        "summary": "Add Assistants",
        "description": "Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>Use this API to assign assistants to a user. <br> In the request body, provide either the User ID or the email address of the user.<br><br>\n**Prerequisite**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantCreate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "description": "User assistant.",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "title": "User assistants List",
              "description": "List of user's assistants.",
              "properties": {
                "assistants": {
                  "type": "array",
                  "description": "List of User's assistants.",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Assistant's user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "Assistant's email address."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "assistants": [
                  {
                    "id": "sfdsfdfdg",
                    "email": "dgdfgfgfg@jhsdf.djf"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nAssistant added.",
            "headers": {
              "Content-Location": {
                "description": "Location of created assistant",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "string",
                  "description": "User ID."
                },
                "add_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "string",
                "add_at": "string [date-time]"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: {userId} <br>\nThe user must either be a Licensed user or an On-prem user : {userId}. <br>\nCan't assign scheduling privilege to yourself.<br>\nCan't find user {email}.<br>\nUser {email} already has already granted scheduling privilege.<br>\nUser {email} doesn't belong to current account.<br>\nThe user must either be a Licensed user or an On-prem user : {email}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete User Assistants",
        "description": "Delete all assistants of the current user.<br> Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>\n**Prerequisite**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantsDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}": {
      "delete": {
        "summary": "Delete a User Assistant",
        "description": "Delete a specific assistant of a user.\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>\n**Prerequisites**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "assistantId",
            "description": "Assistant ID.",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        }
      }
    },
    "/users/{userId}/schedulers": {
      "get": {
        "summary": "List User Schedulers",
        "description": "List all the schedulers of a user. Schedulers in this context are the users for whom the current user can schedule meetings for.\n\nFor instance, if the current user (i.e., the user whose userId was passed in the path parameter of this API call) is user A, the response of this API will contain a list of user(s), for whom user A can schedule and manage meetings. User A is the assistant of these users and thus has scheduling privilege for these user(s). \n\n**Prerequisites**:\n* Current user must be under the same account as the scheduler.<br>\n**Scopes**: `user:read:admin` `user:read`\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulers",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.",
            "schema": {
              "type": "object",
              "title": "User schedulers List",
              "description": "List of user's schedulers.",
              "properties": {
                "schedulers": {
                  "type": "array",
                  "description": "List of users for whom the current user can schedule meetings.",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier (User ID) of the Scheduler."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the scheduler."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "schedulers": [
                  {
                    "id": "abXXXsfsidfhjdsfhd768944",
                    "email": "sjfgduyfghdfg@myemail.dshdgshfd"
                  },
                  {
                    "id": "abXXbbbbioepur8944",
                    "email": "sdhfefghdfg@myemail.dshdgshfd"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete User Schedulers",
        "description": "Delete all of a user's schedulers. Schedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of any user. \n\n**Prerequisite**: Current user (assistant) must be under the same account as the scheduler.<br>\n**Scopes**: `user:write:admin` `user:write`",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulersDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br> All schedulers deleted.\n",
            "examples": {
              "application/json": ""
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/schedulers/{schedulerId}": {
      "delete": {
        "summary": "Delete a Scheduler",
        "description": "Delete a Scheduler.\n\nSchedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of this scheduler. \n\n**Prerequisite**: Current user must be under the same account as the scheduler.<br>\n**Scopes**: `user:write:admin` `user:write`",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulerDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "schedulerId",
            "description": "Scheduler's ID.",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nScheduler deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/picture": {
      "post": {
        "summary": "Upload a User's Profile Picture",
        "description": "Upload a user's profile picture.<br><br>\n\nProvide `multipart/form-data` as the value of the `content-type` header for this request. \n\n**Scopes:** `user:write:admin` `user:write`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userPicture",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "pic_file",
            "description": "\n\nThe file's path. ",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>Picture uploaded.",
            "headers": {
              "Content-Location": {
                "description": "Location of user's picture",
                "type": "string"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `124`<br>\nFile is empty or File size cannot exceed 2M or Only jpg/jpeg, gif or png image file can be uploaded.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{userId}/settings": {
      "get": {
        "summary": "Get User Settings",
        "description": "Retrieve a user's settings.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n\n",
        "tags": [
          "Users"
        ],
        "operationId": "userSettings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "login_type",
            "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
            "type": "string",
            "enum": [
              "0",
              "1",
              "99",
              "100",
              "101"
            ],
            "x-enum-descriptions": [
              "Facebook",
              "Google",
              "API",
              "Zoom",
              "SSO"
            ]
          },
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true,
            "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account."
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser settings returned.",
            "schema": {
              "oneOf": [
                {
                  "title": "User settings",
                  "type": "object",
                  "properties": {
                    "schedule_meeting": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with host video on."
                        },
                        "participants_video": {
                          "type": "boolean",
                          "description": "Start meetings with participants video on."
                        },
                        "audio_type": {
                          "type": "string",
                          "default": "voip",
                          "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
                          "enum": [
                            "both",
                            "telephony",
                            "voip",
                            "thirdParty"
                          ],
                          "x-enum-descriptions": [
                            "Telephony and VoIP",
                            "Audio PSTN telephony only",
                            "VoIP only",
                            "3rd party audio conference"
                          ]
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Join the meeting before host arrives."
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "Require a password for personal meetings if attendees can join before host."
                        },
                        "pstn_password_protected": {
                          "type": "boolean",
                          "description": "Generate and require password for participants joining by phone."
                        },
                        "use_pmi_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
                        },
                        "use_pmi_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "Require a password when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "default_password_for_scheduled_meetings": {
                          "type": "string",
                          "description": "Password for already scheduled meetings\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Require a password for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
                          "enum": [
                            "jbh_only",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Only meetings with Join Before Host enabled",
                            "All meetings using PMI",
                            "Disabled"
                          ]
                        },
                        "pmi_password": {
                          "type": "string",
                          "description": "PMI password\n"
                        }
                      }
                    },
                    "in_meeting": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "End-to-end encryption required for all meetings."
                        },
                        "chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable chat during meeting for all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable 1:1 private chat between participants during meetings."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Auto save all in-meeting chats."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "default": "all",
                          "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
                          "enum": [
                            "host",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "when host joins/leaves",
                            "when any participant joins/leaves",
                            "no join/leave sound"
                          ]
                        },
                        "record_play_voice": {
                          "type": "boolean",
                          "description": "Record and play their own voice."
                        },
                        "feedback": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable option to send feedback to Zoom at the end of the meeting."
                        },
                        "co_host": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow the host to add co-hosts."
                        },
                        "polling": {
                          "type": "boolean",
                          "default": false,
                          "description": "Add polls to the meeting controls."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to put attendee on hold."
                        },
                        "annotation": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow participants to use annotation tools."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable remote control during screensharing."
                        },
                        "non_verbal_feedback": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable non-verbal feedback through screens."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to split meeting participants into separate breakout rooms."
                        },
                        "remote_support": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to provide 1:1 remote support to a participant."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable closed captions."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable group HD video."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable virtual background."
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow another user to take control of the camera."
                        },
                        "share_dual_camera": {
                          "type": "boolean",
                          "default": false,
                          "description": "Share dual camera (deprecated)."
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable Waiting room - if enabled, attendees can only join after host approves."
                        },
                        "allow_live_streaming": {
                          "type": "boolean",
                          "description": "Allow live streaming."
                        },
                        "workplace_by_facebook": {
                          "type": "boolean",
                          "description": "Allow livestreaming by host through Workplace by Facebook."
                        },
                        "custom_live_streaming_service": {
                          "type": "boolean",
                          "description": "Allow custom live streaming."
                        },
                        "custom_service_instructions": {
                          "type": "string",
                          "description": "Custom service instructions."
                        },
                        "show_meeting_control_toolbar": {
                          "description": "Always show meeting controls during a meeting.",
                          "type": "boolean"
                        }
                      }
                    },
                    "email_notification": {
                      "title": "User settings: Notification settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "jbh_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When attendees join meeting before host."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When a meeting is cancelled."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When an alternative host is set or removed from a meeting."
                        },
                        "schedule_for_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "recording": {
                      "title": "User settings: Recording settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Local recording."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "default": false,
                          "description": "Cloud recording."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record the active speaker view."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record the gallery view."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "default": false,
                          "description": "Save chat text from the meeting."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "default": false,
                          "description": "Show timestamp on video."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Audio transcript."
                        },
                        "auto_recording": {
                          "type": "string",
                          "default": "local",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record on local",
                            "Record on cloud",
                            "Disabled"
                          ]
                        },
                        "host_pause_stop_recording": {
                          "type": "boolean",
                          "default": false,
                          "description": "Host can pause/stop the auto recording in the cloud."
                        },
                        "auto_delete_cmr": {
                          "type": "boolean",
                          "default": false,
                          "description": "Auto delete cloud recordings."
                        },
                        "auto_delete_cmr_days": {
                          "type": "integer",
                          "description": "A specified number of days of auto delete cloud recordings.",
                          "minimum": 1,
                          "maximum": 60
                        }
                      }
                    },
                    "telephony": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Third party audio conference."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "default": "",
                          "description": "Third party audio conference info.",
                          "maxLength": 2048
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show the international numbers link on the invitation email."
                        }
                      }
                    },
                    "feature": {
                      "title": "User settings: Feature settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "meeting_capacity": {
                          "type": "integer",
                          "description": "User’s meeting capacity."
                        },
                        "large_meeting": {
                          "type": "boolean",
                          "description": "Large meeting feature."
                        },
                        "large_meeting_capacity": {
                          "type": "integer",
                          "description": "Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not."
                        },
                        "webinar": {
                          "type": "boolean",
                          "description": "Webinar feature."
                        },
                        "webinar_capacity": {
                          "type": "integer",
                          "description": "Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not."
                        },
                        "cn_meeting": {
                          "type": "boolean",
                          "description": "CN meeting feature."
                        },
                        "in_meeting": {
                          "type": "boolean",
                          "description": "IN meeting feature."
                        },
                        "zoom_phone": {
                          "type": "boolean",
                          "description": "Zoom phone feature."
                        }
                      }
                    },
                    "tsp": {
                      "type": "object",
                      "description": "Account Settings: TSP.",
                      "title": "User settings: TSP settings",
                      "properties": {
                        "call_out": {
                          "type": "boolean",
                          "description": "Call Out"
                        },
                        "call_out_countries": {
                          "type": "array",
                          "description": "Call Out Countries/Regions",
                          "items": {}
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show international numbers link on the invitation email"
                        }
                      }
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "description": "Meeting Authentication Options",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domains"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "description": "Authentication Options",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "internally",
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domians"
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participants_video": true,
                  "audio_type": "voip",
                  "join_before_host": false,
                  "force_pmi_jbh_password": false,
                  "pstn_password_protected": false,
                  "use_pmi_for_scheduled_meetings": true,
                  "use_pmi_for_instant_meetings": true,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_scheduled_meetings": true,
                  "default_password_for_scheduled_meetings": "12345",
                  "require_password_for_instant_meetings": false,
                  "require_password_for_pmi_meetings": "all",
                  "pmi_password": "12345"
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": false,
                  "private_chat": false,
                  "auto_saving_chat": false,
                  "entry_exit_chime": "all",
                  "record_play_voice": false,
                  "feedback": false,
                  "co_host": false,
                  "polling": false,
                  "attendee_on_hold": false,
                  "annotation": false,
                  "remote_control": false,
                  "non_verbal_feedback": false,
                  "breakout_room": false,
                  "remote_support": false,
                  "closed_caption": false,
                  "group_hd": false,
                  "virtual_background": false,
                  "far_end_camera_control": false,
                  "share_dual_camera": false,
                  "waiting_room": false,
                  "allow_live_streaming": true,
                  "workplace_by_facebook": true,
                  "custom_live_streaming_service": false,
                  "custom_service_instructions": "Submit your feedback.",
                  "show_meeting_control_toolbar": false
                },
                "email_notification": {
                  "jbh_reminder": false,
                  "cancel_meeting_reminder": false,
                  "alternative_host_reminder": false,
                  "schedule_for_reminder": false
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": false,
                  "record_speaker_view": false,
                  "record_gallery_view": false,
                  "record_audio_file": false,
                  "save_chat_text": false,
                  "show_timestamp": false,
                  "recording_audio_transcript": false,
                  "auto_recording": "local",
                  "host_pause_stop_recording": false,
                  "auto_delete_cmr": false,
                  "auto_delete_cmr_days": 36
                },
                "telephony": {
                  "third_party_audio": false,
                  "audio_conference_info": "",
                  "show_international_numbers_link": false
                },
                "feature": {
                  "meeting_capacity": 100,
                  "large_meeting": false,
                  "webinar": false,
                  "cn_meeting": true,
                  "in_meeting": false,
                  "zoom_phone": false
                },
                "tsp": {
                  "call_out": true,
                  "call_out_countries": [
                    "USA"
                  ],
                  "show_international_numbers_link": false
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nInvite not exist. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update User Settings",
        "description": "Update a user's settings.<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n\n",
        "tags": [
          "Users"
        ],
        "operationId": "userSettingsUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User Settings",
            "schema": {
              "oneOf": [
                {
                  "title": "User settings",
                  "type": "object",
                  "properties": {
                    "schedule_meeting": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with host video on."
                        },
                        "participants_video": {
                          "type": "boolean",
                          "description": "Start meetings with participants video on."
                        },
                        "audio_type": {
                          "type": "string",
                          "default": "voip",
                          "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
                          "enum": [
                            "both",
                            "telephony",
                            "voip",
                            "thirdParty"
                          ],
                          "x-enum-descriptions": [
                            "Telephony and VoIP",
                            "Audio PSTN telephony only",
                            "VoIP only",
                            "3rd party audio conference"
                          ]
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Join the meeting before host arrives."
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "Require a password for personal meetings if attendees can join before host."
                        },
                        "pstn_password_protected": {
                          "type": "boolean",
                          "description": "Generate and require password for participants joining by phone."
                        },
                        "use_pmi_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
                        },
                        "use_pmi_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "Require a password when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "default_password_for_scheduled_meetings": {
                          "type": "string",
                          "description": "Password for already scheduled meetings\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Require a password for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
                          "enum": [
                            "jbh_only",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Only meetings with Join Before Host enabled",
                            "All meetings using PMI",
                            "Disabled"
                          ]
                        },
                        "pmi_password": {
                          "type": "string",
                          "description": "PMI password\n"
                        }
                      }
                    },
                    "in_meeting": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "End-to-end encryption required for all meetings."
                        },
                        "chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable chat during meeting for all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable 1:1 private chat between participants during meetings."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "default": false,
                          "description": "Auto save all in-meeting chats."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "default": "all",
                          "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
                          "enum": [
                            "host",
                            "all",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "when host joins/leaves",
                            "when any participant joins/leaves",
                            "no join/leave sound"
                          ]
                        },
                        "record_play_voice": {
                          "type": "boolean",
                          "description": "Record and play their own voice."
                        },
                        "feedback": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable option to send feedback to Zoom at the end of the meeting."
                        },
                        "co_host": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow the host to add co-hosts."
                        },
                        "polling": {
                          "type": "boolean",
                          "default": false,
                          "description": "Add polls to the meeting controls."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to put attendee on hold."
                        },
                        "annotation": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow participants to use annotation tools."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable remote control during screensharing."
                        },
                        "non_verbal_feedback": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable non-verbal feedback through screens."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to split meeting participants into separate breakout rooms."
                        },
                        "remote_support": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow host to provide 1:1 remote support to a participant."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable closed captions."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable group HD video."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable virtual background."
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "default": false,
                          "description": "Allow another user to take control of the camera."
                        },
                        "share_dual_camera": {
                          "type": "boolean",
                          "default": false,
                          "description": "Share dual camera (deprecated)."
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enable Waiting room - if enabled, attendees can only join after host approves."
                        },
                        "allow_live_streaming": {
                          "type": "boolean",
                          "description": "Allow live streaming."
                        },
                        "workplace_by_facebook": {
                          "type": "boolean",
                          "description": "Allow livestreaming by host through Workplace by Facebook."
                        },
                        "custom_live_streaming_service": {
                          "type": "boolean",
                          "description": "Allow custom live streaming."
                        },
                        "custom_service_instructions": {
                          "type": "string",
                          "description": "Custom service instructions."
                        },
                        "show_meeting_control_toolbar": {
                          "description": "Always show meeting controls during a meeting.",
                          "type": "boolean"
                        }
                      }
                    },
                    "email_notification": {
                      "title": "User settings: Notification settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "jbh_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When attendees join meeting before host."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When a meeting is cancelled."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "When an alternative host is set or removed from a meeting."
                        },
                        "schedule_for_reminder": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "recording": {
                      "title": "User settings: Recording settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Local recording."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "default": false,
                          "description": "Cloud recording."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record the active speaker view."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record the gallery view."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "default": false,
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "default": false,
                          "description": "Save chat text from the meeting."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "default": false,
                          "description": "Show timestamp on video."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Audio transcript."
                        },
                        "auto_recording": {
                          "type": "string",
                          "default": "local",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record on local",
                            "Record on cloud",
                            "Disabled"
                          ]
                        },
                        "host_pause_stop_recording": {
                          "type": "boolean",
                          "default": false,
                          "description": "Host can pause/stop the auto recording in the cloud."
                        },
                        "auto_delete_cmr": {
                          "type": "boolean",
                          "default": false,
                          "description": "Auto delete cloud recordings."
                        },
                        "auto_delete_cmr_days": {
                          "type": "integer",
                          "description": "A specified number of days of auto delete cloud recordings.",
                          "minimum": 1,
                          "maximum": 60
                        }
                      }
                    },
                    "telephony": {
                      "title": "User settings: Meeting settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Third party audio conference."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "default": "",
                          "description": "Third party audio conference info.",
                          "maxLength": 2048
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show the international numbers link on the invitation email."
                        }
                      }
                    },
                    "feature": {
                      "title": "User settings: Feature settings",
                      "description": "",
                      "type": "object",
                      "properties": {
                        "meeting_capacity": {
                          "type": "integer",
                          "description": "Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user."
                        },
                        "large_meeting": {
                          "type": "boolean",
                          "description": "Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user."
                        },
                        "large_meeting_capacity": {
                          "type": "integer",
                          "description": "Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000."
                        },
                        "webinar": {
                          "type": "boolean",
                          "description": "Enable Webinar feature for the user."
                        },
                        "webinar_capacity": {
                          "type": "integer",
                          "description": "Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000."
                        },
                        "zoom_phone": {
                          "type": "boolean",
                          "description": "Zoom phone feature."
                        }
                      }
                    },
                    "tsp": {
                      "type": "object",
                      "description": "Account Settings: TSP.",
                      "title": "User settings: TSP settings",
                      "properties": {
                        "call_out": {
                          "type": "boolean",
                          "description": "Call Out"
                        },
                        "call_out_countries": {
                          "type": "array",
                          "description": "Call Out Countries/Regions",
                          "items": {}
                        },
                        "show_international_numbers_link": {
                          "type": "boolean",
                          "description": "Show international numbers link on the invitation email"
                        }
                      }
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Meeting Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Authentication type",
                              "enum": [
                                "enforce_login",
                                "enforce_login_with_domains"
                              ]
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": "Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "description": "Authentication action",
                              "enum": [
                                "update",
                                "show",
                                "hide"
                              ]
                            },
                            "domains": {
                              "type": "string",
                              "description": "Authentication domains"
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Authentication type",
                              "enum": [
                                "internally",
                                "enforce_login",
                                "enforce_login_with_domains"
                              ]
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": "Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "description": "Authentication action",
                              "enum": [
                                "update",
                                "show",
                                "hide"
                              ]
                            },
                            "domians": {
                              "type": "string",
                              "description": "Authentication domians"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "title": "GroupSettingsAuthenticationUpdate",
                  "type": "object"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": false,
                  "participants_video": false,
                  "audio_type": "both",
                  "join_before_host": false,
                  "use_pmi_for_scheduled_meetings": false,
                  "use_pmi_for_instant_meetings": false,
                  "enforce_login_with_domains": false,
                  "enforce_login_domains": "",
                  "not_store_meeting_topic": false,
                  "force_pmi_jbh_password": false,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_instant_meetings": true,
                  "require_password_for_pmi_meetings": "all",
                  "pmi_password": "324325",
                  "pstn_password_protected": false
                },
                "in_meeting": {
                  "e2e_encryption": false,
                  "chat": true,
                  "private_chat": true,
                  "auto_saving_chat": false,
                  "entry_exit_chime": "none",
                  "record_play_voice": false,
                  "feedback": true,
                  "co_host": false,
                  "polling": false,
                  "attendee_on_hold": false,
                  "show_meeting_control_toolbar": false,
                  "annotation": true,
                  "remote_control": true,
                  "non_verbal_feedback": false,
                  "breakout_room": false,
                  "remote_support": false,
                  "closed_caption": false,
                  "group_hd": false,
                  "virtual_background": true,
                  "far_end_camera_control": false,
                  "waiting_room": false,
                  "allow_live_streaming": false
                },
                "email_notification": {
                  "jbh_reminder": true,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true,
                  "schedule_for_reminder": true
                },
                "recording": {
                  "local_recording": true,
                  "cloud_recording": true,
                  "record_speaker_view": true,
                  "record_gallery_view": false,
                  "record_audio_file": true,
                  "save_chat_text": true,
                  "show_timestamp": false,
                  "recording_audio_transcript": false,
                  "auto_recording": "none",
                  "auto_delete_cmr": false
                },
                "integration": {
                  "linkedin_sales_navigator": false
                }
              }
            }
          },
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true
          },
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200`<br>\nUser settings updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Pro or Corp user can enable large meeting feature.<br><br>\n**Error Code:** `1120`<br> Invite not exist. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>**Error Code:** `1122`<br>\nWebinar feature can only be enabled for Licensed or On-prem users.<br><br>\n**Error Code:** `200`<br>\nYou can't add paid users.<br>\nYou can add max {maxNumber} paid users.<br>\nYou can add max {maxNumber} free users.<br>\nYou can add max {maxNumber} Webinar 100 users.<br>\nYou can add max {maxNumber} Webinar 500 users.<br>\nYou can add max {maxNumber} Webinar 1000 users.<br>\nYou can add max {maxNumber} Webinar 3000 users.<br>\nYou can add max {maxNumber} Webinar 5000 users.<br>\nYou can add max {maxNumber} Webinar 10000 users.<br>\nYou can add max {maxNumber} Large 100 users.<br>\nYou can add max {maxNumber} Large 200 users.<br>\nYou can add max {maxNumber} Large 300 users.<br>\nYou can add max {maxNumber} Large 500 users.<br>\nYou can add max {maxNumber} Large 1000 users.<br>\nYou can add max {0} paid users.<br>\n\n\n\n\n\n\n\n\n\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/status": {
      "put": {
        "summary": "Update User Status",
        "description": "An account owner or admins can deactivate as well as activate a user in a Zoom account. Deactivating a user will remove all licenses associated with a user. It will prevent the deactivated user from logging into their Zoom account. A deactivated user can be reactivated. Reactivating a user grants the user access to login to their Zoom account.<br> Use this API to either [deactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_6a9bc1c3-d739-4945-b1f2-00b3b88fb5cc) an active user or to [reactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_16319724-d120-4be6-af5d-31582d134ea0) a deactivated user .<br><br>**Scopes:** `user:write:admin` `user:write`<br>\n \n\n",
        "tags": [
          "Users"
        ],
        "operationId": "userStatus",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "description": "User status.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The action.",
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.",
                  "enum": [
                    "activate",
                    "deactivate"
                  ],
                  "x-enum-descriptions": [
                    "set users status to active",
                    "set users status to inactive"
                  ]
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "deactivate"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nStatus updated.",
            "examples": {
              "application/json": ""
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status can not be activated or deactivated.<br><br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/password": {
      "put": {
        "summary": "Update a User's Password",
        "description": "Update the [password](https://support.zoom.us/hc/en-us/articles/206344385-Change-a-User-s-Password) of a user using which the user can login to Zoom.<br> After this request is processed successfully, an email notification will be sent to the user stating that the password was changed.<br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n**Prerequisites:**<br>\n* Owner or admin of the Zoom account.",
        "tags": [
          "Users"
        ],
        "operationId": "userPassword",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "description": "User password.",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "description": "User password. Should be less than 32 characters.",
                  "minimum": 8
                }
              },
              "required": [
                "password"
              ]
            },
            "x-examples": {
              "application/json": {
                "password": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **OK**<br>\nPassword updated.",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br><br> **Error Code:** `1117` <br>Can not update Admin’s password<br><br> **Error Code:** `1123`<br>Can only update password of Zoom work email account<br><br> **Error Code:** `1124` <br>Minimum of 6 characters.<br> Have at least {lengthRule} characters<br><br> **Error Code:** `1125` <br>Have at least 1 letter (a, b, c…)<br><br> **Error Code:** `1126` <br>Have at least 1 number (1, 2, 3…)<br><br> **Error Code:** `1127` <br>Have at least 1 special character (!, @, #…)<br><br>\n**Error Code:** `1128` <br>Include both Upper case and Lower case characters<br><br>**Error Code:** `1129` Users cannot reuse any of the last {formerPwdCount} passwords created.<br><br> **Error Code:** `1130`<br>Password can’t use the same character.<br><br>\n**Error Code:** `1131`<br>Password can’t use continuation character.Such as 'abcdef’,’123456’.<br><br>\n**Error Code:** `1136`<br>\nYour password is too easy to guess. Try another one.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        }
      }
    },
    "/users/{userId}/permissions": {
      "get": {
        "summary": "Get User Permissions",
        "description": "Users can be assigned a set of permissions that allows them to access only the pages/information that a user needs to view or edit.<br>\n\nUse this API to get permissions that have been granted to the user.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userPermission",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser permissions returned.",
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "permissions": {
                  "type": "array",
                  "description": "List of user permissions.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "permissions": [
                  "IMGroups:Edit",
                  "Security:Edit",
                  "IMGroups:Read",
                  "BillingSubscription:Edit",
                  "SingleSignOn:Edit",
                  "WebinarSetting:Edit",
                  "Branding:Read",
                  "UsageReport:Read",
                  "BillingSubscription:Read",
                  "CrossHybrid:Read",
                  "UserActivitiesReport:Read",
                  "Branding:Edit",
                  "SingleSignOn:Read",
                  "Security:Read",
                  "Dashboard:Read",
                  "AccountProfile:Read",
                  "MarketPlace:Edit",
                  "ZoomRooms:Edit",
                  "PbxAdmin:Read",
                  "Meeting:Edit",
                  "IMChatHistory:Read",
                  "RoomConnector:Read",
                  "IMChatBot:Edit",
                  "CrossHybrid:Edit",
                  "AccountProfile:Edit",
                  "RoomConnector:Edit",
                  "Group:Edit",
                  "BillingInformation:Edit",
                  "LyncConnector:Edit",
                  "LyncConnector:Read",
                  "Integration:Read",
                  "User:Edit",
                  "BillingInformation:Read",
                  "AccountSetting:Edit",
                  "SubAccount:Read",
                  "IMSetting:Read",
                  "MeetingConnector:Read",
                  "ThirdPartyConference:Read",
                  "Meeting:Join",
                  "CallInContacts:Read",
                  "ZoomDevelopers:Read",
                  "Recording:Read",
                  "Role:Edit",
                  "Recording:Edit",
                  "DigitalSignage:Read",
                  "ScheduleTrackingFields:Read",
                  "ThirdPartyConference:Edit",
                  "Group:Read",
                  "AccountSetting:Read",
                  "MeetingConnector:Edit",
                  "Integration:Edit",
                  "CallInContacts:Edit",
                  "DigitalSignage:Edit",
                  "MarketPlace:Read",
                  "PbxAdmin:Edit",
                  "ZoomRooms:Read",
                  "MobileDeviceManagement:Read",
                  "RecordingContent:Read",
                  "User:Read",
                  "ScheduleTrackingFields:Edit",
                  "WebinarSetting:Read"
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        }
      }
    },
    "/users/{userId}/pac": {
      "get": {
        "summary": "List a User's PAC Accounts",
        "description": "[Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC) allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only.<br>Use this API to list a user's PAC accounts.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n<br>\n <br>\n**Prerequisites:**<br>\n* A Pro or higher plan with [Premium Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) add-on.\n* Personal Audio Conference must be enabled in the user's profile.",
        "tags": [
          "PAC"
        ],
        "operationId": "userPACs",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPAC account list returned.",
            "schema": {
              "type": "object",
              "properties": {
                "pac_accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dedicated_dial_in_number": {
                        "type": "array",
                        "description": "List of dedicated dial-in numbers.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Dial-in number: length is less than 16."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country code."
                            }
                          }
                        }
                      },
                      "global_dial_in_numbers": {
                        "type": "array",
                        "description": "List of global dial-in numbers.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Dial-in number: length is less than 16."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country code."
                            }
                          }
                        }
                      },
                      "conference_id": {
                        "type": "integer",
                        "description": "Conference ID."
                      },
                      "participant_password": {
                        "type": "string",
                        "description": "Participant password: numeric value - length is less than 6.",
                        "minLength": 1,
                        "maxLength": 6
                      },
                      "listen_only_password": {
                        "type": "string",
                        "description": "Listen-Only password: numeric value - length is less than 6.",
                        "maxLength": 6
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "pac_accounts": [
                  {
                    "dedicated_dial_in_number": [
                      {
                        "number": "123343434",
                        "country": "USA"
                      }
                    ],
                    "global_dial_in_numbers": [
                      {
                        "number": "434343434",
                        "country": "USA"
                      }
                    ],
                    "conference_id": "111111",
                    "participant_password": "ghdf",
                    "listen_only_password": "hkgk"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2024`<br>\nUser does not have PAC enabled.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        }
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "summary": "List User's TSP accounts",
        "description": "A user can have a maximum of two TSP accounts. Use this API to list all TSP accounts of a user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n ",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPs",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "tsp_accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "TSP Accounts List",
                    "description": "List of TSP accounts.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The ID of the TSP account.",
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "conference_code": {
                        "type": "string",
                        "description": "Conference code: numeric value, length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "leader_pin": {
                        "type": "string",
                        "description": "Leader PIN: numeric value, length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "dial_in_numbers": {
                        "type": "array",
                        "description": "List of dial in numbers.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Country code.",
                              "maxLength": 6
                            },
                            "number": {
                              "type": "string",
                              "description": "Dial-in number: length is less than 16.",
                              "minLength": 1,
                              "maxLength": 16
                            },
                            "type": {
                              "type": "string",
                              "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link",
                              "enum": [
                                "toll",
                                "tollfree",
                                "media_link"
                              ],
                              "x-enum-descriptions": [
                                "Toll number <br/>",
                                "Toll free number <br/>",
                                "Media link phone number <br/>"
                              ]
                            },
                            "country_label": {
                              "type": "string",
                              "description": "Country Label, if passed, will display in place of code.",
                              "maxLength": 10
                            }
                          }
                        }
                      },
                      "tsp_bridge": {
                        "type": "string",
                        "description": "Telephony bridge\n",
                        "enum": [
                          "US_TSP_TB",
                          "EU_TSP_TB"
                        ]
                      }
                    },
                    "required": [
                      "conference_code",
                      "leader_pin"
                    ]
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "tsp_accounts": [
                  {
                    "id": 111222222,
                    "conference_code": "0125",
                    "leader_pin": "11189898",
                    "tsp_bridge": "string",
                    "dial_in_numbers": [
                      {
                        "code": "01",
                        "number": "000000000",
                        "type": "toll"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:**`2024`<br>\nAccount not enable TSP."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\nTSP ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\n**Error Code:**`1120`<br>\nInvite not exist.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        }
      },
      "post": {
        "summary": "Add a User's TSP Account",
        "description": "Add a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPCreate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "TSP account.",
            "schema": {
              "type": "object",
              "title": "TSP Accounts List",
              "description": "List of TSP accounts.",
              "properties": {
                "conference_code": {
                  "type": "string",
                  "description": "Conference code: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "type": "string",
                  "description": "Leader PIN: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "type": "array",
                  "description": "List of dial in numbers.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country code.",
                        "maxLength": 6
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number: length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "type": "string",
                        "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link.",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ],
                        "x-enum-descriptions": [
                          "Toll number <br/>",
                          "Toll free number <br/>",
                          "Media link phone number <br/>"
                        ]
                      },
                      "country_label": {
                        "type": "string",
                        "description": "Country Label, if passed, will display in place of code.",
                        "maxLength": 10
                      }
                    }
                  }
                },
                "tsp_bridge": {
                  "type": "string",
                  "description": "Telephony bridge",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ]
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            },
            "x-examples": {
              "application/json": {
                "conference_code": "0125",
                "leader_pin": "11189898",
                "dial_in_numbers": [
                  {
                    "code": "01",
                    "number": "000000000",
                    "type": "toll"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nTSP account added.",
            "schema": {
              "type": "object",
              "title": "TSP Accounts List",
              "description": "List of TSP accounts.",
              "properties": {
                "conference_code": {
                  "type": "string",
                  "description": "Conference code: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "type": "string",
                  "description": "Leader PIN: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "type": "array",
                  "description": "List of dial in numbers.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country code.",
                        "maxLength": 6
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number: length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "type": "string",
                        "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link.",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ],
                        "x-enum-descriptions": [
                          "Toll number <br/>",
                          "Toll free number <br/>",
                          "Media link phone number <br/>"
                        ]
                      },
                      "country_label": {
                        "type": "string",
                        "description": "Country Label, if passed, will display in place of code.",
                        "maxLength": 10
                      }
                    }
                  }
                },
                "tsp_bridge": {
                  "type": "string",
                  "description": "Telephony bridge",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ]
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            },
            "examples": {
              "application/json": {
                "conference_code": "0125",
                "leader_pin": "11189898",
                "tsp_bridge": "string",
                "dial_in_numbers": [
                  {
                    "code": "01",
                    "number": "000000000",
                    "type": "toll"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br><br>\n**Error Code:** `300`<br>You can add a max number of two tsp configs.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>"
          }
        }
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "get": {
        "summary": "Get a User's TSP Account",
        "description": "Each user can have a maximum of two TSP accounts. Use this API to retrieve details of a specific TSP account enabled for a specific user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSP",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "tspId",
            "description": "TSP account ID.",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully.",
            "schema": {
              "type": "object",
              "title": "TSP Account",
              "description": "TSP account of the user.",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The ID of the TSP account."
                },
                "conference_code": {
                  "type": "string",
                  "description": "Conference code: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "type": "string",
                  "description": "Leader PIN: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "type": "array",
                  "description": "List of dial in numbers.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country code.",
                        "maxLength": 6
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number: length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "type": "string",
                        "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ],
                        "x-enum-descriptions": [
                          "Toll number <br/>",
                          "Toll free number <br/>",
                          "Media link phone number <br/>"
                        ]
                      },
                      "country_label": {
                        "type": "string",
                        "description": "Country Label, if passed, will display in place of code.",
                        "maxLength": 10
                      }
                    }
                  }
                },
                "tsp_bridge": {
                  "type": "string",
                  "description": "Telephony bridge",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ]
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            },
            "examples": {
              "application/json": {
                "id": "0123444444",
                "conference_code": "1275454",
                "leader_pin": "111",
                "tsp_bridge": "string",
                "dial_in_numbers": [
                  {
                    "code": "675",
                    "number": "00000000",
                    "type": "toll"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad request** <br>\n\n**Error Code:** `300`<br> Invalid tsp ID.\n<br>TSP config not exist.\n**Error Code:**`2024`<br>\nAccount not enable TSP"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:**`1120`<br>\nInvite not exist.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        }
      },
      "patch": {
        "summary": "Update a TSP Account",
        "description": "Update a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "tspId",
            "description": "TSP account ID.",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "TSP account.",
            "schema": {
              "type": "object",
              "title": "TSP Account",
              "description": "TSP account.",
              "properties": {
                "conference_code": {
                  "type": "string",
                  "description": "Conference code: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "type": "string",
                  "description": "Leader PIN: numeric value, length is less than 16.",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "type": "array",
                  "description": "List of dial in numbers.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country code.",
                        "maxLength": 6
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number: length is less than 16.",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "type": "string",
                        "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>`media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ],
                        "x-enum-descriptions": [
                          "Toll number <br/>",
                          "Toll free number <br/>",
                          "Media link phone number <br/>"
                        ]
                      },
                      "country_label": {
                        "type": "string",
                        "description": "Country Label, if passed, will display in place of code.",
                        "maxLength": 10
                      }
                    }
                  }
                },
                "tsp_bridge": {
                  "type": "string",
                  "description": "Telephony bridge",
                  "enum": [
                    "US_TSP_TB",
                    "EU_TSP_TB"
                  ]
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            },
            "x-examples": {
              "application/json": {
                "conference_code": "string",
                "leader_pin": "string",
                "tsp_bridge": "string",
                "dial_in_numbers": [
                  {
                    "code": "string",
                    "number": "string",
                    "type": "string"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad request** <br><br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br><br>\n**Error Code:**`300`<br>\nInvalid tsp ID<br>\nTSP config not exist\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\n**Error Code:**`1120`<br>\nInvite not exist.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        }
      },
      "delete": {
        "summary": "Delete a User's TSP Account",
        "description": "Delete a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "tspId",
            "description": "TSP account ID.",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              1,
              2
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content**<br>\nTSP account deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`**Bad request** <br><br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br><br>\n**Error Code:** `300`<br>\nShould keep at least one tsp config.<br>\nInvalid tsp ID.<br>\nTSP config not exist."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:**`1120`<br>\nInvite not exist.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        }
      }
    },
    "/users/{userId}/token": {
      "get": {
        "summary": "Get a User Token",
        "description": "Retrieve a user's token.<br><br> This token is used for starting meetings with the Client SDK.<br>\n**Scopes:** `user:read:admin` `user:read`<br>\nIf a user signed into Zoom using Google or Facebook, a null value will be returned for the token. To get the token with this API, ask the user to sign into Zoom using their email and password instead.",
        "tags": [
          "Users"
        ],
        "operationId": "userToken",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "User token types:<br>`token` - Used for starting meetings with the client SDK.<br>`zpk` - Used for generating the start meeting URL (Deprecated).<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days.",
            "type": "string",
            "enum": [
              "token",
              "zpk",
              "zak"
            ],
            "x-enum-descriptions": [
              "Used for starting meeting with client SDK.",
              "Used for generating the start meeting url. (Deprecated)",
              "Used for generating the start meeting url. The expiration time is two hours. For API users, the expiration time is 90 days."
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nToken returned.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "User ID."
                }
              }
            },
            "examples": {
              "application/json": {
                "token": "string"
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Revoke a User's SSO Token",
        "description": "Revoke a user's SSO token.<br><br> After calling this API, the SSO user will be logged out of their current Zoom session.<br>\n**Scopes:** `user:write:admin` `user:write`",
        "tags": [
          "Users"
        ],
        "operationId": "userSSOTokenDelete",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nToken deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/zpk": {
      "get": {
        "summary": "Verify a User's zpk (Deprecated)",
        "description": "<p style=\"background-color:#e1f5fe; color:#01579b\">Note: We will stop supporting this API from <b>September 30, 2019</b>. </p>\nCheck if the zpk is expired. The zpk object is used to authenticate a user.<br><br>\n\nScopes: `user:read:admin` `user:read`",
        "tags": [
          "Users"
        ],
        "operationId": "userZPK",
        "parameters": [
          {
            "name": "zpk",
            "description": "User zpk.",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.",
            "schema": {
              "properties": {
                "expire_in": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "application/json": {
                "expire_in": "integer"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/users/email": {
      "get": {
        "summary": "Check a User Email",
        "description": "Verify if a user's email is registered with Zoom.<br><br>\n<p style=\"background-color:#ffffcc; color:#01579b; padding:8px\"> <b>Note: </b>Starting November 17, 2019, the behavior of this API will change so that you will be able to successfully check to see if a user is a registered Zoom user only if the user is within your account. If you provide an email address of a user who is not in your account, the value of \"existed_email\" parameter will be \"false\" irrespective of whether or not the user is registered with Zoom. </p>\n\n**Scopes:** `user:read:admin` `user:read`\n \n",
        "tags": [
          "Users"
        ],
        "operationId": "userEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The email address to be verified."
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.",
            "schema": {
              "type": "object",
              "properties": {
                "existed_email": {
                  "type": "boolean",
                  "description": "Indicates whether or not the email already exists in Zoom."
                }
              }
            },
            "examples": {
              "application/json": {
                "existed_email": false
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/email": {
      "put": {
        "summary": "Update a User's Email",
        "description": "Change a user's [email address](https://support.zoom.us/hc/en-us/articles/201362563-How-Do-I-Change-the-Email-on-My-Account-) on a Zoom account that has managed domain set up.<br>If the Zoom Account in which the user belongs, has multiple [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-), the email to be updated must match one of the managed domains.<br>\n**Scopes:** `user:write:admin` `user:write`<br>\n\n**Prerequisite:**<br>\n* Managed domain must be enabled in the account.\n* The new email address should not already exist in Zoom.",
        "tags": [
          "Users"
        ],
        "operationId": "userEmailUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "description": "User email.",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User’s email. The length should be less than 128 characters.",
                  "format": "email"
                }
              },
              "required": [
                "email"
              ]
            },
            "x-examples": {
              "application/json": {
                "email": "cupidatatipsum@sdskflhdf.djfh"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser {email} not exist or not belong to this account.<br>"
          }
        }
      }
    },
    "/users/vanity_name": {
      "get": {
        "summary": "Check a User's PM Room Name",
        "description": "A personal meeting room is a virtual meeting room that can be permanently assigned to a user.\nUse this API to check if a personal meeting room with the given name exists or not.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n ",
        "tags": [
          "Users"
        ],
        "operationId": "userVanityName",
        "parameters": [
          {
            "name": "vanity_name",
            "description": "Personal meeting room name.",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.",
            "schema": {
              "type": "object",
              "properties": {
                "existed": {
                  "type": "boolean",
                  "description": "If `true`, it indicates that the personal meeting room with the given name exists.<br> `false` - The room name does not exist."
                }
              }
            },
            "examples": {
              "application/json": {
                "existed": true
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required."
          }
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "summary": "List Webinars",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br> Use this API to list all the webinars that are scheduled by or on-behalf a user (Webinar host).<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> <br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinars",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of webinar objects returned.",
            "schema": {
              "title": "User List",
              "description": "List of webinars.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Pagination Object.",
                  "properties": {
                    "page_count": {
                      "type": "integer",
                      "description": "The number of pages returned for the request made."
                    },
                    "page_number": {
                      "type": "integer",
                      "description": "The page number of the current results.",
                      "default": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "default": 30,
                      "maximum": 300
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of all the records available across pages."
                    }
                  }
                },
                {
                  "properties": {
                    "webinars": {
                      "type": "array",
                      "description": "List of webinar objects.",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "description": "Unique identifier for a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled."
                              },
                              "id": {
                                "type": "integer",
                                "description": "Webinar ID - also known as the webinar number."
                              },
                              "host_id": {
                                "type": "string",
                                "description": "ID of the host of the webinar."
                              },
                              "topic": {
                                "type": "string",
                                "description": "Meeting topic."
                              },
                              "type": {
                                "type": "integer",
                                "description": "Meeting type.",
                                "enum": [
                                  5,
                                  6,
                                  9
                                ],
                                "x-enum-descriptions": [
                                  "Webinar",
                                  "Recurring Webinar with no fixed time",
                                  "Recurring Webinar with fixed time"
                                ]
                              },
                              "duration": {
                                "type": "integer",
                                "description": "Meeting duration."
                              },
                              "timezone": {
                                "type": "string",
                                "description": "[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time of webinar creation."
                              },
                              "join_url": {
                                "type": "string",
                                "description": "Join URL of the webinar (using which others can join the webinar)."
                              },
                              "agenda": {
                                "type": "string",
                                "description": "Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar)."
                              },
                              "start_time": {
                                "type": "string",
                                "description": "Scheduled start time of the Webinar.",
                                "format": "date-time"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": "{\n  \"page_count\": \"1\",\n  \"page_number\": \"1\",\n  \"page_size\": \"30\",\n  \"total_records\": \"1\",\n  \"webinars\": [\n    {\n      \"uuid\": \"dsghfkhaewfds\",\n      \"id\": 0001000,\n      \"host_id\": \"24654130000000\",\n      \"topic\": \"My Webinar\",\n      \"agenda\": \"Learn more about Zoom APIs\",\n      \"type\": \"5\",\n      \"duration\": \"60\",\n      \"start_time\": \"2019-09-24T22:00:00Z\",\n      \"timezone\": \"America/Los_Angeles\",\n      \"created_at\": \"2019-08-30T22:00:00Z\",\n      \"join_url\": \"https://zoom.us/0001000/awesomewebinar\"\n    }\n  ]\n}"
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Webinar",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to schedule a Webinar for a user (host).<br><br> \n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "Webinar object.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Base webinar object for sessions.",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Webinar topic."
                    },
                    "type": {
                      "type": "integer",
                      "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
                      "default": 5,
                      "enum": [
                        5,
                        6,
                        9
                      ],
                      "x-enum-descriptions": [
                        "Webinar",
                        "Recurring Webinar with no fixed time",
                        "Recurring Webinar with fixed time"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Webinar duration (minutes). Used for scheduled webinars only."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
                    },
                    "password": {
                      "type": "string",
                      "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters."
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Webinar description."
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        },
                        "required": [
                          "field"
                        ]
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
                      "title": "Recurrence Webinar",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
                        },
                        "weekly_days": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "settings": {
                      "type": "object",
                      "description": "Create Webinar settings.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start video when host joins webinar."
                        },
                        "panelists_video": {
                          "type": "boolean",
                          "description": "Start video when panelists join webinar."
                        },
                        "practice_session": {
                          "type": "boolean",
                          "description": "Enable practice session.",
                          "default": false
                        },
                        "hd_video": {
                          "type": "boolean",
                          "description": "Default to HD video.",
                          "default": false
                        },
                        "approval_type": {
                          "type": "integer",
                          "default": 2,
                          "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-enum-descriptions": [
                            "Automatically Approve",
                            "Manually Approve",
                            "No Registration Required"
                          ]
                        },
                        "registration_type": {
                          "type": "integer",
                          "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                          "default": 1,
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Attendees register once and can attend any of the occurrences",
                            "Attendees need to register for each occurrence to attend",
                            "Attendees register once and can choose one or more occurrences to attend"
                          ]
                        },
                        "audio": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip"
                          ],
                          "x-enum-descriptions": [
                            "Both Telephony and VoIP",
                            "Telephony only",
                            "VoIP only"
                          ]
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "default": "none",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record to local device",
                            "Record to cloud",
                            "No Recording"
                          ]
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only signed-in users can join this meeting."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed-in users with specified domains can join meetings."
                        },
                        "alternative_hosts": {
                          "type": "string",
                          "description": "Alternative host emails or IDs. Multiple values separated by comma."
                        },
                        "close_registration": {
                          "type": "boolean",
                          "description": "Close registration after event date."
                        },
                        "show_share_button": {
                          "type": "boolean",
                          "description": "Show social share buttons on the registration page."
                        },
                        "allow_multiple_devices": {
                          "type": "boolean",
                          "description": "Allow attendees to join from multiple devices."
                        },
                        "on_demand": {
                          "type": "boolean",
                          "description": "Make the webinar on-demand",
                          "default": false
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "List of global dial-in countries",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contact_name": {
                          "type": "string",
                          "description": "Contact name for registration"
                        },
                        "contact_email": {
                          "type": "string",
                          "description": "Contact email for registration"
                        },
                        "registrants_restrict_number": {
                          "type": "integer",
                          "default": 0,
                          "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                          "minimum": 0,
                          "maximum": 20000
                        },
                        "post_webinar_survey": {
                          "type": "boolean",
                          "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                        },
                        "survey_url": {
                          "type": "string",
                          "description": "Survey url for post webinar survey"
                        },
                        "registrants_email_notification": {
                          "type": "boolean",
                          "description": "registrants email notification"
                        },
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`."
                        },
                        "authentication_option": {
                          "type": "string",
                          "description": "Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)."
                        },
                        "authentication_domains": {
                          "type": "string",
                          "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains."
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "topic": "Test Webinar",
                "type": 5,
                "start_time": "2020-09-20T06:59:00Z",
                "duration": "60",
                "timezone": "America/Los_Angeles",
                "password": "avfhfgh",
                "agenda": "Test Webinar",
                "recurrence": {
                  "type": 1,
                  "repeat_interval": 1,
                  "end_date_time": "2020-09-22T06:59:00Z"
                },
                "settings": {
                  "host_video": "true",
                  "panelists_video": "true",
                  "practice_session": "true",
                  "hd_video": "true",
                  "approval_type": 0,
                  "registration_type": 2,
                  "audio": "both",
                  "auto_recording": "none",
                  "enforce_login": "false",
                  "close_registration": "true",
                  "show_share_button": "true",
                  "allow_multiple_devices": "false",
                  "registrants_email_notification": "true"
                }
              }
            }
          }
        ],
        "operationId": "webinarCreate",
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nWebinar created.",
            "headers": {
              "Content-Location": {
                "description": "Location of created Webinar",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Unique identifier for a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Webinar ID, also known as the webinar number."
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of the webinar."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Webinar object.",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Webinar topic."
                    },
                    "type": {
                      "type": "integer",
                      "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
                      "default": 5,
                      "enum": [
                        5,
                        6,
                        9
                      ],
                      "x-enum-descriptions": [
                        "Webinar",
                        "Recurring Webinar with no fixed time",
                        "Recurring Webinar with fixed time"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webinar start time in GMT/UTC."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Webinar duration."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone to format start_time."
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Webinar agenda."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Create time."
                    },
                    "start_url": {
                      "type": "string",
                      "description": "<br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>"
                    },
                    "join_url": {
                      "type": "string",
                      "description": "URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar."
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        }
                      }
                    },
                    "occurrences": {
                      "type": "array",
                      "description": "Array of occurrence objects.",
                      "items": {
                        "type": "object",
                        "description": "Occurence object. This object is only returned for Recurring Webinars.",
                        "properties": {
                          "occurrence_id": {
                            "type": "string",
                            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration."
                          },
                          "status": {
                            "type": "string",
                            "description": "Occurrence status."
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "description": "Webinar settings.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start video when host joins webinar."
                        },
                        "panelists_video": {
                          "type": "boolean",
                          "description": "Start video when panelists join webinar."
                        },
                        "practice_session": {
                          "type": "boolean",
                          "description": "Enable practice session.",
                          "default": false
                        },
                        "hd_video": {
                          "type": "boolean",
                          "description": "Default to HD video.",
                          "default": false
                        },
                        "approval_type": {
                          "type": "integer",
                          "default": 2,
                          "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-enum-descriptions": [
                            "Automatically Approve",
                            "Manually Approve",
                            "No Registration Required"
                          ]
                        },
                        "registration_type": {
                          "type": "integer",
                          "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                          "default": 1,
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Attendees register once and can attend any of the occurrences",
                            "Attendees need to register for each occurrence to attend",
                            "Attendees register once and can choose one or more occurrences to attend"
                          ]
                        },
                        "audio": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the webinar.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip"
                          ],
                          "x-enum-descriptions": [
                            "Both Telephony and VoIP",
                            "Telephony only",
                            "VoIP only"
                          ]
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "default": "none",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record to local device",
                            "Record to cloud",
                            "No Recording"
                          ]
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only signed-in users can join this webinar."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed-in users with specified domains can join webinars."
                        },
                        "alternative_hosts": {
                          "type": "string",
                          "description": "Alternative host emails or IDs. Multiple values separated by comma."
                        },
                        "close_registration": {
                          "type": "boolean",
                          "description": "Close registration after event date."
                        },
                        "show_share_button": {
                          "type": "boolean",
                          "description": "Show social share buttons on the registration page."
                        },
                        "allow_multiple_devices": {
                          "type": "boolean",
                          "description": "Allow attendees to join from multiple devices."
                        },
                        "on_demand": {
                          "type": "boolean",
                          "description": "Make the webinar on-demand",
                          "default": false
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "List of global dial-in countries",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contact_name": {
                          "type": "string",
                          "description": "Contact name for registration"
                        },
                        "contact_email": {
                          "type": "string",
                          "description": "Contact email for registration"
                        },
                        "registrants_confirmation_email": {
                          "description": "Send confirmation email to registrants",
                          "type": "boolean"
                        },
                        "registrants_restrict_number": {
                          "type": "integer",
                          "default": 0,
                          "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                          "minimum": 0,
                          "maximum": 20000
                        },
                        "notify_registrants": {
                          "type": "boolean",
                          "description": "Send notification email to registrants when the host updates a webinar."
                        },
                        "post_webinar_survey": {
                          "type": "boolean",
                          "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                        },
                        "survey_url": {
                          "type": "string",
                          "description": "Survey url for post webinar survey"
                        },
                        "registrants_email_notification": {
                          "type": "boolean",
                          "description": "Registrants email notification"
                        },
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "string",
                          "description": "Meeting authentication option id"
                        },
                        "authentication_domains": {
                          "type": "string",
                          "description": "Meeting authentication domains"
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
                      "title": "Recurrence Webinar",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
                        },
                        "weekly_days": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "string",
                "id": "integer",
                "host_id": "string",
                "topic": "string",
                "type": "integer",
                "start_time": "string [date-time]",
                "duration": "integer",
                "timezone": "string",
                "agenda": "string",
                "created_at": "string [date-time]",
                "start_url": "string",
                "join_url": "string",
                "occurrences": [
                  {
                    "occurrence_id": "integer",
                    "start_time": "string [date-time]",
                    "duration": "integer",
                    "status": "string"
                  }
                ],
                "settings": {
                  "host_video": "boolean",
                  "panelists_video": "boolean",
                  "practice_session": "boolean",
                  "hd_video": "boolean",
                  "approval_type": "integer",
                  "registration_type": "integer",
                  "audio": "string",
                  "auto_recording": "string",
                  "enforce_login": "boolean",
                  "enforce_login_domains": "string",
                  "alternative_hosts": "string",
                  "close_registration": "boolean",
                  "show_share_button": "boolean",
                  "allow_multiple_devices": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}": {
      "get": {
        "summary": "Get a Webinar",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to get details of a scheduled webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> <br>**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinar",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Webinar unique ID."
                    },
                    "id": {
                      "type": "integer",
                      "description": "Webinar ID, also known as the webinar number."
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of webinar."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Webinar object.",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Webinar topic."
                    },
                    "type": {
                      "type": "integer",
                      "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
                      "default": 5,
                      "enum": [
                        5,
                        6,
                        9
                      ],
                      "x-enum-descriptions": [
                        "Webinar",
                        "Recurring Webinar with no fixed time",
                        "Recurring Webinar with fixed time"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webinar start time in GMT/UTC."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Webinar duration."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone to format start_time."
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Webinar agenda."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Create time."
                    },
                    "start_url": {
                      "type": "string",
                      "description": "<br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>"
                    },
                    "join_url": {
                      "type": "string",
                      "description": "URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar."
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        }
                      }
                    },
                    "occurrences": {
                      "type": "array",
                      "description": "Array of occurrence objects.",
                      "items": {
                        "type": "object",
                        "description": "Occurence object. This object is only returned for Recurring Webinars.",
                        "properties": {
                          "occurrence_id": {
                            "type": "string",
                            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration."
                          },
                          "status": {
                            "type": "string",
                            "description": "Occurrence status."
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "description": "Webinar settings.",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start video when host joins webinar."
                        },
                        "panelists_video": {
                          "type": "boolean",
                          "description": "Start video when panelists join webinar."
                        },
                        "practice_session": {
                          "type": "boolean",
                          "description": "Enable practice session.",
                          "default": false
                        },
                        "hd_video": {
                          "type": "boolean",
                          "description": "Default to HD video.",
                          "default": false
                        },
                        "approval_type": {
                          "type": "integer",
                          "default": 2,
                          "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "x-enum-descriptions": [
                            "Automatically Approve",
                            "Manually Approve",
                            "No Registration Required"
                          ]
                        },
                        "registration_type": {
                          "type": "integer",
                          "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                          "default": 1,
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Attendees register once and can attend any of the occurrences",
                            "Attendees need to register for each occurrence to attend",
                            "Attendees register once and can choose one or more occurrences to attend"
                          ]
                        },
                        "audio": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the webinar.",
                          "default": "both",
                          "enum": [
                            "both",
                            "telephony",
                            "voip"
                          ],
                          "x-enum-descriptions": [
                            "Both Telephony and VoIP",
                            "Telephony only",
                            "VoIP only"
                          ]
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                          "default": "none",
                          "enum": [
                            "local",
                            "cloud",
                            "none"
                          ],
                          "x-enum-descriptions": [
                            "Record to local device",
                            "Record to cloud",
                            "No Recording"
                          ]
                        },
                        "enforce_login": {
                          "type": "boolean",
                          "description": "Only signed-in users can join this webinar."
                        },
                        "enforce_login_domains": {
                          "type": "string",
                          "description": "Only signed-in users with specified domains can join webinars."
                        },
                        "alternative_hosts": {
                          "type": "string",
                          "description": "Alternative host emails or IDs. Multiple values separated by comma."
                        },
                        "close_registration": {
                          "type": "boolean",
                          "description": "Close registration after event date."
                        },
                        "show_share_button": {
                          "type": "boolean",
                          "description": "Show social share buttons on the registration page."
                        },
                        "allow_multiple_devices": {
                          "type": "boolean",
                          "description": "Allow attendees to join from multiple devices."
                        },
                        "on_demand": {
                          "type": "boolean",
                          "description": "Make the webinar on-demand",
                          "default": false
                        },
                        "global_dial_in_countries": {
                          "type": "array",
                          "description": "List of global dial-in countries",
                          "items": {
                            "type": "string"
                          }
                        },
                        "contact_name": {
                          "type": "string",
                          "description": "Contact name for registration"
                        },
                        "contact_email": {
                          "type": "string",
                          "description": "Contact email for registration"
                        },
                        "registrants_confirmation_email": {
                          "description": "Send confirmation email to registrants",
                          "type": "boolean"
                        },
                        "registrants_restrict_number": {
                          "type": "integer",
                          "default": 0,
                          "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                          "minimum": 0,
                          "maximum": 20000
                        },
                        "notify_registrants": {
                          "type": "boolean",
                          "description": "Send notification email to registrants when the host updates a webinar."
                        },
                        "post_webinar_survey": {
                          "type": "boolean",
                          "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                        },
                        "survey_url": {
                          "type": "string",
                          "description": "Survey url for post webinar survey"
                        },
                        "registrants_email_notification": {
                          "type": "boolean",
                          "description": "Registrants email notification"
                        },
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "string",
                          "description": "Meeting authentication option id"
                        },
                        "authentication_domains": {
                          "type": "string",
                          "description": "Meeting authentication domains"
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
                      "title": "Recurrence Webinar",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
                        },
                        "weekly_days": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "created_at": "2019-09-13T15:35:00Z",
                "duration": 60,
                "host_id": "Labcjskdfsjgfg",
                "id": 12345678,
                "join_url": "https://zoom.us/j/12345678",
                "settings": {
                  "allow_multiple_devices": true,
                  "alternative_hosts": "",
                  "approval_type": 2,
                  "audio": "both",
                  "auto_recording": "local",
                  "close_registration": true,
                  "contact_email": "wonderfulemail@someemail.dsgfdjf",
                  "contact_name": "Wonderful person",
                  "enforce_login": false,
                  "enforce_login_domains": "",
                  "global_dial_in_countries": [
                    "US"
                  ],
                  "global_dial_in_numbers": [
                    {
                      "city": "New York",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 00000",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 111111111",
                      "type": "toll"
                    },
                    {
                      "city": "San Jose",
                      "country": "US",
                      "country_name": "US",
                      "number": "+1 11111110",
                      "type": "toll"
                    }
                  ],
                  "hd_video": false,
                  "host_video": false,
                  "on_demand": false,
                  "panelists_video": false,
                  "practice_session": false,
                  "question_answer": true,
                  "registrants_confirmation_email": true,
                  "registrants_restrict_number": 0,
                  "show_share_button": true,
                  "registrants_email_notification": true
                },
                "start_time": "2019-08-30T22:00:00Z",
                "start_url": "https://zoom.us/s/00000011110?zhghTlUT1Rjd2FXRgh0amxoejNQZ1EiLCJjaWQiOiIifQ.NJ0CXWQ-yhI8Xv01JvxityBtzp3Bt7odMOEG2L8DLmY",
                "timezone": "America/New_York",
                "topic": "Test Webinar",
                "type": 5,
                "uuid": "nWMHAAAAAAAAAAAAAUDP1A=="
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Webinar",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>\nUse this API to make updates to a scheduled Webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar.",
            "schema": {
              "description": "Webinar object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Base webinar object for sessions.",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Webinar topic."
                    },
                    "type": {
                      "type": "integer",
                      "description": "Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
                      "default": 5,
                      "enum": [
                        5,
                        6,
                        9
                      ],
                      "x-enum-descriptions": [
                        "Webinar",
                        "Recurring Webinar with no fixed time",
                        "Recurring Webinar with fixed time"
                      ]
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'.\" Should be in GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss.\" This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Webinar duration (minutes). Used for scheduled webinar only."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
                    },
                    "password": {
                      "type": "string",
                      "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
                      "maxLength": 10
                    },
                    "agenda": {
                      "type": "string",
                      "description": "Webinar description."
                    },
                    "tracking_fields": {
                      "type": "array",
                      "description": "Tracking fields",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Tracking fields type"
                          },
                          "value": {
                            "type": "string",
                            "description": "Tracking fields value"
                          }
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "x-enum-descriptions": [
                            "Daily",
                            "Weekly",
                            "Monthly"
                          ]
                        },
                        "repeat_interval": {
                          "type": "integer",
                          "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                        },
                        "weekly_days": {
                          "type": "string",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ]
                        },
                        "monthly_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                        },
                        "monthly_week": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                          "enum": [
                            -1,
                            1,
                            2,
                            3,
                            4
                          ],
                          "x-enum-descriptions": [
                            "Last week",
                            "First week",
                            "Second week",
                            "Third week",
                            "Fourth week"
                          ]
                        },
                        "monthly_week_day": {
                          "type": "integer",
                          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "x-enum-descriptions": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                          ]
                        },
                        "end_times": {
                          "type": "integer",
                          "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                          "default": 1,
                          "maximum": 50
                        },
                        "end_date_time": {
                          "type": "string",
                          "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "settings": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Webinar settings.",
                          "properties": {
                            "host_video": {
                              "type": "boolean",
                              "description": "Start video when host joins webinar."
                            },
                            "panelists_video": {
                              "type": "boolean",
                              "description": "Start video when panelists join webinar."
                            },
                            "practice_session": {
                              "type": "boolean",
                              "description": "Enable practice session.",
                              "default": false
                            },
                            "hd_video": {
                              "type": "boolean",
                              "description": "Default to HD video.",
                              "default": false
                            },
                            "approval_type": {
                              "type": "integer",
                              "default": 2,
                              "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                              "enum": [
                                0,
                                1,
                                2
                              ],
                              "x-enum-descriptions": [
                                "Automatically Approve",
                                "Manually Approve",
                                "No Registration Required"
                              ]
                            },
                            "registration_type": {
                              "type": "integer",
                              "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                              "default": 1,
                              "enum": [
                                1,
                                2,
                                3
                              ],
                              "x-enum-descriptions": [
                                "Attendees register once and can attend any of the occurrences",
                                "Attendees need to register for each occurrence to attend",
                                "Attendees register once and can choose one or more occurrences to attend"
                              ]
                            },
                            "audio": {
                              "type": "string",
                              "description": "Determine how participants can join the audio portion of the webinar.",
                              "default": "both",
                              "enum": [
                                "both",
                                "telephony",
                                "voip"
                              ],
                              "x-enum-descriptions": [
                                "Both Telephony and VoIP",
                                "Telephony only",
                                "VoIP only"
                              ]
                            },
                            "auto_recording": {
                              "type": "string",
                              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                              "default": "none",
                              "enum": [
                                "local",
                                "cloud",
                                "none"
                              ],
                              "x-enum-descriptions": [
                                "Record to local device",
                                "Record to cloud",
                                "No Recording"
                              ]
                            },
                            "enforce_login": {
                              "type": "boolean",
                              "description": "Only signed-in users can join this webinar."
                            },
                            "enforce_login_domains": {
                              "type": "string",
                              "description": "Only signed-in users with specified domains can join webinars."
                            },
                            "alternative_hosts": {
                              "type": "string",
                              "description": "Alternative host emails or IDs. Multiple values separated by comma."
                            },
                            "close_registration": {
                              "type": "boolean",
                              "description": "Close registration after event date."
                            },
                            "show_share_button": {
                              "type": "boolean",
                              "description": "Show social share buttons on the registration page."
                            },
                            "allow_multiple_devices": {
                              "type": "boolean",
                              "description": "Allow attendees to join from multiple devices."
                            },
                            "on_demand": {
                              "type": "boolean",
                              "description": "Make the webinar on-demand",
                              "default": false
                            },
                            "global_dial_in_countries": {
                              "type": "array",
                              "description": "List of global dial-in countries",
                              "items": {
                                "type": "string"
                              }
                            },
                            "contact_name": {
                              "type": "string",
                              "description": "Contact name for registration"
                            },
                            "contact_email": {
                              "type": "string",
                              "description": "Contact email for registration"
                            },
                            "registrants_confirmation_email": {
                              "description": "Send confirmation email to registrants",
                              "type": "boolean"
                            },
                            "registrants_restrict_number": {
                              "type": "integer",
                              "default": 0,
                              "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                              "minimum": 0,
                              "maximum": 20000
                            },
                            "notify_registrants": {
                              "type": "boolean",
                              "description": "Send notification email to registrants when the host updates a webinar."
                            },
                            "post_webinar_survey": {
                              "type": "boolean",
                              "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                            },
                            "survey_url": {
                              "type": "string",
                              "description": "Survey url for post webinar survey"
                            },
                            "registrants_email_notification": {
                              "type": "boolean",
                              "description": "Registrants email notification"
                            },
                            "meeting_authentication": {
                              "type": "boolean",
                              "description": "Only authenticated users can join meetings"
                            },
                            "authentication_option": {
                              "type": "string",
                              "description": "Meeting authentication option id"
                            },
                            "authentication_domains": {
                              "type": "string",
                              "description": "Meeting authentication domains"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "registrants_confirmation_email": {
                              "type": "boolean",
                              "description": "Send confirmation email to registrants."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "topic": "string",
                "type": "integer",
                "start_time": "string [date-time]",
                "duration": "integer",
                "timezone": "string",
                "password": "string",
                "agenda": "string",
                "settings": {
                  "host_video": "boolean",
                  "panelists_video": "boolean",
                  "practice_session": "boolean",
                  "hd_video": "boolean",
                  "approval_type": "integer",
                  "registration_type": "integer",
                  "audio": "string",
                  "auto_recording": "string",
                  "enforce_login": "boolean",
                  "enforce_login_domains": "string",
                  "alternative_hosts": "string",
                  "close_registration": "boolean",
                  "show_share_button": "boolean",
                  "allow_multiple_devices": "boolean",
                  "registrants_confirmation_email": "boolean",
                  "notify_registrants": "boolean",
                  "registrants_email_notification": "boolean"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar updated."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Webinar",
        "description": "Delete a Webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarDelete",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar deleted."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou are not the webinar host.<br>\n**Error Code:** `3007`<br>\nSorry, you cannot delete this webinar since it has ended.<br>\n**Error Code:** `3018`<br>\nNot allowed to delete PMI.<br>\n**Error Code:** `3037`<br>\nNot allowed to delete PAC.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/status": {
      "put": {
        "summary": "Update Webinar Status",
        "description": "Update a webinar's status. Use this API to end an ongoing webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**<br>\n* The account must hold a valid [Webinar plan](https://zoom.us/webinar).",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarStatus",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "end"
                  ],
                  "x-enum-descriptions": [
                    "end a webinar"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "end"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "Webinar's status updated.",
            "examples": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:{meetingId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/panelists": {
      "get": {
        "summary": "List Panelists",
        "description": "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a Webinar. \n\nUse this API to list all the panelists of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelists",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
            "schema": {
              "description": "Webinar panelist.",
              "allOf": [
                {
                  "type": "object",
                  "title": "Panelist List",
                  "description": "List of panelists.",
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "Total records."
                    },
                    "panelists": {
                      "type": "array",
                      "description": "List of panelist objects.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Panelist's ID."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Panelist base object.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Panelist's full name."
                              },
                              "email": {
                                "type": "string",
                                "description": "Panelist's email.",
                                "format": "email"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "join_url": {
                                "type": "string",
                                "description": "Join URL."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "total_records": "2",
                "panelists": [
                  {
                    "name": "Mary",
                    "email": "maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj"
                  },
                  {
                    "name": "Mike",
                    "email": "dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add Panelists",
        "description": "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a webinar.<br>Use this API to [add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br> <br>\n\n\n**Prerequisites:**\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistCreate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Webinar panelist.",
              "properties": {
                "panelists": {
                  "type": "array",
                  "description": "List of panelist objects.",
                  "maximum": 30,
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Panelist base object.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Panelist's full name."
                          },
                          "email": {
                            "type": "string",
                            "description": "Panelist's email.",
                            "format": "email"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "panelists": [
                  {
                    "name": "Mary",
                    "email": "maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj"
                  },
                  {
                    "name": "Mike",
                    "email": "dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added."
          },
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nPanelist created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Webinar Id."
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time at which the panelist was added.",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "doetwerggrlor",
                "updated_at": "2019-01-25T10:04:27.051Z"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove Panelists",
        "description": "Remove all the panelists from a Webinar.<br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistsDelete",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPanelists removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}": {
      "delete": {
        "summary": "Remove a Panelist",
        "description": "[Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.<br> You can retrieve the `panelistId` by calling **List Panelists API**.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistDelete",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "panelistId",
            "description": "The panelist ID or panelist email.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPanelists removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/registrants": {
      "get": {
        "summary": "List Webinar Registrants",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>\nUse this API to list all the users that have registered for a webinar.<br><br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.<br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrants",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
            "type": "string",
            "default": "approved",
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "x-enum-descriptions": [
              "registrants status is pending",
              "registrants status is approved",
              "registrants status is denied"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "schema": {
              "title": "Registration List",
              "description": "List of users.",
              "allOf": [
                {
                  "title": "Registration List",
                  "description": "List of users.",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Pagination Object.",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "description": "The number of pages returned for the request made."
                        },
                        "page_number": {
                          "type": "integer",
                          "description": "The page number of the current results.",
                          "default": 1
                        },
                        "page_size": {
                          "type": "integer",
                          "description": "The number of records returned with a single API call.",
                          "default": 30,
                          "maximum": 300
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of all the records available across pages."
                        }
                      }
                    },
                    {
                      "properties": {
                        "registrants": {
                          "type": "array",
                          "description": "List of registrant objects.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Registrant ID."
                                  }
                                }
                              },
                              {
                                "description": " Registrant.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Registrant base object.",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "A valid email address of the registrant."
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "description": "Registrant's first name."
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "description": "Registrant's last name."
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "Registrant's address."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "Registrant's city."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Registrant's country."
                                      },
                                      "zip": {
                                        "type": "string",
                                        "description": "Registrant's Zip/Postal Code."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Registrant's State/Province."
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "Registrant's Phone number."
                                      },
                                      "industry": {
                                        "type": "string",
                                        "description": "Registrant's Industry."
                                      },
                                      "org": {
                                        "type": "string",
                                        "description": "Registrant's Organization."
                                      },
                                      "job_title": {
                                        "type": "string",
                                        "description": "Registrant's job title."
                                      },
                                      "purchasing_time_frame": {
                                        "type": "string",
                                        "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                                      },
                                      "role_in_purchase_process": {
                                        "type": "string",
                                        "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                                      },
                                      "no_of_employees": {
                                        "type": "string",
                                        "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                                      },
                                      "comments": {
                                        "type": "string",
                                        "description": "A field that allows registrants to provide any questions or comments that they might have."
                                      },
                                      "custom_questions": {
                                        "type": "array",
                                        "description": "Custom questions.",
                                        "items": {
                                          "type": "object",
                                          "description": "Custom Question.",
                                          "properties": {
                                            "title": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "email",
                                      "first_name",
                                      "last_name"
                                    ]
                                  }
                                ],
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                                  },
                                  "create_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time at which the registrant registered."
                                  },
                                  "join_url": {
                                    "type": "string",
                                    "format": "string",
                                    "description": "The URL using which an approved registrant can join the webinar."
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_number": "1",
                "page_size": "30",
                "total_records": "1",
                "registrants": [
                  {
                    "id": "24000002122",
                    "email": "sjfkghdsg@someemail.dfgjd",
                    "first_name": "Jill",
                    "last_name": "Chill",
                    "address": "dsfhkdjsfh st",
                    "city": "jackson heights",
                    "country": "US",
                    "zip": "11371",
                    "state": "NY",
                    "phone": "00000000",
                    "industry": "Food",
                    "org": "Cooking Org",
                    "job_title": "Chef",
                    "purchasing_time_frame": "1-3 months",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "10",
                    "comments": "Looking forward to the Webinar",
                    "custom_questions": [
                      {
                        "title": "What do you hope to learn from this Webinar?",
                        "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                      }
                    ],
                    "status": "approved",
                    "create_time": "2019-02-26T23:01:16.899Z",
                    "join_url": "https://zoom.us/webinar/mywebinarissocooldighdghodghodg"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add a Webinar Registrant",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to create and submit the registration of a user for a webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantCreate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_ids",
            "type": "string",
            "description": "Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "Webinar registrant.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Registrant base object.",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "A valid email address of the registrant."
                    },
                    "first_name": {
                      "type": "string",
                      "description": "Registrant's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "description": "Registrant's last name."
                    },
                    "address": {
                      "type": "string",
                      "description": "Registrant's address."
                    },
                    "city": {
                      "type": "string",
                      "description": "Registrant's city."
                    },
                    "country": {
                      "type": "string",
                      "description": "Registrant's country."
                    },
                    "zip": {
                      "type": "string",
                      "description": "Registrant's Zip/Postal Code."
                    },
                    "state": {
                      "type": "string",
                      "description": "Registrant's State/Province."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Registrant's Phone number."
                    },
                    "industry": {
                      "type": "string",
                      "description": "Registrant's Industry."
                    },
                    "org": {
                      "type": "string",
                      "description": "Registrant's Organization."
                    },
                    "job_title": {
                      "type": "string",
                      "description": "Registrant's job title."
                    },
                    "purchasing_time_frame": {
                      "type": "string",
                      "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                    },
                    "role_in_purchase_process": {
                      "type": "string",
                      "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                    },
                    "no_of_employees": {
                      "type": "string",
                      "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                    },
                    "comments": {
                      "type": "string",
                      "description": "A field that allows registrants to provide any questions or comments that they might have."
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Custom questions.",
                      "items": {
                        "type": "object",
                        "description": "Custom Question.",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "email",
                    "first_name",
                    "last_name"
                  ]
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "email": "sjfkghdsg@someemail.dfgjd",
                "first_name": "Jill",
                "last_name": "Chill",
                "address": "dsfhkdjsfh st",
                "city": "jackson heights",
                "country": "US",
                "zip": "11371",
                "state": "NY",
                "phone": "00000000",
                "industry": "Food",
                "org": "Cooking Org",
                "job_title": "Chef",
                "purchasing_time_frame": "1-3 months",
                "role_in_purchase_process": "Influencer",
                "no_of_employees": "10",
                "comments": "Looking forward to the Webinar",
                "custom_questions": [
                  {
                    "title": "What do you hope to learn from this Webinar?",
                    "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nRegistration created.",
            "schema": {
              "type": "object",
              "properties": {
                "registrant_id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "id": {
                  "type": "string",
                  "description": "Webinar ID"
                },
                "topic": {
                  "type": "string",
                  "description": "Topic"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time"
                },
                "join_url": {
                  "type": "string",
                  "description": "Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made."
                }
              }
            },
            "examples": {
              "application/json": {
                "registrant_id": "culpa deserunt ea est commodo",
                "id": "velit dolore minim Ut",
                "topic": "et laboris Lorem in Ut",
                "start_time": "1974-02-26T23:01:16.899Z",
                "join_url": "pariatur"
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID. <br>\nInvalid parameter: occurrence_ids.<br>\nInvalid user name."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis webinar does not have registration as required:{webinarId}.<br>\n**Error Code:** `3027`<br>\nHost can not register.<br>\n**Error Code:** `3034`<br>\nIf you have been invited, please input your work email address.<br>\n**Error Code:** `3038`<br>\nWebinar is over, you can not register now. If you have any questions, please contact Webinar host.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/webinars/{webinarId}/registrants/status": {
      "put": {
        "summary": "Update Webinar Registrant Status",
        "description": "Update a webinar registrant's status. Using this API, you can specify whether you want to approve a registration, deny a registration or cancel a previously approved registration.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantStatus",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "approve",
                    "cancel",
                    "deny"
                  ],
                  "x-enum-descriptions": [
                    "Approve registrant",
                    "Cancel registrant",
                    "Deny registrant"
                  ],
                  "description": "Used to approve, deny, or cancel the webinar registrant. "
                },
                "registrants": {
                  "type": "array",
                  "description": "List of registrants.",
                  "maximum": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Registrant ID"
                      },
                      "email": {
                        "type": "string",
                        "description": "Registrant's email address."
                      }
                    }
                  }
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "string",
                "registrants": [
                  {
                    "id": "string",
                    "email": "string"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nThe webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}."
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3035`<br>\nWebinar has reached maximum attendee capacity.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_webinars/{webinarId}/instances": {
      "get": {
        "summary": "List Past Webinar Instances",
        "description": "List past webinar instances.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "pastWebinars",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned.",
            "schema": {
              "title": "Webinar instances",
              "description": "List of webinars.",
              "allOf": [
                {
                  "properties": {
                    "webinars": {
                      "type": "array",
                      "description": "List of ended webinar instances.",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "description": "Webinar UUID."
                              },
                              "start_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time."
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "webinars": [
                  {
                    "uuid": "ut44544gisi",
                    "start_time": "2019-06-07T03:42:34.548Z"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>\nInvalid webinar ID."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/polls": {
      "get": {
        "summary": "List a Webinar's Polls ",
        "description": "List all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPolls",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned",
            "schema": {
              "type": "object",
              "title": "Poll List",
              "description": "Poll List",
              "allOf": [
                {
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "The number of all records available across pages"
                    },
                    "polls": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of Poll"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                                "enum": [
                                  "notstart",
                                  "started",
                                  "ended",
                                  "sharing"
                                ],
                                "x-enum-descriptions": [
                                  "Poll not start",
                                  "Poll started",
                                  "Poll ended",
                                  "Poll is sharing"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Poll",
                            "description": "Poll",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Title for the poll."
                              },
                              "questions": {
                                "type": "array",
                                "description": "Array of Polls",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Question to be asked to the attendees."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                                      "enum": [
                                        "single",
                                        "multiple"
                                      ],
                                      "x-enum-descriptions": [
                                        "single answer",
                                        "multiple answer"
                                      ]
                                    },
                                    "answers": {
                                      "type": "array",
                                      "description": "Answers to the questions",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "cdjfhdsdfd",
                "status": "ended",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "How are you?",
                    "type": "multiple",
                    "answers": [
                      "Good",
                      "Not so good"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Webinar's Poll",
        "description": "Create a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPollCreate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar poll object",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "How are you?",
                    "type": "multiple",
                    "answers": [
                      "Good",
                      "Not so good"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nWebinar Poll Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Webinar Poll",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Webinar Poll ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                      "enum": [
                        "notstart",
                        "started",
                        "ended",
                        "sharing"
                      ],
                      "x-enum-descriptions": [
                        "Poll not start",
                        "Poll started",
                        "Poll ended",
                        "Poll is sharing"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "cdjfhdsdfd",
                "status": "ended",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "How are you?",
                    "type": "multiple",
                    "answers": [
                      "Good",
                      "Not so good"
                    ]
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**HTTP Status Code:** `300`<br>Invalid webinarId."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/polls/{pollId}": {
      "get": {
        "summary": "Get a Webinar Poll",
        "description": "Get a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPollGet",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Webinar Poll ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                      "enum": [
                        "notstart",
                        "started",
                        "ended",
                        "sharing"
                      ],
                      "x-enum-descriptions": [
                        "Poll not start",
                        "Poll started",
                        "Poll ended",
                        "Poll is sharing"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "cdjfhdsdfd",
                "status": "ended",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "How are you?",
                    "type": "multiple",
                    "answers": [
                      "Good",
                      "Not so good"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a Webinar Poll",
        "description": "Update a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPollUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar Poll",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Poll",
                  "description": "Poll",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title for the poll."
                    },
                    "questions": {
                      "type": "array",
                      "description": "Array of Polls",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Question to be asked to the attendees."
                          },
                          "type": {
                            "type": "string",
                            "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                            "enum": [
                              "single",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "single answer",
                              "multiple answer"
                            ]
                          },
                          "answers": {
                            "type": "array",
                            "description": "Answers to the questions",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "How are you?",
                    "type": "multiple",
                    "answers": [
                      "Good",
                      "Not so good"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Webinar Poll",
        "description": "Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPollDelete",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "pollId",
            "description": "The poll ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/webinars/{webinarId}/registrants/questions": {
      "get": {
        "summary": "List Registration Questions",
        "description": "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to list registration questions and fields that are to be answered by users while registering for a Webinar.<br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantsQuestionsGet",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Webinar Registrant Questions",
                  "description": "Webinar Registrant Questions",
                  "properties": {
                    "questions": {
                      "type": "array",
                      "description": "Array of registration fields whose values should be provided by registrants during registration.",
                      "items": {
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "description": "Field name",
                            "enum": [
                              "last_name",
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "x-enum-descriptions": [
                              "Last Name",
                              "Address",
                              "City",
                              "Country/Region",
                              "Zip/Postal Code",
                              "State/Province",
                              "Phone",
                              "Industry",
                              "Organization",
                              "Job Title",
                              "Purchasing Time Frame",
                              "Role in Purchase Process",
                              "Number of Employees",
                              "Questions & Comments"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether the selected fields are required or optional."
                          }
                        }
                      }
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Array of Registrant Custom Questions.",
                      "items": {
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Custom question."
                          },
                          "type": {
                            "type": "string",
                            "description": "The question-answer type.",
                            "enum": [
                              "short",
                              "single_radio",
                              "single_dropdown",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "Short Answer",
                              "Single Radio Answer",
                              "Single Dropdown Answer",
                              "Multiple Answer"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether or not the custom question is required to be answered by a registrant."
                          },
                          "answers": {
                            "type": "array",
                            "description": "An array of answer choices. Can't be used for short answer type.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "string",
                    "required": "boolean"
                  }
                ],
                "custom_questions": [
                  {
                    "title": "string",
                    "type": "string",
                    "required": "boolean",
                    "answers": [
                      "array of answer choices"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Webinar not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Registration Questions",
        "description": "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to update registration questions and fields of a scheduled Webinar that are to be answered by users while registering for a Webinar.<br><br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n* Registration option for Webinar should be set as required to use this API. \n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n\n",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantQuestionUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar Registrant Questions",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Webinar Registrant Questions",
                  "description": "Webinar Registrant Questions",
                  "properties": {
                    "questions": {
                      "type": "array",
                      "description": "Array of registration fields whose values should be provided by registrants during registration.",
                      "items": {
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "description": "Field name",
                            "enum": [
                              "last_name",
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "x-enum-descriptions": [
                              "Last Name",
                              "Address",
                              "City",
                              "Country/Region",
                              "Zip/Postal Code",
                              "State/Province",
                              "Phone",
                              "Industry",
                              "Organization",
                              "Job Title",
                              "Purchasing Time Frame",
                              "Role in Purchase Process",
                              "Number of Employees",
                              "Questions & Comments"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether the selected fields are required or optional."
                          }
                        }
                      }
                    },
                    "custom_questions": {
                      "type": "array",
                      "description": "Array of Registrant Custom Questions.",
                      "items": {
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Custom question."
                          },
                          "type": {
                            "type": "string",
                            "description": "The question-answer type.",
                            "enum": [
                              "short",
                              "single_radio",
                              "single_dropdown",
                              "multiple"
                            ],
                            "x-enum-descriptions": [
                              "Short Answer",
                              "Single Radio Answer",
                              "Single Dropdown Answer",
                              "Multiple Answer"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "State whether or not the custom question is required to be answered by a registrant."
                          },
                          "answers": {
                            "type": "array",
                            "description": "An array of answer choices. Can't be used for short answer type.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "questions": [
                  {
                    "field_name": "string",
                    "required": "boolean"
                  }
                ],
                "custom_questions": [
                  {
                    "title": "string",
                    "type": "string",
                    "required": "boolean",
                    "answers": [
                      "array of answer choices"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>Webinar not found"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/im/chat/messages": {
      "post": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nMessage Sent."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `7001`<br>\nLink does not support markdown format.<br>\nEdit message does not support markdown format."
          }
        },
        "summary": "Send Chatbot Messages",
        "operationId": "sendchatbot",
        "tags": [
          "Chatbot Messages"
        ],
        "security": [
          {
            "Client Credentials": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "robot_jid": {
                  "type": "string",
                  "description": "Robot JID created when enabling chatbot features on your marketplace app."
                },
                "to_jid": {
                  "type": "string",
                  "description": "Unique JID of reciever. Can be a group or user."
                },
                "account_id": {
                  "type": "string",
                  "description": "Account ID of the authorized account."
                },
                "content": {
                  "type": "object",
                  "description": "JSON template describing how the message should be displayed for the user. For more information please see our [\"Send Message\" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request)."
                },
                "visible_to_user": {
                  "type": "string",
                  "description": "**Optional**<br>Allow a Chatbot to send a message to a group channel, but have only one designated person in that group channel see the message by providing the person's UserID in this field."
                },
                "user_jid": {
                  "type": "string",
                  "description": "**Optional**<br>\nThe UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel."
                },
                "is_markdown_support": {
                  "description": "**Optional**<br>\nApplies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).",
                  "type": "boolean"
                }
              },
              "required": [
                "robot_jid",
                "to_jid",
                "account_id",
                "content"
              ]
            },
            "x-examples": {
              "application/json": {
                "robot_jid": "bjkfdsbfbdshfdbnf",
                "to_jid": "dsjhvfdhfvdfh",
                "account_id": "dmdbffgjbfhgfdj",
                "content": {
                  "head": {
                    "text": "Hello World"
                  },
                  "body": [
                    {
                      "type": "message",
                      "text": "Greetings from the cool bot"
                    }
                  ]
                }
              }
            }
          }
        ],
        "description": "Send chatbot messages from your marketplace chatbot app.<br><br>\n**Scopes:** `imchat:bot`<br>\n**Authorization Flow**: Client Credentials Flow<br><br>\nTo get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request. \nYou will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token recieved (access_token) as a bearer token while making the POST /im/chat/messages request to send chatbot messages.<br><br>\nLearn more about how to authorize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide."
      }
    },
    "/im/chat/messages/{message_id}": {
      "put": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nMessage updated.",
            "schema": {
              "type": "object",
              "properties": {
                "message_id": {
                  "type": "string",
                  "description": "Unique Identifier of the updated message,"
                },
                "robot_jid": {
                  "type": "string",
                  "description": "The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard."
                },
                "sent_time": {
                  "type": "string",
                  "description": "The date and time at which the message was sent.",
                  "format": "date-time"
                },
                "to_jid": {
                  "type": "string",
                  "description": "The JID of the Channel or User to whom the message was sent."
                },
                "user_jid": {
                  "type": "string",
                  "description": "The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel."
                }
              }
            },
            "examples": {
              "application/json": {
                "message_id": "201910tryyRFjM_main",
                "robot_jid": "v1pky3tyBBB5pl8q@xmpp.zoom.us",
                "sent_time": "2019-10-17 01:40:24",
                "to_jid": "xghfd@shj.zoom.us",
                "user_jid": "jnrgfjp6w@xmpp.zoom.us"
              }
            }
          }
        },
        "summary": "Edit a Chatbot Message",
        "description": "Edit a message that was [sent](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot) by your Chatbot app.<br> After sending a message using the Send Chatbot Message API, you must store the messageId returned in the response so that you can make edits to the associated message using this API.\n\n**Scope:** `imchat:bot`<br><br>\n**Authorization Flow**: Client Credentials Flow<br><br>\nTo get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request. \nYou will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token received (access_token) as a bearer token while making the PUT /im/chat/messages/{message_id} request to edit a chatbot message.<br><br>\nLearn more about how to authotize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide.",
        "operationId": "editChatbotMessage",
        "tags": [
          "Chatbot Messages"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message_id",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the message that needs to be updated. This should be retrieved from the response of [Send Chatbot Message API](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot)."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "robot_jid": {
                  "type": "string",
                  "description": "Robot JID created when enabling chatbot features on your marketplace app."
                },
                "account_id": {
                  "type": "string",
                  "description": "The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages)."
                },
                "content": {
                  "type": "object",
                  "description": "JSON template describing how the edited message should be displayed for the user. For more information please see our [\"Send Message\" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request)."
                },
                "user_jid": {
                  "type": "string",
                  "description": "**Optional**<br>\nThe UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel."
                },
                "is_markdown_support": {
                  "description": "**Optional**<br>\nEnable or disable markdown parser to your chatbot message. Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).",
                  "type": "boolean"
                }
              },
              "required": [
                "robot_jid",
                "account_id",
                "content"
              ]
            },
            "x-examples": {
              "application/json": {
                "robot_jid": "zsgsDgfdhdr",
                "account_id": "ghfgchAFfhfgyt",
                "user_jid": "asdjhdThdaXw@xmpp.zoom.us",
                "content": {
                  "head": {
                    "text": "This is the header.",
                    "sub_head": {
                      "text": "This is sub header."
                    }
                  },
                  "body": [
                    {
                      "type": "message",
                      "text": "This is the edited message."
                    }
                  ]
                },
                "visible_to_user": "arrsyrEwestw",
                "is_markdown_support": "true"
              }
            }
          }
        ],
        "security": [
          {
            "Client Credentials": []
          }
        ]
      },
      "parameters": [
        {
          "name": "message_id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nMessage deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "message_id": {
                  "type": "string",
                  "description": "Unique identifier of the message that was deleted."
                },
                "robot_jid": {
                  "type": "string",
                  "description": "The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard"
                },
                "sent_time": {
                  "type": "string",
                  "description": "The date and time at which the message was deleted."
                },
                "to_jid": {
                  "type": "string",
                  "description": "The JID of the Channel or User to whom the message was sent."
                },
                "user_jid": {
                  "type": "string",
                  "description": " The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel."
                }
              }
            },
            "examples": {
              "application/json": {
                "message_id": "20191017014024747_XYYRFjM_main",
                "robot_jid": "v1pky3qsaoqqwdfdsaf5pl8q@xmppdev.zoom.us",
                "sent_time": "2019-10-17 01:40:24",
                "to_jid": "xxx@conference.xmppdev.zoom.us",
                "user_jid": "jnr_3e_eq4cveeafp3qp6w@xmppdev.zoom.us"
              }
            }
          }
        },
        "summary": "Delete a Chatbot Message",
        "description": "Delete a message that was sent by your chatbot app. \n\n**Scopes:** `imchat:bot`<br>\n\n**Authorization Flow**: Client Credentials Flow<br><br>\nTo get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request. \nYou will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token received (access_token) as a bearer token while making the DELETE /im/chat/messages/{message_id} request to delete a message.<br><br>\nLearn more about how to authotize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide.",
        "operationId": "deleteAChatbotMessage",
        "tags": [
          "Chatbot Messages"
        ],
        "security": [
          {
            "Client Credentials": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "robot_jid": {
                  "type": "string",
                  "description": "The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard."
                },
                "user_jid": {
                  "type": "string",
                  "description": "The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel."
                },
                "account_id": {
                  "type": "string",
                  "description": "The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages)."
                }
              },
              "required": [
                "robot_jid",
                "account_id"
              ]
            },
            "x-examples": {
              "application/json": {
                "robot_jid": "dgfhfhfdhfghgf",
                "user_jid": "gfhgfhytu6ujg",
                "account_id": "ghjgyu674hfgjn"
              }
            }
          }
        ]
      }
    },
    "/meetings/{meetingId}/invitation": {
      "get": {
        "summary": "Get Meeting Invitation",
        "description": "Retrieve the meeting invite note that was sent for a specific meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingInvitation",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nMeeting invitation returned.",
            "schema": {
              "type": "object",
              "title": "Meeting Invitation",
              "description": "Meeting invitation details.",
              "properties": {
                "invitation": {
                  "type": "string",
                  "description": "Meeting invitation."
                }
              }
            },
            "examples": {
              "application/json": {
                "invitation": "Shrijana G is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: MyTestMeeting\r\nTime: Jul 31, 2019 04:00 PM Pacific Time (US and Canada)\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/000000\r\n\r\nOne tap mobile\r\n+000000"
              }
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/livestream": {
      "patch": {
        "summary": "Update Live Stream",
        "description": "Zoom allows users to [live stream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update a meeting's live stream information.<br><br>\n**Prerequisites:**<br>\n* Meeting host must have a Pro license.<br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br> \n\n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingLiveStreamUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "type": "object",
              "description": "Meeting live stream.",
              "properties": {
                "stream_url": {
                  "type": "string",
                  "maxLength": 1024,
                  "description": "Streaming URL."
                },
                "stream_key": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Stream name and key."
                },
                "page_url": {
                  "type": "string",
                  "description": "The livestream page URL.",
                  "format": "uri",
                  "maxLength": 1024
                }
              },
              "required": [
                "stream_url",
                "stream_key"
              ]
            },
            "x-examples": {
              "application/json": {
                "stream_url": "mycompany.com/livestream",
                "stream_key": "Contact it@mycompany.com",
                "page_url": "mycompany.com/livestream/123"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nMeeting live stream updated."
          },
          "300": {
            "description": "**Error Code:** `300` <br>Missing meetingId <br> Invalid meetingId."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>**Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br>\n **Error Code:** `3000` Cannot access webinar info."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>**Error Code:** `1001` <br>User {userId} does not exist.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/meetings/{meetingId}/livestream/status": {
      "patch": {
        "summary": "Update Live Stream Status",
        "description": "Zoom allows users to [live stream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update the status of a meeting's live stream.<br><br>\n**Prerequisites:**<br>\n* Meeting host must have a Pro license.<br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>  \n\n",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingLiveStreamStatusUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "type": "object",
              "description": "Meeting live stream status.",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action.",
                  "enum": [
                    "start",
                    "stop"
                  ],
                  "x-enum-descriptions": [
                    "Start a meeting live stream.",
                    "Stop a meeting live stream."
                  ]
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "active_speaker_name": {
                      "type": "boolean",
                      "description": "Display the name of the active speaker during a livestream."
                    },
                    "display_name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50,
                      "description": "Live stream display name."
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "stop",
                "settings": {
                  "active_speaker_name": false,
                  "display_name": "inc"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nMeeting live stream updated.\n\n"
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nMissing meetingId.<br>\nInvalid meetingId"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n**Error Code:**`3000`<br>\nCannot access webinar info.<br>\n**Error Code:**`1010`<br>User does not belong to this account: {accountId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:**`1001`<br>\nUser {userId} does not exist.<br>\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/metrics/client/feedback/{feedbackId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "Pagination object.",
                  "properties": {
                    "page_size": {
                      "type": "integer",
                      "description": "The amount of records returns within a single API call. ",
                      "default": 30,
                      "maximum": 300
                    },
                    "next_page_token": {
                      "description": "The Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "client_feedback_details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "participant_name": {
                            "type": "string",
                            "description": "Participant Name"
                          },
                          "meeting_id": {
                            "type": "string",
                            "description": "Meeting ID"
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which the feedback was submitted by the participant."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the participant."
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2017-09-28",
                "to": "2017-10-28",
                "page_size": 30,
                "next_page_token": "w7587w4eiyfsudgf",
                "client_feedback_details": [
                  {
                    "participant_name": "Meghan Styles",
                    "meeting_id": "3789500000000",
                    "time": "2017-10-21T11:35:33.480Z",
                    "email": "hdfgjsfhdfbs@someemail.sdfkhjdf"
                  }
                ]
              }
            }
          }
        },
        "summary": "Get Zoom Meetings Client Feedback",
        "description": "Retrieve detailed information on a [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Prerequisites:**\n* Business or higher account\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.\n\n**Scope:** `dashboard_home:read:admin`<br> \n\n`",
        "operationId": "dashboardClientFeedbackDetail",
        "tags": [
          "Dashboards"
        ],
        "parameters": [
          {
            "name": "feedbackId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Feedback Detail Id"
          },
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string"
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/im/users/{userId}/chat/messages": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser's IM messages returned.",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Query date time, format as yyyy-mm-dd."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned within a single API call."
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "messages": {
                  "type": "array",
                  "description": "Array of im messages.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "IM message UUID."
                      },
                      "message": {
                        "type": "string",
                        "description": "IM message content."
                      },
                      "sender": {
                        "type": "string",
                        "description": "IM message sender."
                      },
                      "date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "IM message send time."
                      },
                      "timstamp": {
                        "type": "integer",
                        "description": "IM message send timestamp."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "date": "string [date]",
                "page_size": "integer",
                "next_page_token": "string",
                "messages": [
                  {
                    "id": "string",
                    "message": "string",
                    "sender": "string",
                    "date_time": "string [date-time]",
                    "timstamp": "Long"
                  }
                ]
              }
            }
          }
        },
        "summary": "Get User’s IM Messages",
        "description": "Get IM Chat messages for a specified period of time. <aside>Note: This API only supports Oauth2.</aside><br><br>\n**Scopes:** `imchat:read`\n<p style=\"background-color:#ffffcc;\"><strong>API End of Life:</strong> This API will no longer be supported after April, 2020. <a href=\"https://marketplace.zoom.us/docs/deprecated-scopes\">Learn more</a>.</p><br> ",
        "operationId": "listimmessages",
        "tags": [
          "IM Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "description": "The user ID or email address.",
            "required": true
          },
          {
            "in": "query",
            "name": "chat_user",
            "type": "string",
            "description": "Chat user's ID or email address."
          },
          {
            "in": "query",
            "name": "channel",
            "type": "string",
            "description": "IM Channel's ID."
          },
          {
            "in": "query",
            "name": "date",
            "type": "string",
            "description": "IM message's query date time, format as yyyy-MM-dd."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30,
            "maximum": 100,
            "minimum": 1,
            "description": "The number of records returned within a single API call."
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/im/users/me/chat/messages": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`<br>\nMessage Sent.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "IM message UUID."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "string"
              }
            }
          }
        },
        "description": "Send chat message to a user. <aside>Note: This API only supports OAuth 2.0.</aside><br><br>**Scope:** `imchat:write`\n<p style=\"background-color:#ffffcc;\"><strong>API End of Life:</strong> This API will no longer be supported after April, 2020. <a href=\"https://marketplace.zoom.us/docs/deprecated-scopes\">Learn more</a>.</p><br>\n ",
        "summary": "Send IM messages",
        "operationId": "sendimmessages",
        "tags": [
          "IM Chat"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "IM message content."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "message": "Hello World!"
              }
            }
          },
          {
            "in": "query",
            "name": "chat_user",
            "type": "string",
            "description": "The email address (registered with Zoom) or the userId of the chat user."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "deprecated": true
      }
    },
    "/webinars/{webinarId}/registrants/{registrantId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "title": "Webianr Registrant",
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Webinar registrant.",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Registrant base object.",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "A valid email address of the registrant."
                        },
                        "first_name": {
                          "type": "string",
                          "description": "Registrant's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "description": "Registrant's last name."
                        },
                        "address": {
                          "type": "string",
                          "description": "Registrant's address."
                        },
                        "city": {
                          "type": "string",
                          "description": "Registrant's city."
                        },
                        "country": {
                          "type": "string",
                          "description": "Registrant's country."
                        },
                        "zip": {
                          "type": "string",
                          "description": "Registrant's Zip/Postal Code."
                        },
                        "state": {
                          "type": "string",
                          "description": "Registrant's State/Province."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Registrant's Phone number."
                        },
                        "industry": {
                          "type": "string",
                          "description": "Registrant's Industry."
                        },
                        "org": {
                          "type": "string",
                          "description": "Registrant's Organization."
                        },
                        "job_title": {
                          "type": "string",
                          "description": "Registrant's job title."
                        },
                        "purchasing_time_frame": {
                          "type": "string",
                          "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                        },
                        "role_in_purchase_process": {
                          "type": "string",
                          "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                        },
                        "no_of_employees": {
                          "type": "string",
                          "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                        },
                        "comments": {
                          "type": "string",
                          "description": "A field that allows registrants to provide any questions or comments that they might have."
                        },
                        "custom_questions": {
                          "type": "array",
                          "description": "Custom questions.",
                          "items": {
                            "type": "object",
                            "description": "Custom Question.",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "email",
                        "first_name",
                        "last_name"
                      ]
                    }
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "create_time": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "join_url": {
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": "1",
                "page_number": "1",
                "page_size": "30",
                "total_records": "1",
                "registrants": [
                  {
                    "id": "24000002122",
                    "email": "sjfkghdsg@someemail.dfgjd",
                    "first_name": "Jill",
                    "last_name": "Chill",
                    "address": "dsfhkdjsfh st",
                    "city": "jackson heights",
                    "country": "US",
                    "zip": "11371",
                    "state": "NY",
                    "phone": "00000000",
                    "industry": "Food",
                    "org": "Cooking Org",
                    "job_title": "Chef",
                    "purchasing_time_frame": "1-3 months",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "10",
                    "comments": "Looking forward to the Webinar",
                    "custom_questions": [
                      {
                        "title": "What do you hope to learn from this Webinar?",
                        "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                      }
                    ],
                    "status": "approved",
                    "create_time": "2019-02-26T23:01:16.899Z",
                    "join_url": "https://zoom.us/webinar/mywebinarissocooldighdghodghodg"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "Invalid webinar ID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>"
          }
        },
        "summary": "Get a Webinar Registrant",
        "description": "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to get details on a specific user who has registered for the Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n <br>\n**Prerequisites:**<br>\n* The account must have a Webinar plan.",
        "operationId": "webinarRegistrantGet",
        "tags": [
          "Webinars"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "registrantId",
            "description": "The registrant ID.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "registrantId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/users/{userId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>User profile object returned. ",
            "schema": {
              "type": "object",
              "description": "Zoom User Profile",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Zoom User Id."
                },
                "phone_user_id": {
                  "type": "string",
                  "description": "Zoom Phone User Id."
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the user."
                },
                "calling_plan": {
                  "type": "array",
                  "description": "Calling Plan of the user",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan. "
                      }
                    }
                  }
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Phone Number Id"
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number"
                      }
                    }
                  }
                },
                "extension_number": {
                  "type": "integer",
                  "description": "Extension number"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the user.<br>\n`activate`: An active user. <br>\n`deactivate`: User has been deactivated from the ZoomPhone system.",
                  "enum": [
                    "activate",
                    "deactivate"
                  ]
                },
                "site_id": {
                  "type": "string",
                  "description": "Unique Identifier for a [site](https://support.zoom.us/hc/en-us/articles/360020809672)."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "fdjbgdfgkl0-ibkdjfg20913",
                "phone_user_id": "vfjbdlgrwi902_igr",
                "email": "awesome@amazingemailservice.com",
                "extension_number": 100100,
                "calling_plans": [
                  {
                    "type": 200
                  }
                ],
                "phone_numbers": [
                  {
                    "id": "vigfkjnrtUernketg09",
                    "number": "+1234567890"
                  }
                ],
                "site_id": "aXb1039sdjhhgdbgj4",
                "status": "activate"
              }
            }
          },
          "300": {
            "description": "**Error code:** `300` <br> User does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error code**: `1001` <br>User does not exist: {userId}."
          }
        },
        "summary": "Get User's Profile",
        "description": "Retrieve a user's [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile.\n\n**Scopes:** `phone:read`, `phone:read:admin`<br> \n\n\n**Prerequisites** :\n1. Business or Enterprise account \n2. A Zoom Phone license",
        "tags": [
          "Phone"
        ],
        "operationId": "phoneUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nProfile updated.",
            "schema": {}
          },
          "300": {
            "description": "**Error Code**: `300`<br>\nUser does not belong to this account."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nExtension number {extensionNumber} is already in use."
          }
        },
        "summary": "Update User's Profile",
        "description": "Update a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user's profile.\n\n**Scopes:** `phone:write` `phone:write:admin`  <br><br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license",
        "operationId": "updateUserProfile",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "extension_number": {
                  "type": "string",
                  "description": "The extension number of the user. The number must be complete (i.e. site number + short extension)."
                },
                "site_id": {
                  "type": "string",
                  "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672)   where the user should be moved/assigned. "
                }
              }
            },
            "x-examples": {
              "application/json": {
                "extension_number": "101010"
              }
            }
          }
        ]
      }
    },
    "/phone/users/{userId}/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser Setting object returned.",
            "schema": {
              "type": "object",
              "description": "Phone User Setting",
              "properties": {
                "outbound_caller": {
                  "type": "object",
                  "description": "Outbound Caller Info",
                  "properties": {
                    "number": {
                      "type": "string",
                      "description": "Outbound calling number"
                    }
                  }
                },
                "area_code": {
                  "type": "string",
                  "description": "Area Code of User"
                },
                "company_number": {
                  "type": "string",
                  "description": "The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls."
                }
              }
            },
            "examples": {
              "application/json": {
                "outbound_caller": {
                  "number": "23456789"
                },
                "area_code": "+1"
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}."
          }
        },
        "summary": "Get User's Settings",
        "description": "Retrieve a user's zoom phone profile [settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).\n\n**Scopes:** `phone:read`, `phone:read:admin`<br> <br>\n**Prerequisite:**\n1. Business or Enterprise account\n2. A Zoom Phone license",
        "tags": [
          "Phone"
        ],
        "operationId": "phoneUserSettings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/users/{userId}/call_logs": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`\nUser's call logs returned.",
            "schema": {
              "type": "object",
              "description": "Phone User Call Logs",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Date from which you would like to view the logs."
                },
                "to": {
                  "type": "string",
                  "description": "Date up to which you would like to view the phone log."
                },
                "page_count": {
                  "type": "string",
                  "description": "Total number of pages"
                },
                "page_number": {
                  "type": "string",
                  "description": "The page number of the current results."
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call for each page."
                },
                "total_records": {
                  "type": "string",
                  "description": "The total number of records returned."
                },
                "call_logs": {
                  "type": "array",
                  "description": "Call Log",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Call Log ID"
                      },
                      "caller_number": {
                        "type": "string",
                        "description": "Number of caller"
                      },
                      "caller_number_type": {
                        "type": "string",
                        "description": "Type of caller's number. 1 - internal | 2 - external"
                      },
                      "caller_name": {
                        "type": "string",
                        "description": "Contact name of caller"
                      },
                      "callee_number": {
                        "type": "string",
                        "description": "Number of callee"
                      },
                      "callee_number_type": {
                        "type": "string",
                        "description": "Type of callee's number. 1 - internal | 2 - external"
                      },
                      "callee_name": {
                        "type": "string",
                        "description": "Contact name of callee"
                      },
                      "direction": {
                        "type": "string",
                        "description": "Direction of the call. \"inbound\" | \"outbound\""
                      },
                      "duration": {
                        "description": "Duration of the call in seconds.",
                        "type": "integer"
                      },
                      "result": {
                        "type": "string",
                        "description": "Result of the call. \"call_connected\" | \"recorded\" | \"no_answer\""
                      },
                      "date_time": {
                        "type": "string",
                        "description": "Start time of the call"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 0,
                "page_number": 1,
                "page_size": 30,
                "total_records": 0,
                "from": "2019-05-19",
                "to": "2019-05-20",
                "call_logs": [
                  {
                    "id": "sjbkfdsbfsdf",
                    "caller_number": "12345678",
                    "caller_number_type": "1",
                    "caller_name": "ullamconame",
                    "callee_number": "34567889",
                    "callee_number_type": "2",
                    "callee_name": "somename",
                    "direction": "inbound",
                    "duration": 18677470,
                    "result": "no_answer",
                    "date_time": "2019-05-19T20:00:00Z"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status code:** `404`\n**Error Code:** `300`<br>\nUser does not exist: {userId}."
          }
        },
        "summary": "Get User's Call Logs",
        "description": "Retrieve a [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) user's call logs.\n\n**Scopes:** `phone:read`, `phone:read:admin`<br> <br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license",
        "tags": [
          "Phone"
        ],
        "operationId": "phoneUserCallLogs",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "description": "End date.",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "enum": [
              "all",
              "missed"
            ]
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/users/{userId}/recordings": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser object returned.",
            "schema": {
              "type": "object",
              "description": "Phone User Recordings",
              "properties": {
                "page_count": {
                  "type": "string",
                  "description": "Total number of pages."
                },
                "page_number": {
                  "type": "string",
                  "description": "The page number of the current results."
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call for each page."
                },
                "total_records": {
                  "type": "string",
                  "description": "The total number of records returned."
                },
                "recordings": {
                  "type": "array",
                  "description": "Recordings",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of recording"
                      },
                      "caller_number": {
                        "type": "string",
                        "description": "Number of caller"
                      },
                      "caller_number_type": {
                        "type": "string",
                        "description": "Type of caller's number. 1 - internal | 2 - external"
                      },
                      "caller_name": {
                        "type": "string",
                        "description": "Contact name of caller"
                      },
                      "callee_number": {
                        "type": "string",
                        "description": "Number of callee"
                      },
                      "callee_number_type": {
                        "type": "string",
                        "description": "Type of callee's number. 1 - internal | 2 - external"
                      },
                      "callee_name": {
                        "type": "string",
                        "description": "Contact name of callee"
                      },
                      "direction": {
                        "type": "string",
                        "description": "Direction of the call. \"inbound\" | \"outbound\""
                      },
                      "duration": {
                        "type": "string",
                        "description": "Duration of the call"
                      },
                      "download_url": {
                        "type": "string",
                        "description": "Download url for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url. <br>\n\nExample request:<br>\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```\n"
                      },
                      "date_time": {
                        "type": "string",
                        "description": "Date and time at which the record is received"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 0,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "from": "2019-05-19",
                "to": "2019-05-20",
                "recordings": [
                  {
                    "id": "magnageUt",
                    "caller_number": "12345678",
                    "caller_number_type": "1",
                    "caller_name": "ullamconame",
                    "callee_number": "34567889",
                    "callee_number_type": "2",
                    "callee_name": "somename",
                    "direction": "inbound",
                    "duration": 12,
                    "date_time": "2019-05-19T20:00:00Z",
                    "download_url": "somerandomdownloadurl.com"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error code:** `300`\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error code:** `1001`<br>\nUser does not exist: {userId}."
          }
        },
        "summary": "Get User's Recordings",
        "description": "Retrieve a user's zoom [phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings).\n**Scopes:** `phone:read`, `phone:read:admin`<br>\n <br>\n**Prerequisite:**\n1. Business or Enterprise account\n2. A Zoom Phone license",
        "tags": [
          "Phone"
        ],
        "operationId": "phoneUserRecordings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/users/{userId}/voice_mails": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nUser object returned.",
            "schema": {
              "type": "object",
              "description": "Phone User Voice Mails",
              "properties": {
                "page_count": {
                  "type": "string",
                  "description": "Total number of page"
                },
                "page_number": {
                  "type": "string",
                  "description": "Which page of content is displaying"
                },
                "page_size": {
                  "type": "string",
                  "description": "Size of each page"
                },
                "total_records": {
                  "type": "string",
                  "description": "Total number of records"
                },
                "voice_mails": {
                  "type": "array",
                  "description": "Voice Mails",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of voice mail"
                      },
                      "date_time": {
                        "type": "string",
                        "description": "Date the voice mail started"
                      },
                      "download_url": {
                        "type": "string",
                        "description": "Download url of attachment"
                      },
                      "duration": {
                        "type": "string",
                        "description": "Duration of the voice mail"
                      },
                      "caller_number": {
                        "type": "string",
                        "description": "Number of caller "
                      },
                      "caller_number_type": {
                        "type": "string",
                        "description": "Type of caller's number. 1 - internal | 2 - external"
                      },
                      "caller_name": {
                        "type": "string",
                        "description": "Contact name of caller"
                      },
                      "callee_number": {
                        "type": "string",
                        "description": "Number of callee"
                      },
                      "callee_number_type": {
                        "type": "string",
                        "description": "Type of callee's number. 1 - internal | 2 - external"
                      },
                      "callee_name": {
                        "type": "string",
                        "description": "Contact name of callee"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the voice mail. Can be either 'read' or 'unread'",
                        "enum": [
                          "read",
                          "unread"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 0,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "voice_mails": [
                  {
                    "id": "Excepteur",
                    "date_time": "2019-05-19T20:00:00Z",
                    "download_url": "ani_maborumu7labojgde.com",
                    "duration": "18677",
                    "caller_number": "12345678",
                    "caller_number_type": "1",
                    "caller_name": "ullamconame",
                    "callee_number": "34567889",
                    "callee_number_type": "2",
                    "callee_name": "somename",
                    "status": "read"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** 300<br>\nUser does not belong to account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** 1001<br>\nUser does not exist: {userId}"
          }
        },
        "summary": "Get User's Voicemails",
        "description": "Retrieve a user's Zoom Phone voicemails. \n\n**Scopes:** `phone:read`, `phone:read:admin`<br> <br>\n**Prerequisite:**\n1. Business or Enterprise account\n2. A Zoom Phone license",
        "tags": [
          "Phone"
        ],
        "operationId": "phoneUserVoiceMails",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "page_number",
            "description": "The current page number of returned records.",
            "type": "integer",
            "default": 1
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "default": "all",
            "description": "Status of the voice mail",
            "enum": [
              "all",
              "read",
              "unread"
            ]
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/past_webinars/{WebinarUUID}/absentees": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "schema": {
              "title": "Registration List",
              "description": "List of users.",
              "allOf": [
                {
                  "title": "Registration List",
                  "description": "List of users.",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Pagination Object.",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "description": "The number of pages returned for the request made."
                        },
                        "page_number": {
                          "type": "integer",
                          "description": "The page number of the current results.",
                          "default": 1
                        },
                        "page_size": {
                          "type": "integer",
                          "description": "The number of records returned with a single API call.",
                          "default": 30,
                          "maximum": 300
                        },
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of all the records available across pages."
                        }
                      }
                    },
                    {
                      "properties": {
                        "registrants": {
                          "type": "array",
                          "description": "List of registrant objects.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Registrant ID."
                                  }
                                }
                              },
                              {
                                "description": " Registrant.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Registrant base object.",
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "description": "A valid email address of the registrant."
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "description": "Registrant's first name."
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "description": "Registrant's last name."
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "Registrant's address."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "Registrant's city."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Registrant's country."
                                      },
                                      "zip": {
                                        "type": "string",
                                        "description": "Registrant's Zip/Postal Code."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Registrant's State/Province."
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "Registrant's Phone number."
                                      },
                                      "industry": {
                                        "type": "string",
                                        "description": "Registrant's Industry."
                                      },
                                      "org": {
                                        "type": "string",
                                        "description": "Registrant's Organization."
                                      },
                                      "job_title": {
                                        "type": "string",
                                        "description": "Registrant's job title."
                                      },
                                      "purchasing_time_frame": {
                                        "type": "string",
                                        "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                                      },
                                      "role_in_purchase_process": {
                                        "type": "string",
                                        "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                                      },
                                      "no_of_employees": {
                                        "type": "string",
                                        "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                                      },
                                      "comments": {
                                        "type": "string",
                                        "description": "A field that allows registrants to provide any questions or comments that they might have."
                                      },
                                      "custom_questions": {
                                        "type": "array",
                                        "description": "Custom questions.",
                                        "items": {
                                          "type": "object",
                                          "description": "Custom Question.",
                                          "properties": {
                                            "title": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "email",
                                      "first_name",
                                      "last_name"
                                    ]
                                  }
                                ],
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                                  },
                                  "create_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time at which the registrant registered."
                                  },
                                  "join_url": {
                                    "type": "string",
                                    "format": "string",
                                    "description": "The URL using which an approved registrant can join the webinar."
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "registrants": [
                  {
                    "id": "24000002122",
                    "email": "sjfkghdsg@someemail.dfgjd",
                    "first_name": "Jill",
                    "last_name": "Chill",
                    "address": "dsfhkdjsfh st",
                    "city": "jackson heights",
                    "country": "USA",
                    "zip": "11371",
                    "state": "NY",
                    "phone": "00000000",
                    "industry": "Food",
                    "org": "Cooking Org",
                    "job_title": "Chef",
                    "purchasing_time_frame": "1-3 months",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "10",
                    "comments": "Looking forward to the Webinar",
                    "custom_questions": [
                      {
                        "title": "What do you hope to learn from this Webinar?",
                        "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                      }
                    ],
                    "status": "approved",
                    "create_time": "2019-02-26T23:01:16.899Z",
                    "join_url": "https://zoom.us/webinar/mywebinarissocooldighdghodghodg"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>Invalid webinar UUID."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis Webinar has not registration required: {webinarUUID}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n"
          }
        },
        "summary": "Get Webinar Absentees",
        "description": "List absentees of a webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n ",
        "operationId": "webinarAbsentees",
        "tags": [
          "Webinars"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "occurrence_id",
            "description": "The meeting occurrence ID.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "name": "WebinarUUID",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The webinar UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/users/{userId}/tsp/settings": {
      "patch": {
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content** <br>\nURL set successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n Account not enable TSP"
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid."
          }
        },
        "summary": "Set Global Dial-in URL for a TSP User",
        "description": "A global dial-in page can provide a list of global access numbers using which audio conferencing can be conducted. By calling this API, you can set the url for the global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled. <p></p>\n**Scopes:**`tsp:write:admin` `tsp:write`<br>\n \n",
        "tags": [
          "TSP"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "The userId or email address of the user."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "title": "TSP Global Dial-In URL Setting",
              "properties": {
                "audio_url": {
                  "type": "string",
                  "description": "The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.",
                  "maxLength": 512
                }
              }
            },
            "description": "Global dial-in URL of the user.",
            "x-examples": {
              "application/json": {
                "audio_url": "youraudiourl.dshfgdhsfh"
              }
            }
          }
        ],
        "operationId": "tspUrlUpdate",
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/call_logs": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nAccount's call logs returned.",
            "schema": {
              "type": "object",
              "description": "Account Call Logs",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Date from which you would like to view the logs."
                },
                "to": {
                  "type": "string",
                  "description": "Date up to which you would like to view the phone log."
                },
                "page_count": {
                  "type": "string",
                  "description": "Total number of pages"
                },
                "page_number": {
                  "type": "string",
                  "description": "The page number of the current results."
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call for each page."
                },
                "total_records": {
                  "type": "string",
                  "description": "The total number of records returned."
                },
                "call_logs": {
                  "type": "array",
                  "description": "Call Log",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Call Log ID"
                      },
                      "caller_number": {
                        "type": "string",
                        "description": "Number of caller"
                      },
                      "caller_number_type": {
                        "type": "string",
                        "description": "Type of caller's number. 1 - internal | 2 - external"
                      },
                      "caller_name": {
                        "type": "string",
                        "description": "Contact name of caller"
                      },
                      "callee_number": {
                        "type": "string",
                        "description": "Number of callee"
                      },
                      "callee_number_type": {
                        "type": "string",
                        "description": "Type of callee's number. 1 - internal | 2 - external"
                      },
                      "callee_name": {
                        "type": "string",
                        "description": "Contact name of callee"
                      },
                      "direction": {
                        "type": "string",
                        "description": "Direction of the call. \"inbound\" | \"outbound\""
                      },
                      "duration": {
                        "description": "Duration of the call in seconds.",
                        "type": "integer"
                      },
                      "result": {
                        "type": "string",
                        "description": "Result of the call. \"call_connected\" | \"recorded\" | \"no_answer\""
                      },
                      "date_time": {
                        "type": "string",
                        "description": "Start time of the call"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_count": 0,
                "page_number": 1,
                "page_size": 30,
                "total_records": 0,
                "from": "2019-05-19",
                "to": "2019-05-20",
                "call_logs": [
                  {
                    "id": "sjbkfdsbfsdf",
                    "caller_number": "12345678",
                    "caller_number_type": "1",
                    "caller_name": "ullamconame",
                    "callee_number": "34567889",
                    "callee_number_type": "2",
                    "callee_name": "somename",
                    "direction": "inbound",
                    "duration": 18677470,
                    "result": "no_answer",
                    "date_time": "2019-05-19T20:00:00Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nError retrieving call logs."
          }
        },
        "summary": "Get Account's Call Logs",
        "description": "Retrieve [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs) for an account. \n\n**Scopes**: `phone:read:admin`<br> <br>\n**Prerequisite:**<br>\n1. Business or Enterprise account<br>\n2. A Zoom Phone license<br>\n3. Account Owner and a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone Management<br>",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30,
            "maximum": 300,
            "description": "The number of records returned within a single API call."
          },
          {
            "in": "query",
            "name": "page_number",
            "type": "integer",
            "default": 1,
            "description": "The current page number of returned records."
          },
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "description": "Start date from which you would like to get the call logs. The start date should be within past six months."
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "description": "The end date upto which you would like to get the call logs for. The end date should be within past six months."
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "The type of the call logs. The value can be either \"all\" or \"missed\"."
          }
        ],
        "operationId": "accountCallLogs",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/users/{userId}/phone_numbers": {
      "post": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nPhone number assigned successfully. \n",
            "schema": {
              "type": "object",
              "properties": {
                "phone_numbers": {
                  "type": "array",
                  "description": "Assigned phone number",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the phone number"
                      },
                      "number": {
                        "type": "string",
                        "description": "The phone number that is assigned to the user."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "phone_numbers": [
                  {
                    "id": "djkfsd13",
                    "number": "+123456789"
                  }
                ]
              }
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nUser does not belong to this account."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\nUser does not have a calling plan."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>This user does not exist: {userId}."
          }
        },
        "summary": "Assign Phone Number to User ",
        "description": "Assign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone. \n\n**Scopes**: `phone:write` `phone:write:admin`<br> <br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license",
        "operationId": "assignPhoneNumber",
        "tags": [
          "Phone"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID for phone number"
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number in E164 format."
                      }
                    }
                  }
                }
              }
            },
            "description": "Provide either an id or a number in the request body.",
            "x-examples": {
              "application/json": {
                "phone_numbers": [
                  {
                    "id": "djkfsd13"
                  }
                ]
              }
            }
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/users/{userId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully.",
            "schema": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist."
          }
        },
        "summary": "Unassign User's Phone Number",
        "description": "Unassign [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) of a Zoom phone user. <br>\n\nAfter assigning a phone number, you can remove it if you don't want it to be assigned to anyone.\n\n**Scopes**: `phone:write` `phone:write:admin`<br> <br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license\n3. User must have been previously assigned a Zoom Phone number.",
        "operationId": "UnassignPhoneNumber",
        "tags": [
          "Phone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "Provide either userId or email address of the user."
          },
          {
            "in": "path",
            "name": "phoneNumberId",
            "type": "string",
            "required": true,
            "description": "Provide either phone number or phoneNumberId of the user. "
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "phoneNumberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/users/{userId}/calling_plans": {
      "post": {
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`<br>\nCalling plan assigned successfully.",
            "schema": {}
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status code:** `404`<br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}."
          }
        },
        "summary": "Assign Calling Plan to a User",
        "description": "Assign [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user.\n\n**Scopes**: `phone:write` `phone:write:admin`<br> <br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license\n\n",
        "operationId": "assignCallingPlan",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "calling_plans": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "[Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "calling_plans": [
                  {
                    "type": "100"
                  },
                  {
                    "type": "200"
                  }
                ]
              }
            }
          }
        ],
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/users/{userId}/calling_plans/{type}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\nCalling plan unassigned successfully.",
            "schema": {}
          },
          "300": {
            "description": "**Error Code:** `300` <br>\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}."
          }
        },
        "summary": "Unassign User's Calling Plan",
        "description": "Unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that was previously assigned to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user.\n\n**Scopes**: `phone:write` `phone:write:admin`<br> <br>\n**Prerequisite:** \n1. Business or Enterprise account\n2. A Zoom Phone license",
        "operationId": "unassignCallingPlan",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "type": "string",
            "required": true,
            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be \"200\" for Unlimited US/Canada calling plan.)\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/accounts/{accountId}/plans/base/status": {
      "patch": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nCannot cancel plan for a Sub Account which is under free plan.\nYou don’t have a major subscription yet.\nYou should first cancel all additional subscriptions.\nFree trial and VIP account can’t cancel sub plan.\nYou don’t have subscription to this plan yet: {planCode}.\nYou don’t have a major subscription yet."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>Can’t cancel when the account is subscribed to a bundle plan. Contact the Zoom Support team for details."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>User does not exist. <br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to this master account.\n\n\n"
          }
        },
        "summary": "Cancel Base Plan",
        "description": "[Cancel a base plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) for a sub account.\n<aside> <aside> Only a Master Account can use this API to cancel the base plan of a Sub Account whose billing charges are paid by the Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br><br></aside><br><br>\n\n**Scopes**: `billing:master`<br>\n**Prerequisites:**<br>\n* The Sub Account must have a Pro or a higher plan.\n ",
        "operationId": "accountPlanBaseDelete",
        "tags": [
          "Billing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "The action that needs to be taken for this sub account. Value must be set to \"cancel\"."
                },
                "reason": {
                  "description": "The reason for the cancellation of plan. Reason options:<br>`1` - Only needed the service occasionally.<br>`2` - Features in the free plan are sufficient.<br>`3` - The plan is too expensive.<br>`4` - Important features are missing.<br>`5` - I need help to better use Zoom.<br> `6` - I bought the wrong product.<br>`7` - I am not satisfied with the product quality.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "type": "integer"
                },
                "comment": {
                  "type": "string",
                  "description": "Additional comments about the cancellation decision."
                }
              },
              "required": [
                "action"
              ]
            },
            "x-examples": {
              "application/json": {
                "action": "cancel",
                "reason": 2,
                "comment": "Amazing plan but I do not need it right now."
              }
            }
          }
        ]
      }
    },
    "/accounts/{accountId}/plans/addons/status": {
      "patch": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nCannot cancel plan for a sub account which is under free plan.<br>\nFree trial and VIP account can’t cancel sub plan.<br>\nYou don’t have subscription (\" + planCode + \") yet."
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
            "schema": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nPlan type is required."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br>\nThis sub account is paid by self.<br>Can’t cancel when the account is subscribed to a bundle plan. Contact the Zoom Support team for details."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.<br>\n**Error Code:** `2001`<br> This account does not exist or does not belong to this master account.\n\n"
          }
        },
        "summary": "Cancel  Additional Plans",
        "description": "[Cancel additional plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) of a Sub Account. The cancellation does not provide refund for the current subscription. The service remains active for the current session.\n<aside> Only a Master Account can use this API to cancel the addon plans for a Sub Account whose billing charges are paid by the Master Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details.</aside><br>\n\n**Prerequisites:**<br>\n* Pro or a higher plan with Master Account option enabled.\n* The Sub Account must be a paid account.<br>\n**Scope:** `billing:master`<br>\n ",
        "operationId": "accountPlanAddonCancel",
        "tags": [
          "Billing"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "description": "Account plan object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "The action that needs to be taken for this sub account. Value must be set to \"cancel\".",
                  "enum": [
                    "cancel"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans)."
                },
                "reason": {
                  "description": "The reason for the cancellation of plan. Reason options:<br>`1` - Only needed the service occasionally.<br>`2` - Features in the free plan are sufficient.<br>`3` - The plan is too expensive.<br>`4` - Important features are missing.<br>`5` - I need help to better use Zoom.<br> `6` - I bought the wrong product.<br>`7` - I am not satisfied with the product quality.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "type": "integer"
                },
                "comment": {
                  "type": "string",
                  "description": "Additional comments about the cancellation decision."
                }
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/report/activities": {
      "get": {
        "summary": "Get Sign In / Sign Out Activity Report",
        "description": "Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n ",
        "operationId": "reportSignInSignOutActivities",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "format": "date-time",
            "description": "Start date for which you would like to view the activity logs report."
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "format": "date-time",
            "description": "End date up to which you would like to view the activity logs report."
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records to be returned within a single API call"
          },
          {
            "in": "query",
            "name": "next_page_token",
            "type": "string",
            "description": "Next page token is used to paginate through large result sets"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nSuccess",
            "schema": {
              "type": "object",
              "description": "Report object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Start date from which you want the activity logs report to be generated."
                },
                "to": {
                  "type": "string",
                  "description": "End date until which you want the activity logs report to be generated"
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call."
                },
                "next_page_token": {
                  "type": "string",
                  "description": "Next page token is used to paginate through large result sets."
                },
                "activity_logs": {
                  "type": "array",
                  "description": "Array of activity logs.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the user used for the activity. "
                      },
                      "time": {
                        "type": "string",
                        "description": "Time during which the activity occurred. ",
                        "format": "date-time"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of activity: <br>`Sign in`: Sign in activity by user.<br>`Sign out`: Sign out activity by user."
                      },
                      "ip_address": {
                        "type": "string",
                        "description": "The IP address of the user's device."
                      },
                      "client_type": {
                        "type": "string",
                        "description": "The client interface type using which the activity was performed."
                      },
                      "version": {
                        "type": "string",
                        "description": "Zoom client version of the user."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n            \"email\": \"sfkjsldfhjdsf@dskjflhdsf.com\",\n            \"time\": \"2019-09-15T20:56:09Z\",\n            \"type\": \"Sign in\",\n            \"ip_address\": \"38.99.100.6\",\n            \"client_type\": \"Browser\",\n            \"version\": \"-\"\n        },\n        {\n            \"email\": \"dfdsfdfdf@gidfdfdl.com\",\n            \"time\": \"2019-09-15T19:13:41Z\",\n            \"type\": \"Sign in\",\n            \"ip_address\": \"38.99.100.6\",\n            \"client_type\": \"Browser\",\n            \"version\": \"-\"\n        },\n        {\n            \"email\": \"fdfdfdf@gfdgfdgdsfg.com\",\n            \"time\": \"2019-09-15T18:50:15Z\",\n            \"type\": \"Sign out\",\n            \"ip_address\": \"38.99.100.6\",\n            \"client_type\": \"Browser\",\n            \"version\": \"-\"\n        }"
            }
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/groups/{groupId}/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**Error Code**: `200` <br>\nOnly available for paid account.\n\n**HTTP Status Code**: `200` <br>\nGroup Settings Returned.\n",
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "schedule_meeting": {
                      "type": "object",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with host video on."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start meetings with participant video on."
                        },
                        "audio_type": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting."
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host arrives"
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "If join before host option is enabled for a personal meeting, then enforce password requirement.\n\n\n**This field will be deprecated in near future.** If you would like to enable this setting, we highly encourage you to use the `require_password_for_pmi_meetings` field.\n\n"
                        },
                        "pstn_password_protected": {
                          "type": "boolean",
                          "description": "Generate and send new passwords for newly scheduled or edited meetings."
                        },
                        "mute_upon_entry": {
                          "type": "boolean",
                          "description": "Automatically mute all participants when they join the meeting."
                        },
                        "upcoming_meeting_reminder": {
                          "type": "boolean",
                          "description": "Receive desktop notification for upcoming meetings."
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting."
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled."
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>\n`none`: Do not require password for PMI meetings.<br> \n`all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **\"join before host\"** setting is enabled.",
                          "enum": [
                            "all",
                            "jbh_only",
                            "none"
                          ]
                        },
                        "use_pmi_for_instant_meetings": {
                          "description": "Indicates whether PMI is enabled for all instant meetings or not.",
                          "type": "boolean"
                        },
                        "use_pmi_for_schedule_meetings": {
                          "type": "boolean",
                          "description": "Indicates whether PMI is enabled for all scheduled meetings or not."
                        }
                      }
                    },
                    "in_meeting": {
                      "type": "object",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "Require that all meetings are encrypted using AES."
                        },
                        "chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send chat message visible to all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send a private 1:1 message to another participant."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "description": "Automatically save all in-meeting chats."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "description": "Play sound when participants join or leave."
                        },
                        "record_play_own_voice": {
                          "type": "boolean",
                          "description": "When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes."
                        },
                        "feedback": {
                          "type": "boolean",
                          "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                        },
                        "post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Display end-of-meeting experience feedback survey."
                        },
                        "co_host": {
                          "type": "boolean",
                          "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                        },
                        "polling": {
                          "type": "boolean",
                          "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "description": "Allow hosts to temporarily remove an attendee from the meeting."
                        },
                        "show_meeting_control_toolbar": {
                          "type": "boolean",
                          "description": "Always show meeting controls during a meeting."
                        },
                        "allow_show_zoom_windows": {
                          "type": "boolean",
                          "description": "Show Zoom windows during screen share."
                        },
                        "annotation": {
                          "type": "boolean",
                          "description": "Allow participants to use annotation tools to add information to shared screens."
                        },
                        "whiteboard": {
                          "type": "boolean",
                          "description": "Allow participants to share a whiteboard that includes annotation tools."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                        },
                        "non_verbal_feedback": {
                          "type": "boolean",
                          "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "description": "Allow host to split meeting participants into separate, smaller rooms."
                        },
                        "remote_support": {
                          "type": "boolean",
                          "description": "Allow meeting host to provide 1:1 remote support to another participant."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "description": "Allow another user to take control of the camera during a meeting."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "description": "Enable virtual background."
                        },
                        "alert_guest_join": {
                          "type": "boolean",
                          "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                        },
                        "auto_answer": {
                          "type": "boolean",
                          "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                        },
                        "sending_default_email_invites": {
                          "type": "boolean",
                          "description": "Allow users to invite participants by email only by default."
                        },
                        "use_html_format_email": {
                          "type": "boolean",
                          "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                        },
                        "stereo_audio": {
                          "type": "boolean",
                          "description": "Allow users to select stereo audio during a meeting."
                        },
                        "original_audio": {
                          "type": "boolean",
                          "description": "Allow users to select original sound during a meeting."
                        },
                        "show_device_list": {
                          "type": "boolean",
                          "description": "Show the list of H.323/SIP devices."
                        },
                        "only_host_view_device_list": {
                          "type": "boolean",
                          "description": "Show the list of H.323/SIP devices only to the host."
                        },
                        "screen_sharing": {
                          "type": "boolean",
                          "description": "Allow host and participants to share their screen or content during meetings."
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room."
                        },
                        "show_browser_join_link": {
                          "type": "boolean",
                          "description": "Allow participants to join a meeting directly from their browser."
                        }
                      }
                    },
                    "email_notification": {
                      "type": "object",
                      "properties": {
                        "cloud_recording_available_reminder": {
                          "type": "boolean",
                          "description": "Notify host when cloud recording is available."
                        },
                        "jbh_reminder": {
                          "type": "boolean",
                          "description": "Notify host when participants join the meeting before them."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "description": "Notify host and participants when the meeting is cancelled."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "description": "Notify the alternative host who is set or removed."
                        },
                        "schedule_for_host_reminder": {
                          "type": "boolean",
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "recording": {
                      "type": "object",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Allow hosts and participants to record the meeting to a local file."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "description": "Record active speaker with shared screen."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "description": "When someone is sharing their screen, active speaker will show on the top right corner of the shared screen."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "description": "Save chat messages from the meeting / webinar."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "description": "Add a timestamp to the recording."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Automatically transcribe the audio of a meeting or webinar for cloud recordings."
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Record meetings automatically as they start."
                        },
                        "cloud_recording_download": {
                          "type": "boolean",
                          "description": "Allow anyone with a link to the cloud recording to download."
                        },
                        "cloud_recording_download_host": {
                          "type": "boolean",
                          "description": "Allow only the host with a link to the cloud recording to download."
                        },
                        "account_user_access_recording": {
                          "type": "boolean",
                          "description": "Make cloud recordings accessible to account members only."
                        },
                        "host_delete_cloud_recording": {
                          "type": "boolean",
                          "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                        }
                      }
                    },
                    "telephony": {
                      "type": "object",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "description": "Meeting Authentication Options",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domains"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_options": {
                          "type": "array",
                          "description": "Authentication Options",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Authentication id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Authentication name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Authentication type",
                                "enum": [
                                  "internally",
                                  "enforce_login",
                                  "enforce_login_with_domains"
                                ]
                              },
                              "default_option": {
                                "type": "boolean",
                                "description": "Authentication default option"
                              },
                              "visible": {
                                "type": "boolean",
                                "description": "Authentication visible"
                              },
                              "domains": {
                                "type": "string",
                                "description": "Authentication domians"
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              ]
            },
            "examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participant_video": true,
                  "audio_type": "both",
                  "join_before_host": true,
                  "force_pmi_jbh_password": true,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_scheduled_meetings": true,
                  "require_password_for_instant_meetings": false,
                  "require_password_for_pmi_meetings": "all",
                  "pstn_password_protected": true,
                  "mute_upon_entry": true,
                  "upcoming_meeting_reminder": true
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": true,
                  "private_chat": true,
                  "auto_saving_chat": true,
                  "entry_exit_chime": "all",
                  "record_play_own_voice": false,
                  "feedback": true,
                  "post_meeting_feedback": true,
                  "co_host": true,
                  "polling": true,
                  "attendee_on_hold": true,
                  "show_meeting_control_toolbar": true,
                  "allow_show_zoom_windows": true,
                  "annotation": true,
                  "whiteboard": true,
                  "remote_control": true,
                  "non_verbal_feedback": true,
                  "breakout_room": false,
                  "remote_support": true,
                  "closed_caption": true,
                  "far_end_camera_control": true,
                  "group_hd": true,
                  "virtual_background": true,
                  "alert_guest_join": true,
                  "auto_answer": true,
                  "sending_default_email_invites": true,
                  "use_html_format_email": true,
                  "stereo_audio": true,
                  "original_audio": true,
                  "show_device_list": false,
                  "only_host_view_device_list": false,
                  "screen_sharing": true,
                  "waiting_room": true,
                  "show_browser_join_link": true
                },
                "email_notification": {
                  "cloud_recording_available_reminder": true,
                  "jbh_reminder": true,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true,
                  "schedule_for_host_reminder": true
                },
                "recording": {
                  "local_recording": true,
                  "cloud_recording": true,
                  "record_speaker_view": true,
                  "record_gallery_view": false,
                  "record_audio_file": true,
                  "save_chat_text": true,
                  "show_timestamp": false,
                  "recording_audio_transcript": false,
                  "auto_recording": "none",
                  "cloud_recording_download": true,
                  "cloud_recording_download_host": true,
                  "account_user_access_recording": false,
                  "host_delete_cloud_recording": true
                },
                "telephony": {
                  "third_party_audio": true,
                  "audio_conference_info": "1234656"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist: {groupId}."
          }
        },
        "summary": "Get a Group's Settings",
        "operationId": "getGroupSettings",
        "tags": [
          "Groups"
        ],
        "description": "Get settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-). \n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n ",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true,
            "description": "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account."
          }
        ]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "**Error code:** `200`<br>\nOnly available for Paid account, {accountId}"
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nSettings updated successfully.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}."
          }
        },
        "description": "Update settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).<p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n**Prerequisite**: Pro, Business, or Education account<br> \n**Scopes**: `group:write:admin`<br>\n ",
        "summary": "Update a Group's Settings",
        "operationId": "updateGroupSettings",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "type": "string",
            "required": true,
            "description": "Id of the group."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "schedule_meeting": {
                      "type": "object",
                      "properties": {
                        "host_video": {
                          "type": "boolean",
                          "description": "Start meetings with host video on."
                        },
                        "participant_video": {
                          "type": "boolean",
                          "description": "Start meetings with participant video on."
                        },
                        "audio_type": {
                          "type": "string",
                          "description": "Determine how participants can join the audio portion of the meeting."
                        },
                        "join_before_host": {
                          "type": "boolean",
                          "description": "Allow participants to join the meeting before the host arrives"
                        },
                        "require_password_for_all_meetings": {
                          "type": "boolean",
                          "description": "Require password from all participants before joining a meeting."
                        },
                        "force_pmi_jbh_password": {
                          "type": "boolean",
                          "description": "If join before host option is enabled for a personal meeting, then enforce password requirement."
                        },
                        "require_password_for_scheduling_new_meetings": {
                          "type": "boolean",
                          "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. "
                        },
                        "require_password_for_scheduled_meetings": {
                          "type": "boolean",
                          "description": "Require a password for meetings which have already been scheduled\n"
                        },
                        "require_password_for_instant_meetings": {
                          "type": "boolean",
                          "description": "If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled."
                        },
                        "require_password_for_pmi_meetings": {
                          "type": "string",
                          "description": "Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>\n`none`: Do not require password for PMI meetings.<br> \n`all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **\"join before host\"** setting is enabled.",
                          "enum": [
                            "all",
                            "jbh_only",
                            "none"
                          ]
                        },
                        "pstn_password_protected": {
                          "type": "boolean",
                          "description": "Generate and send new passwords for newly scheduled or edited meetings."
                        },
                        "mute_upon_entry": {
                          "type": "boolean",
                          "description": "Automatically mute all participants when they join the meeting."
                        },
                        "upcoming_meeting_reminder": {
                          "type": "boolean",
                          "description": "Receive desktop notification for upcoming meetings."
                        }
                      }
                    },
                    "in_meeting": {
                      "type": "object",
                      "properties": {
                        "e2e_encryption": {
                          "type": "boolean",
                          "description": "Require that all meetings are encrypted using AES."
                        },
                        "chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send chat message visible to all participants."
                        },
                        "private_chat": {
                          "type": "boolean",
                          "description": "Allow meeting participants to send a private 1:1 message to another participant."
                        },
                        "auto_saving_chat": {
                          "type": "boolean",
                          "description": "Automatically save all in-meeting chats."
                        },
                        "entry_exit_chime": {
                          "type": "string",
                          "description": "Play sound when participants join or leave."
                        },
                        "record_play_own_voice": {
                          "type": "boolean",
                          "description": "When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes."
                        },
                        "feedback": {
                          "type": "boolean",
                          "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                        },
                        "post_meeting_feedback": {
                          "type": "boolean",
                          "description": "Display end-of-meeting experience feedback survey."
                        },
                        "co_host": {
                          "type": "boolean",
                          "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                        },
                        "polling": {
                          "type": "boolean",
                          "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                        },
                        "attendee_on_hold": {
                          "type": "boolean",
                          "description": "Allow hosts to temporarily remove an attendee from the meeting."
                        },
                        "show_meeting_control_toolbar": {
                          "type": "boolean",
                          "description": "Always show meeting controls during a meeting."
                        },
                        "allow_show_zoom_windows": {
                          "type": "boolean",
                          "description": "Show Zoom windows during screen share."
                        },
                        "annotation": {
                          "type": "boolean",
                          "description": "Allow participants to use annotation tools to add information to shared screens."
                        },
                        "whiteboard": {
                          "type": "boolean",
                          "description": "Allow participants to share a whiteboard that includes annotation tools."
                        },
                        "remote_control": {
                          "type": "boolean",
                          "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                        },
                        "non_verbal_feedback": {
                          "type": "boolean",
                          "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel."
                        },
                        "breakout_room": {
                          "type": "boolean",
                          "description": "Allow host to split meeting participants into separate, smaller rooms."
                        },
                        "remote_support": {
                          "type": "boolean",
                          "description": "Allow meeting host to provide 1:1 remote support to another participant."
                        },
                        "closed_caption": {
                          "type": "boolean",
                          "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                        },
                        "far_end_camera_control": {
                          "type": "boolean",
                          "description": "Allow another user to take control of the camera during a meeting."
                        },
                        "group_hd": {
                          "type": "boolean",
                          "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                        },
                        "virtual_background": {
                          "type": "boolean",
                          "description": "Enable virtual background."
                        },
                        "alert_guest_join": {
                          "type": "boolean",
                          "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                        },
                        "auto_answer": {
                          "type": "boolean",
                          "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                        },
                        "sending_default_email_invites": {
                          "type": "boolean",
                          "description": "Allow users to invite participants by email only by default."
                        },
                        "use_html_format_email": {
                          "type": "boolean",
                          "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                        },
                        "stereo_audio": {
                          "type": "boolean",
                          "description": "Allow users to select stereo audio during a meeting."
                        },
                        "original_audio": {
                          "type": "boolean",
                          "description": "Allow users to select original sound during a meeting."
                        },
                        "show_device_list": {
                          "type": "boolean",
                          "description": "Show the list of H.323/SIP devices."
                        },
                        "only_host_view_device_list": {
                          "type": "boolean",
                          "description": "Show the list of H.323/SIP devices only to the host."
                        },
                        "screen_sharing": {
                          "type": "boolean",
                          "description": "Allow host and participants to share their screen or content during meetings."
                        },
                        "waiting_room": {
                          "type": "boolean",
                          "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room."
                        },
                        "show_browser_join_link": {
                          "type": "boolean",
                          "description": "Allow participants to join a meeting directly from their browser."
                        }
                      }
                    },
                    "email_notification": {
                      "type": "object",
                      "properties": {
                        "cloud_recording_available_reminder": {
                          "type": "boolean",
                          "description": "Notify host when cloud recording is available."
                        },
                        "jbh_reminder": {
                          "type": "boolean",
                          "description": "Notify host when participants join the meeting before them."
                        },
                        "cancel_meeting_reminder": {
                          "type": "boolean",
                          "description": "Notify host and participants when the meeting is cancelled."
                        },
                        "alternative_host_reminder": {
                          "type": "boolean",
                          "description": "Notify the alternative host who is set or removed."
                        },
                        "schedule_for_host_reminder": {
                          "type": "boolean",
                          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                        }
                      }
                    },
                    "recording": {
                      "type": "object",
                      "properties": {
                        "local_recording": {
                          "type": "boolean",
                          "description": "Allow hosts and participants to record the meeting to a local file."
                        },
                        "cloud_recording": {
                          "type": "boolean",
                          "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                        },
                        "record_speaker_view": {
                          "type": "boolean",
                          "description": "Record active speaker with shared screen."
                        },
                        "record_gallery_view": {
                          "type": "boolean",
                          "description": "When someone is sharing their screen, active speaker will show on the top right corner of the shared screen."
                        },
                        "record_audio_file": {
                          "type": "boolean",
                          "description": "Record an audio only file."
                        },
                        "save_chat_text": {
                          "type": "boolean",
                          "description": "Save chat messages from the meeting / webinar."
                        },
                        "show_timestamp": {
                          "type": "boolean",
                          "description": "Add a timestamp to the recording."
                        },
                        "recording_audio_transcript": {
                          "type": "boolean",
                          "description": "Automatically transcribe the audio of a meeting or webinar for cloud recordings."
                        },
                        "auto_recording": {
                          "type": "string",
                          "description": "Record meetings automatically as they start."
                        },
                        "cloud_recording_download": {
                          "type": "boolean",
                          "description": "Allow anyone with a link to the cloud recording to download."
                        },
                        "cloud_recording_download_host": {
                          "type": "boolean",
                          "description": "Allow only the host with a link to the cloud recording to download."
                        },
                        "account_user_access_recording": {
                          "type": "boolean",
                          "description": "Make cloud recordings accessible to account members only."
                        },
                        "host_delete_cloud_recording": {
                          "type": "boolean",
                          "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                        }
                      }
                    },
                    "telephony": {
                      "type": "object",
                      "properties": {
                        "third_party_audio": {
                          "type": "boolean",
                          "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                        },
                        "audio_conference_info": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "meeting_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can join meetings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Meeting Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Authentication type",
                              "enum": [
                                "enforce_login",
                                "enforce_login_with_domains"
                              ]
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": "Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "description": "Authentication action",
                              "enum": [
                                "update",
                                "show",
                                "hide"
                              ]
                            },
                            "domains": {
                              "type": "string",
                              "description": "Authentication domains"
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "recording_authentication": {
                          "type": "boolean",
                          "description": "Only authenticated users can view cloud recordings"
                        },
                        "authentication_option": {
                          "type": "object",
                          "description": "Authentication Options",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Authentication id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Authentication name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Authentication type",
                              "enum": [
                                "internally",
                                "enforce_login",
                                "enforce_login_with_domains"
                              ]
                            },
                            "default_option": {
                              "type": "boolean",
                              "description": "Authentication default option"
                            },
                            "action": {
                              "type": "string",
                              "description": "Authentication action",
                              "enum": [
                                "update",
                                "show",
                                "hide"
                              ]
                            },
                            "domians": {
                              "type": "string",
                              "description": "Authentication domians"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "title": "GroupSettingsAuthenticationUpdate",
                  "type": "object"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participant_video": true,
                  "audio_type": "both",
                  "join_before_host": true,
                  "require_password_for_all_meetings": false,
                  "force_pmi_jbh_password": true,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_scheduled_meetings": true,
                  "require_password_for_instant_meetings": false,
                  "require_password_for_pmi_meetings": "all",
                  "pstn_password_protected": true,
                  "mute_upon_entry": true,
                  "upcoming_meeting_reminder": true
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": true,
                  "private_chat": true,
                  "auto_saving_chat": true,
                  "entry_exit_chime": "all",
                  "record_play_own_voice": false,
                  "feedback": true,
                  "post_meeting_feedback": true,
                  "co_host": true,
                  "polling": true,
                  "attendee_on_hold": true,
                  "show_meeting_control_toolbar": true,
                  "allow_show_zoom_windows": true,
                  "annotation": true,
                  "whiteboard": true,
                  "remote_control": true,
                  "non_verbal_feedback": true,
                  "breakout_room": false,
                  "remote_support": true,
                  "closed_caption": true,
                  "far_end_camera_control": true,
                  "group_hd": true,
                  "virtual_background": true,
                  "alert_guest_join": true,
                  "auto_answer": true,
                  "sending_default_email_invites": true,
                  "use_html_format_email": true,
                  "stereo_audio": true,
                  "original_audio": true,
                  "show_device_list": false,
                  "only_host_view_device_list": false,
                  "screen_sharing": true,
                  "waiting_room": true,
                  "show_browser_join_link": true
                },
                "email_notification": {
                  "cloud_recording_available_reminder": true,
                  "jbh_reminder": true,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true,
                  "schedule_for_host_reminder": true
                },
                "recording": {
                  "local_recording": true,
                  "cloud_recording": true,
                  "record_speaker_view": true,
                  "record_gallery_view": false,
                  "record_audio_file": true,
                  "save_chat_text": true,
                  "show_timestamp": false,
                  "recording_audio_transcript": false,
                  "auto_recording": "none",
                  "cloud_recording_download": true,
                  "cloud_recording_download_host": true,
                  "account_user_access_recording": false,
                  "host_delete_cloud_recording": true
                },
                "telephony": {
                  "third_party_audio": true,
                  "audio_conference_info": "1234656"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "option",
            "type": "string",
            "enum": [
              "meeting_authentication",
              "recording_authentication"
            ],
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/groups/{groupId}/lock_settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for paid account.\n\n**Status Code:** `200`<br>\nLocked settings of group returned.\n",
            "schema": {
              "type": "object",
              "properties": {
                "schedule_meeting": {
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start meetings with host video on."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start meetings with participant video on."
                    },
                    "audio_type": {
                      "type": "boolean",
                      "description": "Determine how participants can join the audio portion of the meeting."
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host arrives"
                    },
                    "force_pmi_jbh_password": {
                      "type": "boolean",
                      "description": "If join before host option is enabled for a personal meeting, then enforce password requirement."
                    },
                    "require_password_for_scheduling_new_meetings": {
                      "type": "boolean",
                      "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting."
                    },
                    "require_password_for_instant_meetings": {
                      "type": "boolean",
                      "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled."
                    },
                    "require_password_for_pmi_meetings": {
                      "description": "Require participants to enter password for PMI meetings.",
                      "type": "boolean"
                    },
                    "pstn_password_protected": {
                      "type": "boolean",
                      "description": "Generate and send new passwords for newly scheduled or edited meetings."
                    },
                    "mute_upon_entry": {
                      "type": "boolean",
                      "description": "Automatically mute all participants when they join the meeting."
                    },
                    "upcoming_meeting_reminder": {
                      "type": "boolean",
                      "description": "Receive desktop notification for upcoming meetings."
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can join meetings"
                    }
                  }
                },
                "in_meeting": {
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "type": "boolean",
                      "description": "Require that all meetings are encrypted using AES."
                    },
                    "chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send chat message visible to all participants."
                    },
                    "private_chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send a private 1:1 message to another participant."
                    },
                    "auto_saving_chat": {
                      "type": "boolean",
                      "description": "Automatically save all in-meeting chats."
                    },
                    "entry_exit_chime": {
                      "type": "string",
                      "description": "Play sound when participants join or leave."
                    },
                    "feedback": {
                      "type": "boolean",
                      "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                    },
                    "post_meeting_feedback": {
                      "type": "boolean",
                      "description": "Display end-of-meeting experience feedback survey."
                    },
                    "co_host": {
                      "type": "boolean",
                      "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                    },
                    "polling": {
                      "type": "boolean",
                      "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                    },
                    "attendee_on_hold": {
                      "type": "boolean",
                      "description": "Allow hosts to temporarily remove an attendee from the meeting."
                    },
                    "show_meeting_control_toolbar": {
                      "type": "boolean",
                      "description": "Always show meeting controls during a meeting."
                    },
                    "allow_show_zoom_windows": {
                      "type": "boolean",
                      "description": "Show Zoom windows during screen share."
                    },
                    "annotation": {
                      "type": "boolean",
                      "description": "Allow participants to use annotation tools to add information to shared screens."
                    },
                    "whiteboard": {
                      "type": "boolean",
                      "description": "Allow participants to share a whiteboard that includes annotation tools."
                    },
                    "remote_control": {
                      "type": "boolean",
                      "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                    },
                    "non_verbal_feedback": {
                      "type": "boolean",
                      "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel."
                    },
                    "breakout_room": {
                      "type": "boolean",
                      "description": "Allow host to split meeting participants into separate, smaller rooms."
                    },
                    "remote_support": {
                      "type": "boolean",
                      "description": "Allow meeting host to provide 1:1 remote support to another participant."
                    },
                    "closed_caption": {
                      "type": "boolean",
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                    },
                    "far_end_camera_control": {
                      "type": "boolean",
                      "description": "Allow another user to take control of the camera during a meeting."
                    },
                    "group_hd": {
                      "type": "boolean",
                      "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                    },
                    "virtual_background": {
                      "type": "boolean",
                      "description": "Enable virtual background."
                    },
                    "alert_guest_join": {
                      "type": "boolean",
                      "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                    },
                    "auto_answer": {
                      "type": "boolean",
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                    },
                    "sending_default_email_invites": {
                      "type": "boolean",
                      "description": "Allow users to invite participants by email only by default."
                    },
                    "use_html_format_email": {
                      "type": "boolean",
                      "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                    },
                    "stereo_audio": {
                      "type": "boolean",
                      "description": "Allow users to select stereo audio during a meeting."
                    },
                    "original_audio": {
                      "type": "boolean",
                      "description": "Allow users to select original sound during a meeting."
                    },
                    "screen_sharing": {
                      "type": "boolean",
                      "description": "Allow host and participants to share their screen or content during meetings."
                    },
                    "waiting_room": {
                      "type": "boolean",
                      "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room."
                    },
                    "show_browser_join_link": {
                      "type": "boolean",
                      "description": "Allow participants to join a meeting directly from their browser."
                    }
                  }
                },
                "email_notification": {
                  "type": "object",
                  "properties": {
                    "cloud_recording_available_reminder": {
                      "type": "boolean",
                      "description": "Notify host when cloud recording is available."
                    },
                    "jbh_reminder": {
                      "type": "boolean",
                      "description": "Notify host when participants join the meeting before them."
                    },
                    "cancel_meeting_reminder": {
                      "type": "boolean",
                      "description": "Notify host and participants when the meeting is cancelled."
                    },
                    "alternative_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the alternative host who is set or removed."
                    },
                    "schedule_for_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                    }
                  }
                },
                "recording": {
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "type": "boolean",
                      "description": "Allow hosts and participants to record the meeting to a local file."
                    },
                    "cloud_recording": {
                      "type": "boolean",
                      "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Record meetings automatically as they start."
                    },
                    "cloud_recording_download": {
                      "type": "boolean",
                      "description": "Allow anyone with a link to the cloud recording to download."
                    },
                    "account_user_access_recording": {
                      "type": "boolean",
                      "description": "Make cloud recordings accessible to account members only."
                    },
                    "host_delete_cloud_recording": {
                      "type": "boolean",
                      "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                    },
                    "auto_delete_cmr": {
                      "type": "boolean",
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days."
                    },
                    "recording_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can view cloud recordings"
                    }
                  }
                },
                "telephony": {
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "type": "boolean",
                      "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participant_video": true,
                  "audio_type": true,
                  "join_before_host": true,
                  "force_pmi_jbh_password": true,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_instant_meetings": false,
                  "require_password_for_pmi_meetings": true,
                  "pstn_password_protected": true,
                  "mute_upon_entry": true,
                  "upcoming_meeting_reminder": true
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": true,
                  "private_chat": true,
                  "auto_saving_chat": true,
                  "entry_exit_chime": false,
                  "feedback": true,
                  "post_meeting_feedback": true,
                  "co_host": true,
                  "polling": true,
                  "attendee_on_hold": true,
                  "show_meeting_control_toolbar": true,
                  "allow_show_zoom_windows": true,
                  "annotation": true,
                  "whiteboard": true,
                  "remote_control": true,
                  "non_verbal_feedback": true,
                  "breakout_room": true,
                  "remote_support": true,
                  "closed_caption": true,
                  "far_end_camera_control": true,
                  "group_hd": true,
                  "virtual_background": true,
                  "alert_guest_join": true,
                  "auto_answer": true,
                  "sending_default_email_invites": true,
                  "use_html_format_email": true,
                  "stereo_audio": true,
                  "original_audio": true,
                  "screen_sharing": true,
                  "waiting_room": true,
                  "show_browser_join_link": true
                },
                "email_notification": {
                  "cloud_recording_available_reminder": true,
                  "jbh_reminder": true,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true,
                  "schedule_for_host_reminder": true
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": false,
                  "auto_recording": false,
                  "cloud_recording_download": false,
                  "account_user_access_recording": false,
                  "host_delete_cloud_recording": false,
                  "auto_delete_cmr": false
                },
                "telephony": {
                  "third_party_audio": false
                }
              }
            }
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}"
          }
        },
        "summary": "Get Locked Settings",
        "description": "Retrieve a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:read:admin`<br>\n ",
        "operationId": "getGroupLockSettings",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "type": "string",
            "required": true,
            "description": "Id of the group."
          }
        ]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**Status Code:** `204`<br>\nGroup's locked settings updated.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nOnly available for paid account.\n",
            "examples": {}
          },
          "404": {
            "description": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nThis group does not exist.\n"
          }
        },
        "summary": "Update Locked Settings",
        "operationId": "groupLockedSettings",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "schedule_meeting": {
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start meetings with host video on."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start meetings with participant video on."
                    },
                    "audio_type": {
                      "type": "boolean",
                      "description": "Determine how participants can join the audio portion of the meeting."
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host arrives"
                    },
                    "force_pmi_jbh_password": {
                      "type": "boolean",
                      "description": "If join before host option is enabled for a personal meeting, then enforce password requirement."
                    },
                    "require_password_for_scheduling_new_meetings": {
                      "type": "boolean",
                      "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting."
                    },
                    "require_password_for_instant_meetings": {
                      "type": "boolean",
                      "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled."
                    },
                    "require_password_for_pmi_meetings": {
                      "description": "Require participants to enter password for PMI meetings.",
                      "type": "boolean"
                    },
                    "pstn_password_protected": {
                      "type": "boolean",
                      "description": "Generate and send new passwords for newly scheduled or edited meetings."
                    },
                    "mute_upon_entry": {
                      "type": "boolean",
                      "description": "Automatically mute all participants when they join the meeting."
                    },
                    "upcoming_meeting_reminder": {
                      "type": "boolean",
                      "description": "Receive desktop notification for upcoming meetings."
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can join meetings"
                    }
                  }
                },
                "in_meeting": {
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "type": "boolean",
                      "description": "Require that all meetings are encrypted using AES."
                    },
                    "chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send chat message visible to all participants."
                    },
                    "private_chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send a private 1:1 message to another participant."
                    },
                    "auto_saving_chat": {
                      "type": "boolean",
                      "description": "Automatically save all in-meeting chats."
                    },
                    "entry_exit_chime": {
                      "type": "string",
                      "description": "Play sound when participants join or leave."
                    },
                    "feedback": {
                      "type": "boolean",
                      "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                    },
                    "post_meeting_feedback": {
                      "type": "boolean",
                      "description": "Display end-of-meeting experience feedback survey."
                    },
                    "co_host": {
                      "type": "boolean",
                      "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                    },
                    "polling": {
                      "type": "boolean",
                      "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                    },
                    "attendee_on_hold": {
                      "type": "boolean",
                      "description": "Allow hosts to temporarily remove an attendee from the meeting."
                    },
                    "show_meeting_control_toolbar": {
                      "type": "boolean",
                      "description": "Always show meeting controls during a meeting."
                    },
                    "allow_show_zoom_windows": {
                      "type": "boolean",
                      "description": "Show Zoom windows during screen share."
                    },
                    "annotation": {
                      "type": "boolean",
                      "description": "Allow participants to use annotation tools to add information to shared screens."
                    },
                    "whiteboard": {
                      "type": "boolean",
                      "description": "Allow participants to share a whiteboard that includes annotation tools."
                    },
                    "remote_control": {
                      "type": "boolean",
                      "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                    },
                    "non_verbal_feedback": {
                      "type": "boolean",
                      "description": "Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel."
                    },
                    "breakout_room": {
                      "type": "boolean",
                      "description": "Allow host to split meeting participants into separate, smaller rooms."
                    },
                    "remote_support": {
                      "type": "boolean",
                      "description": "Allow meeting host to provide 1:1 remote support to another participant."
                    },
                    "closed_caption": {
                      "type": "boolean",
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                    },
                    "far_end_camera_control": {
                      "type": "boolean",
                      "description": "Allow another user to take control of the camera during a meeting."
                    },
                    "group_hd": {
                      "type": "boolean",
                      "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                    },
                    "virtual_background": {
                      "type": "boolean",
                      "description": "Enable virtual background."
                    },
                    "alert_guest_join": {
                      "type": "boolean",
                      "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                    },
                    "auto_answer": {
                      "type": "boolean",
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                    },
                    "sending_default_email_invites": {
                      "type": "boolean",
                      "description": "Allow users to invite participants by email only by default."
                    },
                    "use_html_format_email": {
                      "type": "boolean",
                      "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                    },
                    "stereo_audio": {
                      "type": "boolean",
                      "description": "Allow users to select stereo audio during a meeting."
                    },
                    "original_audio": {
                      "type": "boolean",
                      "description": "Allow users to select original sound during a meeting."
                    },
                    "screen_sharing": {
                      "type": "boolean",
                      "description": "Allow host and participants to share their screen or content during meetings."
                    },
                    "waiting_room": {
                      "type": "boolean",
                      "description": "Attendees cannot join a meeting until a host admits them individually from the waiting room."
                    },
                    "show_browser_join_link": {
                      "type": "boolean",
                      "description": "Allow participants to join a meeting directly from their browser."
                    }
                  }
                },
                "email_notification": {
                  "type": "object",
                  "properties": {
                    "cloud_recording_available_reminder": {
                      "type": "boolean",
                      "description": "Notify host when cloud recording is available."
                    },
                    "jbh_reminder": {
                      "type": "boolean",
                      "description": "Notify host when participants join the meeting before them."
                    },
                    "cancel_meeting_reminder": {
                      "type": "boolean",
                      "description": "Notify host and participants when the meeting is cancelled."
                    },
                    "alternative_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the alternative host who is set or removed."
                    },
                    "schedule_for_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                    }
                  }
                },
                "recording": {
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "type": "boolean",
                      "description": "Allow hosts and participants to record the meeting to a local file."
                    },
                    "cloud_recording": {
                      "type": "boolean",
                      "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Record meetings automatically as they start."
                    },
                    "cloud_recording_download": {
                      "type": "boolean",
                      "description": "Allow anyone with a link to the cloud recording to download."
                    },
                    "account_user_access_recording": {
                      "type": "boolean",
                      "description": "Make cloud recordings accessible to account members only."
                    },
                    "host_delete_cloud_recording": {
                      "type": "boolean",
                      "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                    },
                    "auto_delete_cmr": {
                      "type": "boolean",
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days."
                    },
                    "recording_authentication": {
                      "type": "string"
                    }
                  }
                },
                "telephony": {
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "type": "boolean",
                      "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participant_video": true,
                  "audio_type": true,
                  "join_before_host": true,
                  "force_pmi_jbh_password": true,
                  "require_password_for_scheduling_new_meetings": true,
                  "require_password_for_instant_meetings": false,
                  "require_password_for_pmi_meetings": true,
                  "pstn_password_protected": true,
                  "mute_upon_entry": true,
                  "upcoming_meeting_reminder": true
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": true,
                  "private_chat": true,
                  "auto_saving_chat": true,
                  "entry_exit_chime": false,
                  "feedback": true,
                  "post_meeting_feedback": true,
                  "co_host": true,
                  "polling": true,
                  "attendee_on_hold": true,
                  "show_meeting_control_toolbar": true,
                  "allow_show_zoom_windows": true,
                  "annotation": true,
                  "whiteboard": true,
                  "remote_control": true,
                  "non_verbal_feedback": true,
                  "breakout_room": true,
                  "remote_support": true,
                  "closed_caption": true,
                  "far_end_camera_control": true,
                  "group_hd": true,
                  "virtual_background": true,
                  "alert_guest_join": true,
                  "auto_answer": true,
                  "sending_default_email_invites": true,
                  "use_html_format_email": true,
                  "stereo_audio": true,
                  "original_audio": true,
                  "screen_sharing": true,
                  "waiting_room": true,
                  "show_browser_join_link": true
                },
                "email_notification": {
                  "cloud_recording_available_reminder": true,
                  "jbh_reminder": true,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true,
                  "schedule_for_host_reminder": true
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": false,
                  "auto_recording": false,
                  "cloud_recording_download": false,
                  "account_user_access_recording": false,
                  "host_delete_cloud_recording": false,
                  "auto_delete_cmr": false
                },
                "telephony": {
                  "third_party_audio": false
                }
              }
            }
          },
          {
            "in": "path",
            "name": "groupId",
            "type": "string",
            "required": true,
            "description": "The Id of the group."
          }
        ],
        "description": "Update a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style=\"background-color:#FEEFB3; color:#9F6000\"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>\n\n**Prerequisite**: Pro, Business, or Education account<br>\n**Scopes**: `group:write:admin`<br>\n ",
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/accounts/{accountId}/lock_settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for paid account:{accountId}.\n\n**HTTP Status Code:** `200`<br>\nLocked settings for the Account returned.\n\n",
            "schema": {
              "type": "object",
              "properties": {
                "schedule_meeting": {
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start meetings with host video on."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start meetings with participant video on."
                    },
                    "audio_type": {
                      "type": "boolean",
                      "description": "Determine how participants can join the audio portion of the meeting."
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host arrives"
                    },
                    "enforce_login": {
                      "type": "boolean",
                      "description": "Allow only signed-in users to join meetings.\n"
                    },
                    "enforce_login_with_domains": {
                      "type": "boolean",
                      "description": "Allow only signed-in users with specified domains to join meetings.\n"
                    },
                    "enforce_login_domains": {
                      "type": "string",
                      "description": "Specify the domains from which users can join a meeting.\n"
                    },
                    "not_store_meeting_topic": {
                      "type": "boolean",
                      "description": "Hide actual meeting topic and display \"Zoom Meeting\" for your scheduled meetings"
                    },
                    "require_password_for_scheduling_new_meetings": {
                      "type": "boolean",
                      "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                    },
                    "require_password_for_instant_meetings": {
                      "type": "boolean",
                      "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                    },
                    "require_password_for_pmi_meetings": {
                      "description": "Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.",
                      "type": "boolean"
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can join meetings"
                    }
                  }
                },
                "in_meeting": {
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "type": "boolean",
                      "description": "Require that all meetings are encrypted using AES."
                    },
                    "chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send chat message visible to all participants."
                    },
                    "private_chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send a private 1:1 message to another participant."
                    },
                    "auto_saving_chat": {
                      "type": "boolean",
                      "description": "Automatically save all in-meeting chats."
                    },
                    "entry_exit_chime": {
                      "type": "string",
                      "description": "Play sound when participants join or leave."
                    },
                    "feedback": {
                      "type": "boolean",
                      "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                    },
                    "post_meeting_feedback": {
                      "type": "boolean",
                      "description": "Display end-of-meeting experience feedback survey."
                    },
                    "co_host": {
                      "type": "boolean",
                      "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                    },
                    "polling": {
                      "type": "boolean",
                      "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                    },
                    "attendee_on_hold": {
                      "type": "boolean",
                      "description": "Allow hosts to temporarily remove an attendee from the meeting."
                    },
                    "show_meeting_control_toolbar": {
                      "type": "boolean",
                      "description": "Always show meeting controls during a meeting."
                    },
                    "allow_show_zoom_windows": {
                      "type": "boolean",
                      "description": "Show Zoom windows during screen share."
                    },
                    "annotation": {
                      "type": "boolean",
                      "description": "Allow participants to use annotation tools to add information to shared screens."
                    },
                    "whiteboard": {
                      "type": "boolean",
                      "description": "Allow participants to share a whiteboard that includes annotation tools."
                    },
                    "remote_control": {
                      "type": "boolean",
                      "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                    },
                    "webinar_question_answer": {
                      "type": "boolean",
                      "description": "Allow attendees to ask questions for the host and panelists to answer in the webinar."
                    },
                    "anonymous_question_answer": {
                      "type": "boolean",
                      "description": ""
                    },
                    "breakout_room": {
                      "type": "boolean",
                      "description": "Allow host to split meeting participants into separate, smaller rooms."
                    },
                    "closed_caption": {
                      "type": "boolean",
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                    },
                    "far_end_camera_control": {
                      "type": "boolean",
                      "description": "Allow another user to take control of the camera during a meeting."
                    },
                    "group_hd": {
                      "type": "boolean",
                      "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                    },
                    "virtual_background": {
                      "type": "boolean",
                      "description": "Enable virtual background."
                    },
                    "alert_guest_join": {
                      "type": "boolean",
                      "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                    },
                    "auto_answer": {
                      "type": "boolean",
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                    },
                    "sending_default_email_invites": {
                      "type": "boolean",
                      "description": "Allow users to invite participants by email only by default."
                    },
                    "use_html_format_email": {
                      "type": "boolean",
                      "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                    },
                    "dscp_marking": {
                      "type": "boolean",
                      "description": "Enable DSCP marking for signaling and media packets. (Default is 56 for audio, 40 for video, and 40 for signaling.) "
                    },
                    "stereo_audio": {
                      "type": "boolean",
                      "description": "Allow users to select stereo audio during a meeting."
                    },
                    "original_audio": {
                      "type": "boolean",
                      "description": "Allow users to select original sound during a meeting."
                    },
                    "screen_sharing": {
                      "type": "boolean",
                      "description": "Allow host and participants to share their screen or content during meetings."
                    }
                  }
                },
                "email_notification": {
                  "type": "object",
                  "properties": {
                    "cloud_recording_available_reminder": {
                      "type": "boolean",
                      "description": "Notify host when cloud recording is available."
                    },
                    "jbh_reminder": {
                      "type": "boolean",
                      "description": "Notify host when participants join the meeting before them."
                    },
                    "cancel_meeting_reminder": {
                      "type": "boolean",
                      "description": "Notify host and participants when the meeting is cancelled."
                    },
                    "alternative_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the alternative host who is set or removed."
                    },
                    "schedule_for_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                    }
                  }
                },
                "recording": {
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "type": "boolean",
                      "description": "Allow hosts and participants to record the meeting to a local file."
                    },
                    "cloud_recording": {
                      "type": "boolean",
                      "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Record meetings automatically as they start."
                    },
                    "cloud_recording_download": {
                      "type": "boolean",
                      "description": "Allow anyone with a link to the cloud recording to download."
                    },
                    "account_user_access_recording": {
                      "type": "boolean",
                      "description": "Make cloud recordings accessible to account members only."
                    },
                    "host_delete_cloud_recording": {
                      "type": "boolean",
                      "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                    },
                    "auto_delete_cmr": {
                      "type": "boolean",
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days."
                    },
                    "recording_authentication": {
                      "type": "string",
                      "description": "Only authenticated users can view cloud recordings"
                    }
                  }
                },
                "telephony": {
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "type": "boolean",
                      "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                    }
                  }
                },
                "tsp": {
                  "type": "object",
                  "properties": {
                    "call_out": {
                      "type": "boolean",
                      "description": ""
                    },
                    "show_international_numbers_link": {
                      "type": "boolean",
                      "description": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}"
          }
        },
        "summary": "Get Locked Settings",
        "description": "[Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users.\nUse this API to retrieve an account's locked settings. \n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have Master and Sub Accounts options enabled. \n\n**Prerequisites:**\n* Pro or a higher paid account. <br> **Scope**: `account:read:admin`.\n<br> \n\n\n\n**Scope:** account:read:admin",
        "operationId": "getAccountLockSettings",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the account. To retrieve locked settings of the Master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a Sub Account, provide the Account ID of the Sub Account in this field."
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nOnly available for Paid account: {accountId}.\n",
            "schema": {}
          },
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nAccount lock settings updated.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account either does not exist or does not belong to you: {accountId}.\n"
          }
        },
        "summary": "Update Locked Settings",
        "tags": [
          "Accounts"
        ],
        "operationId": "updateAccountLockSettings",
        "description": "[Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users. Use this API to update an account's locked settings.\n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have Master and Sub Accounts options enabled. \n\n**Prerequisites:**<br>\n* Pro or a higher paid account. <br>\n**Scope:** `account:write:admin`<br>\n ",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "schedule_meeting": {
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start meetings with host video on."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start meetings with participant video on."
                    },
                    "audio_type": {
                      "type": "boolean",
                      "description": "Determine how participants can join the audio portion of the meeting."
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host arrives"
                    },
                    "enforce_login": {
                      "type": "boolean",
                      "description": "Participants must always sign in before joining the scheduled meeting."
                    },
                    "enforce_login_with_domains": {
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "type": "string"
                    },
                    "not_store_meeting_topic": {
                      "type": "boolean"
                    },
                    "require_password_for_scheduling_new_meetings": {
                      "type": "boolean",
                      "description": "This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                    },
                    "require_password_for_instant_meetings": {
                      "type": "boolean",
                      "description": "Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
                    },
                    "require_password_for_pmi_meetings": {
                      "description": "Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.",
                      "type": "boolean"
                    },
                    "meeting_authentication": {
                      "type": "boolean"
                    }
                  }
                },
                "in_meeting": {
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "type": "boolean",
                      "description": "Require that all meetings are encrypted using AES."
                    },
                    "chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send chat message visible to all participants."
                    },
                    "private_chat": {
                      "type": "boolean",
                      "description": "Allow meeting participants to send a private 1:1 message to another participant."
                    },
                    "auto_saving_chat": {
                      "type": "boolean",
                      "description": "Automatically save all in-meeting chats."
                    },
                    "entry_exit_chime": {
                      "type": "string",
                      "description": "Play sound when participants join or leave."
                    },
                    "feedback": {
                      "type": "boolean",
                      "description": "Enable users to provide feedback to Zoom at the end of the meeting."
                    },
                    "post_meeting_feedback": {
                      "type": "boolean",
                      "description": "Display end-of-meeting experience feedback survey."
                    },
                    "co_host": {
                      "type": "boolean",
                      "description": "Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host."
                    },
                    "polling": {
                      "type": "boolean",
                      "description": "Add 'Polls' to the meeting controls. This allows the host to survey the attendees."
                    },
                    "attendee_on_hold": {
                      "type": "boolean",
                      "description": "Allow hosts to temporarily remove an attendee from the meeting."
                    },
                    "show_meeting_control_toolbar": {
                      "type": "boolean",
                      "description": "Always show meeting controls during a meeting."
                    },
                    "allow_show_zoom_windows": {
                      "type": "boolean",
                      "description": "Show Zoom windows during screen share."
                    },
                    "annotation": {
                      "type": "boolean",
                      "description": "Allow participants to use annotation tools to add information to shared screens."
                    },
                    "whiteboard": {
                      "type": "boolean",
                      "description": "Allow participants to share a whiteboard that includes annotation tools."
                    },
                    "remote_control": {
                      "type": "boolean",
                      "description": "During screen sharing, allow the person who is sharing to let others control the shared content."
                    },
                    "webinar_question_answer": {
                      "type": "boolean",
                      "description": ""
                    },
                    "anonymous_question_answer": {
                      "type": "boolean",
                      "description": ""
                    },
                    "breakout_room": {
                      "type": "boolean",
                      "description": "Allow host to split meeting participants into separate, smaller rooms."
                    },
                    "closed_caption": {
                      "type": "boolean",
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions."
                    },
                    "far_end_camera_control": {
                      "type": "boolean",
                      "description": "Allow another user to take control of the camera during a meeting."
                    },
                    "group_hd": {
                      "type": "boolean",
                      "description": "Enable higher quality video for host and participants. This will require more bandwidth."
                    },
                    "virtual_background": {
                      "type": "boolean",
                      "description": "Enable virtual background."
                    },
                    "alert_guest_join": {
                      "type": "boolean",
                      "description": "Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar."
                    },
                    "auto_answer": {
                      "type": "boolean",
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
                    },
                    "sending_default_email_invites": {
                      "type": "boolean",
                      "description": "Allow users to invite participants by email only by default."
                    },
                    "use_html_format_email": {
                      "type": "boolean",
                      "description": "Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin."
                    },
                    "dscp_marking": {
                      "type": "boolean",
                      "description": "Allow users to select stereo audio during a meeting."
                    },
                    "stereo_audio": {
                      "type": "boolean",
                      "description": "Allow users to select stereo audio during a meeting."
                    },
                    "original_audio": {
                      "type": "boolean",
                      "description": "Allow users to select original sound during a meeting."
                    },
                    "screen_sharing": {
                      "type": "boolean",
                      "description": "Allow host and participants to share their screen or content during meetings."
                    }
                  }
                },
                "email_notification": {
                  "type": "object",
                  "properties": {
                    "cloud_recording_available_reminder": {
                      "type": "boolean",
                      "description": "Notify host when cloud recording is available."
                    },
                    "jbh_reminder": {
                      "type": "boolean",
                      "description": "Notify host when participants join the meeting before them."
                    },
                    "cancel_meeting_reminder": {
                      "type": "boolean",
                      "description": "Notify host and participants when the meeting is cancelled."
                    },
                    "alternative_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the alternative host who is set or removed."
                    },
                    "schedule_for_host_reminder": {
                      "type": "boolean",
                      "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
                    }
                  }
                },
                "recording": {
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "type": "boolean",
                      "description": "Allow hosts and participants to record the meeting to a local file."
                    },
                    "cloud_recording": {
                      "type": "boolean",
                      "description": "Allow hosts to record and save the meeting / webinar in the cloud."
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Record meetings automatically as they start."
                    },
                    "cloud_recording_download": {
                      "type": "boolean",
                      "description": "Allow anyone with a link to the cloud recording to download."
                    },
                    "account_user_access_recording": {
                      "type": "boolean",
                      "description": "Make cloud recordings accessible to account members only."
                    },
                    "host_delete_cloud_recording": {
                      "type": "boolean",
                      "description": "Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them."
                    },
                    "auto_delete_cmr": {
                      "type": "boolean",
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days."
                    },
                    "recording_authentication": {
                      "type": "string"
                    }
                  }
                },
                "telephony": {
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "type": "boolean",
                      "description": "Allow users to join the meeting using the existing 3rd party audio configuration."
                    }
                  }
                },
                "tsp": {
                  "type": "object",
                  "properties": {
                    "call_out": {
                      "type": "boolean",
                      "description": ""
                    },
                    "show_international_numbers_link": {
                      "type": "boolean",
                      "description": ""
                    }
                  }
                }
              }
            },
            "x-examples": {}
          },
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the account. To retrieve locked settings of the Master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a Sub Account, provide the Account ID of the Sub Account in this field."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/roles/{roleId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**Status Code:** `200`<br>\nInformation about a specific role returned.\n\n**Error Code:** `200`<br>\nYou do not have the permission to retrieve role information.\n",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Role Id."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the role."
                },
                "total_members": {
                  "description": "Total members assigned to that role.",
                  "type": "integer"
                },
                "privileges": {
                  "type": "array",
                  "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).\n",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "examples": {}
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nRole not found."
          }
        },
        "summary": "Get Role Information",
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list of privileges.\n\nUse this API to get information including specific privileges assigned to a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control).<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.\n\n**Scopes:** `role:read:admin`<br>\n ",
        "operationId": "getRoleInformation",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "type": "string",
            "required": true,
            "description": "Role Id. "
          }
        ]
      },
      "parameters": [
        {
          "name": "roleId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nThe account must be a paid account to update the role.",
            "schema": {}
          },
          "204": {
            "description": "**Status Code:** `400`<br>\nRole updated."
          },
          "300": {
            "description": "**Error Code:** `300`\nThis role cannot be updated."
          }
        },
        "summary": "Update Role Information",
        "description": "Each Zoom user automatically has a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.\n\nUse this API to change the privileges, name and description of a specific role.<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.<br>**Scopes:** `role:write:admin`<br>\n ",
        "operationId": "updateRole",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "type": "string",
            "required": true,
            "description": "Role Id"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Role Id."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the role."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the role."
                },
                "total_members": {
                  "description": "Total members assigned to that role.",
                  "type": "integer"
                },
                "privileges": {
                  "type": "array",
                  "description": "Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).\n",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "id": "102",
                "name": "Some Role Name",
                "description": "This role has privileges to view and manage users.",
                "total_members": "3",
                "privileges": [
                  "User:Read",
                  "User:Edit"
                ]
              }
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "**Error Code:** `200`<br>\nRole not found."
          },
          "204": {
            "description": "**Status Code:** `204`<br>\nRole deleted.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "300": {
            "description": "**Error Code:** `300`<br>\nRole not found."
          }
        },
        "summary": "Delete a Role",
        "description": "Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.\n\nUse this API to delete a role.<br>\n**Pre-requisite:**<br>\n* A Pro or higher plan.<br>\n* For role management and updates, you must be the Account Owner or user with role management permissions.\n\n**Scopes:** `role:write:admin`<br>\n ",
        "operationId": "deleteRole",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "type": "string",
            "required": true,
            "description": "Role Id."
          }
        ]
      }
    },
    "/accounts/{accountId}/plans/usage": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` <br>\nPlan Usage returned.\n\n**Error Code:** `200` <br>\nOnly available for paid account.",
            "schema": {
              "type": "object",
              "properties": {
                "plan_base": {
                  "type": "array",
                  "description": "The base plan subscribed for the sub account.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the base plan. "
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "Number of hosts under the base plan."
                      },
                      "usage": {
                        "description": "Total number of usage of this plan.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "type": "array",
                  "description": "Webinar Plan",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of Webinar plan for the account."
                      },
                      "hosts": {
                        "description": "The number of hosts in this plan.",
                        "type": "integer"
                      },
                      "usage": {
                        "description": "The total number of plan usage.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "plan_large_meeting": {
                  "type": "array",
                  "description": "Large Meeting Plan",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Large meeting Plan Type"
                      },
                      "hosts": {
                        "description": "Number of hosts in this plan. ",
                        "type": "integer"
                      },
                      "usage": {
                        "description": "Number of usages for this account plan.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "plan_zoom_rooms": {
                  "type": "array",
                  "description": "Zoom Rooms Plan",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "THe plan type for Zoom room plan."
                      },
                      "hosts": {
                        "type": "integer",
                        "description": "The number of hosts in this plan."
                      },
                      "usage": {
                        "description": "The total number of usage for this plan.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "plan_recording": {
                  "type": "object",
                  "description": "Recording Plan",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Recording plan type."
                    },
                    "free_storage": {
                      "type": "string",
                      "description": "Recording free storage."
                    },
                    "free_storage_usage": {
                      "type": "string",
                      "description": "Amount of free storage used."
                    },
                    "plan_storage": {
                      "type": "string",
                      "description": "Recording plan storage."
                    },
                    "plan_storage_usage": {
                      "type": "string",
                      "description": "Recording storage usage."
                    },
                    "plan_storage_exceed": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "plan_base": {
                  "type": "monthly",
                  "hosts": 2,
                  "usage": 1
                },
                "plan_zoom_rooms": {
                  "type": "zroom_monthly",
                  "hosts": 1,
                  "usage": 0
                },
                "plan_webinar": [
                  {
                    "type": "webinar100_monthly",
                    "hosts": 1,
                    "usage": 1
                  }
                ],
                "plan_large_meeting": [
                  {
                    "type": "large500_monthly",
                    "hosts": 1,
                    "usage": 1
                  }
                ],
                "plan_recording": {
                  "free_storage": "3 GB",
                  "free_storage_usage": "0",
                  "plan_storage": "0",
                  "plan_storage_usage": "0",
                  "plan_storage_exceed": "0"
                }
              }
            }
          }
        },
        "summary": "Get Plan Usage",
        "operationId": "getPlanUsage",
        "tags": [
          "Billing"
        ],
        "description": "Get information on usage of [plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans) of a Sub Account or a Master Account. To get plan usage for Master Account, provide the keyword \"me\" as the value of the `accountId` path parameter. To get plan usage of Sub Accounts, provide the actual account Id of the Sub Account as the value of the `accountId` path parameter. \n\n**Prerequisite**:<br>\nAccount type: Master Account on a paid Pro, Business or Enterprise plan.<br>\n**Scope:** `billing:master`<br>\n ",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": []
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/accounts/{accountId}/owner": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br>\nAccount owner updated.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `200`<br>\nUser is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>\nCannot make a user outside of your account an owner.<br>\nCannot update the role of an account owner."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.<br>\nAccount does not exist.<br>\n**Error Code:** `3201`<br>\nCannot find a billing account for this: {accountId}.<br>\n**Error Code:** `3211`<br>\nCannot find a billing contact for this: {accountId}.\n"
          }
        },
        "summary": "Update the Account Owner",
        "description": "The current account owner can [change the owner of an account](https://support.zoom.us/hc/en-us/articles/115005686983-Change-Account-Owner) to another user on the same account.<br> Use this API to change the owner of a Sub Account.\n <aside>Your account must be a Master Account in order to use this API to update the account owner of a Sub Account. Zoom only assigns this privilege to trusted partners and only approved partners can use this API. Contact the [**ISV team**](https://zoom.us/plan/api) for more details. Please note that the created account user will receive a confirmation email.</aside><br>\n\n**Prerequisites**:<br>\n* Account owner or admin permissions of an account.\n* Pro or a higher plan with Master Account option enabled..\n\n**Scopes:**  `account:write:admin` or `account:master`<br>\n<br> ",
        "operationId": "updateAccountOwner",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Account Id of the account."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the new owner.",
                  "format": "email"
                }
              },
              "required": [
                "email"
              ]
            },
            "x-examples": {
              "application/json": {
                "email": "AfRxe@ugAQaOgcbRq.vczy@somemailservice.com"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/accounts/{accountId}/users/{userId}/account": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`<br>\nUser's account switched successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code**: `400` **Bad Request**<br>\n**Error Code:** `1117`<br> Can not disassociate Admin user"
          },
          "404": {
            "description": "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist\n\t\n\n"
          }
        },
        "summary": "Switch a User's Account",
        "description": "Disassociate a user from one Account and move the user to another Account under the same Master Account. \n\nWith this API, a user under a Master Account or a Sub Account can be moved to another Sub Account within the same Master Account. To move a user from a Master Account to a Sub Account, use `me` as the value for `accountId`. In this scenario, \"me\" refers to the Account ID of the Master Account. \n\nTo move a user from one Sub Account to another Sub Account, provide the Sub Account's Account ID as the value for `accountId`. \n\n**Prerequisites**:\n* The account should have Pro or a higher plan with Master Account option enabled.\n* The user whose account needs to be switched should not be an admin or an owner of that account.\n* The user should not have the same [managed domain](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-) as the account owner.\n\n**Scope:** `user:master`<br> \n",
        "operationId": "switchUserAccount",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string",
                  "description": "The Account ID of the account to which you would like move the user to."
                }
              },
              "required": [
                "account_id"
              ]
            },
            "x-examples": {
              "application/json": {
                "account_id": "ABCDEF0G0YxBBB"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/accounts/{accountId}/recordings": {
      "get": {
        "responses": {
          "200": {
            "description": "**Response Error Code:** `200` <br>\nOnly available for Paid account.\n\n**HTTP Status Code:** `200` <br>\nRecording(s) listed successfully.\n\n",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The start date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. The month should fall within the past six months period from the date of query.",
                  "format": "date-time"
                },
                "to": {
                  "type": "string",
                  "description": "The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. The month should fall within the past six months period from the date of query.",
                  "format": "date-time"
                },
                "page_size": {
                  "type": "string",
                  "description": "The number of records returned within a single API call."
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "meetings": {
                  "type": "array",
                  "description": "Meetings Object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Universally Unique Identifier of a meeting instance. Each meeting instance will have its own meeting UUID."
                      },
                      "id": {
                        "type": "string",
                        "description": "Meeting ID - Unique Identifier for a meeting, also known as Meeting Number."
                      },
                      "host_id": {
                        "type": "string",
                        "description": "User ID of the user who is set as the host of the meeting."
                      },
                      "topic": {
                        "type": "string",
                        "description": "Meeting topic."
                      },
                      "start_time": {
                        "type": "string",
                        "description": "The date and time at which the meeting started.",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "The scheduled duration of the meeting.",
                        "type": "integer"
                      },
                      "total_size": {
                        "description": "The total size of the meeting in bytes.",
                        "type": "integer"
                      },
                      "recording_count": {
                        "description": "The total number of recordings retrieved from the account.",
                        "type": "integer"
                      },
                      "recording_files": {
                        "type": "array",
                        "description": "Recording files object",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Recording ID. Identifier for the recording."
                            },
                            "recording_start": {
                              "type": "string",
                              "description": "The date and time at which the recording started."
                            },
                            "recording_end": {
                              "type": "string",
                              "description": "The date and time at which the recording ended."
                            },
                            "file_type": {
                              "type": "string",
                              "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                            },
                            "file_size": {
                              "description": "The size of the recording file in bytes.",
                              "type": "number"
                            },
                            "play_url": {
                              "type": "string",
                              "description": "The URL using which recording can be played."
                            },
                            "download_url": {
                              "type": "string",
                              "description": "The URL using which the recording can be downloaded"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the recording. "
                            },
                            "recording_type": {
                              "type": "string",
                              "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                            },
                            "meeting_id": {
                              "type": "string",
                              "description": "Universally unique identifier of the meeting instance that was being recorded."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "from": "2019-08-19",
                "to": "2019-08-20",
                "page_size": 30,
                "next_page_token": "",
                "meetings": [
                  {
                    "uuid": "i9zq0MR8S/abcdef==",
                    "id": 101010101,
                    "account_id": "lq8QK_AAAAAAAAA",
                    "host_id": "uLoABCDEF_qQGIsQ",
                    "topic": "MyTestMeeting",
                    "type": 2,
                    "start_time": "2019-08-20T00:52:13Z",
                    "timezone": "America/Los_Angeles",
                    "host_email": "thehostemail@somemail.com",
                    "duration": 2,
                    "total_size": 128682,
                    "recording_count": 3,
                    "share_url": "https://zoom.us/recording/share/SBDDBJKsbjdAAAAA",
                    "recording_files": [
                      {
                        "id": "2f6bbbb-0fd7-4691-af13-aaaaaa",
                        "meeting_id": "i9zq0MR8S/abcdef==",
                        "recording_start": "2019-08-20T00:51:54Z",
                        "recording_end": "2019-08-20T00:53:16Z",
                        "file_type": "M4A",
                        "file_size": 26966,
                        "play_url": "https://zoomdev.us/recording/play/abcdEFgkkkkk",
                        "download_url": "https://zoom.us/recording/download/abcdEFgkkkkk",
                        "status": "completed",
                        "recording_type": "audio_only"
                      },
                      {
                        "id": "39362666-0fd7-4691-af13-aaaaaa",
                        "meeting_id": "i9zq0MR8S/abcdef==",
                        "recording_start": "2019-08-20T00:51:54Z",
                        "recording_end": "2019-08-20T00:53:16Z",
                        "file_type": "CHAT",
                        "file_size": 37,
                        "play_url": "https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA",
                        "download_url": "https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA",
                        "status": "completed",
                        "recording_type": "chat_file"
                      },
                      {
                        "id": "K809nk-014djkfsgf-00a98c13ec783",
                        "meeting_id": "i9zq0MR8S/abcdef==",
                        "recording_start": "2019-08-20T00:51:54Z",
                        "recording_end": "2019-08-20T00:53:16Z",
                        "file_type": "MP4",
                        "file_size": 101679,
                        "play_url": "https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                        "download_url": "https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                        "status": "completed",
                        "recording_type": "shared_screen_with_speaker_view"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `400` <br>\nAccount not found.\n\n**Response Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.\n",
            "examples": {}
          }
        },
        "summary": "List Recordings of an Account",
        "description": "List [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) available on an Account.\n\n**Prerequisites**:<br>\n* A Pro or a higher paid plan with Cloud Recording option enabled.<br>\n**Scopes**: `recording:read:admin` or `account:read:admin`\n\nIf the scope `recording:read:admin` is used, the Account ID of the Account must be provided in the `accountId` path parameter to list recordings that belong to the Account. This scope only works for Sub Accounts. \n\nTo list recordings of a Master Account, the scope must be `account:read:admin` and the value of `accountId` should be `me`.<br> <br>\n",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "getAccountCloudRecording",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "format": "date-time",
            "description": "The start date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. The month should fall within the past six months period from the date of query."
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "format": "date-time",
            "description": "The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. The month should fall within the past six months period from the date of query."
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/webinars/{webinarId}/tracking_sources": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "The total number of registration records for this Webinar."
                },
                "tracking_sources": {
                  "type": "array",
                  "description": "Tracking Sources object.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier for the tracking source."
                      },
                      "source_name": {
                        "type": "string",
                        "description": "Name of the source (platform) where the registration URL was shared."
                      },
                      "tracking_url": {
                        "type": "string",
                        "description": "Tracking URL. The URL that was shared for the registration."
                      },
                      "registration_count": {
                        "description": "Number of registrations made from this source.",
                        "type": "integer"
                      },
                      "visitor_count": {
                        "description": "Number of visitors who visited the registration page from this source.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 1,
                "tracking_sources": [
                  {
                    "id": "1100011100",
                    "source_name": "general",
                    "visitor_count": 2,
                    "registrationr_count": 1,
                    "tracking_url": "https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q"
                  }
                ]
              }
            }
          }
        },
        "summary": "Get Webinar Tracking Sources",
        "description": "[Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.<br> Use this API to list information on all the tracking sources of a Webinar.<br>\n**Scopes:** `webinar:read:admin`, `webinar:read`<br>\n <br>\n**Prerequisites**:<br>\n* [Webinar license](https://zoom.us/webinar).\n* Registration must be required for the Webinar.\n",
        "operationId": "getTrackingSources",
        "tags": [
          "Webinars"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "description": "The webinar ID.",
            "type": "integer",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/rooms/account_profile": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nZoom Room Account Profile returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "support_email": {
                      "type": "string",
                      "description": "The email address used for reporting Zoom Room issues.",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number used for reporting Zoom room issues."
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of the Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "basic": {
                  "support_email": "abc123@someemailaddress.sbfj",
                  "support_phone": "00222",
                  "room_passcode": "12234",
                  "required_code_to_ext": true
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "summary": "Get Zoom Room Account Profile",
        "description": "Get details on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To get information on an individual Room Profile, use [Get Zoom Room Profile API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/getzrprofile) instead.\n\n**Prerequisites:**<br>\n* Zoom account owner or Zoom Rooms admin permissions<br>\n\n**Scopes:** `room:read:admin`<br> ",
        "tags": [
          "Rooms Account"
        ],
        "operationId": "getZRAccountProfile",
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nProfile updated successfully.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "summary": "Update Zoom Room Account Profile",
        "description": "Update information on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To update information on an individual Room Profile, use [Update Zoom Room Profile API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/updatezrprofile) instead.\n\n**Prerequisites:**<br>\n* Zoom account owner or Zoom Rooms admin permissions<br>\n\n**Scopes:** `room:write:admin`<br> ",
        "operationId": "updateZRAccProfile",
        "tags": [
          "Rooms Account"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "support_email": {
                      "type": "string",
                      "description": "The email address used for reporting Zoom Room issues.",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number used for reporting Zoom room issues."
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of the Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "basic": {
                  "support_email": "uoBBgT2soq1vfH@oZjIHwma.erjp",
                  "support_phone": "123445654656",
                  "room_passcode": "121212",
                  "required_code_to_ext": true
                }
              }
            }
          }
        ]
      }
    },
    "/rooms/account_settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZR Account Settings returned successfully.\n",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "email_address_prompt_before_recording": {
                          "type": "boolean",
                          "description": "Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the \"Meet Now\" option."
                        },
                        "secure_connection_channel": {
                          "type": "boolean",
                          "description": "Enable secure connection between Zoom Rooms computer and controller."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "make_room_alternative_host": {
                          "type": "boolean",
                          "description": "Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "client_alert": {
                  "detect_microphone_error_alert": true,
                  "detect_bluetooth_microphone_error_alert": true,
                  "detect_speaker_error_alert": true,
                  "detect_bluetooth_speaker_error_alert": true,
                  "detect_camera_error_alert": true
                },
                "notification": {
                  "audio_not_meet_usability_threshold": false,
                  "battery_low_and_not_charging": false,
                  "controller_scheduling_disconnected": false,
                  "cpu_usage_high_detected": false,
                  "network_unstable_detected": false,
                  "zoom_room_offline": false,
                  "sip_registration_failed": false,
                  "mic_speaker_camera_disconnected": false,
                  "zoom_room_display_disconnected": false
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "summary": "Get Zoom Room Account Settings",
        "description": "Get details on Account Settings of a Zoom Room. With this API, you can view either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notfication Settings) of the Zoom Rooms account. By default, only **Account Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`<br><br> \n",
        "operationId": "getZRAccountSettings",
        "tags": [
          "Rooms Account"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "default": "meeting",
            "required": true,
            "enum": [
              "meeting",
              "alert"
            ],
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account."
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully.\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "summary": "Update Zoom Room Account Settings",
        "description": "Update account settings applied for Zoom Rooms in a Zoom account. With this API, you can update either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notfication Settings) of the Zoom Rooms account by specifying the required setting type in the `setting_type` parameter. To update only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter and to update only **Account Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> \n\n",
        "operationId": "updateZoomRoomAccSettings",
        "tags": [
          "Rooms Account"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "email_address_prompt_before_recording": {
                          "type": "boolean",
                          "description": "Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the \"Meet Now\" option."
                        },
                        "secure_connection_channel": {
                          "type": "boolean",
                          "description": "Enable secure connection between Zoom Rooms computer and controller."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "make_room_alternative_host": {
                          "type": "boolean",
                          "description": "Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "network_stable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when the network is stable."
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "zoom_rooms": {
                  "upcoming_meeting_alert": true,
                  "show_alert_before_meeting": false,
                  "start_airplay_manually": false,
                  "weekly_system_restart": false,
                  "display_meeting_list": false,
                  "display_top_banner": false,
                  "display_feedback_survey": false,
                  "auto_direct_sharing": true,
                  "transform_meeting_to_private": true,
                  "hide_id_for_private_meeting": false,
                  "auto_start_scheduled_meeting": true,
                  "auto_stop_scheduled_meeting": false,
                  "audio_device_daily_auto_test": false,
                  "support_join_3rd_party_meeting": false,
                  "email_address_prompt_before_recording": true,
                  "secure_connection_channel": true,
                  "encrypt_shared_screen_content": false,
                  "allow_multiple_content_sharing": false,
                  "show_non_video_participants": true,
                  "show_call_history_in_room": true,
                  "make_room_alternative_host": true,
                  "show_contact_list_on_controller": false,
                  "count_attendees_number_in_room": false,
                  "send_whiteboard_to_internal_contact_only": true
                }
              }
            }
          },
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.",
            "required": true,
            "default": "meeting"
          }
        ]
      }
    },
    "/rooms/locations": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room locations listed successfully.\n",
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned within a single API call."
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the location."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the location."
                      },
                      "parent_location_id": {
                        "type": "string",
                        "description": "ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>\nThe value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of location. The value can be one of the following:\n`country`, `states`, `city`, `campus`, `building`, `floor`. ",
                        "enum": [
                          "country",
                          "states",
                          "city",
                          "campus",
                          "building",
                          "floor"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"page_size\": 30,\n  \"next_page_token\": \"\",\n  \"locations\": [\n    {\n      \"id\": \"AAAAAAAAAA\",\n      \"name\": \"Country/Region1\",\n      \"parent_location_id\": \"I-qsfdUbbbbg\",\n      \"type\": \"country\"\n    },\n    {\n      \"id\": \"BBBBBBBB\",\n      \"name\": \"State1\",\n      \"parent_location_id\": \"AAAAAAAAAA\",\n      \"type\": \"state\"\n    },\n    {\n      \"id\": \"ccccddddd,\n      \"name\": \"City1\",\n      \"parent_location_id\": \"BBBBBBBB\",\n      \"type\": \"city\"\n    },\n    {\n      \"id\": \"fgaajfjfhgjgjgjg\",\n      \"name\": \"Campus1\",\n      \"parent_location_id\": \"ccccddddd,\n      \"type\": \"campus\"\n    },\n    {\n      \"id\": \"YQGK12344\",\n      \"name\": \"Building1\",\n      \"parent_location_id\": \"fgaajfjfhgjgjgjg\",\n      \"type\": \"building\"\n    },\n    {\n      \"id\": \"uUbbbbbbbb\",\n      \"name\": \"Floor1\",\n      \"parent_location_id\": \"YQGK12344\",\n      \"type\": \"floor\"\n    }\n  ]\n}"
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br>\nLocation type not exist.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\n Location not found:{parent_location_id}."
          }
        },
        "summary": "List Zoom Room Locations",
        "description": "A Zoom account owner or a Zoom Room administrator can establish a [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to help manage Zoom Rooms that are spread among a variety of locations. Use this API to list the different location types used for Zoom Rooms in an account.<br><br>\n**Prerequisites:**\n* Account owner or admin permissions.\n* Zoom Rooms Version 4.0 or higher<br><br>\n**Scopes:** `room:read:admin`<br> \n\n\n\n",
        "operationId": "listZRLocations",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "parent_location_id",
            "type": "string",
            "description": "A unique identifier for the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level."
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Use this field to filter the response by the type of location. The value can be one of the following:\n`country`, `states`, `city`, `campus`, `building`, `floor`. "
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ],
        "tags": [
          "Rooms Location"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nLocation added successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Location ID: Unique Identifier of the location that was added."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the location."
                },
                "type": {
                  "type": "string",
                  "description": "Type of location. The value should be one of the following:<br>\n`country`, `states`, `city`, `campus`, `building`, `floor`.",
                  "enum": [
                    "country",
                    "states",
                    "city",
                    "campus",
                    "building",
                    "floor"
                  ]
                },
                "parent_location_id": {
                  "type": "string",
                  "description": "Unique Identifier of the parent location."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "sedo534pis",
                "name": "San Jose City",
                "type": "City",
                "parent_location_id": "gdrgre54t5th"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br><br>\n**Error Code:** `300`<br>\nLocation name already exists. Try a different location name.<br>\nInvalid parent location id {parent_location_id}\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not exist {parent_location_id}"
          }
        },
        "summary": "Add a Location",
        "description": "Add a location to the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) of Zoom Rooms in an account.\n\n**Prerequisites:**\n* Account owner or admin permissions.\n* Zoom Rooms Version 4.0 or higher<br><br>\n**Scopes:** `room:write:admin`<br> \n\n",
        "operationId": "addAZRLocation",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the location. The name must be unique and shouldn't have already been used in the same account."
                },
                "parent_location_id": {
                  "type": "string",
                  "description": "The location ID of the location that is a level higher from the location that is being added.<br><br> For example, to add a City named \"City 1\" as the child location under a State named \"State 1\", you must provide the location ID of \"State 1\". This can be retrieved using the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "San Jose City",
                "parent_location_id": "csdfus33dsf"
              }
            }
          }
        ]
      }
    },
    "/rooms/locations/{locationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms Location Profile returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the location type."
                    },
                    "description ": {
                      "type": "string",
                      "description": "Description about the location."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone (only returned for location type - city)."
                    },
                    "address": {
                      "type": "string",
                      "description": "Address"
                    },
                    "support_email": {
                      "type": "string",
                      "description": "The email address to be used for reporting Zoom Room issues.\n",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number to be used for reporting Zoom Room issues.\n"
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of your Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "basic": {
                  "name": "Kathmandu",
                  "description": "This Zoom Rooms is located in Kathmandu.",
                  "timezone": "Asia/Kathmandu",
                  "support_email": "abb123@123",
                  "support_phone": "00222",
                  "room_passcode": "12234",
                  "required_code_to_ext": true
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}."
          }
        },
        "summary": "Get Zoom Room Location Profile ",
        "description": "Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to retrieve information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.\n\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:read:admin`<br> \n",
        "operationId": "getZRLocationProfile",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locationId",
            "type": "string",
            "required": true,
            "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
          }
        ]
      },
      "parameters": [
        {
          "name": "locationId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        },
        "summary": "Update Zoom Room Location Profile",
        "description": "Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to update information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.\n\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br> \n\n",
        "operationId": "updateZRLocationProfile",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locationId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the location. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the location type."
                    },
                    "description ": {
                      "type": "string",
                      "description": "Description about the location."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone (can only be updated for location type - city)."
                    },
                    "address": {
                      "type": "string",
                      "description": "Address. Can only be updated for Campus and Building."
                    },
                    "support_email": {
                      "type": "string",
                      "description": "The email address to be used for reporting Zoom Room issues.\n",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number to be used for reporting Zoom Room issues.\n"
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of your Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "basic": {
                  "name": "gfhgfhfh",
                  "description ": "esse",
                  "timezone": "magna incididunt irure voluptate id",
                  "address": "enim id sint",
                  "support_email": "WjFz@iYxpxDCRJQhZeBYtla.qb",
                  "support_phone": "anim eiusmod sit",
                  "room_passcode": "et",
                  "required_code_to_ext": false
                }
              }
            }
          }
        ]
      }
    },
    "/rooms/locations/{locationId}/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room location settings returned successfully.",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_accept_incoming_call_and_fecc": {
                          "type": "boolean",
                          "description": "Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "hide_self_view": {
                          "type": "boolean",
                          "description": "If enabled, you will not see your own video but other people in the meeting can still see your video.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "lock_speaker_volume_control": {
                          "type": "boolean",
                          "description": "Lock speaker volume control on controller.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "start_hdmi_content_share_manualy": {
                          "type": "boolean",
                          "description": "Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "voice_commands": {
                          "type": "boolean",
                          "description": "Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "client_alert": {
                  "detect_microphone_error_alert": true,
                  "detect_bluetooth_microphone_error_alert": true,
                  "detect_speaker_error_alert": true,
                  "detect_bluetooth_speaker_error_alert": true,
                  "detect_camera_error_alert": true
                },
                "notification": {
                  "audio_not_meet_usability_threshold": false,
                  "battery_low_and_not_charging": false,
                  "controller_scheduling_disconnected": false,
                  "cpu_usage_high_detected": false,
                  "network_unstable_detected": false,
                  "zoom_room_offline": false,
                  "sip_registration_failed": false,
                  "mic_speaker_camera_disconnected": false,
                  "zoom_room_display_disconnected": false
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess Restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\nLocation not found: {locationId}\n\n"
          }
        },
        "summary": "Get Location Settings ",
        "description": "Get information on meeting or alert settings applied to Zoom Rooms located in a specific location. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`<br> ",
        "operationId": "getZRLocationSettings",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "required": true,
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.",
            "default": "meeting"
          },
          {
            "in": "path",
            "name": "locationId",
            "type": "string",
            "required": true,
            "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
          }
        ]
      },
      "parameters": [
        {
          "name": "locationId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation settings updated successfully.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}"
          }
        },
        "summary": "Update Location Settings",
        "description": "Update information on either meeting or alert settings applied to Zoom Rooms located in a specific location. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. Similarly, to update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> ",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_accept_incoming_call_and_fecc": {
                          "type": "boolean",
                          "description": "Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "hide_self_view": {
                          "type": "boolean",
                          "description": "If enabled, you will not see your own video but other people in the meeting can still see your video.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "lock_speaker_volume_control": {
                          "type": "boolean",
                          "description": "Lock speaker volume control on controller.\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "start_hdmi_content_share_manualy": {
                          "type": "boolean",
                          "description": "Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).\n\nThis setting is returned only for location type - \"country\"."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "voice_commands": {
                          "type": "boolean",
                          "description": "Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "client_alert": {
                  "detect_microphone_error_alert": false,
                  "detect_bluetooth_microphone_error_alert": false,
                  "detect_speaker_error_alert": true,
                  "detect_bluetooth_speaker_error_alert": false,
                  "detect_camera_error_alert": true
                },
                "notification": {
                  "audio_not_meet_usability_threshold": false,
                  "audio_meet_usability_threshold": false,
                  "battery_low_and_not_charging": true,
                  "battery_is_charging": false,
                  "battery_percentage": "in ut incididunt velit",
                  "controller_scheduling_disconnected": false,
                  "controller_scheduling_reconnected": false,
                  "cpu_usage_high_detected": false,
                  "network_unstable_detected": true,
                  "zoom_room_offline": false,
                  "zoom_room_come_back_online": true,
                  "sip_registration_failed": false,
                  "sip_registration_re_enabled": true,
                  "mic_speaker_camera_disconnected": true,
                  "mic_speaker_camera_reconnected": false,
                  "zoom_room_display_disconnected": false
                }
              }
            }
          },
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.",
            "default": "meeting",
            "required": true
          },
          {
            "in": "path",
            "name": "locationId",
            "type": "string",
            "required": true,
            "description": "Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response)."
          }
        ],
        "operationId": "updateZRLocationSettings",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/rooms/locations/structure": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms location structure returned successfully.<br>\n",
            "schema": {
              "type": "object",
              "properties": {
                "structures": {
                  "type": "array",
                  "description": "Hierarchial structure array of the Zoom Rooms location.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "structures": [
                  "country",
                  "state",
                  "city",
                  "campus",
                  "building",
                  "floor",
                  "room"
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n"
          }
        },
        "summary": "Get Zoom Room Location Structure",
        "description": "Get the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>\n**Prerequisites:**<br>\n* Zoom Rooms version 4.0 or higher\n* Account owner or admin permissions<br>\n**Scopes:** `room:read:admin`<br> ",
        "operationId": "getZRLocationStructure",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation Structure updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001` This account does not exist or does not belong to this master account.<br>This account does not exist or does not belong to you."
          }
        },
        "summary": "Update Zoom Rooms Location Structure",
        "description": "Update the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>\n**Prerequisites:**<br>\n* Zoom Rooms version 4.0 or higher\n* Account owner or admin permissions<br>\n**Scopes:** `room:write:admin`<br> ",
        "operationId": "updateZoomRoomsLocationStructure",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "structures": {
                  "type": "array",
                  "description": "Location Structure. The value can be either one or a combination of the following strings separated by comma:\n`country`, `state`, `city`, `campus`, `building`, `floor`",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "structures": [
                  "country",
                  "city"
                ]
              }
            }
          }
        ]
      }
    },
    "/rooms/{roomId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room profile returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the Zoom Room."
                    },
                    "activation_code": {
                      "type": "string",
                      "description": "Activation Code is the code that is used to complete the setup of the Zoom Room."
                    },
                    "support_email": {
                      "type": "string",
                      "description": "The email address to be used for reporting Zoom Room issues.",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number to be used for reporting Zoom Room issues.\n"
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    },
                    "hide_room_in_contacts": {
                      "type": "boolean",
                      "description": "Hide this Zoom Room from your Contact List. "
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "basic": {
                  "name": "MytestbRoom",
                  "activation_code": "12345",
                  "support_email": "abcdfdjorjggr@gh.123",
                  "support_phone": "00001111",
                  "room_passcode": "1234",
                  "required_code_to_ext": true,
                  "hide_room_in_contacts": false
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\n* Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}."
          }
        },
        "summary": "Get Zoom Room Profile",
        "description": "\nZoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to get detailed information on a specific Zoom Room in a Zoom account.\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:read:admin`<br> ",
        "operationId": "getZRProfile",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API."
          }
        ]
      },
      "parameters": [
        {
          "name": "roomId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** <br>\nZoom Room deleted successfully.\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** <br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}"
          }
        },
        "summary": "Delete a Zoom Room",
        "description": "[Remove](https://support.zoom.us/hc/en-us/articles/360033432032-Zoom-Room-Device-Profiles#h_e55b2092-c418-4b02-819f-44de51448900) a specific Zoom Room profile from a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> ",
        "operationId": "deleteAZoomRoom",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of a Zoom Room."
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nRoom Profile information updated successfully.\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}\n"
          }
        },
        "summary": "Update a Zoom Room Profile",
        "operationId": "updateRoomProfile",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of a Zoom Room."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "basic": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the Zoom Room."
                    },
                    "support_email": {
                      "type": "string",
                      "description": "The email address to be used for reporting Zoom Room issues.",
                      "format": "email"
                    },
                    "support_phone": {
                      "type": "string",
                      "description": "The phone number to be used for reporting Zoom Room issues.\n"
                    },
                    "room_passcode": {
                      "type": "string",
                      "description": "1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "required_code_to_ext": {
                      "description": "Require code to exit out of Zoom Rooms application to switch between other apps.\n",
                      "type": "boolean"
                    },
                    "hide_room_in_contacts": {
                      "type": "boolean",
                      "description": "Hide this Zoom Room from your Contact List. "
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "basic": {
                  "name": "MytestZRoom",
                  "support_email": "abcjggr@gh.123",
                  "support_phone": "00001111",
                  "room_passcode": "232434",
                  "required_code_to_ext": true,
                  "hide_room_in_contacts": true
                }
              }
            }
          }
        ],
        "description": "Update basic information on a specific Zoom Room in a Zoom account.<br>\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n**Scopes**: `room:write:admin`<br> "
      }
    },
    "/rooms/{roomId}/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room settings returned successfully.",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "hide_share_instruction": {
                          "type": "boolean",
                          "description": "Hide share instructions from TV."
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "application/json": {
                "zoom_rooms": {
                  "upcoming_meeting_alert": true,
                  "show_alert_before_meeting": false,
                  "start_airplay_manually": true,
                  "weekly_system_restart": false,
                  "display_meeting_list": false,
                  "display_top_banner": false,
                  "display_feedback_survey": true,
                  "auto_direct_sharing": false,
                  "transform_meeting_to_private": false,
                  "hide_id_for_private_meeting": false,
                  "auto_start_scheduled_meeting": true,
                  "auto_stop_scheduled_meeting": true,
                  "hide_share_instruction": true,
                  "audio_device_daily_auto_test": true,
                  "support_join_3rd_party_meeting": true,
                  "encrypt_shared_screen_content": false,
                  "allow_multiple_content_sharing": true,
                  "show_non_video_participants": false,
                  "show_call_history_in_room": true,
                  "show_contact_list_on_controller": true,
                  "count_attendees_number_in_room": true,
                  "send_whiteboard_to_internal_contact_only": true
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.\n\n"
          }
        },
        "summary": "Get Zoom Room Settings",
        "description": "Get information on meeting or alert settings applied to a specific Zoom Room. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:read:admin`<br> ",
        "parameters": [
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "default": "meeting",
            "description": "The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account.",
            "required": true
          },
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique identifier of the Zoom Room."
          }
        ],
        "operationId": "getZRSettings",
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Rooms"
        ]
      },
      "parameters": [
        {
          "name": "roomId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully. ",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted."
          }
        },
        "summary": "Update Zoom Room Settings",
        "description": "Update either meeting or alert settings applied to a specific Zoom Room. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. To update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br>\n**Prerequisites:**<br>\n* Zoom Room licenses\n* Owner or Admin privileges on the Zoom Account.<br>\n**Scopes:** `room:write:admin`<br> ",
        "operationId": "updateZRSettings",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Zoom Room."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "zoom_rooms": {
                      "type": "object",
                      "properties": {
                        "upcoming_meeting_alert": {
                          "type": "boolean",
                          "description": "If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller."
                        },
                        "show_alert_before_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. "
                        },
                        "start_airplay_manually": {
                          "type": "boolean",
                          "description": "Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available."
                        },
                        "weekly_system_restart": {
                          "type": "boolean",
                          "description": "[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week."
                        },
                        "display_meeting_list": {
                          "type": "boolean",
                          "description": " Show the same information on the TV that is shown on the controller."
                        },
                        "display_top_banner": {
                          "type": "boolean",
                          "description": "Allow to display room name, time and sharing key on the top portion of TV."
                        },
                        "display_feedback_survey": {
                          "type": "boolean",
                          "description": "Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller."
                        },
                        "auto_direct_sharing": {
                          "type": "boolean",
                          "description": "Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code."
                        },
                        "transform_meeting_to_private": {
                          "type": "boolean",
                          "description": "If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display \"Your Name's Meeting\" instead of the real meeting topic."
                        },
                        "hide_id_for_private_meeting": {
                          "type": "boolean",
                          "description": "If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private."
                        },
                        "auto_start_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV."
                        },
                        "auto_stop_scheduled_meeting": {
                          "type": "boolean",
                          "description": "Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. "
                        },
                        "hide_share_instruction": {
                          "type": "boolean",
                          "description": "Hide share instructions from TV."
                        },
                        "audio_device_daily_auto_test": {
                          "type": "boolean",
                          "description": "Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio."
                        },
                        "support_join_3rd_party_meeting": {
                          "type": "boolean",
                          "description": "Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers."
                        },
                        "encrypt_shared_screen_content": {
                          "type": "boolean",
                          "description": "Encrypt screen and content shared in meetings."
                        },
                        "allow_multiple_content_sharing": {
                          "type": "boolean",
                          "description": "Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default."
                        },
                        "show_non_video_participants": {
                          "type": "boolean",
                          "description": "When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default."
                        },
                        "show_call_history_in_room": {
                          "type": "boolean",
                          "description": "Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.\n"
                        },
                        "show_contact_list_on_controller": {
                          "type": "boolean",
                          "description": "If enabled, you can invite participants from the contact list during a meeting or when starting a meeting"
                        },
                        "count_attendees_number_in_room": {
                          "type": "boolean",
                          "description": "Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.\n"
                        },
                        "send_whiteboard_to_internal_contact_only": {
                          "type": "boolean",
                          "description": "Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only."
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "client_alert": {
                      "type": "object",
                      "description": "The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. ",
                      "properties": {
                        "detect_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with microphone."
                        },
                        "detect_bluetooth_microphone_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth microphone."
                        },
                        "detect_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a speaker."
                        },
                        "detect_bluetooth_speaker_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a bluetooth speaker."
                        },
                        "detect_camera_error_alert": {
                          "type": "boolean",
                          "description": "Display an alert message when an issue is detected with a camera."
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "description": "[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. ",
                      "properties": {
                        "audio_not_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result does not meet usability threshold."
                        },
                        "audio_meet_usability_threshold": {
                          "type": "boolean",
                          "description": "Send an alert when the audio echo test result meets usability threshold."
                        },
                        "battery_low_and_not_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged."
                        },
                        "battery_is_charging": {
                          "type": "boolean",
                          "description": "Send an alert when the battery starts charging."
                        },
                        "battery_percentage": {
                          "type": "string",
                          "description": "Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified."
                        },
                        "controller_scheduling_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the connection to the Controller or Scheduling Display cannot be detected."
                        },
                        "controller_scheduling_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the Controller or Scheduling Display can be detected again."
                        },
                        "cpu_usage_high_detected": {
                          "type": "boolean",
                          "description": "Send an alert when CPU usage is above 90%."
                        },
                        "network_unstable_detected": {
                          "type": "boolean",
                          "description": "Send an alert when low bandwidth network is detected"
                        },
                        "zoom_room_offline": {
                          "type": "boolean",
                          "description": "Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller."
                        },
                        "zoom_room_come_back_online": {
                          "type": "boolean",
                          "description": "Send an alert when the Zoom Room is online after previously being offline."
                        },
                        "sip_registration_failed": {
                          "type": "boolean",
                          "description": "Send an alert when SIP registration stops working. "
                        },
                        "sip_registration_re_enabled": {
                          "type": "boolean",
                          "description": "Send an alert after the SIP registration is re-enabled."
                        },
                        "mic_speaker_camera_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is disconnected in the Zoom Room."
                        },
                        "mic_speaker_camera_reconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the mic, speaker or camera is reconnected."
                        },
                        "zoom_room_display_disconnected": {
                          "type": "boolean",
                          "description": "Send an alert when the TV display is disconnected"
                        }
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "client_alert": {
                  "detect_microphone_error_alert": true,
                  "detect_bluetooth_microphone_error_alert": false,
                  "detect_speaker_error_alert": false,
                  "detect_bluetooth_speaker_error_alert": false,
                  "detect_camera_error_alert": true
                },
                "notification": {
                  "audio_not_meet_usability_threshold": true,
                  "audio_meet_usability_threshold": true,
                  "battery_low_and_not_charging": true,
                  "battery_is_charging": true,
                  "battery_percentage": "do sit",
                  "controller_scheduling_disconnected": true,
                  "controller_scheduling_reconnected": false,
                  "cpu_usage_high_detected": true,
                  "network_unstable_detected": true,
                  "zoom_room_offline": false,
                  "zoom_room_come_back_online": false,
                  "sip_registration_failed": true,
                  "sip_registration_re_enabled": false,
                  "mic_speaker_camera_disconnected": false,
                  "mic_speaker_camera_reconnected": true,
                  "zoom_room_display_disconnected": true
                }
              }
            }
          },
          {
            "in": "query",
            "name": "setting_type",
            "type": "string",
            "description": "The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>\n`meeting`: Meeting settings of the Zoom Rooms Account."
          }
        ]
      }
    },
    "/rooms/{roomId}/devices": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\nDevices listed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the device."
                      },
                      "room_name": {
                        "type": "string",
                        "description": "Name of the Zoom Room."
                      },
                      "device_type": {
                        "type": "string",
                        "description": "Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`",
                        "enum": [
                          "Zoom Rooms Computer",
                          "Controller",
                          "Scheduling Display",
                          "Zoom Rooms Control System",
                          "Companion Whiteboard"
                        ]
                      },
                      "app_version": {
                        "type": "string",
                        "description": "App version of Zoom Rooms."
                      },
                      "device_system": {
                        "type": "string",
                        "description": "Operating system of the device."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the device. The value can be either `Online` or `Offline`.",
                        "enum": [
                          "Online",
                          "Offline"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "devices": [
                  {
                    "id": "sajhdfshf24324",
                    "room_name": "MyAwesomeZoomRoom",
                    "device_type": "Zoom Rooms Computer",
                    "app_version": "4.4.1 (1242.0623)",
                    "device_system": "Win 10",
                    "status": "Online"
                  },
                  {
                    "id": "32dhgdfg2were",
                    "room_name": "MyAwesomeZoomRoom",
                    "device_type": "Zoom Rooms Controller",
                    "app_version": "4.3.6 (265.0307)",
                    "device_system": "iPad 12.3.1",
                    "status": "Online"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription."
          }
        },
        "summary": "List Zoom Room Devices",
        "description": "List information about the devices that are being used for a specific [Zoom Room](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in an account.\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>\n* Account owner or admin permissions.\n**Scopes**: `room:read:admin`<br> ",
        "operationId": "listZRDevices",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API."
          }
        ]
      },
      "parameters": [
        {
          "name": "roomId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/sip_trunk/numbers": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nList of numbers returned.",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "description": "Total number of records returned.",
                  "type": "integer"
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Phone number"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 1,
                "phone_numbers": [
                  {
                    "number": "45345545",
                    "country": "US"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.\nThis account does not exist or does not belong to you."
          }
        },
        "summary": "List SIP Trunk Numbers",
        "description": "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to list all the internal numbers that are configured for SIP Connected Audio in a Zoom Account.\n\n**Prerequisites:**<br>\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* The account must be a Master Account<br>\n**Scopes:** `sip_trunk:master`\n",
        "operationId": "listSipTrunkNumbers",
        "tags": [
          "SIP Connected Audio"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/accounts/{accountId}/sip_trunk/settings": {
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nConfiguration assigned successfully.\n",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you."
          }
        },
        "summary": "Assign SIP Trunk Configuration",
        "description": "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br> Using this API, a Master Account owner can copy the SIP Connected Audio configurations applied on the Master Account and enable those configurations on a Sub Account. The owner can also disable the configuration in the Sub Account where it was previously enabled. \n**Prerequisites:**<br>\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* Master Account Owner<br>\n**Scopes:** `sip_trunk:master`<br> \n",
        "operationId": "assignSIPConfig",
        "tags": [
          "SIP Connected Audio"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "enable": {
                  "description": "Enable or delete the configuration.<br> The values can be one of the following:<br> `true`: Enable configuration.<br> `false`: Delete configuration",
                  "type": "boolean"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "enable": true
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/accounts/{accountId}/sip_trunk/numbers": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nNumbers assigned successfully.\n",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.<br><br>\n**Error Code:** `400`<br>\nThis number does not belong to master account.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.\n"
          }
        },
        "summary": "Assign Numbers",
        "description": "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to assign internal numbers to a Sub Account.\n\n**Prerequisites:**<br>\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* The account must be a Master Account<br>\n**Scopes:** `sip_trunk:master`<br> \n\n",
        "operationId": "assignSipTrunkNumbers",
        "tags": [
          "SIP Connected Audio"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Sub Account."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone_numbers": {
                  "type": "array",
                  "description": "Phone number(s) to be assigned to the Sub Account.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "phone_numbers": [
                  "34555665654",
                  "10004350500",
                  "000000000"
                ]
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nNumbers deleted successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.<br><br>"
          }
        },
        "summary": "Delete All Numbers",
        "description": "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to delete all internal numbers assigned to a Sub Account.\n**Prerequisites:**<br>\n\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* The account must be a Master Account<br>\n**Scopes:** `sip_trunk:master`<br> ",
        "operationId": "deleteAllSipNumbers",
        "tags": [
          "SIP Connected Audio"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true,
            "description": "Account ID of the Sub Account from which the numbers are to be deleted. This can be retrieved from [List Sub Accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API."
          }
        ]
      }
    },
    "/past_meetings/{meetingId}/polls": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Meeting ID."
                },
                "uuid": {
                  "type": "string",
                  "description": "Meeting UUID."
                },
                "start_time": {
                  "type": "string",
                  "description": "The start time of the meeting.",
                  "format": "date-time"
                },
                "questions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the user who submitted answers to the poll. If \"anonymous\" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the user who submitted answers to the poll."
                      },
                      "question_details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Question asked during the poll."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Answer submitted by the user."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 123456,
                "uuid": "gsdjfhsdfkhjdsf",
                "start_time": "2019-02-01T12:34:12.660Z",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "Sam S",
                    "email": "myemail@jksdlfkjdf.djfk",
                    "question_details": [
                      {
                        "question": "How are you?",
                        "answer": "I am wonderful."
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "summary": "List Past Meeting's Poll Results",
        "description": "[Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. Use this API to list poll results of a meeting.<br><br>\n\n**Scopes**: `meeting:read:admin`, `meeting:read`<br> \n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId": "listPastMeetingPolls",
        "tags": [
          "Meetings"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "type": "string",
            "required": true,
            "description": "The meeting ID or meeting UUID. If   meeting ID is provided, it will take the last meeting instance."
          }
        ]
      },
      "parameters": [
        {
          "name": "meetingId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/past_meetings/{meetingId}/files": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "The total number of files found."
                },
                "in_meeting_files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "file_name": {
                        "type": "string",
                        "description": "Name of the file."
                      },
                      "download_url": {
                        "type": "string",
                        "description": "URL to download the file."
                      },
                      "file_size": {
                        "description": "Size of the file in bytes.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 1,
                "in_meeting_files": [
                  {
                    "file_name": "somefile.txt",
                    "download_url": "somefile.txt/randomurl",
                    "file_size": 300
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end."
          }
        },
        "description": "List files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `meeting:read`, `meeting:read:admin`<br>\n ",
        "summary": "List Past Meeting Files",
        "operationId": "listPastMeetingFiles",
        "tags": [
          "Meetings"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "meetingId",
            "description": "The meeting ID.",
            "type": "integer",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "name": "meetingId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/past_webinars/{webinarId}/polls": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID."
                },
                "uuid": {
                  "type": "string",
                  "description": "Webinar UUID."
                },
                "start_time": {
                  "type": "string",
                  "description": "The start time of the Webinar.",
                  "format": "date-time"
                },
                "questions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the user who submitted answers to the poll. If \"anonymous\" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the user who submitted answers to the poll."
                      },
                      "question_details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Question asked during the poll."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Answer submitted by the user."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 123456,
                "uuid": "gsdjfhsdfkhjdsf",
                "start_time": "2019-02-01T12:34:12.660Z",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "Sam S",
                    "email": "myemail@jksdlfkjdf.djfk",
                    "question_details": [
                      {
                        "question": "How are you?",
                        "answer": "I am wonderful."
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n"
          }
        },
        "summary": "List Past Webinar Poll Results",
        "description": "The polling feature for webinar allows you to create single choice or multiple choice polling questions for your webinars. Use this API to retrieve the results for Webinar Polls of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n <br>\n\n\n\n",
        "operationId": "listPastWebinarPollResults",
        "tags": [
          "Webinars"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "type": "string",
            "required": true,
            "description": "The Webinar ID or Webinar UUID. If the webinar ID is passed, it will take the last webinar instance."
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/past_webinars/{webinarId}/qa": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID."
                },
                "uuid": {
                  "type": "string",
                  "description": "Webinar UUID."
                },
                "start_time": {
                  "type": "string",
                  "description": "The start time of the Webinar.",
                  "format": "date-time"
                },
                "questions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the user. If \"anonymous\" option is enabled for the Q&A, the participant's  information will be kept anonymous and the value of `name` field will be \"Anonymous Attendee\"."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the user."
                      },
                      "question_details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Question asked during the Q&A."
                            },
                            "answer": {
                              "type": "string",
                              "description": "Answer submitted for the question."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 123456,
                "uuid": "gsdjfhsdfkhjdsf",
                "start_time": "2019-02-01T12:34:12.660Z",
                "title": "Learn something new",
                "questions": [
                  {
                    "name": "Sam S",
                    "email": "myemail@jksdlfkjdf.djfk",
                    "question_details": [
                      {
                        "question": "How are you?",
                        "answer": "I am wonderful."
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n"
          }
        },
        "summary": "List Q&A of Past Webinar",
        "description": "The [Question & Answer (Q&A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for Webinars allows attendees to ask questions during the Webinar and for the panelists, co-hosts and host to answer their questions.<br>\nUse this API to list Q&A of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n <br>\n\n\n\n",
        "operationId": "listPastWebinarQA",
        "tags": [
          "Webinars"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "type": "string",
            "required": true,
            "description": "The Webinar ID or Webinar UUID. If the webinar ID is passed, it will take the last webinar instance."
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/past_webinars/{webinarId}/files": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "total_records": {
                  "type": "integer",
                  "description": "The total number of files found."
                },
                "in_meeting_files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "file_name": {
                        "type": "string",
                        "description": "Name of the file."
                      },
                      "download_url": {
                        "type": "string",
                        "description": "URL to download the file."
                      },
                      "file_size": {
                        "description": "Size of the file in bytes.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "total_records": 1,
                "in_meeting_files": [
                  {
                    "file_name": "somefile.txt",
                    "download_url": "somefile.txt/randomurl",
                    "file_size": 300
                  }
                ]
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end."
          }
        },
        "summary": "List Past Webinar Files",
        "description": "List files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `webinar:read`, `webinar:read:admin`<br>\n <br>\n\n",
        "operationId": "listPastWebinarFiles",
        "tags": [
          "Webinars"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "webinarId",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "name": "webinarId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/metrics/client/satisfaction": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. ",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Start date for this report in 'yyyy-mm-dd' format.",
                  "format": "date"
                },
                "to": {
                  "type": "string",
                  "description": "End date for this report in 'yyyy-mm-dd' format.",
                  "format": "date"
                },
                "total_records": {
                  "description": "The total number of records available across all pages.",
                  "type": "integer"
                },
                "client_satisfaction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Date of the report.",
                        "format": "date"
                      },
                      "satisfaction_percent": {
                        "type": "integer",
                        "description": "Satisfaction Percentage.\nThe satisfaction percentage is calculated as `(good_count + none_count)` / `total_count`.",
                        "format": "int64"
                      },
                      "good_count": {
                        "description": "The total number of \"thumbs up\" received for this meeting.",
                        "type": "integer"
                      },
                      "not_good_count": {
                        "description": "The total number of \"thumbs down\" received for this meeting.",
                        "type": "integer"
                      },
                      "none_count": {
                        "description": "The total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "from": "2019-08-05",
                "to": "2019-09-05",
                "total_records": 30,
                "client_satisfaction": [
                  {
                    "date": "2019-08-05",
                    "satisfaction_percent": 100,
                    "good_count": 5,
                    "none_count": 0,
                    "not_good_count": 1
                  },
                  {
                    "date": "2019-08-06",
                    "satisfaction_percent": 100,
                    "good_count": 0,
                    "none_count": 0,
                    "not_good_count": 0
                  }
                ]
              }
            }
          }
        },
        "summary": "List Client Meeting Satisfaction ",
        "description": "If the [End of Meeting Feedback Survey](https://support.zoom.us/hc/en-us/articles/115005855266) option is enabled, attendees will be prompted with a survey window where they can tap either the **Thumbs Up** or **Thumbs Down** button that indicates their Zoom meeting experience. With this API, you can get information on the attendees' meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters. The month should fall within the last six months.\n\nTo get information on the survey results with negative experiences (indicated by **Thumbs Down**), use the [Get Zoom Meetings Client Feedback API](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardclientfeedbackdetail).<br>\n**Scopes:** `dashboard:read:admin`<br> ",
        "operationId": "listMeetingSatisfaction",
        "tags": [
          "Dashboards"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "type": "string",
            "format": "date",
            "description": "The start date for the query in “yyyy-mm-dd” format. "
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "description": "The end date for the query in “yyyy-mm-dd” format. ",
            "format": "date"
          }
        ]
      }
    },
    "/phone/devices": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nDevice added successfully.  ",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation failed.**<br>\nPhone manufacturer does not exist.<br>\nPhone model does not exist.<br>\nPhone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.<br>\nThe MAC Address already exists in the system.<br>\nEach user can be assigned up to three desk phones.<br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}\n"
          }
        },
        "summary": "Add a Device",
        "description": "By default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. Additionally, if a desk phone is required, use this API to [add a desk phone and assign it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da) to a user.\n\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "addPhoneDevice",
        "tags": [
          "Phone Devices"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mac_address": {
                  "type": "string",
                  "description": "The MAC address of the desk phone.<br> \nNote: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                  "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$"
                },
                "type": {
                  "type": "string",
                  "description": "Manufacturer (brand) name of the device.",
                  "maxLength": 50
                },
                "model": {
                  "type": "string",
                  "description": "Model name of the device.",
                  "maxLength": 50
                },
                "assigned_to": {
                  "type": "string",
                  "description": "User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API."
                },
                "display_name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Display name of the desk phone."
                }
              },
              "required": [
                "mac_address",
                "display_name"
              ]
            },
            "x-examples": {
              "application/json": {
                "mac_address": "64-16-7f-37-90-92",
                "display_name": "Sita's Phone",
                "type": "Polycom",
                "model": "soundpoint335",
                "assigned_to": "fjdsfgsd@edkfjd.fhjdf"
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`<br>\nDevices listed successfully. ",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call."
                },
                "total_records": {
                  "type": "string",
                  "description": "The total number of records found for the query across all pages."
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Device ID - Unique Identifier of the Device."
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name of the device."
                      },
                      "device_type": {
                        "type": "string",
                        "description": "Includes manufacturer name and the model name."
                      },
                      "mac_address": {
                        "type": "string",
                        "description": "MAC address or serial number of the device."
                      },
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User ID of the user to whom the device has been assigned."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user."
                          },
                          "extension_number": {
                            "description": "Extension number of the Zoom Phone used by the user.",
                            "type": "integer"
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the device. The value is either `online` or `offline`.",
                        "enum": [
                          "online",
                          "offline"
                        ]
                      },
                      "site": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "next_page_token": "proident in o",
                "page_size": 80839828,
                "total_records": "qui sunt esse",
                "devices": [
                  {
                    "id": "1234324",
                    "display_name": "Pooja's Phone",
                    "device_type": "AudioCodes405",
                    "mac_address": "203a07240534",
                    "assignee": {
                      "id": "i242djsgrg",
                      "name": "Pooja",
                      "extension_number": 123
                    },
                    "status": "online",
                    "site": {
                      "id": "sdfdgdg32",
                      "name": "HQ site"
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "List Devices",
        "description": "List all the [desk phone devices](https://support.zoom.us/hc/en-us/articles/360021119092) that are configured with Zoom Phone on an account. To view devices that have not yet been assigned to a user, set the value of the `type` query parameter as `unassigned` and to view devices that have been assigned, set the value as `assigned`.<br><br>\n**Scopes:** `phone:read:admin`\n <br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions<br>\n",
        "operationId": "listPhoneDevices",
        "tags": [
          "Phone Devices"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "State of the device. The value should be either `assigned` to list devices that have been assigned to user(s) or `unassigned` to list devices that have not yet been assigned to any user in the Zoom account.",
            "required": true,
            "enum": [
              "assigned",
              "unassigned"
            ]
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of records returned within a single API call.",
            "type": "integer",
            "default": 30,
            "maximum": 300
          }
        ]
      }
    },
    "/phone/devices/{deviceId}": {
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nDevice updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\nValidation failed. Device does not exist in the system.<br>\nInvalid userId.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}<br>\nThe user extension does not exist, extensionId: {extensionId}.\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` **Too Many Requests**<br>\n**Error Code:** `429`<br>\nEach user can be assigned up to three desk phones."
          }
        },
        "summary": "Update a Device",
        "description": "Update information of a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).<br><br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n\n",
        "operationId": "updateADevice",
        "tags": [
          "Phone Devices"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Display name of the desk phone."
                },
                "mac_address": {
                  "type": "string",
                  "description": "The MAC address of the desk phone.<br> \nNote: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                  "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$"
                },
                "assigned_to": {
                  "type": "string",
                  "description": "User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "display_name": "anim ",
                "mac_address": "E6-12F6-eA6cB3",
                "assigned_to": "adkjfgj211"
              }
            }
          },
          {
            "in": "path",
            "name": "deviceId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Device."
          }
        ]
      },
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nDevice deleted successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Vaidation Failed.**<br>\nDevice does not exist in the system.\nOnly unassigned device can be deleted.\n"
          }
        },
        "summary": "Delete a Device",
        "description": "Remove a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092) from the Zoom Phone System Management.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* Device must not have been assigned to a user.<br>\n**Scopes:** `phone:write:admin`<br> \n\n\n",
        "operationId": "deleteADevice",
        "tags": [
          "Phone Devices"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the device."
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nDevice information retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Device ID - Unique Identifier of the Device."
                },
                "display_name": {
                  "type": "string",
                  "description": "Display name of the device."
                },
                "device_type": {
                  "type": "string",
                  "description": "Includes manufacturer name and the model name."
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC address or serial number of the device."
                },
                "assignee": {
                  "type": "object",
                  "description": "User to whom the device has been assigned.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID of the user to whom the device has been assigned."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the user."
                    },
                    "extension_number": {
                      "description": "Extension number of the Zoom Phone used by the user.",
                      "type": "integer"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "Status of the device. The value is either `online` or `offline`.",
                  "enum": [
                    "online",
                    "offline"
                  ]
                },
                "site": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672)."
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "1234324",
                "display_name": "Pooja's Phone",
                "device_type": "AudioCodes405",
                "mac_address": "203a07240534",
                "assignee": {
                  "id": "i242djsgrg",
                  "name": "Pooja",
                  "extension_number": 123
                },
                "status": "online",
                "site": {
                  "id": "sdfdgdg32",
                  "name": "HQ site"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system."
          }
        },
        "summary": "Get Device Details",
        "description": "Get detailed information about a specific [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).<br><br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "getADevice",
        "tags": [
          "Phone Devices"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the device."
          }
        ]
      }
    },
    "/rooms/{roomId}/location": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation of the Zoom Room changed successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found:{location_id}"
          }
        },
        "summary": "Change a Zoom Room's Location",
        "description": "An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread accress various location. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. Use this API to assign a new location for a Zoom Room. Note that the Zoom Room can be assigned only to the lowest level location available in the hierarchy.\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br> ",
        "operationId": "changeZRLocation",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Zoom Room."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "string",
                  "description": "Location ID of the location where Zoom Room is to be assigned. This can be retrieved from the `id` property in the response of [List Zoom Rooms Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "location_id": "ut12434oris"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "roomId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/rooms/locations/{locationId}/location": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nLocation assigned successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br> Invalid parent location id {parent_location_id}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br> Location not found:{parent_location_id}.\n"
          }
        },
        "summary": "Change the Assigned Parent Location",
        "description": "An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread accross various location. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. The location in the lower level in the hierarchy is considered as a child of the location that is a level above in the hierarchy. Use this API to change the parent location of a child location. <br><br> For instance, if the location hierarchy is structured in a way where there are two campuses (Campus 1, and Campus 2) in a City and Campus 1 consists of a building named Building 1 with a floor where Zoom Rooms are located, and you would like to rearrange the structure so that Building 1 along with its child locations (floor and Zoom Rooms) are relocated directly under Campus 2 instead of Campus 1, you must provide the location ID of Building 1 in the path parameter of this request and the location ID of Campus 2 as the value of `parent_location_id` in the  request body.<br><br>\n**Prerequisite:**<br>\n* Account owner or admin permission\n* Zoom Rooms version 4.0 or higher<br>\n**Scopes:** `room:write:admin`<br><br> /n",
        "operationId": "changeParentLocation",
        "tags": [
          "Rooms Location"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locationId",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "parent_location_id": {
                  "type": "string",
                  "description": "Location ID of the new Parent Location under which you the child location will be positioned. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "parent_location_id": "amesmod123enim"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "locationId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/call_queues": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nCall Queue created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the Call Queue."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Call Queue."
                },
                "extension_number": {
                  "description": "Extension number assigned for the Call Queue.",
                  "type": "integer"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the Call Queue.<br>\n`active`: Call queue is enabled and active.<br>\n`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "SujgNzKq-w",
                "name": "testing123",
                "extension_number": 10201,
                "status": "active"
              }
            }
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed.<br>\nMultiple Site is disabled.<br>\nSite does not exist.<br> {extensionNumber} is out of range<br> Exceeded the maximum number to add members per time<br><br>\n**Error Code:** `400`<br> Invalid short number length.<br> Extension number {extensionNumber} is already used.<br>\n**Error Code:** `412` The maximum number of Call Queue members is up to {maxSize}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\n User not found: {userId}\n"
          }
        },
        "summary": "Create a Call Queue",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to [create a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).<br> You can add phone users or common area phones to call queues.\n\n**Prerequisites:**<br>\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n\n\n",
        "operationId": "createCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "string",
                  "description": "Required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be retrieved from the [List Phone Sites]() API."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Call Queue.",
                  "minLength": 1,
                  "maxLength": 32
                },
                "extension_number": {
                  "description": "Phone extension number for the site.<br>\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number..",
                  "type": "integer"
                },
                "description": {
                  "type": "string",
                  "description": "Description for the Call Queue.",
                  "maxLength": 32
                },
                "members": {
                  "type": "object",
                  "description": "A list of one or more phone users to be included in the call queue. Provide either users or common area phone(s). Provide at least one user in the users object.",
                  "properties": {
                    "users": {
                      "type": "array",
                      "description": "Users object. Provide either the id (userId) field or the email address of the user.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User Id of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.",
                            "format": "email"
                          }
                        }
                      }
                    },
                    "common_area_phone_ids": {
                      "type": "array",
                      "description": "**Optional**<br>\nUnique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). This can be retrieved from the List Common Area Phones API.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "site_id",
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "testing123",
                "site_id": "CESEpjWwT-upVH7kt_ixWA",
                "extension_number": 201,
                "description": "testtest",
                "members": {
                  "users": [
                    {
                      "email": "sdksfbdg@enker.m"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nCall Queues listed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned from a single API call.",
                  "maximum": 100
                },
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "total_records": {
                  "description": "The total number of records found for this query.",
                  "type": "integer"
                },
                "call_queues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the Call Queue."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Call Queue."
                      },
                      "extension_number": {
                        "description": "Extension number assigned to the queue.",
                        "type": "integer"
                      },
                      "phone_numbers": {
                        "type": "array",
                        "description": "Phone number(s) assigned to the call queue.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique Identifier of the Phone number assigned."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "source": {
                              "type": "string",
                              "description": "Source",
                              "enum": [
                                "internal",
                                "external"
                              ]
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.",
                        "enum": [
                          "active",
                          "inactive"
                        ]
                      },
                      "site": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned. "
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "page_size": 1,
                "next_page_token": "nisidfyolore",
                "total_records": 1,
                "call_queues": [
                  {
                    "id": "gdfgd4fg",
                    "name": "My test call queue",
                    "extension_number": 1011,
                    "phone_numbers": [
                      {
                        "id": "01",
                        "number": "875489",
                        "source": "internal"
                      }
                    ],
                    "status": "active",
                    "site": {
                      "id": "vCESddfg_ixWA",
                      "name": "Main Site"
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "List Call Queues",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to list Call queues.<br><br>\n**Prerequisites:**<br>\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:read:admin`<br> \n\n\n",
        "operationId": "listCallQueues",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The number of records returned from a single API call.",
            "default": 30,
            "maximum": 100
          }
        ]
      }
    },
    "/phone/call_queues/{callQueueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nCall Queue details retrieved successfully. ",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the Call Queue."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Call Queue."
                },
                "extension_number": {
                  "type": "integer",
                  "description": "Extension number assigned to the Call Queue."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the Call Queue.",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "site": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."
                    }
                  }
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the number."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number."
                      },
                      "source": {
                        "type": "string",
                        "description": "Source",
                        "enum": [
                          "internal",
                          "external"
                        ]
                      }
                    }
                  }
                },
                "members": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User ID: Unique Identifier of the user."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user."
                          },
                          "level": {
                            "type": "string",
                            "description": "Level of the user. The value can be one of the following:<br>\n`manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>\n`user`: Regular user without the privileges of a manager.",
                            "enum": [
                              "manager",
                              "user"
                            ]
                          }
                        }
                      }
                    },
                    "common_area_phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "jIfhghXFA",
                "name": "Test-Callqueue",
                "extension_number": 10001,
                "members": {
                  "users": [
                    {
                      "id": "z8hfgh8uQ",
                      "name": "Lisa Yankowski",
                      "level": "manager"
                    }
                  ]
                },
                "status": "active",
                "site": {
                  "id": "CcvcvnWA",
                  "name": "Main Site"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\n The group does not exist, groupId:{callQueueId}."
          }
        },
        "summary": "Get Call Queue Details",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to get information on a specific Call Queue.<br><br> \n**Prerequisites:**<br>\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:read:admin`<br> \n\n\n\n\n",
        "operationId": "getACallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API]()."
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue details updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{groupId}<br>\nTimezone not found in the system.<br><br>\n**Error Code:** `400`<br>\nUnable to update this call queue as it is used for internal safety response team."
          }
        },
        "summary": "Update Call Queue Details",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to update information of a specific Call Queue.<br> \n**Prerequisites:**<br>\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "updateCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Call Queue.",
                  "maxLength": 32
                },
                "description": {
                  "type": "string",
                  "description": "Description for the Call Queue.",
                  "maxLength": 32
                },
                "site_id": {
                  "type": "string",
                  "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned."
                },
                "extension_number": {
                  "description": "Phone extension number for the site.<br>\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.",
                  "type": "integer"
                },
                "timezone": {
                  "type": "string",
                  "description": "[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the Call Queue. Allowed values:<br>\n`active`<br>\n`inactive`",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "Sales",
                "description": "Sales Call Queue",
                "site_id": "gdfgfdg11m",
                "extension_number": 72860194,
                "timezone": "America/New_York",
                "status": "active"
              }
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue deleted successfully. ",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nThe group does not exist, groupId:{callQueueId}."
          }
        },
        "summary": "Delete a Call Queue",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to delete a Call Queue.<br> \n**Prerequisites:**<br>\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n\n\n",
        "operationId": "deleteACallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the call queue."
          }
        ]
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers": {
      "post": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Assign Numbers to a Call Queue",
        "description": "After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it, allowing callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br><br>\n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "assignPhoneToCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone_numbers": {
                  "type": "array",
                  "description": "Provide either the `id` or the `number` field. Only a max of 5 numbers can be assigned to a call queue at a time.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the phone number."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "phone_numbers": [
                  {
                    "id": "lgdfgrdg",
                    "number": "12234556"
                  }
                ]
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}"
          }
        },
        "summary": "Unassign all Phone Numbers",
        "description": "Use this API to unbind all phone numbers that are assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues) After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br> If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. <br>\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license <br> **Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unassignAPhoneNumCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API."
          }
        ]
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nPhone Number unassigned successfuly.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation failed. The group does not exist, groupId:{callQueueId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nPhone number not belong to call queue."
          }
        },
        "summary": "Unassign a Phone Number",
        "description": "After assigning a phone number, you can unbind it if you don't want it to be assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues). Use this API to unbind a phone number from a Call Queue. After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br><br>\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license <br> **Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unAssignPhoneNumCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API."
          },
          {
            "in": "path",
            "name": "phoneNumberId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Phone Number. "
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "phoneNumberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/call_queues/{callQueueId}/members": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nMembers added successfully.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.<br>\nExceeded the maximum number to add members per time.<br><br>\n**Error Code:** `412`<br>\nThe maximum number of Call Queue members is up to {maxSize}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}."
          }
        },
        "summary": "Add Members to a Call Queue",
        "description": "Add phone users and/or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) as members to a specific Call Queue.<br><br>\n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "addMembersToCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "object",
                  "description": "A maximum of 10 members can be added at a time.",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "User ID: Unique Identifier of the user."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the user.",
                            "format": "email"
                          }
                        }
                      }
                    },
                    "common_area_phone_ids": {
                      "type": "array",
                      "description": "Array of one or more Common Area Phone Ids of the Common Area Phone(s) that you would like to add to the Call Queue.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": "{\n    \"members\": { \n        \"users\": [ \n            {\n                \"id\": \"dkjfdjghdfg\",\n                \"email\": \"ge9ru@fghdf.fdg\"\n            }\n        ],\n        \"common_area_phone_ids\": \"[\"1234455\", \"13232434\"]\"\n    }\n}"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}."
          }
        },
        "summary": "Unassign all Members",
        "description": "Use this API to remove all members from a Call Queue who were previously assigned to that Call Queue. The members could be phone users or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).\n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unassignAllMembers",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/phone/call_queues/{callQueueId}/members/{memberId}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n**Error Code:** `400`<br>Unable to delete manager<br>"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\nUnable to find group member"
          }
        },
        "summary": "Unassign a Member",
        "description": "Use this API to remove a member from a Call Queue who was previously added to that Call Queue. The member could be a phone user or a [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). A member who is a Call Queue Manager cannot be unassigned from the Call Queue using this API. \n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unassignMemberFromCallQueue",
        "tags": [
          "Phone Call Queues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue from which the member needs to be unassigned."
          },
          {
            "in": "path",
            "name": "memberId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the member who needs to be unassigned."
          }
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "memberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/call_queues/{callQueueId}/manager": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nCall queue manager changed successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}"
          }
        },
        "summary": "Change Call Queue Manager",
        "description": "A call queue manager has the privileges to maanage the call queue's voicemail inbox and recordings, change all call queue settings and call queue policy settings.<br><br> Use this API to to set another phone user as the [call queue manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c).\n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Account owner or admin permissions\n* Zoom Phone license<br>\n**Scopes:** `phone:write:admin`<br> \n\n\n",
        "operationId": "changeCallQueueManager",
        "tags": [
          "Phone Call Queues"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Call Queue."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "member_id": {
                  "type": "string",
                  "description": "Unique Identifier (userId) or email address of the user who will be the new call queue manager."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "member_id": "dfjdsf@sdjdf.dfhjdf"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "callQueueId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/numbers/{numberId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPhone number details retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the Phone Number."
                },
                "number": {
                  "type": "string",
                  "description": "Phone number in E164 format."
                },
                "source": {
                  "type": "string",
                  "enum": [
                    "internal",
                    "external"
                  ],
                  "description": "Source of phone number."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the number.",
                  "enum": [
                    "pending",
                    "available"
                  ]
                },
                "number_type": {
                  "type": "string",
                  "description": "The type of number. Values can be one of the following:<br>\n`toll`, `tollfree`",
                  "enum": [
                    "toll",
                    "tollfree"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "Location (city, state and country) where the Phone number is assigned."
                },
                "assignee": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier of the user to whom the number has been assigned."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the user to whom the number has been assigned."
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "Extension number of the Phone."
                    },
                    "type": {
                      "type": "string",
                      "description": "Indicates who the phone number belongs to.<br>\n`user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>\n`autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>",
                      "enum": [
                        "user",
                        "callQueue",
                        "autoReceptionist",
                        "commonAreaPhone"
                      ]
                    }
                  }
                },
                "site": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the site where the phone number is assigned."
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "Hfdgdfgdfg1ew",
                "number": "+140000007",
                "source": "internal",
                "status": "available",
                "location": "Milpitas,California,United States",
                "assignee": {
                  "name": "Main Auto Receptionist",
                  "extension_number": 10000,
                  "type": "autoReceptionist"
                },
                "site": {
                  "id": "CEfdfdfgA",
                  "name": "Main Site"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist, phonenumberId:{phoneNumberId}"
          }
        },
        "summary": "Get Phone Number Details",
        "description": "A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to get details on a specific Phone number in a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan with Zoom phone license<br>\n**Scope:** `phone:read:admin`<br> \n\n",
        "operationId": "getPhoneNumberDetails",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "numberId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API."
          }
        ]
      },
      "parameters": [
        {
          "name": "numberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/company_number": {
      "put": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nMain company number updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br><br>\nTarget phone number can not be set as main company number.<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`\nphoneNumber does not exist, phonenumberId:{phonenumberId}."
          }
        },
        "summary": "Change Main Company Number",
        "description": "The [main company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users in your account as their caller ID while making calls.<br><br> Use this API to [change the main company number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72) of an account.<br><br>\n**Prerequisites:**<br>\n* Pro or higher account plan.\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "changeMainCompanyNumber",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": "Provide either the unique identifier of the phone number (id) or the phone number itself in e164 format (e.g: +199955500123)."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "phone_number": "+1999555000123"
              }
            }
          }
        ]
      }
    },
    "/phone/calling_plans": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nCalling plans listed successfully.\n",
            "schema": {
              "type": "object",
              "properties": {
                "calling_plans": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the plan."
                      },
                      "type": {
                        "type": "integer",
                        "description": "Plan type. Refer to the Plan Number section [here](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans)."
                      },
                      "subscribed": {
                        "type": "integer",
                        "description": "Total number of plan subscriptions bought."
                      },
                      "assigned": {
                        "type": "integer",
                        "description": "Total number of plan used."
                      },
                      "available": {
                        "type": "integer",
                        "description": "Remaining number of calling plans that can be assigned."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "calling_plans": [
                  {
                    "name": "US/Canada metered calling plan",
                    "type": 100,
                    "subscribed": 10,
                    "assigned": 1,
                    "available": 9
                  },
                  {
                    "name": "Australia/New Zealand metered calling plan",
                    "type": 101,
                    "subscribed": 4,
                    "assigned": 2,
                    "available": 2
                  }
                ]
              }
            }
          }
        },
        "summary": "List Calling Plans",
        "description": "List all Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that are enabled for a Zoom account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom phone license. <br>\n**Scope:** `phone:read:admin`<br> ",
        "operationId": "listCallingPlans",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/users": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nPhone users retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned from a single API call.",
                  "maximum": 100,
                  "default": 30
                },
                "total_records": {
                  "description": "The total records found for this query.",
                  "type": "integer"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the user (userId)."
                      },
                      "phone_user_id": {
                        "type": "string",
                        "description": "Zoom Phone Identifier of the user."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the user."
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the user."
                      },
                      "site": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique Identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the site."
                          }
                        }
                      },
                      "extension_number": {
                        "description": "Extension number assigned to the user's Zoom phone number.",
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "description": "Displays the status of the user's Zoom Phone license. The value can be either of the following:<br>\n`activate`: Active Zoom phone user.<br>\n`deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "next_page_token": "",
                "page_size": 30,
                "total_records": 1,
                "users": [
                  {
                    "id": "z8ghgfh8uQ",
                    "phone_user_id": "EMhghghg5w",
                    "email": "sghhgghf@ghghmail.com",
                    "name": "Shri Shri",
                    "extension_number": 10000,
                    "status": "activate",
                    "site": {
                      "id": "CESEpjWwT-upVH7kt_ixWA",
                      "name": "Main Site"
                    }
                  }
                ]
              }
            }
          }
        },
        "summary": "List Phone Users",
        "description": "List all the users on an account who have been assigned Zoom Phone licenses.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan with Zoom phone license<br>\n**Scope:** `phone:read:admin`<br> ",
        "operationId": "listPhoneUsers",
        "tags": [
          "Phone"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30,
            "description": "The number of records returned from a single API call.",
            "maximum": 100
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "site_id",
            "type": "string",
            "description": "Unique Identifier of the site. This can be retrieved from List Phone Sites API."
          }
        ]
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}": {
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`<br> **No Content**<br>\nAuto Receptionist details updated sucessfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nExtension Number must be {min} to {max} digits<br>\nValidation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}<br><br>\n**Error Code:** `400`<br>\nInvalid short number length.<br>\nInvalid full extension number length.<br><br>\n**Error Code:** `10001`<br>\nNumber {extensionNumber} is a reserved extension number.<br>\nExtension number {extensionNumber} is already used.\n\n"
          }
        },
        "summary": "Update Auto Receptionist Details ",
        "description": "An auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area phone, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.<br>\nUse this API to [change information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as display name and extension number assigned to the main auto receptionist.<br><br>\n**Prerequisites:**<br>\n* Pro or higher account with Zoom Phone license.<br>\n**Scopes:** `phone:write:admin` <br> \n\n",
        "operationId": "updateAutoReceptionist",
        "tags": [
          "Phone Auto Receptionists"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display name of the auto receptionist.",
                  "maxLength": 32
                },
                "extension_number": {
                  "description": "Extension number to be assigned to the auto receptionist. If site code is enabled, provide the short extension number instead.",
                  "type": "integer"
                }
              }
            },
            "x-examples": {
              "application/json": "{\n  \"name\": \"dfdsff\",\n  \"extension_number\": 08\n}"
            }
          },
          {
            "in": "path",
            "name": "autoReceptionistId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)."
          }
        ]
      },
      "parameters": [
        {
          "name": "autoReceptionistId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers": {
      "post": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers assigned successfully.",
            "schema": {}
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point.<br>\nPhone number does not exist, phonenumberId:{phonenumberId}<br>\nphoneNumber is used, phonenumberId:{phonenumberId}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}."
          }
        },
        "summary": "Assign Phone Numbers",
        "description": "Assign available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with `type` query parameter set to \"unassigned\".\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "tags": [
          "Phone Auto Receptionists"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone_numbers": {
                  "type": "array",
                  "description": "Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone number in the `number` field.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the Phone number."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number in e164 format."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": "{\n  \"phone_numbers\": [\n    {\n      \"id\": \"cyjoruyk\",\n    },\n    {\n      \"number\": \"+11000110011\"\n    }\n  ]\n}"
            }
          },
          {
            "in": "path",
            "name": "autoReceptionistId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites)."
          }
        ],
        "operationId": "assignPhoneNumbersAutoReceptionist"
      },
      "parameters": [
        {
          "name": "autoReceptionistId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
            "schema": {}
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}"
          }
        },
        "summary": "Unassign all Phone Numbers",
        "description": "Unassign all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unassignAllPhoneNumsAutoReceptionist",
        "tags": [
          "Phone Auto Receptionists"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/phone/common_area_phones": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\n\nCommon area phone added successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the common area phone."
                },
                "display_name": {
                  "type": "string",
                  "description": "Display name of the common area phone."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "comfgfd45um",
                "display_name": "Common Area Phone - lobby"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation failed.<br>\n* Phone manufacturer does not exist.\n* Phone model does not exist.\n* Phone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409`<br>\n**Error Code:** `409`<br>\nThe MAC Address already exists in the system."
          }
        },
        "summary": "Add a Common Area Phone",
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to [add a common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones#h_2d0da347-c35a-4993-9771-e21aaa568deb).<br><br>\n**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>\n**Scope:** `phone:write:admin`<br> \n\n\n ",
        "operationId": "addCommonAreaPhone",
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "string",
                  "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from List Sites API."
                },
                "display_name": {
                  "type": "string",
                  "description": "Display name of the Common area phone."
                },
                "description": {
                  "type": "string",
                  "description": "Description for the common area phone."
                },
                "extension_number": {
                  "type": "integer",
                  "description": "Extension number assigned to the common area phone. If site code is enabled, provide the short extension number instead."
                },
                "mac_address": {
                  "type": "string",
                  "description": "Mac Address (serial number) of the common area desk phone. These examples show the formats supported: `64-16-7f-37-90-92` or `64167f379092`"
                },
                "type": {
                  "type": "string",
                  "description": "Phone device manufacturer name. Refer to the \"Manufacturer Name\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.",
                  "minLength": 1,
                  "maxLength": 50
                },
                "model": {
                  "type": "string",
                  "description": "Device Model name. Refer to the \"Model Name\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.",
                  "minLength": 1,
                  "maxLength": 50
                },
                "time_zone": {
                  "type": "string",
                  "description": "[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area phone."
                }
              },
              "required": [
                "display_name",
                "extension_number",
                "mac_address",
                "type"
              ]
            },
            "x-examples": {
              "application/json": "{\n  \"extension_number\": 50978119,\n  \"mac_address\": \"64-16-7f-37-90-92\",\n  \"type\": \"Cisco\",\n  \"site_id\": \"occaecat\",\n  \"display_name\": \"nulla cillum nisi \",\n  \"description\": \"proident laborum\",\n  \"model\": \"cp8861\",\n  \"time_zone\": \"Pacific/Midway\t\"\n}"
            }
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nList of Common Area Phones retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "page_size": {
                  "type": "integer",
                  "description": "Total number of records returned from a single API call."
                },
                "total_records": {
                  "type": "integer",
                  "description": "Total number of records found for this query.",
                  "maximum": 100,
                  "default": 30
                },
                "common_area_phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the common area phone."
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name of the common area phone."
                      },
                      "device_type": {
                        "type": "string",
                        "description": "Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice)."
                      },
                      "mac_address": {
                        "type": "string",
                        "description": " Mac address or serial number."
                      },
                      "calling_plans": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "[Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans)."
                            },
                            "name": {
                              "type": "string",
                              "description": "Plan name."
                            }
                          }
                        }
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique Identifier of the Phone number."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "source": {
                              "type": "string",
                              "description": "Phone number source. The value can be either `internal` or `external`.",
                              "enum": [
                                "internal",
                                "external"
                              ]
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the common area phone. It can be either `online` or `offline`."
                      },
                      "site": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the site."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "next_page_token": "string",
                "page_size": "integer",
                "total_records": "integer",
                "common_area_phones": [
                  {
                    "id": "string",
                    "display_name": "string",
                    "device_type": "string",
                    "mac_address": "string",
                    "calling_plans": [
                      {
                        "type": "string",
                        "name": "string"
                      }
                    ],
                    "phone_numbers": [
                      {
                        "id": "string",
                        "number": "string",
                        "source": "string"
                      }
                    ],
                    "status": "string",
                    "site": {
                      "id": "string",
                      "name": "string"
                    }
                  }
                ]
              }
            }
          }
        },
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to [list all common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br><br>\n**Scope:** `phone:read:admin`<br> \n ",
        "summary": "List Common Area Phones",
        "operationId": "listCommonAreaPhones",
        "tags": [
          "Common Area Phones"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "default": 30,
            "description": "The total number of records returned from a single API call.",
            "maximum": 100
          },
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          }
        ]
      }
    },
    "/phone/common_area_phone/{commonAreaPhoneId}": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nCommon Area Phone details returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Identifier of the common area phone."
                },
                "name": {
                  "type": "string",
                  "description": "Display name of the common area phone."
                },
                "device_type": {
                  "type": "string",
                  "description": "Type of device (manufacturer name + model name)."
                },
                "mac_address": {
                  "type": "string",
                  "description": " Mac address or serial number."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the common area phone. It can be either `online` or `offline`."
                },
                "site": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the site."
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "  {\n    \t\t\t\t\"id\": \"d6dfgdfgfdgiglw\",\n            \"display_name\": \"testcommonareaphone\",\n            \"device_type\": \"Cisco cp7821\",\n            \"mac_address\": \"105f11123456\",\n            \"status\": \"offline\",\n            \"site\": {\n                \"id\": \"CEdfdfgdgixWA\",\n                \"name\": \"Main Site\"\n            }"
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system."
          }
        },
        "summary": "Get Common Area Phone Details",
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to get details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>\n**Scopes:** `phone:read:admin`<br> \n\n",
        "operationId": "getACommonAreaPhone",
        "tags": [
          "Common Area Phones"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commonAreaPhoneId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Common Area Phone. This can be retrieved from List Common Area Phones API."
          }
        ]
      },
      "parameters": [
        {
          "name": "commonAreaPhoneId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone information updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Device does not exist in the system."
          }
        },
        "summary": "Update Common Area Phone",
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to update details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "updateCommonAreaPhone",
        "tags": [
          "Common Area Phones"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "string",
                  "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned."
                },
                "display_name": {
                  "type": "string",
                  "description": "Display name of the common area phone."
                },
                "extension_number": {
                  "description": "Extension number of the phone. If site code is enabled, provide short extension number instead.",
                  "type": "integer"
                },
                "mac_address": {
                  "type": "string",
                  "description": " Mac address or serial number of the device. Examples of supported format: \"64-16-7f-37-90-92\" or \"64167f379092\"."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "site_id": "Lodhhoyrn",
                "display_name": "Kitchen Phone",
                "extension_number": 12345,
                "mac_address": "641123f9092"
              }
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone deleted successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed<br>\nDevice does not exist in the system."
          }
        },
        "summary": "Delete a Common Area Phone",
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to remove the [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) from Zoom Phone System in an account.<br><br>**Prerequisites:**<br>\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "deleteCommonAreaPhone",
        "tags": [
          "Common Area Phones"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commonAreaPhoneId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the common area phone."
          }
        ]
      }
    },
    "/phone/blocked_list": {
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**<br>\nNumber added to the blocked list successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the blocked list."
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "dhfhfhnim"
              }
            }
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists."
          }
        },
        "summary": "Create a Blocked List",
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to create a blocked list and add a number to that blocked list.<br>\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license<br>\n**Scope:** `phone:write:admin`<br> \n\n\n\n",
        "operationId": "addAnumberToBlockedList",
        "tags": [
          "Phone Blocked List"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "match_type": {
                  "type": "string",
                  "description": "Specify the match type for the blocked list. The values can be one of the following:<br><br>\n`phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>\n`prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.",
                  "enum": [
                    "phoneNumber",
                    "prefix"
                  ]
                },
                "phone_number": {
                  "type": "string",
                  "description": "The phone number to be blocked if you passed \"phoneNumber\" as the value for the `match_type` field. If you passed \"prefix\" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. ",
                  "maxLength": 50
                },
                "block_type": {
                  "type": "string",
                  "enum": [
                    "inbound",
                    "outbound"
                  ],
                  "description": "State whether you want the block type to be inbound or outbound.<br>\n`inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix."
                },
                "status": {
                  "type": "string",
                  "description": "Enable or disable the blocking. One of the following values are allowed:<br>\n`active`: Keep the blocking active.<br>\n`inactive`: Disable the blocking.",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "comment": {
                  "type": "string",
                  "description": "Provide a comment to help you identify the blocked number or prefix.",
                  "maxLength": 255
                }
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "next_page_token": {
                  "type": "string",
                  "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The total number of records returned from a single API call.",
                  "maximum": 100,
                  "default": 30
                },
                "total_records": {
                  "description": "The total number of records found for this query.",
                  "type": "integer"
                },
                "blocked_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the blocked list."
                      },
                      "match_type": {
                        "type": "string",
                        "description": "Indicates the match type for the blocked list. The values can be one of the following:<br>\n`phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>\n`prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.",
                        "enum": [
                          "phoneNumber",
                          "prefix"
                        ]
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "The phone number to be blocked if you passed \"phoneNumber\" as the value for the `match_type` field. If you passed \"prefix\" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. ",
                        "maxLength": 50
                      },
                      "block_type": {
                        "type": "string",
                        "enum": [
                          "inbound",
                          "outbound"
                        ],
                        "description": "Block type.<br>\n`inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>\n`outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix."
                      },
                      "status": {
                        "type": "string",
                        "description": "Indicates whether the blocking is active or inactive. <br>\n`active`: The blocked list is active.<br>\n`inactive`: The blocked list is inactive.",
                        "enum": [
                          "active",
                          "inactive"
                        ]
                      },
                      "comment": {
                        "type": "string",
                        "description": "Provide a comment to help you identify the blocked number or prefix.",
                        "maxLength": 255
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "next_page_token": "",
                "page_size": 30,
                "total_records": 2,
                "blocked_list": [
                  {
                    "id": "7buyurtKc0Zw",
                    "match_type": "prefix",
                    "phone_number": "1777",
                    "block_type": "inbound",
                    "comment": "Blocked numbers starting with 777",
                    "status": "active"
                  },
                  {
                    "id": "cYDtrtyrgyQw",
                    "match_type": "phoneNumber",
                    "phone_number": "600040404",
                    "block_type": "inbound",
                    "comment": "Blocked an unknown caller",
                    "status": "active"
                  }
                ]
              }
            }
          }
        },
        "summary": "List Blocked Lists",
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to list all the blocked lists in an acccount.<br>\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license<br>\n**Scope:** `phone:read:admin`<br> \n\n\n\n",
        "operationId": "listBlockedList",
        "tags": [
          "Phone Blocked List"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "next_page_token",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The total number of records returned from a single API call.",
            "maximum": 100,
            "default": 30
          }
        ]
      }
    },
    "/phone/blocked_list/{blockedListId}": {
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list updated successfully.\n",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\nBlocked number (Id: {blockedListId}) does not exist.\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists."
          }
        },
        "summary": "Update a Blocked List",
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to update information on the blocked list.<br>\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license<br>\n**Scope:** `phone:write:admin`<br> \n\n\n\n\n",
        "operationId": "updateBlockedList",
        "tags": [
          "Phone Blocked List"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blockedListId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier for the blocked list."
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "match_type": {
                  "type": "string",
                  "description": "Specify the match type for the blocked list. The values can be one of the following:<br><br>\n`phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>\n`prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.",
                  "enum": [
                    "phoneNumber",
                    "prefix"
                  ]
                },
                "phone_number": {
                  "type": "string",
                  "description": "The phone number to be blocked if you passed \"phoneNumber\" as the value for the `match_type` field. If you passed \"prefix\" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. ",
                  "maxLength": 50
                },
                "block_type": {
                  "type": "string",
                  "enum": [
                    "inbound",
                    "outbound"
                  ],
                  "description": "State whether you want the block type to be inbound or outbound.<br>\n`inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix."
                },
                "status": {
                  "type": "string",
                  "description": "Enable or disable the blocking. One of the following values are allowed:<br>\n`active`: Keep the blocking active.<br>\n`inactive`: Disable the blocking.",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "comment": {
                  "type": "string",
                  "description": "Provide a comment to help you identify the blocked number or prefix.",
                  "maxLength": 255
                }
              }
            },
            "x-examples": {
              "application/json": {
                "match_type": "phoneNumber",
                "phone_number": "16460000000",
                "block_type": "inbound",
                "status": "active",
                "comment": "Blocking a spam caller"
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "blockedListId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list deleted successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. Blocked number (Id: {blockedListId}) does not exist."
          }
        },
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers).\n<br>Use this API to delete a blocked list and therefore removing the associated number from the blocked list. The number will be unblocked after the deletion.<br>\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license<br>\n**Scope:** `phone:write:admin`<br> \n\n\n\n\n\n",
        "summary": "Delete a Blocked List",
        "operationId": "deleteABlockedList",
        "tags": [
          "Phone Blocked List"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blockedListId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the blocked list. This can be retrieved from the List Blocked List API."
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the blocked list."
                },
                "match_type": {
                  "type": "string",
                  "description": "Indicates the match type for the blocked list. The values can be one of the following:<br>\n`phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>\n`prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.",
                  "enum": [
                    "phoneNumber",
                    "prefix"
                  ]
                },
                "phone_number": {
                  "type": "string",
                  "description": "The phone number or the prefix number that is blocked based on the `match_type`.",
                  "maxLength": 50
                },
                "block_type": {
                  "type": "string",
                  "enum": [
                    "inbound",
                    "outbound"
                  ],
                  "description": "Block type.<br>\n`inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>\n`outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix."
                },
                "status": {
                  "type": "string",
                  "description": "Indicates whether the blocking is active or inactive. <br>\n`active`: The blocked list is active.<br>\n`inactive`: The blocked list is inactive.",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "comment": {
                  "type": "string",
                  "description": "Provide a comment to help you identify the blocked number or prefix.",
                  "maxLength": 255
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "7bR_Ix4KSJS_heuPPKc0Zw",
                "match_type": "prefix",
                "phone_number": "0001",
                "block_type": "inbound",
                "comment": "Blocked all numbers starting with 0001",
                "status": "active"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nBlocked number (Id: {blockedListId}) does not exist."
          }
        },
        "summary": "Get Blocked List Details",
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to get information about a specific blocked list.<br>\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license<br>\n**Scope:** `phone:read:admin`<br> \n\n\n\n\n\n",
        "operationId": "getABlockedList",
        "tags": [
          "Phone Blocked List"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "blockedListId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the blocked list."
          }
        ]
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nPhone number unassigned successfully.",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not belong to auto receptionist."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Bad Request**<br>\n**Error Code:** `404`<br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}."
          }
        },
        "summary": "Unassign a Phone Number",
        "description": "Unassign a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions<br>\n**Scopes:** `phone:write:admin`<br> \n\n",
        "operationId": "unassignAPhoneNumAutoReceptionist",
        "tags": [
          "Phone Auto Receptionists"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "autoReceptionistId",
            "type": "string",
            "required": true,
            "description": "Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API."
          },
          {
            "in": "path",
            "name": "phoneNumberId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123)."
          }
        ]
      },
      "parameters": [
        {
          "name": "autoReceptionistId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "phoneNumberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/chat/channels/{channelId}/members/{memberId}": {
      "delete": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nMember removed.\n\n\n",
            "schema": {}
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nNo permission to remove channel member.<br><br>\n**Error Code:** `5301`<br>\nUnable to remove channel member.\n\n"
          }
        },
        "summary": "Remove a Member",
        "description": " A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to remove a member from a chat channel.<br><br>\n **Scopes:** `chat_channel:write`<br>\n \n \n <p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b>This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n",
        "operationId": "removeAChannelMember",
        "tags": [
          "Chat Channels"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "type": "string",
            "required": true,
            "description": "Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels)."
          },
          {
            "in": "path",
            "name": "memberId",
            "type": "string",
            "required": true,
            "description": "Email address of the member whom you would like to be remove from the channel."
          }
        ]
      },
      "parameters": [
        {
          "name": "channelId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "memberId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/report/billing": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBilling report returned.",
            "schema": {
              "type": "object",
              "properties": {
                "billing_reports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique Identifier of the report. Use this ID to retrieve billing invoice via the \"Get Billing Invoices API\". \n\nYou can also use this ID to export a CSV file of the billing report from this URL: `https://zoom.us/account/report/billing/export?id={id}`."
                      },
                      "start_date": {
                        "type": "string",
                        "description": "Start date of the billing period.",
                        "format": "date"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "End date of the billing period.",
                        "format": "date"
                      },
                      "total_amount": {
                        "type": "string",
                        "description": "Total billing amount for this billing period."
                      },
                      "tax_amount": {
                        "type": "string",
                        "description": "Total tax amount for this billing period."
                      },
                      "type": {
                        "type": "integer",
                        "description": "Type of the billing report. The value should be either of the following:<br>\n`0` - Detailed Billing Reports\n`1` - Custom Billing Reports",
                        "enum": [
                          0,
                          1
                        ]
                      }
                    }
                  }
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the billed amount."
                }
              }
            },
            "examples": {
              "application/json": {
                "billing_reports": [
                  {
                    "id": "indfhgfhfho",
                    "start_date": "2020-01-01",
                    "end_date": "2020-01-31",
                    "total_amount": "1500",
                    "tax_amount": "25",
                    "type": 0
                  },
                  {
                    "id": "dfhjkdgsds",
                    "start_date": "2019-12-24",
                    "end_date": "2020-01-23",
                    "total_amount": "2000",
                    "tax_amount": "38",
                    "type": 1
                  }
                ],
                "currency": "USD"
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br> No permission.\n\n"
          }
        },
        "summary": "Get Billing Reports",
        "description": "Get billing reports of a Zoom account.\n\n**Prerequisites:**<br>\n* Pro or a higher account with Billing Report option enabled.\n\n**Scopes:** `report:read:admin`, `report:master`\n",
        "operationId": "getBillingReport",
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth": []
          }
        ]
      }
    },
    "/report/billing/invoices": {
      "get": {
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**<br>\nBilling Invoice reports returned.",
            "schema": {
              "type": "object",
              "properties": {
                "invoices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "invoice_number": {
                        "type": "string",
                        "description": "Invoice number "
                      },
                      "invoice_charge_name": {
                        "type": "string",
                        "description": "Name of the invoice."
                      },
                      "quantity": {
                        "description": "Number of licenses bought.",
                        "type": "integer"
                      },
                      "total_amount": {
                        "type": "string",
                        "description": "Total billed amount in the invoice."
                      },
                      "tax_amount": {
                        "type": "string",
                        "description": "Tax amount in the invoice."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the invoice period."
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "End date of the invoice period."
                      }
                    }
                  }
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the billed amount in the invoice."
                }
              }
            },
            "examples": {
              "application/json": {
                "invoices": [
                  {
                    "invoice_number": "1234665",
                    "invoice_charge_name": "Audio Conferencing Options",
                    "quantity": 5,
                    "total_amount": "150000",
                    "tax_amount": "1000",
                    "start_date": "2019-12-12",
                    "end_date": "2020-01-12"
                  }
                ],
                "currency": "USD"
              }
            }
          }
        },
        "summary": "Get Billing Invoice Reports",
        "description": "Get billing invoices reports for a specific billing period. Provide the `billing_id` of the billing period for which you would like to retrieve the invoices for. This ID can be retrieved from **Get Billing Reports** API. \n\n**Prerequisites:**<br>\n* Pro or a higher account with **Billing Report** option enabled.\n\n**Scopes:** `report:read:admin`, `report:master`\n\n",
        "operationId": "getBillingInvoicesReports",
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "OAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "billing_id",
            "type": "string",
            "description": "Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n"
          }
        ]
      }
    }
  },
  "parameters": {
    "AccountId": {
      "in": "path",
      "name": "accountId",
      "description": "The account ID.",
      "type": "string",
      "required": true
    },
    "FromDate": {
      "in": "query",
      "name": "from",
      "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
      "type": "string",
      "format": "date",
      "required": true
    },
    "GroupId": {
      "in": "path",
      "name": "groupId",
      "description": "The group ID.<br>\nCan be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).",
      "type": "string",
      "required": true
    },
    "DeviceId": {
      "in": "path",
      "name": "deviceId",
      "description": "The device ID.",
      "type": "string",
      "required": true
    },
    "LoginType": {
      "in": "query",
      "name": "login_type",
      "description": "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
      "type": "string",
      "enum": [
        "0",
        "1",
        "99",
        "100",
        "101"
      ],
      "x-enum-descriptions": [
        "Facebook",
        "Google",
        "API",
        "Zoom",
        "SSO"
      ]
    },
    "Mc": {
      "in": "query",
      "name": "mc",
      "description": "Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.",
      "type": "string",
      "default": "false"
    },
    "Trash": {
      "in": "query",
      "name": "trash",
      "description": "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
      "type": "boolean",
      "default": false
    },
    "MeetingId": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID.",
      "type": "integer",
      "required": true
    },
    "MeetingIdNumber": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or UUID.",
      "type": "string",
      "required": true
    },
    "RecordingId": {
      "in": "path",
      "name": "recordingId",
      "description": "The recording ID.",
      "type": "string",
      "required": true
    },
    "RecordingDeleteAction": {
      "in": "query",
      "name": "action",
      "description": "The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.",
      "type": "string",
      "default": "trash",
      "enum": [
        "trash",
        "delete"
      ],
      "x-enum-descriptions": [
        "move recording to trash",
        "delete recording permanently"
      ]
    },
    "MeetingId4Metrics": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or meeting UUID. If given the meeting ID it will take the last meeting instance.",
      "type": "string",
      "required": true
    },
    "MeetingUUID": {
      "in": "path",
      "name": "meetingUUID",
      "description": "The meeting UUID. Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.",
      "type": "string",
      "required": true
    },
    "MeetingId4Recording": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request. ",
      "type": "string",
      "required": true
    },
    "MeetingType": {
      "in": "query",
      "name": "type",
      "description": "The meeting types: <br>`scheduled` - All the scheduled meetings.<br>`live` - All the live meetings.<br>`upcoming` - All the upcoming meetings.",
      "type": "string",
      "default": "live",
      "enum": [
        "scheduled",
        "live",
        "upcoming"
      ],
      "x-enum-descriptions": [
        "all the scheduled meetings",
        "all the live meetings",
        "all the upcoming meetings"
      ]
    },
    "MeetingTypePast": {
      "in": "query",
      "name": "type",
      "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. <br>`live` - Live meetings.",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "pastOne",
        "live"
      ],
      "x-enum-descriptions": [
        "past meetings",
        "past one user meetings",
        "live meetings"
      ]
    },
    "MeetingTypePast2": {
      "in": "query",
      "name": "type",
      "description": "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "pastOne",
        "live"
      ],
      "x-enum-descriptions": [
        "past meeting",
        "single past user meetings",
        "live meeting"
      ]
    },
    "MeetingTypePast3": {
      "in": "query",
      "name": "type",
      "description": "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "pastOne",
        "live"
      ],
      "x-enum-descriptions": [
        "past meeting",
        "past one user meeting",
        "live meeting"
      ]
    },
    "MemberId": {
      "in": "path",
      "name": "memberId",
      "description": "The member ID.",
      "type": "string",
      "required": true
    },
    "NextPageToken": {
      "in": "query",
      "name": "next_page_token",
      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
      "type": "string"
    },
    "OccurrenceId": {
      "in": "query",
      "name": "occurrence_id",
      "description": "The meeting occurrence ID.",
      "type": "string"
    },
    "PageNumber": {
      "in": "query",
      "name": "page_number",
      "description": "The current page number of returned records.",
      "type": "integer",
      "default": 1
    },
    "PageSize": {
      "in": "query",
      "name": "page_size",
      "description": "The number of records returned within a single API call.",
      "type": "integer",
      "default": 30,
      "maximum": 300
    },
    "PageSize4Qos": {
      "in": "query",
      "name": "page_size",
      "description": "The number of items returned per page.",
      "type": "integer",
      "default": 1,
      "maximum": 10
    },
    "PageToken": {
      "in": "query",
      "name": "next_page_token",
      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
      "type": "string"
    },
    "ParticipantId": {
      "in": "path",
      "name": "participantId",
      "description": "Participant ID.",
      "type": "string",
      "required": true
    },
    "RegistrantId": {
      "in": "path",
      "name": "registrantId",
      "description": "The registrant ID.",
      "type": "string",
      "required": true
    },
    "RegistrantStatus": {
      "in": "query",
      "name": "status",
      "description": "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
      "type": "string",
      "default": "approved",
      "enum": [
        "pending",
        "approved",
        "denied"
      ],
      "x-enum-descriptions": [
        "registrants status is pending",
        "registrants status is approved",
        "registrants status is denied"
      ]
    },
    "ToDate": {
      "in": "query",
      "name": "to",
      "description": "End date.",
      "type": "string",
      "format": "date",
      "required": true
    },
    "TSPId": {
      "name": "tspId",
      "description": "TSP account ID.",
      "in": "path",
      "type": "string",
      "required": true,
      "enum": [
        1,
        2
      ]
    },
    "TransferEmail": {
      "in": "query",
      "name": "transfer_email",
      "description": "Transfer email.",
      "type": "string",
      "required": false
    },
    "TransferMeeting": {
      "in": "query",
      "name": "transfer_meeting",
      "description": "Transfer meeting.",
      "type": "boolean",
      "required": false
    },
    "TransferWebinar": {
      "in": "query",
      "name": "transfer_webinar",
      "description": "Transfer webinar.",
      "type": "boolean",
      "required": false
    },
    "TransferRecording": {
      "in": "query",
      "name": "transfer_recording",
      "description": "Transfer recording.",
      "type": "boolean",
      "required": false
    },
    "UserId": {
      "in": "path",
      "name": "userId",
      "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
      "type": "string",
      "required": true
    },
    "RoleId": {
      "in": "path",
      "name": "roleId",
      "description": "The role ID",
      "type": "string",
      "required": true
    },
    "WebinarId": {
      "in": "path",
      "name": "webinarId",
      "description": "The webinar ID.",
      "type": "integer",
      "required": true
    },
    "WebinarId4Metrics": {
      "in": "path",
      "name": "webinarId",
      "description": "The webinar ID or webinar UUID. If given the webinar ID it will take the last webinar instance.",
      "type": "string",
      "required": true
    },
    "WebinarTypePast": {
      "in": "query",
      "name": "type",
      "description": "The webinar type.",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "live"
      ],
      "x-enum-descriptions": [
        "past webinars",
        "live webinars"
      ]
    },
    "WebinarTypePast2": {
      "in": "query",
      "name": "type",
      "description": "The webinar type.",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "live"
      ],
      "x-enum-descriptions": [
        "past webinar",
        "live webinar"
      ]
    },
    "WebhookId": {
      "in": "path",
      "name": "webhookId",
      "description": "The webhook ID.",
      "type": "string",
      "required": true
    },
    "ZoomRoomId": {
      "in": "path",
      "name": "zoomroomId",
      "description": "The Zoom room ID.",
      "type": "string",
      "required": true
    },
    "SessionId": {
      "in": "path",
      "name": "sessionId",
      "description": "IM chat session ID.",
      "type": "string",
      "required": true
    },
    "FeedbackId": {
      "name": "feedbackId",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "Feedback Detail Id"
    },
    "WebinarUUID": {
      "name": "WebinarUUID",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "The webinar UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it."
    },
    "trash_type": {
      "in": "query",
      "type": "string",
      "name": "trash_type",
      "default": "meeting_recordings",
      "description": "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `meeting_recordings`: List all meeting recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. "
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "description": "The account object represents an account on Zoom. The account owner is the user who created the account or had an account created for them. You can read more about the Zoom account structure <a href='https://medium.com/zoom-developer-blog/a-brief-look-at-zoom-account-structures-1d19c745bf8a' target='_blank'>here</a>.",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "email": {
          "type": "string",
          "description": "User's email address."
        },
        "password": {
          "type": "string",
          "description": "User's password.",
          "minimum": 8
        },
        "options": {
          "type": "object",
          "description": "Account options object.",
          "properties": {
            "share_rc": {
              "type": "boolean",
              "description": "Enable/disable the option for a Sub Account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the Master Account. Virtual Room Connectors can only be used by On-prem users.",
              "default": false
            },
            "room_connectors": {
              "type": "string",
              "description": "Specify the IP addresses of the Room Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_rc` is set to `true`."
            },
            "share_mc": {
              "type": "boolean",
              "description": "Enable/disable the option for a Sub Account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the Master Account. Meeting Connectors can only be used by On-prem users.",
              "default": false
            },
            "meeting_connectors": {
              "type": "string",
              "description": "Specify the IP addresses of the Meeting Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_mc` is set to `true`."
            },
            "pay_mode": {
              "type": "string",
              "description": "Payee:<br>`master` - Master account holder pays.<br>`sub` - Sub account holder pays.",
              "enum": [
                "master",
                "sub"
              ],
              "x-enum-descriptions": [
                "Master account holder pays",
                "Sub account holder pays"
              ],
              "default": "master"
            }
          }
        },
        "vanity_url": {
          "type": "string",
          "description": "Account Vanity URL"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "password"
      ]
    },
    "AccountListItem": {
      "type": "object",
      "description": "Account object in the account list.",
      "properties": {
        "accounts": {
          "type": "array",
          "description": "List of Account objects.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Account ID."
              },
              "account_name": {
                "type": "string",
                "description": "Account name."
              },
              "owner_email": {
                "type": "string",
                "description": "Account owner email.",
                "example": "john.doe@zoom.us"
              },
              "account_type": {
                "type": "string",
                "description": "Account type."
              },
              "seats": {
                "type": "integer",
                "description": "Account seats."
              },
              "subscription_start_time": {
                "type": "string",
                "format": "date-time",
                "description": "Account subscription start date and time."
              },
              "subscription_end_time": {
                "type": "string",
                "format": "date-time",
                "description": "Account subscription end date and time."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Account creation date and time."
              },
              "account_number": {
                "type": "string",
                "description": "Account Number of the account."
              }
            }
          }
        }
      }
    },
    "AccountList": {
      "title": "Account List",
      "description": "List of Accounts.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "type": "object",
          "description": "Account object in the account list.",
          "properties": {
            "accounts": {
              "type": "array",
              "description": "List of Account objects.",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Account ID."
                  },
                  "account_name": {
                    "type": "string",
                    "description": "Account name."
                  },
                  "owner_email": {
                    "type": "string",
                    "description": "Account owner email.",
                    "example": "john.doe@zoom.us"
                  },
                  "account_type": {
                    "type": "string",
                    "description": "Account type."
                  },
                  "seats": {
                    "type": "integer",
                    "description": "Account seats."
                  },
                  "subscription_start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account subscription start date and time."
                  },
                  "subscription_end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account subscription end date and time."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account creation date and time."
                  },
                  "account_number": {
                    "type": "string",
                    "description": "Account Number of the account."
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "AccountOptions": {
      "type": "object",
      "description": "Account options object.",
      "properties": {
        "share_rc": {
          "type": "boolean",
          "description": "Enable/disable the option for a Sub Account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the Master Account. Virtual Room Connectors can only be used by On-prem users.",
          "default": false
        },
        "room_connectors": {
          "type": "string",
          "description": "Specify the IP addresses of the Room Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_rc` is set to `true`."
        },
        "share_mc": {
          "type": "boolean",
          "description": "Enable/disable the option for a Sub Account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the Master Account. Meeting Connectors can only be used by On-prem users.",
          "default": false
        },
        "meeting_connectors": {
          "type": "string",
          "description": "Specify the IP addresses of the Meeting Connectors that you would like to share with the Sub Account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a Master Account will be shared with the Sub Account.\n\n\n**Note:** This option can only be used if the value of `share_mc` is set to `true`."
        },
        "pay_mode": {
          "type": "string",
          "description": "Payee:<br>`master` - Master account holder pays.<br>`sub` - Sub account holder pays.",
          "enum": [
            "master",
            "sub"
          ],
          "x-enum-descriptions": [
            "Master account holder pays",
            "Sub account holder pays"
          ],
          "default": "master"
        }
      }
    },
    "AccountPlan": {
      "type": "object",
      "description": "Account plan object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Account plan number of hosts."
        }
      }
    },
    "AccountPlanBaseRequired": {
      "type": "object",
      "description": "Account base plan object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
        }
      },
      "required": [
        "type",
        "hosts"
      ]
    },
    "AccountPlanRequired": {
      "type": "object",
      "description": "Account plan object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Number of hosts for this plan."
        }
      },
      "required": [
        "type",
        "hosts"
      ]
    },
    "AccountPlans": {
      "type": "object",
      "description": "Account Plans object.",
      "properties": {
        "plan_base": {
          "type": "object",
          "description": "Account base plan object.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Account base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
            },
            "hosts": {
              "type": "integer",
              "description": "Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."
            }
          },
          "required": [
            "type",
            "hosts"
          ]
        },
        "plan_zoom_rooms": {
          "type": "object",
          "description": "Account plan object.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
            },
            "hosts": {
              "type": "integer",
              "description": "Account plan number of hosts."
            }
          }
        },
        "plan_room_connector": {
          "type": "object",
          "description": "Account plan object.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
            },
            "hosts": {
              "type": "integer",
              "description": "Account plan number of hosts."
            }
          }
        },
        "plan_large_meeting": {
          "type": "array",
          "description": "Additional large meeting Plans.",
          "items": {
            "type": "object",
            "description": "Account plan object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
              },
              "hosts": {
                "type": "integer",
                "description": "Account plan number of hosts."
              }
            }
          }
        },
        "plan_webinar": {
          "type": "array",
          "description": "Additional webinar plans.",
          "items": {
            "type": "object",
            "description": "Account plan object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Account <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\">plan type.</a>"
              },
              "hosts": {
                "type": "integer",
                "description": "Account plan number of hosts."
              }
            }
          }
        },
        "plan_recording": {
          "type": "string",
          "description": "Additional cloud recording plan."
        },
        "plan_audio": {
          "type": "object",
          "description": "Additional audio conferencing <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\">plan type.</a>",
          "properties": {
            "type": {
              "type": "string",
              "description": "Additional audio conferencing <a href=\"/api-reference/other-references/plans\">plan type.</a>"
            },
            "tollfree_countries": {
              "type": "string",
              "description": "Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \"ID\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."
            },
            "premium_countries": {
              "type": "string",
              "description": "Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \"ID\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."
            },
            "callout_countries": {
              "type": "string",
              "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
            },
            "ddi_numbers": {
              "type": "integer",
              "description": "Dedicated dial-In numbers."
            }
          }
        },
        "plan_phone": {
          "type": "object",
          "title": "PhonePlan",
          "description": "Phone Plan Object",
          "properties": {
            "plan_base": {
              "type": "object",
              "description": "Additional phone base plans.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                },
                "callout_countries": {
                  "type": "string",
                  "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
                }
              }
            },
            "plan_calling": {
              "type": "array",
              "description": "Additional phone calling plans.",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                  },
                  "hosts": {
                    "type": "integer"
                  }
                }
              }
            },
            "plan_number": {
              "type": "array",
              "description": "Additional phone number plans.",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
                  },
                  "hosts": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "plan_base"
      ]
    },
    "AccountSettings": {
      "title": "Account settings",
      "type": "object",
      "properties": {
        "schedule_meting": {
          "type": "object",
          "description": "Account Settings: Schedule Meeting.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start meetings with the host video on."
            },
            "participant_video": {
              "type": "boolean",
              "description": "Start meetings with the participant video on. Participants can change this setting during the meeting."
            },
            "audio_type": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ],
              "x-enum-descriptions": [
                "Telephony and VoIP",
                "Audio PSTN telephony only",
                "VoIP only",
                "3rd party audio conference"
              ]
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Allow participants to join the meeting before the host arrives."
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only Zoom users who are signed in can join meetings."
            },
            "enforce_login_with_domains": {
              "type": "boolean",
              "description": "Only signed in users with a specific domain can join meetings."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed in users with a specified domain can join the meeting. "
            },
            "not_store_meeting_topic": {
              "type": "boolean",
              "description": "Always display \"Zoom Meeting\" as the meeting topic."
            },
            "force_pmi_jbh_password": {
              "type": "boolean",
              "description": "Require a password for Personal Meetings if attendees can join before host."
            },
            "use_pmi_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
            },
            "use_pmi_for_instant_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
            },
            "require_password_for_scheduling_new_meetings": {
              "type": "boolean",
              "description": "Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
            },
            "require_password_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Require a password for meetings which have already been scheduled\n"
            },
            "require_password_for_instant_meetings": {
              "type": "boolean",
              "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
            },
            "require_password_for_pmi_meetings": {
              "type": "string",
              "description": "Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
              "enum": [
                "jbh_only",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "Only meetings with Join Before Host enabled",
                "All meetings using PMI",
                "Disabled"
              ]
            }
          }
        },
        "in_meeting": {
          "type": "object",
          "description": "Account Settings: In Meeting.",
          "properties": {
            "e2e_encryption": {
              "type": "boolean",
              "description": "Require that all meetings are encrypted using AES."
            },
            "chat": {
              "type": "boolean",
              "description": "Allow meeting participants to send a message that is visible to all participants."
            },
            "private_chat": {
              "type": "boolean",
              "description": "Allow a meeting participant to send a private message to another participant."
            },
            "auto_saving_chat": {
              "type": "boolean",
              "description": "Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts."
            },
            "entry_exit_chime": {
              "type": "string",
              "description": "Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.",
              "enum": [
                "host",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "Heard by host only",
                "Heard by host and all attendees",
                "Disable"
              ]
            },
            "record_play_own_voice": {
              "type": "boolean",
              "description": "Record and play their own voice."
            },
            "feedback": {
              "type": "boolean",
              "description": "Add a \"Feedback\" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting."
            },
            "post_meeting_feedback": {
              "type": "boolean",
              "description": "Display a thumbs up or down survey at the end of each meeting."
            },
            "co_host": {
              "type": "boolean",
              "description": "Allow the host to add co-hosts."
            },
            "polling": {
              "type": "boolean",
              "description": "Add \"Polls\" to the meeting controls."
            },
            "attendee_on_hold": {
              "type": "boolean",
              "description": "Allow hosts to temporarily remove an attendee from a meeting."
            },
            "show_meeting_control_toolbar": {
              "type": "boolean",
              "description": "Always show the meeting control toolbar."
            },
            "allow_show_zoom_windows": {
              "type": "boolean",
              "description": "Show the Zoom desktop application when sharing screens. "
            },
            "annotation": {
              "type": "boolean",
              "description": "Allow participants to use annotation tools to add information to shared screens."
            },
            "whiteboard": {
              "type": "boolean",
              "description": "Allow participants to share a whiteboard that includes annotation tools."
            },
            "webinar_question_answer": {
              "type": "boolean",
              "description": "Allow a Q&A in a webinar."
            },
            "anonymous_question_answer": {
              "type": "boolean",
              "description": "Allow an anonymous Q&A in a webinar."
            },
            "breakout_room": {
              "type": "boolean",
              "description": "Allow host to split meeting participants into separate, smaller rooms."
            },
            "closed_caption": {
              "type": "boolean",
              "description": "Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. "
            },
            "far_end_camera_control": {
              "type": "boolean",
              "description": "Allow another user to take control of your camera during a meeting."
            },
            "group_hd": {
              "type": "boolean",
              "description": "Activate higher quality video for host and participants.\nPlease note: This will use more bandwidth."
            },
            "virtual_background": {
              "type": "boolean",
              "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings."
            },
            "watermark": {
              "type": "boolean",
              "description": "Add a watermark when viewing a shared screen."
            },
            "alert_guest_join": {
              "type": "boolean",
              "description": "Identify guest participants in a meeting or webinar."
            },
            "auto_answer": {
              "type": "boolean",
              "description": "Enable users to see and add contacts to the \"auto-answer group\" in the chat contact list. Any call from members of this group will automatically be answered."
            },
            "p2p_connetion": {
              "type": "boolean",
              "description": "Peer to peer connection while only two people are in a meeting."
            },
            "p2p_ports": {
              "type": "boolean",
              "description": "Peer to peer listening ports range."
            },
            "ports_range": {
              "type": "string",
              "description": "The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.",
              "default": ""
            },
            "sending_default_email_invites": {
              "type": "boolean",
              "description": "Only show the default email when sending email invites."
            },
            "use_html_format_email": {
              "type": "boolean",
              "description": "Use HTML formatted email for the Outlook plugin."
            },
            "dscp_marking": {
              "type": "boolean",
              "description": "DSCP marking."
            },
            "dscp_audio": {
              "type": "integer",
              "description": "DSCP audio.",
              "minimum": 1,
              "maximum": 63
            },
            "dscp_video": {
              "type": "integer",
              "description": "DSCP video.",
              "minimum": 1,
              "maximum": 63
            },
            "stereo_audio": {
              "type": "boolean",
              "description": "Allow users to select stereo audio in their client settings."
            },
            "original_audio": {
              "type": "boolean",
              "description": "Allow users to select original sound in their client settings."
            },
            "screen_sharing": {
              "type": "boolean",
              "description": "Allow screen sharing."
            },
            "remote_control": {
              "type": "boolean",
              "description": "Allow users to request remote control."
            },
            "allow_live_streaming": {
              "type": "boolean",
              "description": "Allow live streaming."
            },
            "workplace_by_facebook": {
              "type": "boolean",
              "description": "Workplace by facebook."
            },
            "custom_live_streaming_service": {
              "type": "boolean",
              "description": "Custom live streaming."
            },
            "custom_service_instructions": {
              "type": "string",
              "description": "Custom service instructions."
            }
          }
        },
        "email_notification": {
          "type": "object",
          "description": "Account Settings: Notification.",
          "properties": {
            "cloud_recording_avaliable_reminder": {
              "type": "boolean",
              "description": "Notify host when cloud recording is available."
            },
            "jbh_reminder": {
              "type": "boolean",
              "description": "Notify the host when participants join the meeting before them."
            },
            "cancel_meeting_reminder": {
              "type": "boolean",
              "description": "Notify the host and participants when a meeting is cancelled."
            },
            "low_host_count_reminder": {
              "type": "boolean",
              "description": "Notify user when host licenses are running low."
            },
            "alternative_host_reminder": {
              "type": "boolean",
              "description": "Notify when an alternative host is set or removed from a meeting."
            },
            "schedule_for_reminder": {
              "type": "boolean",
              "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
            }
          }
        },
        "zoom_rooms": {
          "type": "object",
          "description": "Account Settings: Zoom Rooms.",
          "properties": {
            "upcoming_meeting_alert": {
              "type": "boolean",
              "description": "Upcoming meeting alert."
            },
            "start_airplay_manually": {
              "type": "boolean",
              "description": "Start AirPlay service manually."
            },
            "weekly_system_restart": {
              "type": "boolean",
              "description": "Weekly system restart."
            },
            "list_meetings_with_calendar": {
              "type": "boolean",
              "description": "Display meeting list with calendar integration."
            },
            "zr_post_meeting_feedback": {
              "type": "boolean",
              "description": "Zoom Room post meeting feedback."
            },
            "ultrasonic": {
              "type": "boolean",
              "description": "Automatic direct sharing using an ultrasonic proximity signal."
            },
            "force_private_meeting": {
              "type": "boolean",
              "description": "Shift all meetings to private."
            },
            "hide_host_information": {
              "type": "boolean",
              "description": "Hide host and meeting ID from private meetings."
            },
            "cmr_for_instant_meeting": {
              "type": "boolean",
              "description": "Cloud recording for instant meetings."
            },
            "auto_start_stop_scheduled_meetings": {
              "type": "boolean",
              "description": "Automatic start and stop for scheduled meetings."
            }
          }
        },
        "security": {
          "type": "object",
          "description": "Account Settings: Security.",
          "properties": {
            "admin_change_name_pic": {
              "type": "boolean",
              "description": "Only account administrators can change a user's username and picture."
            },
            "import_photos_from_devices": {
              "type": "boolean",
              "description": "Allow users to import photos from a photo library on a  device."
            },
            "hide_billing_info": {
              "type": "boolean",
              "description": "Hide billing information."
            }
          }
        },
        "recording": {
          "type": "object",
          "description": "Account Settings: Recording.",
          "properties": {
            "local_recording": {
              "type": "boolean",
              "description": "Allow hosts and participants to record the meeting using a local file."
            },
            "cloud_recording": {
              "type": "boolean",
              "description": "Allow hosts to record and save the meeting in the cloud."
            },
            "record_speaker_view": {
              "type": "boolean",
              "description": "Record the active speaker with a shared screen."
            },
            "record_gallery_view": {
              "type": "boolean",
              "description": "Record the gallery view with a shared screen."
            },
            "record_audio_file": {
              "type": "boolean",
              "description": "Record an audio only file."
            },
            "save_chat_text": {
              "type": "boolean",
              "description": "Save the chat text from the meeting."
            },
            "show_timestamp": {
              "type": "boolean",
              "description": "Add a timestamp to the recording."
            },
            "recording_audio_transcript": {
              "type": "boolean",
              "description": "Automatically transcribe the audio of the meeting or webinar to the cloud."
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record on local",
                "Record on cloud",
                "Disabled"
              ]
            },
            "cloud_recording_download": {
              "type": "boolean",
              "description": "Cloud recording downloads."
            },
            "cloud_recording_download_host": {
              "type": "boolean",
              "description": "Only the host can download cloud recordings."
            },
            "account_user_access_recording": {
              "type": "boolean",
              "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings."
            },
            "auto_delete_cmr": {
              "type": "boolean",
              "description": "Allow Zoom to permanantly delete recordings automatically after a specified number of days."
            },
            "auto_delete_cmr_days": {
              "type": "integer",
              "description": "When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings."
            }
          }
        },
        "telephony": {
          "type": "object",
          "description": "Account Settings: Telephony.",
          "properties": {
            "third_party_audio": {
              "type": "boolean",
              "description": "Users can join the meeting using the existing third party audio configuration."
            },
            "audio_conference_info": {
              "type": "string",
              "description": "Third party audio conference info."
            }
          }
        },
        "integration": {
          "type": "object",
          "description": "Account Settings: Integration.",
          "properties": {
            "google_calendar": {
              "type": "boolean",
              "description": "Enable meetings to be scheduled using Google Calendar."
            },
            "google_drive": {
              "type": "boolean",
              "description": "Enable users who join a meeting from their mobile device to share content from their Google Drive."
            },
            "dropbox": {
              "type": "boolean",
              "description": "Enable users who join a meeting from their mobile device to share content from their Dropbox account."
            },
            "box": {
              "type": "boolean",
              "description": "Enable users who join a meeting from their mobile device to share content from their Box account."
            },
            "microsoft_one_drive": {
              "type": "boolean",
              "description": "Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account."
            },
            "kubi": {
              "type": "boolean",
              "description": "Enable users to control a connected Kubi device from within a Zoom meeting."
            }
          }
        },
        "feature": {
          "type": "object",
          "description": "Account Settings: Feature.",
          "properties": {
            "meeting_capacity": {
              "type": "integer",
              "description": "Set the maximum number of participants a host can have in a single meeting."
            }
          }
        },
        "tsp": {
          "type": "object",
          "description": "Account Settings: TSP.",
          "properties": {
            "call_out": {
              "type": "boolean",
              "description": "Call Out"
            },
            "call_out_countries": {
              "type": "array",
              "items": {},
              "description": "Call Out Countries/Regions"
            },
            "show_international_numbers_link": {
              "type": "boolean",
              "description": "Show international numbers link on the invitation email"
            },
            "display_toll_free_numbers": {
              "type": "boolean",
              "description": "Display toll-free numbers"
            }
          }
        }
      }
    },
    "AccountSettingsScheduleMeeting": {
      "type": "object",
      "description": "Account Settings: Schedule Meeting.",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start meetings with the host video on."
        },
        "participant_video": {
          "type": "boolean",
          "description": "Start meetings with the participant video on. Participants can change this setting during the meeting."
        },
        "audio_type": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ],
          "x-enum-descriptions": [
            "Telephony and VoIP",
            "Audio PSTN telephony only",
            "VoIP only",
            "3rd party audio conference"
          ]
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Allow participants to join the meeting before the host arrives."
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only Zoom users who are signed in can join meetings."
        },
        "enforce_login_with_domains": {
          "type": "boolean",
          "description": "Only signed in users with a specific domain can join meetings."
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed in users with a specified domain can join the meeting. "
        },
        "not_store_meeting_topic": {
          "type": "boolean",
          "description": "Always display \"Zoom Meeting\" as the meeting topic."
        },
        "force_pmi_jbh_password": {
          "type": "boolean",
          "description": "Require a password for Personal Meetings if attendees can join before host."
        },
        "use_pmi_for_scheduled_meetings": {
          "type": "boolean",
          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
        },
        "use_pmi_for_instant_meetings": {
          "type": "boolean",
          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
        },
        "require_password_for_scheduling_new_meetings": {
          "type": "boolean",
          "description": "Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts."
        },
        "require_password_for_scheduled_meetings": {
          "type": "boolean",
          "description": "Require a password for meetings which have already been scheduled\n"
        },
        "require_password_for_instant_meetings": {
          "type": "boolean",
          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
        },
        "require_password_for_pmi_meetings": {
          "type": "string",
          "description": "Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
          "enum": [
            "jbh_only",
            "all",
            "none"
          ],
          "x-enum-descriptions": [
            "Only meetings with Join Before Host enabled",
            "All meetings using PMI",
            "Disabled"
          ]
        }
      }
    },
    "AccountSettingsInMeeting": {
      "type": "object",
      "description": "Account Settings: In Meeting.",
      "properties": {
        "e2e_encryption": {
          "type": "boolean",
          "description": "Require that all meetings are encrypted using AES."
        },
        "chat": {
          "type": "boolean",
          "description": "Allow meeting participants to send a message that is visible to all participants."
        },
        "private_chat": {
          "type": "boolean",
          "description": "Allow a meeting participant to send a private message to another participant."
        },
        "auto_saving_chat": {
          "type": "boolean",
          "description": "Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts."
        },
        "entry_exit_chime": {
          "type": "string",
          "description": "Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.",
          "enum": [
            "host",
            "all",
            "none"
          ],
          "x-enum-descriptions": [
            "Heard by host only",
            "Heard by host and all attendees",
            "Disable"
          ]
        },
        "record_play_own_voice": {
          "type": "boolean",
          "description": "Record and play their own voice."
        },
        "feedback": {
          "type": "boolean",
          "description": "Add a \"Feedback\" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting."
        },
        "post_meeting_feedback": {
          "type": "boolean",
          "description": "Display a thumbs up or down survey at the end of each meeting."
        },
        "co_host": {
          "type": "boolean",
          "description": "Allow the host to add co-hosts."
        },
        "polling": {
          "type": "boolean",
          "description": "Add \"Polls\" to the meeting controls."
        },
        "attendee_on_hold": {
          "type": "boolean",
          "description": "Allow hosts to temporarily remove an attendee from a meeting."
        },
        "show_meeting_control_toolbar": {
          "type": "boolean",
          "description": "Always show the meeting control toolbar."
        },
        "allow_show_zoom_windows": {
          "type": "boolean",
          "description": "Show the Zoom desktop application when sharing screens. "
        },
        "annotation": {
          "type": "boolean",
          "description": "Allow participants to use annotation tools to add information to shared screens."
        },
        "whiteboard": {
          "type": "boolean",
          "description": "Allow participants to share a whiteboard that includes annotation tools."
        },
        "webinar_question_answer": {
          "type": "boolean",
          "description": "Allow a Q&A in a webinar."
        },
        "anonymous_question_answer": {
          "type": "boolean",
          "description": "Allow an anonymous Q&A in a webinar."
        },
        "breakout_room": {
          "type": "boolean",
          "description": "Allow host to split meeting participants into separate, smaller rooms."
        },
        "closed_caption": {
          "type": "boolean",
          "description": "Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. "
        },
        "far_end_camera_control": {
          "type": "boolean",
          "description": "Allow another user to take control of your camera during a meeting."
        },
        "group_hd": {
          "type": "boolean",
          "description": "Activate higher quality video for host and participants.\nPlease note: This will use more bandwidth."
        },
        "virtual_background": {
          "type": "boolean",
          "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings."
        },
        "watermark": {
          "type": "boolean",
          "description": "Add a watermark when viewing a shared screen."
        },
        "alert_guest_join": {
          "type": "boolean",
          "description": "Identify guest participants in a meeting or webinar."
        },
        "auto_answer": {
          "type": "boolean",
          "description": "Enable users to see and add contacts to the \"auto-answer group\" in the chat contact list. Any call from members of this group will automatically be answered."
        },
        "p2p_connetion": {
          "type": "boolean",
          "description": "Peer to peer connection while only two people are in a meeting."
        },
        "p2p_ports": {
          "type": "boolean",
          "description": "Peer to peer listening ports range."
        },
        "ports_range": {
          "type": "string",
          "description": "The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.",
          "default": ""
        },
        "sending_default_email_invites": {
          "type": "boolean",
          "description": "Only show the default email when sending email invites."
        },
        "use_html_format_email": {
          "type": "boolean",
          "description": "Use HTML formatted email for the Outlook plugin."
        },
        "dscp_marking": {
          "type": "boolean",
          "description": "DSCP marking."
        },
        "dscp_audio": {
          "type": "integer",
          "description": "DSCP audio.",
          "minimum": 1,
          "maximum": 63
        },
        "dscp_video": {
          "type": "integer",
          "description": "DSCP video.",
          "minimum": 1,
          "maximum": 63
        },
        "stereo_audio": {
          "type": "boolean",
          "description": "Allow users to select stereo audio in their client settings."
        },
        "original_audio": {
          "type": "boolean",
          "description": "Allow users to select original sound in their client settings."
        },
        "screen_sharing": {
          "type": "boolean",
          "description": "Allow screen sharing."
        },
        "remote_control": {
          "type": "boolean",
          "description": "Allow users to request remote control."
        },
        "allow_live_streaming": {
          "type": "boolean",
          "description": "Allow live streaming."
        },
        "workplace_by_facebook": {
          "type": "boolean",
          "description": "Workplace by facebook."
        },
        "custom_live_streaming_service": {
          "type": "boolean",
          "description": "Custom live streaming."
        },
        "custom_service_instructions": {
          "type": "string",
          "description": "Custom service instructions."
        }
      }
    },
    "AccountSettingsEmailNotification": {
      "type": "object",
      "description": "Account Settings: Notification.",
      "properties": {
        "cloud_recording_avaliable_reminder": {
          "type": "boolean",
          "description": "Notify host when cloud recording is available."
        },
        "jbh_reminder": {
          "type": "boolean",
          "description": "Notify the host when participants join the meeting before them."
        },
        "cancel_meeting_reminder": {
          "type": "boolean",
          "description": "Notify the host and participants when a meeting is cancelled."
        },
        "low_host_count_reminder": {
          "type": "boolean",
          "description": "Notify user when host licenses are running low."
        },
        "alternative_host_reminder": {
          "type": "boolean",
          "description": "Notify when an alternative host is set or removed from a meeting."
        },
        "schedule_for_reminder": {
          "type": "boolean",
          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
        }
      }
    },
    "AccountSettingsZoomRooms": {
      "type": "object",
      "description": "Account Settings: Zoom Rooms.",
      "properties": {
        "upcoming_meeting_alert": {
          "type": "boolean",
          "description": "Upcoming meeting alert."
        },
        "start_airplay_manually": {
          "type": "boolean",
          "description": "Start AirPlay service manually."
        },
        "weekly_system_restart": {
          "type": "boolean",
          "description": "Weekly system restart."
        },
        "list_meetings_with_calendar": {
          "type": "boolean",
          "description": "Display meeting list with calendar integration."
        },
        "zr_post_meeting_feedback": {
          "type": "boolean",
          "description": "Zoom Room post meeting feedback."
        },
        "ultrasonic": {
          "type": "boolean",
          "description": "Automatic direct sharing using an ultrasonic proximity signal."
        },
        "force_private_meeting": {
          "type": "boolean",
          "description": "Shift all meetings to private."
        },
        "hide_host_information": {
          "type": "boolean",
          "description": "Hide host and meeting ID from private meetings."
        },
        "cmr_for_instant_meeting": {
          "type": "boolean",
          "description": "Cloud recording for instant meetings."
        },
        "auto_start_stop_scheduled_meetings": {
          "type": "boolean",
          "description": "Automatic start and stop for scheduled meetings."
        }
      }
    },
    "AccountSettingsSecurity": {
      "type": "object",
      "description": "Account Settings: Security.",
      "properties": {
        "admin_change_name_pic": {
          "type": "boolean",
          "description": "Only account administrators can change a user's username and picture."
        },
        "import_photos_from_devices": {
          "type": "boolean",
          "description": "Allow users to import photos from a photo library on a  device."
        },
        "hide_billing_info": {
          "type": "boolean",
          "description": "Hide billing information."
        }
      }
    },
    "AccountSettingsRecording": {
      "type": "object",
      "description": "Account Settings: Recording.",
      "properties": {
        "local_recording": {
          "type": "boolean",
          "description": "Allow hosts and participants to record the meeting using a local file."
        },
        "cloud_recording": {
          "type": "boolean",
          "description": "Allow hosts to record and save the meeting in the cloud."
        },
        "record_speaker_view": {
          "type": "boolean",
          "description": "Record the active speaker with a shared screen."
        },
        "record_gallery_view": {
          "type": "boolean",
          "description": "Record the gallery view with a shared screen."
        },
        "record_audio_file": {
          "type": "boolean",
          "description": "Record an audio only file."
        },
        "save_chat_text": {
          "type": "boolean",
          "description": "Save the chat text from the meeting."
        },
        "show_timestamp": {
          "type": "boolean",
          "description": "Add a timestamp to the recording."
        },
        "recording_audio_transcript": {
          "type": "boolean",
          "description": "Automatically transcribe the audio of the meeting or webinar to the cloud."
        },
        "auto_recording": {
          "type": "string",
          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record on local",
            "Record on cloud",
            "Disabled"
          ]
        },
        "cloud_recording_download": {
          "type": "boolean",
          "description": "Cloud recording downloads."
        },
        "cloud_recording_download_host": {
          "type": "boolean",
          "description": "Only the host can download cloud recordings."
        },
        "account_user_access_recording": {
          "type": "boolean",
          "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings."
        },
        "auto_delete_cmr": {
          "type": "boolean",
          "description": "Allow Zoom to permanantly delete recordings automatically after a specified number of days."
        },
        "auto_delete_cmr_days": {
          "type": "integer",
          "description": "When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings."
        }
      }
    },
    "AccountSettingsTelephony": {
      "type": "object",
      "description": "Account Settings: Telephony.",
      "properties": {
        "third_party_audio": {
          "type": "boolean",
          "description": "Users can join the meeting using the existing third party audio configuration."
        },
        "audio_conference_info": {
          "type": "string",
          "description": "Third party audio conference info."
        }
      }
    },
    "AccountSettingsIntegration": {
      "type": "object",
      "description": "Account Settings: Integration.",
      "properties": {
        "google_calendar": {
          "type": "boolean",
          "description": "Enable meetings to be scheduled using Google Calendar."
        },
        "google_drive": {
          "type": "boolean",
          "description": "Enable users who join a meeting from their mobile device to share content from their Google Drive."
        },
        "dropbox": {
          "type": "boolean",
          "description": "Enable users who join a meeting from their mobile device to share content from their Dropbox account."
        },
        "box": {
          "type": "boolean",
          "description": "Enable users who join a meeting from their mobile device to share content from their Box account."
        },
        "microsoft_one_drive": {
          "type": "boolean",
          "description": "Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account."
        },
        "kubi": {
          "type": "boolean",
          "description": "Enable users to control a connected Kubi device from within a Zoom meeting."
        }
      }
    },
    "AccountSettingsFeature": {
      "type": "object",
      "description": "Account Settings: Feature.",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "Set the maximum number of participants a host can have in a single meeting."
        }
      }
    },
    "DomainsList": {
      "type": "object",
      "description": "List of managed domains.",
      "properties": {
        "total_records": {
          "type": "integer",
          "description": "Total records."
        },
        "domains": {
          "type": "array",
          "description": "List of managed domain objects.",
          "items": {
            "allOf": [
              {
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Domain name."
                  },
                  "status": {
                    "type": "string",
                    "description": "Domain status."
                  }
                }
              }
            ],
            "type": "object"
          }
        }
      }
    },
    "BillingContact": {
      "type": "object",
      "description": "Billing Contact object.",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "Billing Contact's first name."
        },
        "last_name": {
          "type": "string",
          "description": "Billing Contact's last name."
        },
        "email": {
          "type": "string",
          "description": "Billing Contact's email address."
        },
        "phone_number": {
          "type": "string",
          "description": "Billing Contact's phone number."
        },
        "address": {
          "type": "string",
          "description": "Billing Contact's address."
        },
        "apt": {
          "type": "string",
          "description": "Billing Contact's apartment/suite."
        },
        "city": {
          "type": "string",
          "description": "Billing Contact's city."
        },
        "state": {
          "type": "string",
          "description": "Billing Contact's state."
        },
        "zip": {
          "type": "string",
          "description": "Billing Contact's zip/postal code."
        },
        "country": {
          "type": "string",
          "description": "Billing Contact's country."
        }
      }
    },
    "BillingContactRequired": {
      "type": "object",
      "description": "Billing Contact object.",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "Billing Contact's first name."
        },
        "last_name": {
          "type": "string",
          "description": "Billing Contact's last name."
        },
        "email": {
          "type": "string",
          "description": "Billing Contact's email address."
        },
        "phone_number": {
          "type": "string",
          "description": "Billing Contact's phone number."
        },
        "address": {
          "type": "string",
          "description": "Billing Contact's address."
        },
        "apt": {
          "type": "string",
          "description": "Billing Contact's apartment/suite."
        },
        "city": {
          "type": "string",
          "description": "Billing Contact's city."
        },
        "state": {
          "type": "string",
          "description": "Billing Contact's state."
        },
        "zip": {
          "type": "string",
          "description": "Billing Contact's zip/postal code."
        },
        "country": {
          "type": "string",
          "description": "Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format."
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "phone_number",
        "address",
        "city",
        "state",
        "zip",
        "country"
      ]
    },
    "CustomQuestion": {
      "type": "object",
      "description": "Custom Question.",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DateTime": {
      "type": "object",
      "description": "DateTime Object.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date",
          "description": "Start Date."
        },
        "to": {
          "type": "string",
          "format": "date",
          "description": "End Date."
        }
      }
    },
    "Device": {
      "type": "object",
      "title": "The H.323/SIP device object.",
      "description": "The H.323/SIP device object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device name.",
          "maxLength": 64
        },
        "protocol": {
          "type": "string",
          "enum": [
            "H.323",
            "SIP"
          ],
          "x-enum-descriptions": [
            "H.323",
            "SIP"
          ],
          "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
        },
        "ip": {
          "type": "string",
          "description": "Device IP."
        },
        "encryption": {
          "type": "string",
          "enum": [
            "auto",
            "yes",
            "no"
          ],
          "x-enum-descriptions": [
            "auto",
            "yes",
            "no"
          ],
          "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
        }
      },
      "required": [
        "name",
        "protocol",
        "ip",
        "encryption"
      ]
    },
    "DeviceList": {
      "title": "H.323/SIP Device List",
      "description": "List of H.323/SIP Devices.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "devices": {
              "type": "array",
              "description": "List of H.323/SIP Device objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Device ID."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "The H.323/SIP device object.",
                    "description": "The H.323/SIP device object.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Device name.",
                        "maxLength": 64
                      },
                      "protocol": {
                        "type": "string",
                        "enum": [
                          "H.323",
                          "SIP"
                        ],
                        "x-enum-descriptions": [
                          "H.323",
                          "SIP"
                        ],
                        "description": "Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."
                      },
                      "ip": {
                        "type": "string",
                        "description": "Device IP."
                      },
                      "encryption": {
                        "type": "string",
                        "enum": [
                          "auto",
                          "yes",
                          "no"
                        ],
                        "x-enum-descriptions": [
                          "auto",
                          "yes",
                          "no"
                        ],
                        "description": "Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."
                      }
                    },
                    "required": [
                      "name",
                      "protocol",
                      "ip",
                      "encryption"
                    ]
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "Group": {
      "type": "object",
      "description": "Group object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Group name."
        },
        "total_members": {
          "type": "integer",
          "description": "Total number of members in this group."
        }
      }
    },
    "GroupList": {
      "type": "object",
      "description": "List of Groups.",
      "properties": {
        "total_records": {
          "type": "integer",
          "description": "Total records."
        },
        "groups": {
          "type": "array",
          "description": "List of Group objects.",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Group ID."
                  }
                }
              },
              {
                "type": "object",
                "description": "Group object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Group name."
                  },
                  "total_members": {
                    "type": "integer",
                    "description": "Total number of members in this group."
                  }
                }
              }
            ]
          }
        }
      }
    },
    "GroupMember": {
      "type": "object",
      "description": "Group member object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID."
        },
        "email": {
          "type": "string",
          "description": "User email."
        },
        "first_name": {
          "type": "string",
          "description": "User first name."
        },
        "last_name": {
          "type": "string",
          "description": "User last name."
        },
        "type": {
          "type": "integer",
          "description": "User type.<br>\n`1` - Basic<br> `2` - Licensed<br> \n`3` - On-prem"
        }
      }
    },
    "GroupMemberList": {
      "title": "Group Member List",
      "description": "List of Group Members.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "members": {
              "type": "array",
              "description": "List of Group member objects.",
              "items": {
                "type": "object",
                "description": "Group member object.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User ID."
                  },
                  "email": {
                    "type": "string",
                    "description": "User email."
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User first name."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User last name."
                  },
                  "type": {
                    "type": "integer",
                    "description": "User type.<br>\n`1` - Basic<br> `2` - Licensed<br> \n`3` - On-prem"
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "IMGroup": {
      "description": "IM group object.",
      "allOf": [
        {
          "type": "object",
          "description": "Group object.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Group name."
            },
            "total_members": {
              "type": "integer",
              "description": "Total number of members in this group."
            }
          }
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "description": "IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. ",
              "default": "normal",
              "enum": [
                "normal",
                "shared",
                "restricted"
              ],
              "x-enum-descriptions": [
                "Only members can see the group automatically. Other people can search members in the group.",
                "All people in the account can see the group and members automatically",
                "Nobody can see the group or search members except the members in the group"
              ]
            },
            "search_by_domain": {
              "type": "boolean",
              "description": "Members can search for others in the same email domain."
            },
            "search_by_account": {
              "type": "boolean",
              "description": "Members can search for others under same account."
            },
            "search_by_ma_account": {
              "type": "boolean",
              "description": "Members can search for others under same master account - including all sub accounts."
            }
          }
        }
      ],
      "type": "object"
    },
    "IMGroupList": {
      "title": "IM Group List",
      "description": "List of IM Groups.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "groups": {
              "type": "array",
              "description": "List of group objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "IM group ID."
                      }
                    }
                  },
                  {
                    "description": "IM group object.",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Group object.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Group name."
                          },
                          "total_members": {
                            "type": "integer",
                            "description": "Total number of members in this group."
                          }
                        }
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. ",
                            "default": "normal",
                            "enum": [
                              "normal",
                              "shared",
                              "restricted"
                            ],
                            "x-enum-descriptions": [
                              "Only members can see the group automatically. Other people can search members in the group.",
                              "All people in the account can see the group and members automatically",
                              "Nobody can see the group or search members except the members in the group"
                            ]
                          },
                          "search_by_domain": {
                            "type": "boolean",
                            "description": "Members can search for others in the same email domain."
                          },
                          "search_by_account": {
                            "type": "boolean",
                            "description": "Members can search for others under same account."
                          },
                          "search_by_ma_account": {
                            "type": "boolean",
                            "description": "Members can search for others under same master account - including all sub accounts."
                          }
                        }
                      }
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "Meeting": {
      "description": "Meeting object.",
      "allOf": [
        {
          "type": "object",
          "description": "Base object for sessions.",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Meeting topic."
            },
            "type": {
              "type": "integer",
              "description": "Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
              "default": 2,
              "enum": [
                1,
                2,
                3,
                8
              ],
              "x-enum-descriptions": [
                "Instant Meeting",
                "Scheduled Meeting",
                "Recurring Meeting with no fixed time",
                "Recurring Meeting with fixed time"
              ]
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and specify the time zone. This is only used for scheduled meetings and recurring meetings with a fixed time."
            },
            "duration": {
              "type": "integer",
              "description": "Meeting duration (minutes). Used for scheduled meetings only."
            },
            "timezone": {
              "type": "string",
              "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
            },
            "password": {
              "type": "string",
              "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
            },
            "agenda": {
              "type": "string",
              "description": "Meeting description."
            },
            "tracking_fields": {
              "type": "array",
              "description": "Tracking fields",
              "items": {
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Tracking fields type"
                  },
                  "value": {
                    "type": "string",
                    "description": "Tracking fields value"
                  }
                }
              }
            },
            "recurrence": {
              "type": "object",
              "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Daily",
                    "Weekly",
                    "Monthly"
                  ]
                },
                "repeat_interval": {
                  "type": "integer",
                  "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                },
                "weekly_days": {
                  "type": "string",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                  ]
                },
                "monthly_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                },
                "monthly_week": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                  "enum": [
                    -1,
                    1,
                    2,
                    3,
                    4
                  ],
                  "x-enum-descriptions": [
                    "Last week",
                    "First week",
                    "Second week",
                    "Third week",
                    "Fourth week"
                  ]
                },
                "monthly_week_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "x-enum-descriptions": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ]
                },
                "end_times": {
                  "type": "integer",
                  "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                  "default": 1,
                  "maximum": 50
                },
                "end_date_time": {
                  "type": "string",
                  "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                  "format": "date-time"
                }
              },
              "required": [
                "type"
              ]
            },
            "settings": {
              "type": "object",
              "description": "Meeting settings.",
              "properties": {
                "host_video": {
                  "type": "boolean",
                  "description": "Start video when the host joins the meeting."
                },
                "participant_video": {
                  "type": "boolean",
                  "description": "Start video when participants join the meeting."
                },
                "cn_meeting": {
                  "type": "boolean",
                  "description": "Host meeting in China.",
                  "default": false
                },
                "in_meeting": {
                  "type": "boolean",
                  "description": "Host meeting in India.",
                  "default": false
                },
                "join_before_host": {
                  "type": "boolean",
                  "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                  "default": false
                },
                "mute_upon_entry": {
                  "type": "boolean",
                  "description": "Mute participants upon entry.",
                  "default": false
                },
                "watermark": {
                  "type": "boolean",
                  "description": "Add watermark when viewing a shared screen.",
                  "default": false
                },
                "use_pmi": {
                  "type": "boolean",
                  "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                  "default": false
                },
                "approval_type": {
                  "type": "integer",
                  "default": 2,
                  "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Automatically Approve",
                    "Manually Approve",
                    "No Registration Required"
                  ]
                },
                "registration_type": {
                  "type": "integer",
                  "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                  "default": 1,
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Attendees register once and can attend any of the occurrences",
                    "Attendees need to register for each occurrence to attend",
                    "Attendees register once and can choose one or more occurrences to attend"
                  ]
                },
                "audio": {
                  "type": "string",
                  "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                  "default": "both",
                  "enum": [
                    "both",
                    "telephony",
                    "voip"
                  ],
                  "x-enum-descriptions": [
                    "Both Telephony and VoIP",
                    "Telephony only",
                    "VoIP only"
                  ]
                },
                "auto_recording": {
                  "type": "string",
                  "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                  "default": "none",
                  "enum": [
                    "local",
                    "cloud",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Record to local device",
                    "Record to cloud",
                    "No Recording"
                  ]
                },
                "enforce_login": {
                  "type": "boolean",
                  "description": "Only signed in users can join this meeting."
                },
                "enforce_login_domains": {
                  "type": "string",
                  "description": "Only signed in users with specified domains can join meetings."
                },
                "alternative_hosts": {
                  "type": "string",
                  "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                },
                "close_registration": {
                  "type": "boolean",
                  "description": "Close registration after event date",
                  "default": false
                },
                "waiting_room": {
                  "type": "boolean",
                  "description": "Enable waiting room",
                  "default": false
                },
                "global_dial_in_countries": {
                  "type": "array",
                  "description": "List of global dial-in countries",
                  "items": {
                    "type": "string"
                  }
                },
                "global_dial_in_numbers": {
                  "type": "array",
                  "description": "Global Dial-in Countries/Regions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string",
                        "description": "Country code. For example, BR."
                      },
                      "country_name": {
                        "type": "string",
                        "description": "Full name of country. For example, Brazil."
                      },
                      "city": {
                        "type": "string",
                        "description": "City of the number, if any. For example, Chicago."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number. For example, +1 2332357613."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of number. ",
                        "enum": [
                          "toll",
                          "tollfree"
                        ]
                      }
                    }
                  }
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact name for registration"
                },
                "contact_email": {
                  "type": "string",
                  "description": "Contact email for registration"
                },
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation email to registrants"
                },
                "registrants_email_notification": {
                  "type": "boolean",
                  "description": "registrants email notification"
                },
                "meeting_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can join meetings"
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Meeting authentication option id"
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Meeting authentication_domains"
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "MeetingUpdate": {
      "description": "Meeting object",
      "allOf": [
        {
          "type": "object",
          "description": "Base object for sessions.",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Meeting topic."
            },
            "type": {
              "type": "integer",
              "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
              "default": 2,
              "enum": [
                1,
                2,
                3,
                8
              ],
              "x-enum-descriptions": [
                "Instant Meeting",
                "Scheduled Meeting",
                "Recurring Meeting with no fixed time",
                "Recurring Meeting with fixed time"
              ]
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time."
            },
            "duration": {
              "type": "integer",
              "description": "Meeting duration (minutes). Used for scheduled meetings only."
            },
            "timezone": {
              "type": "string",
              "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
            },
            "password": {
              "type": "string",
              "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
              "maxLength": 10
            },
            "agenda": {
              "type": "string",
              "description": "Meeting description.",
              "maxLength": 2000
            },
            "tracking_fields": {
              "type": "array",
              "description": "Tracking fields",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Tracking fields type"
                  },
                  "value": {
                    "type": "string",
                    "description": "Tracking fields value"
                  }
                }
              }
            },
            "recurrence": {
              "type": "object",
              "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Daily",
                    "Weekly",
                    "Monthly"
                  ]
                },
                "repeat_interval": {
                  "type": "integer",
                  "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                },
                "weekly_days": {
                  "type": "string",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                  ]
                },
                "monthly_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                },
                "monthly_week": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                  "enum": [
                    -1,
                    1,
                    2,
                    3,
                    4
                  ],
                  "x-enum-descriptions": [
                    "Last week",
                    "First week",
                    "Second week",
                    "Third week",
                    "Fourth week"
                  ]
                },
                "monthly_week_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "x-enum-descriptions": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ]
                },
                "end_times": {
                  "type": "integer",
                  "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                  "default": 1,
                  "maximum": 50
                },
                "end_date_time": {
                  "type": "string",
                  "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                  "format": "date-time"
                }
              },
              "required": [
                "type"
              ]
            },
            "settings": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Meeting settings.",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start video when the host joins the meeting."
                    },
                    "participant_video": {
                      "type": "boolean",
                      "description": "Start video when participants join the meeting."
                    },
                    "cn_meeting": {
                      "type": "boolean",
                      "description": "Host meeting in China.",
                      "default": false
                    },
                    "in_meeting": {
                      "type": "boolean",
                      "description": "Host meeting in India.",
                      "default": false
                    },
                    "join_before_host": {
                      "type": "boolean",
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "default": false
                    },
                    "mute_upon_entry": {
                      "type": "boolean",
                      "description": "Mute participants upon entry.",
                      "default": false
                    },
                    "watermark": {
                      "type": "boolean",
                      "description": "Add watermark when viewing a shared screen.",
                      "default": false
                    },
                    "use_pmi": {
                      "type": "boolean",
                      "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "default": false
                    },
                    "approval_type": {
                      "type": "integer",
                      "default": 2,
                      "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "x-enum-descriptions": [
                        "Automatically Approve",
                        "Manually Approve",
                        "No Registration Required"
                      ]
                    },
                    "registration_type": {
                      "type": "integer",
                      "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                      "default": 1,
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Attendees register once and can attend any of the occurrences",
                        "Attendees need to register for each occurrence to attend",
                        "Attendees register once and can choose one or more occurrences to attend"
                      ]
                    },
                    "audio": {
                      "type": "string",
                      "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                      "default": "both",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ],
                      "x-enum-descriptions": [
                        "Both Telephony and VoIP",
                        "Telephony only",
                        "VoIP only"
                      ]
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                      "default": "none",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ],
                      "x-enum-descriptions": [
                        "Record to local device",
                        "Record to cloud",
                        "No Recording"
                      ]
                    },
                    "enforce_login": {
                      "type": "boolean",
                      "description": "Only signed in users can join this meeting."
                    },
                    "enforce_login_domains": {
                      "type": "string",
                      "description": "Only signed in users with specified domains can join meetings."
                    },
                    "alternative_hosts": {
                      "type": "string",
                      "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                    },
                    "close_registration": {
                      "type": "boolean",
                      "description": "Close registration after event date",
                      "default": false
                    },
                    "waiting_room": {
                      "type": "boolean",
                      "description": "Enable waiting room",
                      "default": false
                    },
                    "global_dial_in_countries": {
                      "type": "array",
                      "description": "List of global dial-in countries",
                      "items": {
                        "type": "string"
                      }
                    },
                    "global_dial_in_numbers": {
                      "type": "array",
                      "description": "Global Dial-in Countries/Regions",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string",
                            "description": "Country code. For example, BR."
                          },
                          "country_name": {
                            "type": "string",
                            "description": "Full name of country. For example, Brazil."
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the number, if any. For example, Chicago."
                          },
                          "number": {
                            "type": "string",
                            "description": "Phone number. For example, +1 2332357613."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of number. ",
                            "enum": [
                              "toll",
                              "tollfree"
                            ]
                          }
                        }
                      }
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "Contact name for registration"
                    },
                    "contact_email": {
                      "type": "string",
                      "description": "Contact email for registration"
                    },
                    "registrants_confirmation_email": {
                      "type": "boolean",
                      "description": "Send confirmation email to registrants"
                    },
                    "registrants_email_notification": {
                      "type": "boolean",
                      "description": "registrants email notification"
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can join meetings"
                    },
                    "authentication_option": {
                      "type": "string",
                      "description": "Meeting authentication option id"
                    },
                    "authentication_domains": {
                      "type": "string",
                      "description": "Meeting authentication_domains"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "registrants_confirmation_email": {
                      "type": "boolean",
                      "description": "Send confirmation Email to Registrants"
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "type": "object"
    },
    "MeetingInfo": {
      "type": "object",
      "description": "Meeting object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start date-time in UTC/GMT. Example: \"2020-03-31T12:02:00Z\""
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time at which this meeting was created."
        },
        "agenda": {
          "type": "string",
          "description": "Agenda"
        },
        "start_url": {
          "type": "string",
          "description": "URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
        },
        "join_url": {
          "type": "string",
          "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting."
        },
        "password": {
          "type": "string",
          "description": "Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`"
        },
        "h323_password": {
          "type": "string",
          "description": "H.323/SIP room system password"
        },
        "pmi": {
          "type": "integer",
          "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "format": "int64"
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "occurrences": {
          "type": "array",
          "description": "Array of occurrence objects.",
          "items": {
            "type": "object",
            "description": "Occurence object. This object is only returned for Recurring Webinars.",
            "properties": {
              "occurrence_id": {
                "type": "string",
                "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
              },
              "start_time": {
                "type": "string",
                "format": "date-time",
                "description": "Start time."
              },
              "duration": {
                "type": "integer",
                "description": "Duration."
              },
              "status": {
                "type": "string",
                "description": "Occurrence status."
              }
            }
          }
        },
        "settings": {
          "type": "object",
          "description": "Meeting settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when the host joins the meeting."
            },
            "participant_video": {
              "type": "boolean",
              "description": "Start video when participants join the meeting."
            },
            "cn_meeting": {
              "type": "boolean",
              "description": "Host meeting in China.",
              "default": false
            },
            "in_meeting": {
              "type": "boolean",
              "description": "Host meeting in India.",
              "default": false
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "default": false
            },
            "mute_upon_entry": {
              "type": "boolean",
              "description": "Mute participants upon entry.",
              "default": false
            },
            "watermark": {
              "type": "boolean",
              "description": "Add watermark when viewing a shared screen.",
              "default": false
            },
            "use_pmi": {
              "type": "boolean",
              "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed in users can join this meeting."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed in users with specified domains can join meetings."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host's emails or IDs: multiple values separated by a comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date",
              "default": false
            },
            "waiting_room": {
              "type": "boolean",
              "description": "Enable waiting room",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "global_dial_in_numbers": {
              "type": "array",
              "description": "Global Dial-in Countries/Regions",
              "items": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "Country code. For example, BR."
                  },
                  "country_name": {
                    "type": "string",
                    "description": "Full name of country. For example, Brazil."
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the number, if any. For example, Chicago."
                  },
                  "number": {
                    "type": "string",
                    "description": "Phone number. For example, +1 2332357613."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of number. ",
                    "enum": [
                      "toll",
                      "tollfree"
                    ]
                  }
                }
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_confirmation_email": {
              "type": "boolean",
              "description": "Send confirmation email to registrants"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "string",
              "description": "Meeting authentication option id"
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication_domains"
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "MeetingInfoGet": {
      "type": "object",
      "description": "Meeting object.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic."
        },
        "type": {
          "type": "integer",
          "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "status": {
          "type": "string",
          "description": "Meeting status",
          "enum": [
            "waiting",
            "started",
            "finished"
          ],
          "x-enum-descriptions": [
            "Waiting",
            "Started",
            "Finished"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time in GMT/UTC.\n"
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration."
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format the meeting start time on the ."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time of creation. "
        },
        "agenda": {
          "type": "string",
          "description": "Agenda."
        },
        "start_url": {
          "type": "string",
          "description": "<br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
        },
        "join_url": {
          "type": "string",
          "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting."
        },
        "password": {
          "type": "string",
          "description": "Meeting password.",
          "minimum": 8
        },
        "h323_password": {
          "type": "string",
          "description": "H.323/SIP room system password."
        },
        "encrypted_password": {
          "type": "string",
          "description": "Encrypted password for third party endpoints (H323/SIP)."
        },
        "pmi": {
          "type": "integer",
          "description": "Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "format": "int64"
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "occurrences": {
          "type": "array",
          "description": "Array of occurrence objects.",
          "items": {
            "type": "object",
            "description": "Occurence object. This object is only returned for Recurring Webinars.",
            "properties": {
              "occurrence_id": {
                "type": "string",
                "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
              },
              "start_time": {
                "type": "string",
                "format": "date-time",
                "description": "Start time."
              },
              "duration": {
                "type": "integer",
                "description": "Duration."
              },
              "status": {
                "type": "string",
                "description": "Occurrence status."
              }
            }
          }
        },
        "settings": {
          "type": "object",
          "description": "Meeting settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when the host joins the meeting."
            },
            "participant_video": {
              "type": "boolean",
              "description": "Start video when participants join the meeting."
            },
            "cn_meeting": {
              "type": "boolean",
              "description": "Host meeting in China.",
              "default": false
            },
            "in_meeting": {
              "type": "boolean",
              "description": "Host meeting in India.",
              "default": false
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "default": false
            },
            "mute_upon_entry": {
              "type": "boolean",
              "description": "Mute participants upon entry.",
              "default": false
            },
            "watermark": {
              "type": "boolean",
              "description": "Add watermark when viewing a shared screen.",
              "default": false
            },
            "use_pmi": {
              "type": "boolean",
              "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed in users can join this meeting."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed in users with specified domains can join meetings."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host's emails or IDs: multiple values separated by a comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date",
              "default": false
            },
            "waiting_room": {
              "type": "boolean",
              "description": "Enable waiting room",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "global_dial_in_numbers": {
              "type": "array",
              "description": "Global Dial-in Countries/Regions",
              "items": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "Country code. For example, BR."
                  },
                  "country_name": {
                    "type": "string",
                    "description": "Full name of country. For example, Brazil."
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the number, if any. For example, Chicago."
                  },
                  "number": {
                    "type": "string",
                    "description": "Phone number. For example, +1 2332357613."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of number. ",
                    "enum": [
                      "toll",
                      "tollfree"
                    ]
                  }
                }
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_confirmation_email": {
              "type": "boolean",
              "description": "Send confirmation email to registrants"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "string",
              "description": "Meeting authentication option id"
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication_domains"
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "MeetingList": {
      "title": "Group List",
      "description": "List of meetings.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "description": "List of Meeting objects.",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Unique Meeting ID. Each meeting instance will generate its own Meeting UUID."
                      },
                      "id": {
                        "type": "string",
                        "description": "Meeting ID - also known as the meeting number."
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the user who is set as the host of the meeting."
                      },
                      "topic": {
                        "type": "string",
                        "description": "Meeting topic."
                      },
                      "type": {
                        "type": "integer",
                        "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
                        "enum": [
                          1,
                          2,
                          3,
                          8
                        ],
                        "x-enum-descriptions": [
                          "Instant Meeting",
                          "Scheduled Meeting",
                          "Recurring Meeting with no fixed time",
                          "Recurring Meeting with fixed time"
                        ]
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Meeting start time."
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Meeting duration."
                      },
                      "timezone": {
                        "type": "string",
                        "description": "Timezone to format the meeting start time. "
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of creation. "
                      },
                      "join_url": {
                        "type": "string",
                        "description": "Join URL."
                      },
                      "agenda": {
                        "type": "string",
                        "description": "Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting)."
                      }
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "MeetingMetric": {
      "type": "object",
      "title": "Meeting Metrics",
      "description": "Meeting metric details.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it."
        },
        "id": {
          "type": "integer",
          "description": "Meeting ID."
        },
        "topic": {
          "type": "string",
          "description": "Meeting topic."
        },
        "host": {
          "type": "string",
          "description": "Host display name."
        },
        "email": {
          "type": "string",
          "description": "Email address of the host."
        },
        "user_type": {
          "type": "string",
          "description": "License type of the user."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time."
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting end time."
        },
        "duration": {
          "type": "string",
          "description": "Meeting duration."
        },
        "participants": {
          "type": "integer",
          "description": "Meeting participant count."
        },
        "has_pstn": {
          "type": "boolean",
          "description": "Indicates whether or not the PSTN was used in the meeting."
        },
        "has_voip": {
          "type": "boolean",
          "description": "Indicates whether or not VoIP was used in the meeting."
        },
        "has_3rd_party_audio": {
          "type": "boolean",
          "description": "Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting."
        },
        "has_video": {
          "type": "boolean",
          "description": "Indicates whether or not video was used in the meeting."
        },
        "has_screen_share": {
          "type": "boolean",
          "description": "Indicates whether or not screenshare feature was used in the meeting."
        },
        "has_recording": {
          "type": "boolean",
          "description": "Indicates whether or not the recording feature was used in the meeting. "
        },
        "has_sip": {
          "type": "boolean",
          "description": "Indicates whether or not someone joined the meeting using SIP."
        },
        "in_room_participants": {
          "type": "integer",
          "description": "The number of Zoom Room participants in the meeting."
        },
        "dept": {
          "type": "string",
          "description": "Department of the host."
        }
      }
    },
    "MeetingInvitation": {
      "type": "object",
      "title": "Meeting Invitation",
      "description": "Meeting invitation details.",
      "properties": {
        "invitation": {
          "type": "string",
          "description": "Meeting invitation."
        }
      }
    },
    "MeetingSettings": {
      "type": "object",
      "description": "Meeting settings.",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start video when the host joins the meeting."
        },
        "participant_video": {
          "type": "boolean",
          "description": "Start video when participants join the meeting."
        },
        "cn_meeting": {
          "type": "boolean",
          "description": "Host meeting in China.",
          "default": false
        },
        "in_meeting": {
          "type": "boolean",
          "description": "Host meeting in India.",
          "default": false
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
          "default": false
        },
        "mute_upon_entry": {
          "type": "boolean",
          "description": "Mute participants upon entry.",
          "default": false
        },
        "watermark": {
          "type": "boolean",
          "description": "Add watermark when viewing a shared screen.",
          "default": false
        },
        "use_pmi": {
          "type": "boolean",
          "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Automatically Approve",
            "Manually Approve",
            "No Registration Required"
          ]
        },
        "registration_type": {
          "type": "integer",
          "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Attendees register once and can attend any of the occurrences",
            "Attendees need to register for each occurrence to attend",
            "Attendees register once and can choose one or more occurrences to attend"
          ]
        },
        "audio": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip"
          ],
          "x-enum-descriptions": [
            "Both Telephony and VoIP",
            "Telephony only",
            "VoIP only"
          ]
        },
        "auto_recording": {
          "type": "string",
          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record to local device",
            "Record to cloud",
            "No Recording"
          ]
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed in users can join this meeting."
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed in users with specified domains can join meetings."
        },
        "alternative_hosts": {
          "type": "string",
          "description": "Alternative host's emails or IDs: multiple values separated by a comma."
        },
        "close_registration": {
          "type": "boolean",
          "description": "Close registration after event date",
          "default": false
        },
        "waiting_room": {
          "type": "boolean",
          "description": "Enable waiting room",
          "default": false
        },
        "global_dial_in_countries": {
          "type": "array",
          "description": "List of global dial-in countries",
          "items": {
            "type": "string"
          }
        },
        "global_dial_in_numbers": {
          "type": "array",
          "description": "Global Dial-in Countries/Regions",
          "items": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "Country code. For example, BR."
              },
              "country_name": {
                "type": "string",
                "description": "Full name of country. For example, Brazil."
              },
              "city": {
                "type": "string",
                "description": "City of the number, if any. For example, Chicago."
              },
              "number": {
                "type": "string",
                "description": "Phone number. For example, +1 2332357613."
              },
              "type": {
                "type": "string",
                "description": "Type of number. ",
                "enum": [
                  "toll",
                  "tollfree"
                ]
              }
            }
          }
        },
        "contact_name": {
          "type": "string",
          "description": "Contact name for registration"
        },
        "contact_email": {
          "type": "string",
          "description": "Contact email for registration"
        },
        "registrants_confirmation_email": {
          "type": "boolean",
          "description": "Send confirmation email to registrants"
        },
        "registrants_email_notification": {
          "type": "boolean",
          "description": "registrants email notification"
        },
        "meeting_authentication": {
          "type": "boolean",
          "description": "Only authenticated users can join meetings"
        },
        "authentication_option": {
          "type": "string",
          "description": "Meeting authentication option id"
        },
        "authentication_domains": {
          "type": "string",
          "description": "Meeting authentication_domains"
        }
      }
    },
    "MeetingRegistrant": {
      "description": " Registrant.",
      "allOf": [
        {
          "type": "object",
          "description": "Registrant base object.",
          "properties": {
            "email": {
              "type": "string",
              "description": "A valid email address of the registrant."
            },
            "first_name": {
              "type": "string",
              "description": "Registrant's first name."
            },
            "last_name": {
              "type": "string",
              "description": "Registrant's last name."
            },
            "address": {
              "type": "string",
              "description": "Registrant's address."
            },
            "city": {
              "type": "string",
              "description": "Registrant's city."
            },
            "country": {
              "type": "string",
              "description": "Registrant's country."
            },
            "zip": {
              "type": "string",
              "description": "Registrant's Zip/Postal Code."
            },
            "state": {
              "type": "string",
              "description": "Registrant's State/Province."
            },
            "phone": {
              "type": "string",
              "description": "Registrant's Phone number."
            },
            "industry": {
              "type": "string",
              "description": "Registrant's Industry."
            },
            "org": {
              "type": "string",
              "description": "Registrant's Organization."
            },
            "job_title": {
              "type": "string",
              "description": "Registrant's job title."
            },
            "purchasing_time_frame": {
              "type": "string",
              "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
            },
            "role_in_purchase_process": {
              "type": "string",
              "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
            },
            "no_of_employees": {
              "type": "string",
              "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
            },
            "comments": {
              "type": "string",
              "description": "A field that allows registrants to provide any questions or comments that they might have."
            },
            "custom_questions": {
              "type": "array",
              "description": "Custom questions.",
              "items": {
                "type": "object",
                "description": "Custom Question.",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "email",
            "first_name",
            "last_name"
          ]
        }
      ],
      "type": "object"
    },
    "MeetingRegistrantList": {
      "title": "Registration List",
      "description": "List of users.",
      "allOf": [
        {
          "title": "Registration List",
          "description": "List of users.",
          "allOf": [
            {
              "type": "object",
              "description": "Pagination Object.",
              "properties": {
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned for the request made."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results.",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call.",
                  "default": 30,
                  "maximum": 300
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of all the records available across pages."
                }
              }
            },
            {
              "properties": {
                "registrants": {
                  "type": "array",
                  "description": "List of registrant objects.",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Registrant ID."
                          }
                        }
                      },
                      {
                        "description": " Registrant.",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Registrant base object.",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "A valid email address of the registrant."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "Registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Registrant's last name."
                              },
                              "address": {
                                "type": "string",
                                "description": "Registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "Registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "Registrant's country."
                              },
                              "zip": {
                                "type": "string",
                                "description": "Registrant's Zip/Postal Code."
                              },
                              "state": {
                                "type": "string",
                                "description": "Registrant's State/Province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "Registrant's Phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "Registrant's Industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "Registrant's Organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "Registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                              },
                              "comments": {
                                "type": "string",
                                "description": "A field that allows registrants to provide any questions or comments that they might have."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Custom questions.",
                                "items": {
                                  "type": "object",
                                  "description": "Custom Question.",
                                  "properties": {
                                    "title": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "email",
                              "first_name",
                              "last_name"
                            ]
                          }
                        ],
                        "type": "object"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                          },
                          "create_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the registrant registered."
                          },
                          "join_url": {
                            "type": "string",
                            "format": "string",
                            "description": "The URL using which an approved registrant can join the webinar."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "type": "object"
        }
      ],
      "type": "object"
    },
    "MeetingRecordingRegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of meeting recording registrant",
      "allOf": [
        {
          "type": "object",
          "title": "Recording Registration List",
          "description": "List of Recording Registration",
          "allOf": [
            {
              "type": "object",
              "description": "Pagination Object.",
              "properties": {
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned for the request made."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results.",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call.",
                  "default": 30,
                  "maximum": 300
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of all the records available across pages."
                }
              }
            },
            {
              "properties": {
                "registrants": {
                  "type": "array",
                  "description": "List of Registrant objects",
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": " Registrant.",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Registrant base object.",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "A valid email address of the registrant."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "Registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Registrant's last name."
                              },
                              "address": {
                                "type": "string",
                                "description": "Registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "Registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "Registrant's country."
                              },
                              "zip": {
                                "type": "string",
                                "description": "Registrant's Zip/Postal Code."
                              },
                              "state": {
                                "type": "string",
                                "description": "Registrant's State/Province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "Registrant's Phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "Registrant's Industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "Registrant's Organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "Registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                              },
                              "comments": {
                                "type": "string",
                                "description": "A field that allows registrants to provide any questions or comments that they might have."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Custom questions.",
                                "items": {
                                  "type": "object",
                                  "description": "Custom Question.",
                                  "properties": {
                                    "title": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "email",
                              "first_name",
                              "last_name"
                            ]
                          }
                        ],
                        "type": "object"
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "MeetingLiveStream": {
      "type": "object",
      "description": "Meeting live stream.",
      "properties": {
        "stream_url": {
          "type": "string",
          "maxLength": 1024,
          "description": "Streaming URL."
        },
        "stream_key": {
          "type": "string",
          "maxLength": 512,
          "description": "Stream name and key."
        },
        "page_url": {
          "type": "string",
          "description": "The livestream page URL.",
          "format": "uri",
          "maxLength": 1024
        }
      },
      "required": [
        "stream_url",
        "stream_key"
      ]
    },
    "MeetingLiveStreamStatus": {
      "type": "object",
      "description": "Meeting live stream status.",
      "properties": {
        "action": {
          "type": "string",
          "description": "Action.",
          "enum": [
            "start",
            "stop"
          ],
          "x-enum-descriptions": [
            "Start a meeting live stream.",
            "Stop a meeting live stream."
          ]
        },
        "settings": {
          "type": "object",
          "properties": {
            "active_speaker_name": {
              "type": "boolean",
              "description": "Display the name of the active speaker during a livestream."
            },
            "display_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "description": "Live stream display name."
            }
          }
        }
      }
    },
    "MeetingInstances": {
      "type": "object",
      "title": "Meeting instances",
      "description": "List of Meetings",
      "allOf": [
        {
          "properties": {
            "meetings": {
              "type": "array",
              "description": "List of ended meeting instances.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "MeetingUUID"
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "Occurrence": {
      "type": "object",
      "description": "Occurence object. This object is only returned for Recurring Webinars.",
      "properties": {
        "occurrence_id": {
          "type": "string",
          "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Start time."
        },
        "duration": {
          "type": "integer",
          "description": "Duration."
        },
        "status": {
          "type": "string",
          "description": "Occurrence status."
        }
      }
    },
    "Occurrences": {
      "type": "array",
      "description": "Array of occurrence objects.",
      "items": {
        "type": "object",
        "description": "Occurence object. This object is only returned for Recurring Webinars.",
        "properties": {
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time."
          },
          "duration": {
            "type": "integer",
            "description": "Duration."
          },
          "status": {
            "type": "string",
            "description": "Occurrence status."
          }
        }
      }
    },
    "Pagination": {
      "type": "object",
      "description": "Pagination Object.",
      "properties": {
        "page_count": {
          "type": "integer",
          "description": "The number of pages returned for the request made."
        },
        "page_number": {
          "type": "integer",
          "description": "The page number of the current results.",
          "default": 1
        },
        "page_size": {
          "type": "integer",
          "description": "The number of records returned with a single API call.",
          "default": 30,
          "maximum": 300
        },
        "total_records": {
          "type": "integer",
          "description": "The total number of all the records available across pages."
        }
      }
    },
    "PaginationToken": {
      "type": "object",
      "description": "Pagination object.",
      "properties": {
        "page_count": {
          "type": "integer",
          "description": "The number of pages returned for the request made."
        },
        "page_size": {
          "type": "integer",
          "description": "The number of records returned within a single API call.",
          "default": 30,
          "maximum": 300
        },
        "total_records": {
          "type": "integer",
          "description": "The number of all records available across pages."
        },
        "next_page_token": {
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4Qos": {
      "type": "object",
      "description": "Pagination object.",
      "properties": {
        "page_count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of pages returned for the request made."
        },
        "page_size": {
          "type": "integer",
          "description": "The number of items per page.",
          "default": 1,
          "maximum": 10
        },
        "total_records": {
          "type": "integer",
          "format": "int64",
          "description": "The number of all records available across pages."
        },
        "next_page_token": {
          "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4IMChat": {
      "type": "object",
      "description": "Pagination object.",
      "properties": {
        "page_size": {
          "type": "integer",
          "description": "The amount of records returns within a single API call. ",
          "default": 30,
          "maximum": 300
        },
        "next_page_token": {
          "description": "The Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
          "type": "string"
        }
      }
    },
    "Panelist": {
      "type": "object",
      "description": "Panelist base object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Panelist's full name."
        },
        "email": {
          "type": "string",
          "description": "Panelist's email.",
          "format": "email"
        }
      }
    },
    "PanelistList": {
      "type": "object",
      "title": "Panelist List",
      "description": "List of panelists.",
      "properties": {
        "total_records": {
          "type": "integer",
          "description": "Total records."
        },
        "panelists": {
          "type": "array",
          "description": "List of panelist objects.",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Panelist's ID."
                  }
                }
              },
              {
                "type": "object",
                "description": "Panelist base object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Panelist's full name."
                  },
                  "email": {
                    "type": "string",
                    "description": "Panelist's email.",
                    "format": "email"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "join_url": {
                    "type": "string",
                    "description": "Join URL."
                  }
                }
              }
            ]
          }
        }
      }
    },
    "QOSAudio": {
      "type": "object",
      "title": "QOS Object",
      "description": "Quality of Service object.",
      "properties": {
        "bitrate": {
          "type": "string",
          "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
        },
        "latency": {
          "type": "string",
          "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
        },
        "jitter": {
          "type": "string",
          "description": "Jitter:  the variation in the delay of received packets."
        },
        "avg_loss": {
          "type": "string",
          "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
        },
        "max_loss": {
          "type": "string",
          "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
        }
      }
    },
    "QOSParticipantList": {
      "title": "Participant QOS List",
      "description": "Participant QOS list.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of pages returned for the request made."
            },
            "page_size": {
              "type": "integer",
              "description": "The number of items per page.",
              "default": 1,
              "maximum": 10
            },
            "total_records": {
              "type": "integer",
              "format": "int64",
              "description": "The number of all records available across pages."
            },
            "next_page_token": {
              "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "participants": {
              "type": "array",
              "description": "Array of user objects.",
              "items": {
                "type": "object",
                "title": "Participant QOS",
                "description": "Participant QOS.",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Participant ID."
                  },
                  "user_name": {
                    "type": "string",
                    "description": "Participant display name."
                  },
                  "device": {
                    "type": "string",
                    "description": "The type of device using which the participant joined the meeting."
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "Participant's IP address."
                  },
                  "location": {
                    "type": "string",
                    "description": "Participant's location."
                  },
                  "join_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which participant joined the meeting."
                  },
                  "leave_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which participant left the meeting."
                  },
                  "pc_name": {
                    "type": "string",
                    "description": "Participant's PC name."
                  },
                  "domain": {
                    "type": "string",
                    "description": "Participant's PC domain."
                  },
                  "mac_addr": {
                    "type": "string",
                    "description": "Participant's MAC address."
                  },
                  "harddisk_id": {
                    "type": "string",
                    "description": "Participant's hard disk ID."
                  },
                  "version": {
                    "type": "string",
                    "description": "Participant's Zoom Client version."
                  },
                  "user_qos": {
                    "type": "array",
                    "description": "Quality of service provided to the user.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date-time of QOS"
                        },
                        "audio_input": {
                          "type": "object",
                          "title": "QOS Object",
                          "description": "Quality of Service object.",
                          "properties": {
                            "bitrate": {
                              "type": "string",
                              "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                            },
                            "latency": {
                              "type": "string",
                              "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                            },
                            "jitter": {
                              "type": "string",
                              "description": "Jitter:  the variation in the delay of received packets."
                            },
                            "avg_loss": {
                              "type": "string",
                              "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                            },
                            "max_loss": {
                              "type": "string",
                              "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                            }
                          }
                        },
                        "audio_output": {
                          "type": "object",
                          "title": "QOS Object",
                          "description": "Quality of Service object.",
                          "properties": {
                            "bitrate": {
                              "type": "string",
                              "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                            },
                            "latency": {
                              "type": "string",
                              "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                            },
                            "jitter": {
                              "type": "string",
                              "description": "Jitter:  the variation in the delay of received packets."
                            },
                            "avg_loss": {
                              "type": "string",
                              "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                            },
                            "max_loss": {
                              "type": "string",
                              "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                            }
                          }
                        },
                        "video_input": {
                          "title": "QOS Object",
                          "description": "Quality of service object.",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "QOS Object",
                              "description": "Quality of Service object.",
                              "properties": {
                                "bitrate": {
                                  "type": "string",
                                  "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                },
                                "latency": {
                                  "type": "string",
                                  "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                },
                                "jitter": {
                                  "type": "string",
                                  "description": "Jitter:  the variation in the delay of received packets."
                                },
                                "avg_loss": {
                                  "type": "string",
                                  "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                },
                                "max_loss": {
                                  "type": "string",
                                  "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                }
                              }
                            },
                            {
                              "properties": {
                                "resolution": {
                                  "type": "string",
                                  "description": "Resolution."
                                },
                                "frame_rate": {
                                  "type": "string",
                                  "description": "Frame rate."
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "video_output": {
                          "title": "QOS Object",
                          "description": "Quality of service object.",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "QOS Object",
                              "description": "Quality of Service object.",
                              "properties": {
                                "bitrate": {
                                  "type": "string",
                                  "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                },
                                "latency": {
                                  "type": "string",
                                  "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                },
                                "jitter": {
                                  "type": "string",
                                  "description": "Jitter:  the variation in the delay of received packets."
                                },
                                "avg_loss": {
                                  "type": "string",
                                  "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                },
                                "max_loss": {
                                  "type": "string",
                                  "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                }
                              }
                            },
                            {
                              "properties": {
                                "resolution": {
                                  "type": "string",
                                  "description": "Resolution."
                                },
                                "frame_rate": {
                                  "type": "string",
                                  "description": "Frame rate."
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "as_input": {
                          "title": "QOS Object",
                          "description": "Quality of service object.",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "QOS Object",
                              "description": "Quality of Service object.",
                              "properties": {
                                "bitrate": {
                                  "type": "string",
                                  "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                },
                                "latency": {
                                  "type": "string",
                                  "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                },
                                "jitter": {
                                  "type": "string",
                                  "description": "Jitter:  the variation in the delay of received packets."
                                },
                                "avg_loss": {
                                  "type": "string",
                                  "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                },
                                "max_loss": {
                                  "type": "string",
                                  "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                }
                              }
                            },
                            {
                              "properties": {
                                "resolution": {
                                  "type": "string",
                                  "description": "Resolution."
                                },
                                "frame_rate": {
                                  "type": "string",
                                  "description": "Frame rate."
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "as_output": {
                          "title": "QOS Object",
                          "description": "Quality of service object.",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "QOS Object",
                              "description": "Quality of Service object.",
                              "properties": {
                                "bitrate": {
                                  "type": "string",
                                  "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                                },
                                "latency": {
                                  "type": "string",
                                  "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                                },
                                "jitter": {
                                  "type": "string",
                                  "description": "Jitter:  the variation in the delay of received packets."
                                },
                                "avg_loss": {
                                  "type": "string",
                                  "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                                },
                                "max_loss": {
                                  "type": "string",
                                  "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                                }
                              }
                            },
                            {
                              "properties": {
                                "resolution": {
                                  "type": "string",
                                  "description": "Resolution."
                                },
                                "frame_rate": {
                                  "type": "string",
                                  "description": "Frame rate."
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "cpu_usage": {
                          "type": "object",
                          "properties": {
                            "zoom_min_cpu_usage": {
                              "type": "string",
                              "description": "Zoom Minimum CPU Usage"
                            },
                            "zoom_avg_cpu_usage": {
                              "type": "string",
                              "description": "Zoom Average CPU Usage"
                            },
                            "zoom_max_cpu_usage": {
                              "type": "string",
                              "description": "Zoom Maximum CPU Usage"
                            },
                            "system_max_cpu_usage": {
                              "type": "string",
                              "description": "System Maximum CPU Usage"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "QOSVideo": {
      "title": "QOS Object",
      "description": "Quality of service object.",
      "allOf": [
        {
          "type": "object",
          "title": "QOS Object",
          "description": "Quality of Service object.",
          "properties": {
            "bitrate": {
              "type": "string",
              "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
            },
            "latency": {
              "type": "string",
              "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
            },
            "jitter": {
              "type": "string",
              "description": "Jitter:  the variation in the delay of received packets."
            },
            "avg_loss": {
              "type": "string",
              "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
            },
            "max_loss": {
              "type": "string",
              "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
            }
          }
        },
        {
          "properties": {
            "resolution": {
              "type": "string",
              "description": "Resolution."
            },
            "frame_rate": {
              "type": "string",
              "description": "Frame rate."
            }
          }
        }
      ],
      "type": "object"
    },
    "Recording": {
      "type": "object",
      "description": "Recording file object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The recording file ID. Included in the response of general query."
        },
        "meeting_id": {
          "type": "string",
          "description": "The meeting ID. "
        },
        "recording_start": {
          "type": "string",
          "description": "The recording start time."
        },
        "recording_end": {
          "type": "string",
          "description": "The recording end time. Response in general query."
        },
        "file_type": {
          "type": "string",
          "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
        },
        "file_size": {
          "type": "number",
          "description": "The recording file size."
        },
        "play_url": {
          "type": "string",
          "description": "The URL using which a recording file can be played."
        },
        "download_url": {
          "type": "string",
          "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
        },
        "status": {
          "type": "string",
          "description": "The recording status."
        },
        "deleted_time": {
          "type": "string",
          "description": "The time at which recording was deleted. Returned in the response only for trash query."
        },
        "recording_type": {
          "type": "string",
          "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
        }
      }
    },
    "RecordingList": {
      "title": "Recording file List",
      "description": "List of recording file.",
      "allOf": [
        {
          "properties": {
            "recording_files": {
              "type": "array",
              "title": "Recording file List",
              "description": "List of recording file.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Recording file object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The recording file ID. Included in the response of general query."
                      },
                      "meeting_id": {
                        "type": "string",
                        "description": "The meeting ID. "
                      },
                      "recording_start": {
                        "type": "string",
                        "description": "The recording start time."
                      },
                      "recording_end": {
                        "type": "string",
                        "description": "The recording end time. Response in general query."
                      },
                      "file_type": {
                        "type": "string",
                        "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                      },
                      "file_size": {
                        "type": "number",
                        "description": "The recording file size."
                      },
                      "play_url": {
                        "type": "string",
                        "description": "The URL using which a recording file can be played."
                      },
                      "download_url": {
                        "type": "string",
                        "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
                      },
                      "status": {
                        "type": "string",
                        "description": "The recording status."
                      },
                      "deleted_time": {
                        "type": "string",
                        "description": "The time at which recording was deleted. Returned in the response only for trash query."
                      },
                      "recording_type": {
                        "type": "string",
                        "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "RecordingMeeting": {
      "description": "The recording meeting object.",
      "allOf": [
        {
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID."
            },
            "id": {
              "type": "string",
              "description": "Meeting ID - also known as the meeting number."
            },
            "account_id": {
              "type": "string",
              "description": "Unique Identifier of the user account."
            },
            "host_id": {
              "type": "string",
              "description": "ID of the user set as host of meeting."
            },
            "topic": {
              "type": "string",
              "description": "Meeting topic."
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the meeting started."
            },
            "duration": {
              "type": "integer",
              "description": "Meeting duration."
            },
            "total_size": {
              "type": "string",
              "description": "Total size of the recording."
            },
            "recording_count": {
              "type": "string",
              "description": "Number of recording files returned in the response of this API call."
            }
          }
        },
        {
          "title": "Recording file List",
          "description": "List of recording file.",
          "allOf": [
            {
              "properties": {
                "recording_files": {
                  "type": "array",
                  "title": "Recording file List",
                  "description": "List of recording file.",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Recording file object.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The recording file ID. Included in the response of general query."
                          },
                          "meeting_id": {
                            "type": "string",
                            "description": "The meeting ID. "
                          },
                          "recording_start": {
                            "type": "string",
                            "description": "The recording start time."
                          },
                          "recording_end": {
                            "type": "string",
                            "description": "The recording end time. Response in general query."
                          },
                          "file_type": {
                            "type": "string",
                            "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                          },
                          "file_size": {
                            "type": "number",
                            "description": "The recording file size."
                          },
                          "play_url": {
                            "type": "string",
                            "description": "The URL using which a recording file can be played."
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
                          },
                          "status": {
                            "type": "string",
                            "description": "The recording status."
                          },
                          "deleted_time": {
                            "type": "string",
                            "description": "The time at which recording was deleted. Returned in the response only for trash query."
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "type": "object"
        }
      ],
      "type": "object"
    },
    "RecordingMeetingList": {
      "title": "Recording List",
      "description": "List of recordings.",
      "allOf": [
        {
          "type": "object",
          "description": "DateTime Object.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date",
              "description": "Start Date."
            },
            "to": {
              "type": "string",
              "format": "date",
              "description": "End Date."
            }
          }
        },
        {
          "type": "object",
          "description": "Pagination object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned within a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The number of all records available across pages."
            },
            "next_page_token": {
              "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "title": "Recording List",
              "description": "List of recordings.",
              "items": {
                "allOf": [
                  {
                    "description": "The recording meeting object.",
                    "allOf": [
                      {
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID."
                          },
                          "id": {
                            "type": "string",
                            "description": "Meeting ID - also known as the meeting number."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "Unique Identifier of the user account."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "ID of the user set as host of meeting."
                          },
                          "topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the meeting started."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Meeting duration."
                          },
                          "total_size": {
                            "type": "string",
                            "description": "Total size of the recording."
                          },
                          "recording_count": {
                            "type": "string",
                            "description": "Number of recording files returned in the response of this API call."
                          }
                        }
                      },
                      {
                        "title": "Recording file List",
                        "description": "List of recording file.",
                        "allOf": [
                          {
                            "properties": {
                              "recording_files": {
                                "type": "array",
                                "title": "Recording file List",
                                "description": "List of recording file.",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Recording file object.",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The recording file ID. Included in the response of general query."
                                        },
                                        "meeting_id": {
                                          "type": "string",
                                          "description": "The meeting ID. "
                                        },
                                        "recording_start": {
                                          "type": "string",
                                          "description": "The recording start time."
                                        },
                                        "recording_end": {
                                          "type": "string",
                                          "description": "The recording end time. Response in general query."
                                        },
                                        "file_type": {
                                          "type": "string",
                                          "description": "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording.<br> `TRANSCRIPT`: Transcription file of the recording.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording.<br><br>\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                                        },
                                        "file_size": {
                                          "type": "number",
                                          "description": "The recording file size."
                                        },
                                        "play_url": {
                                          "type": "string",
                                          "description": "The URL using which a recording file can be played."
                                        },
                                        "download_url": {
                                          "type": "string",
                                          "description": "The URL using which the recording file can be downloaded. To access a private or password protected cloud recording, you must use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). USe the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. <br>\nExample: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`"
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "The recording status."
                                        },
                                        "deleted_time": {
                                          "type": "string",
                                          "description": "The time at which recording was deleted. Returned in the response only for trash query."
                                        },
                                        "recording_type": {
                                          "type": "string",
                                          "description": "The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`TIMELINE`"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "RecordingSettings": {
      "title": "Recording settings",
      "type": "object",
      "properties": {
        "share_recording": {
          "type": "string",
          "description": "Determine how the meeting recording is shared.",
          "enum": [
            "publicly",
            "internally",
            "none"
          ],
          "x-enum-descriptions": [
            "Publicly",
            "Internally(account members only)",
            "None"
          ]
        },
        "recording_authentication": {
          "type": "boolean",
          "description": "Only authenticated users can view."
        },
        "authentication_option": {
          "type": "string",
          "description": "Authentication Options."
        },
        "authentication_domains": {
          "type": "string",
          "description": "Authentication domains."
        },
        "viewer_download": {
          "type": "boolean",
          "description": "Determine whether a viewer can download the recording file or not."
        },
        "password": {
          "type": "string",
          "description": "Enable password protection for the recording by setting a password.",
          "maxLength": 10
        },
        "on_demand": {
          "type": "boolean",
          "description": "Determine whether registration  isrequired to view the recording."
        },
        "approval_type": {
          "type": "integer",
          "description": "Approval type for the registration.<br>\n`0`- Automatically approve the registration when a user registers.<br>\n`1` - Manually approve or deny the registration of a user.<br>\n`2` - No registration required to view the recording.",
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Registrants can watch the recording directly after registration",
            "Registrants will receive emails then watch the recording after you approve the registration",
            "Disabled"
          ]
        },
        "send_email_to_host": {
          "type": "boolean",
          "description": "Send an email to host when someone registers to view the recording. This applies for On-demand recordings only."
        },
        "show_social_share_buttons": {
          "type": "boolean",
          "description": "Show social share buttons on registration page. This applies for On-demand recordings only."
        }
      }
    },
    "RecordingRegistrantStatus": {
      "type": "object",
      "description": "Registrant Status",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "approve",
            "deny"
          ],
          "x-enum-descriptions": [
            "Approve registrant",
            "Deny registrant"
          ]
        },
        "registrants": {
          "type": "array",
          "description": "List of registrants",
          "maximum": 30,
          "items": {
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Recurrence": {
      "type": "object",
      "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
      "properties": {
        "type": {
          "type": "integer",
          "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Daily",
            "Weekly",
            "Monthly"
          ]
        },
        "repeat_interval": {
          "type": "integer",
          "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
        },
        "weekly_days": {
          "type": "string",
          "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        },
        "monthly_day": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
        },
        "monthly_week": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
          "enum": [
            -1,
            1,
            2,
            3,
            4
          ],
          "x-enum-descriptions": [
            "Last week",
            "First week",
            "Second week",
            "Third week",
            "Fourth week"
          ]
        },
        "monthly_week_day": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "x-enum-descriptions": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "end_times": {
          "type": "integer",
          "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
          "default": 1,
          "maximum": 50
        },
        "end_date_time": {
          "type": "string",
          "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
          "format": "date-time"
        }
      },
      "required": [
        "type"
      ]
    },
    "Registrant": {
      "type": "object",
      "description": "Registrant base object.",
      "properties": {
        "email": {
          "type": "string",
          "description": "A valid email address of the registrant."
        },
        "first_name": {
          "type": "string",
          "description": "Registrant's first name."
        },
        "last_name": {
          "type": "string",
          "description": "Registrant's last name."
        },
        "address": {
          "type": "string",
          "description": "Registrant's address."
        },
        "city": {
          "type": "string",
          "description": "Registrant's city."
        },
        "country": {
          "type": "string",
          "description": "Registrant's country."
        },
        "zip": {
          "type": "string",
          "description": "Registrant's Zip/Postal Code."
        },
        "state": {
          "type": "string",
          "description": "Registrant's State/Province."
        },
        "phone": {
          "type": "string",
          "description": "Registrant's Phone number."
        },
        "industry": {
          "type": "string",
          "description": "Registrant's Industry."
        },
        "org": {
          "type": "string",
          "description": "Registrant's Organization."
        },
        "job_title": {
          "type": "string",
          "description": "Registrant's job title."
        },
        "purchasing_time_frame": {
          "type": "string",
          "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
        },
        "role_in_purchase_process": {
          "type": "string",
          "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
        },
        "no_of_employees": {
          "type": "string",
          "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
        },
        "comments": {
          "type": "string",
          "description": "A field that allows registrants to provide any questions or comments that they might have."
        },
        "custom_questions": {
          "type": "array",
          "description": "Custom questions.",
          "items": {
            "type": "object",
            "description": "Custom Question.",
            "properties": {
              "title": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "email",
        "first_name",
        "last_name"
      ]
    },
    "RegistrantList": {
      "title": "Registration List",
      "description": "List of users.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "registrants": {
              "type": "array",
              "description": "List of registrant objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Registrant ID."
                      }
                    }
                  },
                  {
                    "description": " Registrant.",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Registrant base object.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "A valid email address of the registrant."
                          },
                          "first_name": {
                            "type": "string",
                            "description": "Registrant's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "description": "Registrant's last name."
                          },
                          "address": {
                            "type": "string",
                            "description": "Registrant's address."
                          },
                          "city": {
                            "type": "string",
                            "description": "Registrant's city."
                          },
                          "country": {
                            "type": "string",
                            "description": "Registrant's country."
                          },
                          "zip": {
                            "type": "string",
                            "description": "Registrant's Zip/Postal Code."
                          },
                          "state": {
                            "type": "string",
                            "description": "Registrant's State/Province."
                          },
                          "phone": {
                            "type": "string",
                            "description": "Registrant's Phone number."
                          },
                          "industry": {
                            "type": "string",
                            "description": "Registrant's Industry."
                          },
                          "org": {
                            "type": "string",
                            "description": "Registrant's Organization."
                          },
                          "job_title": {
                            "type": "string",
                            "description": "Registrant's job title."
                          },
                          "purchasing_time_frame": {
                            "type": "string",
                            "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                          },
                          "role_in_purchase_process": {
                            "type": "string",
                            "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                          },
                          "no_of_employees": {
                            "type": "string",
                            "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                          },
                          "comments": {
                            "type": "string",
                            "description": "A field that allows registrants to provide any questions or comments that they might have."
                          },
                          "custom_questions": {
                            "type": "array",
                            "description": "Custom questions.",
                            "items": {
                              "type": "object",
                              "description": "Custom Question.",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "email",
                          "first_name",
                          "last_name"
                        ]
                      }
                    ],
                    "type": "object"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                      },
                      "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time at which the registrant registered."
                      },
                      "join_url": {
                        "type": "string",
                        "format": "string",
                        "description": "The URL using which an approved registrant can join the webinar."
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "RecordingRegistrantList": {
      "type": "object",
      "title": "Recording Registration List",
      "description": "List of Recording Registration",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "registrants": {
              "type": "array",
              "description": "List of Registrant objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": " Registrant.",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Registrant base object.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "A valid email address of the registrant."
                          },
                          "first_name": {
                            "type": "string",
                            "description": "Registrant's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "description": "Registrant's last name."
                          },
                          "address": {
                            "type": "string",
                            "description": "Registrant's address."
                          },
                          "city": {
                            "type": "string",
                            "description": "Registrant's city."
                          },
                          "country": {
                            "type": "string",
                            "description": "Registrant's country."
                          },
                          "zip": {
                            "type": "string",
                            "description": "Registrant's Zip/Postal Code."
                          },
                          "state": {
                            "type": "string",
                            "description": "Registrant's State/Province."
                          },
                          "phone": {
                            "type": "string",
                            "description": "Registrant's Phone number."
                          },
                          "industry": {
                            "type": "string",
                            "description": "Registrant's Industry."
                          },
                          "org": {
                            "type": "string",
                            "description": "Registrant's Organization."
                          },
                          "job_title": {
                            "type": "string",
                            "description": "Registrant's job title."
                          },
                          "purchasing_time_frame": {
                            "type": "string",
                            "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                          },
                          "role_in_purchase_process": {
                            "type": "string",
                            "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                          },
                          "no_of_employees": {
                            "type": "string",
                            "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                          },
                          "comments": {
                            "type": "string",
                            "description": "A field that allows registrants to provide any questions or comments that they might have."
                          },
                          "custom_questions": {
                            "type": "array",
                            "description": "Custom questions.",
                            "items": {
                              "type": "object",
                              "description": "Custom Question.",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "email",
                          "first_name",
                          "last_name"
                        ]
                      }
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "RegistrantStatus": {
      "type": "object",
      "description": "Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel registrant.<br>`deny` - Deny registrant.",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "approve",
            "cancel",
            "deny"
          ],
          "x-enum-descriptions": [
            "Approve registrant",
            "Cancel registrant",
            "Deny registrant"
          ]
        },
        "registrants": {
          "type": "array",
          "description": "List of registrants.",
          "maximum": 30,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "action"
      ]
    },
    "RoleList": {
      "type": "object",
      "title": "Role List",
      "description": "List of Roles",
      "allOf": [
        {
          "properties": {
            "total_records": {
              "type": "integer",
              "description": "The number of all records available across pages"
            },
            "roles": {
              "type": "array",
              "description": "List of Roles objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Role Id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Role Name"
                      },
                      "description": {
                        "type": "string",
                        "description": "Role Description"
                      },
                      "total_members": {
                        "type": "integer",
                        "description": "Total members in this role"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "RoleMembersList": {
      "type": "object",
      "title": "Role Members List",
      "description": "List of a Role Members",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "members": {
              "type": "array",
              "description": "List of a Role Members",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Member ID"
                      },
                      "email": {
                        "type": "string",
                        "description": "Member Email"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "Member First Name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Member Last Name"
                      },
                      "type": {
                        "type": "integer",
                        "description": "Member Type"
                      },
                      "department": {
                        "type": "string",
                        "description": "Member Department"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "RoleMembersAdd": {
      "type": "object",
      "title": "Add Role Members",
      "description": "Add Role Members",
      "properties": {
        "members": {
          "type": "array",
          "description": "List of Role's members",
          "maximum": 30,
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User email address. Must have id or email, if given id, the email is ignored."
              }
            }
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "description": "Base object for sessions.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic."
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and specify the time zone. This is only used for scheduled meetings and recurring meetings with a fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration (minutes). Used for scheduled meetings only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Meeting description."
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "type": "object",
          "description": "Meeting settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when the host joins the meeting."
            },
            "participant_video": {
              "type": "boolean",
              "description": "Start video when participants join the meeting."
            },
            "cn_meeting": {
              "type": "boolean",
              "description": "Host meeting in China.",
              "default": false
            },
            "in_meeting": {
              "type": "boolean",
              "description": "Host meeting in India.",
              "default": false
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "default": false
            },
            "mute_upon_entry": {
              "type": "boolean",
              "description": "Mute participants upon entry.",
              "default": false
            },
            "watermark": {
              "type": "boolean",
              "description": "Add watermark when viewing a shared screen.",
              "default": false
            },
            "use_pmi": {
              "type": "boolean",
              "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed in users can join this meeting."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed in users with specified domains can join meetings."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host's emails or IDs: multiple values separated by a comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date",
              "default": false
            },
            "waiting_room": {
              "type": "boolean",
              "description": "Enable waiting room",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "global_dial_in_numbers": {
              "type": "array",
              "description": "Global Dial-in Countries/Regions",
              "items": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "Country code. For example, BR."
                  },
                  "country_name": {
                    "type": "string",
                    "description": "Full name of country. For example, Brazil."
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the number, if any. For example, Chicago."
                  },
                  "number": {
                    "type": "string",
                    "description": "Phone number. For example, +1 2332357613."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of number. ",
                    "enum": [
                      "toll",
                      "tollfree"
                    ]
                  }
                }
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_confirmation_email": {
              "type": "boolean",
              "description": "Send confirmation email to registrants"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "string",
              "description": "Meeting authentication option id"
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication_domains"
            }
          }
        }
      }
    },
    "SessionUpdate": {
      "type": "object",
      "description": "Base object for sessions.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic."
        },
        "type": {
          "type": "integer",
          "description": "Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration (minutes). Used for scheduled meetings only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
          "maxLength": 10
        },
        "agenda": {
          "type": "string",
          "description": "Meeting description.",
          "maxLength": 2000
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "allOf": [
            {
              "type": "object",
              "description": "Meeting settings.",
              "properties": {
                "host_video": {
                  "type": "boolean",
                  "description": "Start video when the host joins the meeting."
                },
                "participant_video": {
                  "type": "boolean",
                  "description": "Start video when participants join the meeting."
                },
                "cn_meeting": {
                  "type": "boolean",
                  "description": "Host meeting in China.",
                  "default": false
                },
                "in_meeting": {
                  "type": "boolean",
                  "description": "Host meeting in India.",
                  "default": false
                },
                "join_before_host": {
                  "type": "boolean",
                  "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                  "default": false
                },
                "mute_upon_entry": {
                  "type": "boolean",
                  "description": "Mute participants upon entry.",
                  "default": false
                },
                "watermark": {
                  "type": "boolean",
                  "description": "Add watermark when viewing a shared screen.",
                  "default": false
                },
                "use_pmi": {
                  "type": "boolean",
                  "description": "Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                  "default": false
                },
                "approval_type": {
                  "type": "integer",
                  "default": 2,
                  "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>\n\n`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Automatically Approve",
                    "Manually Approve",
                    "No Registration Required"
                  ]
                },
                "registration_type": {
                  "type": "integer",
                  "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
                  "default": 1,
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Attendees register once and can attend any of the occurrences",
                    "Attendees need to register for each occurrence to attend",
                    "Attendees register once and can choose one or more occurrences to attend"
                  ]
                },
                "audio": {
                  "type": "string",
                  "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
                  "default": "both",
                  "enum": [
                    "both",
                    "telephony",
                    "voip"
                  ],
                  "x-enum-descriptions": [
                    "Both Telephony and VoIP",
                    "Telephony only",
                    "VoIP only"
                  ]
                },
                "auto_recording": {
                  "type": "string",
                  "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                  "default": "none",
                  "enum": [
                    "local",
                    "cloud",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Record to local device",
                    "Record to cloud",
                    "No Recording"
                  ]
                },
                "enforce_login": {
                  "type": "boolean",
                  "description": "Only signed in users can join this meeting."
                },
                "enforce_login_domains": {
                  "type": "string",
                  "description": "Only signed in users with specified domains can join meetings."
                },
                "alternative_hosts": {
                  "type": "string",
                  "description": "Alternative host's emails or IDs: multiple values separated by a comma."
                },
                "close_registration": {
                  "type": "boolean",
                  "description": "Close registration after event date",
                  "default": false
                },
                "waiting_room": {
                  "type": "boolean",
                  "description": "Enable waiting room",
                  "default": false
                },
                "global_dial_in_countries": {
                  "type": "array",
                  "description": "List of global dial-in countries",
                  "items": {
                    "type": "string"
                  }
                },
                "global_dial_in_numbers": {
                  "type": "array",
                  "description": "Global Dial-in Countries/Regions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string",
                        "description": "Country code. For example, BR."
                      },
                      "country_name": {
                        "type": "string",
                        "description": "Full name of country. For example, Brazil."
                      },
                      "city": {
                        "type": "string",
                        "description": "City of the number, if any. For example, Chicago."
                      },
                      "number": {
                        "type": "string",
                        "description": "Phone number. For example, +1 2332357613."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of number. ",
                        "enum": [
                          "toll",
                          "tollfree"
                        ]
                      }
                    }
                  }
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact name for registration"
                },
                "contact_email": {
                  "type": "string",
                  "description": "Contact email for registration"
                },
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation email to registrants"
                },
                "registrants_email_notification": {
                  "type": "boolean",
                  "description": "registrants email notification"
                },
                "meeting_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can join meetings"
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Meeting authentication option id"
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Meeting authentication_domains"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation Email to Registrants"
                }
              }
            }
          ]
        }
      }
    },
    "SessionWebinar": {
      "type": "object",
      "description": "Base webinar object for sessions.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic."
        },
        "type": {
          "type": "integer",
          "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration (minutes). Used for scheduled webinars only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Webinar description."
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
          "title": "Recurrence Webinar",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
            },
            "weekly_days": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "type": "object",
          "description": "Webinar settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when host joins webinar."
            },
            "panelists_video": {
              "type": "boolean",
              "description": "Start video when panelists join webinar."
            },
            "practice_session": {
              "type": "boolean",
              "description": "Enable practice session.",
              "default": false
            },
            "hd_video": {
              "type": "boolean",
              "description": "Default to HD video.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the webinar.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed-in users can join this webinar."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed-in users with specified domains can join webinars."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host emails or IDs. Multiple values separated by comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date."
            },
            "show_share_button": {
              "type": "boolean",
              "description": "Show social share buttons on the registration page."
            },
            "allow_multiple_devices": {
              "type": "boolean",
              "description": "Allow attendees to join from multiple devices."
            },
            "on_demand": {
              "type": "boolean",
              "description": "Make the webinar on-demand",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_confirmation_email": {
              "description": "Send confirmation email to registrants",
              "type": "boolean"
            },
            "registrants_restrict_number": {
              "type": "integer",
              "default": 0,
              "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
              "minimum": 0,
              "maximum": 20000
            },
            "notify_registrants": {
              "type": "boolean",
              "description": "Send notification email to registrants when the host updates a webinar."
            },
            "post_webinar_survey": {
              "type": "boolean",
              "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
            },
            "survey_url": {
              "type": "string",
              "description": "Survey url for post webinar survey"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "Registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "string",
              "description": "Meeting authentication option id"
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication domains"
            }
          }
        }
      }
    },
    "SessionWebinarUpdate": {
      "type": "object",
      "description": "Base webinar object for sessions.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic."
        },
        "type": {
          "type": "integer",
          "description": "Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'.\" Should be in GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss.\" This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration (minutes). Used for scheduled webinar only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
          "maxLength": 10
        },
        "agenda": {
          "type": "string",
          "description": "Webinar description."
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "allOf": [
            {
              "type": "object",
              "description": "Webinar settings.",
              "properties": {
                "host_video": {
                  "type": "boolean",
                  "description": "Start video when host joins webinar."
                },
                "panelists_video": {
                  "type": "boolean",
                  "description": "Start video when panelists join webinar."
                },
                "practice_session": {
                  "type": "boolean",
                  "description": "Enable practice session.",
                  "default": false
                },
                "hd_video": {
                  "type": "boolean",
                  "description": "Default to HD video.",
                  "default": false
                },
                "approval_type": {
                  "type": "integer",
                  "default": 2,
                  "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Automatically Approve",
                    "Manually Approve",
                    "No Registration Required"
                  ]
                },
                "registration_type": {
                  "type": "integer",
                  "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                  "default": 1,
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Attendees register once and can attend any of the occurrences",
                    "Attendees need to register for each occurrence to attend",
                    "Attendees register once and can choose one or more occurrences to attend"
                  ]
                },
                "audio": {
                  "type": "string",
                  "description": "Determine how participants can join the audio portion of the webinar.",
                  "default": "both",
                  "enum": [
                    "both",
                    "telephony",
                    "voip"
                  ],
                  "x-enum-descriptions": [
                    "Both Telephony and VoIP",
                    "Telephony only",
                    "VoIP only"
                  ]
                },
                "auto_recording": {
                  "type": "string",
                  "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                  "default": "none",
                  "enum": [
                    "local",
                    "cloud",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Record to local device",
                    "Record to cloud",
                    "No Recording"
                  ]
                },
                "enforce_login": {
                  "type": "boolean",
                  "description": "Only signed-in users can join this webinar."
                },
                "enforce_login_domains": {
                  "type": "string",
                  "description": "Only signed-in users with specified domains can join webinars."
                },
                "alternative_hosts": {
                  "type": "string",
                  "description": "Alternative host emails or IDs. Multiple values separated by comma."
                },
                "close_registration": {
                  "type": "boolean",
                  "description": "Close registration after event date."
                },
                "show_share_button": {
                  "type": "boolean",
                  "description": "Show social share buttons on the registration page."
                },
                "allow_multiple_devices": {
                  "type": "boolean",
                  "description": "Allow attendees to join from multiple devices."
                },
                "on_demand": {
                  "type": "boolean",
                  "description": "Make the webinar on-demand",
                  "default": false
                },
                "global_dial_in_countries": {
                  "type": "array",
                  "description": "List of global dial-in countries",
                  "items": {
                    "type": "string"
                  }
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact name for registration"
                },
                "contact_email": {
                  "type": "string",
                  "description": "Contact email for registration"
                },
                "registrants_confirmation_email": {
                  "description": "Send confirmation email to registrants",
                  "type": "boolean"
                },
                "registrants_restrict_number": {
                  "type": "integer",
                  "default": 0,
                  "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                  "minimum": 0,
                  "maximum": 20000
                },
                "notify_registrants": {
                  "type": "boolean",
                  "description": "Send notification email to registrants when the host updates a webinar."
                },
                "post_webinar_survey": {
                  "type": "boolean",
                  "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                },
                "survey_url": {
                  "type": "string",
                  "description": "Survey url for post webinar survey"
                },
                "registrants_email_notification": {
                  "type": "boolean",
                  "description": "Registrants email notification"
                },
                "meeting_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can join meetings"
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Meeting authentication option id"
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Meeting authentication domains"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation email to registrants."
                }
              }
            }
          ]
        }
      }
    },
    "TSP": {
      "type": "object",
      "title": "TSP Accounts List",
      "description": "List of TSP accounts.",
      "properties": {
        "conference_code": {
          "type": "string",
          "description": "Conference code: numeric value, length is less than 16.",
          "minLength": 1,
          "maxLength": 16
        },
        "leader_pin": {
          "type": "string",
          "description": "Leader PIN: numeric value, length is less than 16.",
          "minLength": 1,
          "maxLength": 16
        },
        "dial_in_numbers": {
          "type": "array",
          "description": "List of dial in numbers.",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Country code.",
                "maxLength": 6
              },
              "number": {
                "type": "string",
                "description": "Dial-in number: length is less than 16.",
                "minLength": 1,
                "maxLength": 16
              },
              "type": {
                "type": "string",
                "description": "Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>\n`media_link` - Media link.",
                "enum": [
                  "toll",
                  "tollfree",
                  "media_link"
                ],
                "x-enum-descriptions": [
                  "Toll number <br/>",
                  "Toll free number <br/>",
                  "Media link phone number <br/>"
                ]
              },
              "country_label": {
                "type": "string",
                "description": "Country Label, if passed, will display in place of code.",
                "maxLength": 10
              }
            }
          }
        },
        "tsp_bridge": {
          "type": "string",
          "description": "Telephony bridge",
          "enum": [
            "US_TSP_TB",
            "EU_TSP_TB"
          ]
        }
      },
      "required": [
        "conference_code",
        "leader_pin"
      ]
    },
    "PAC": {
      "type": "object",
      "title": "PAC Accounts List",
      "description": "List of PAC accounts.",
      "properties": {
        "dedicated_dial_in_number": {
          "type": "array",
          "description": "List of dedicated dial-in numbers.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Dial-in number: length is less than 16."
              },
              "country": {
                "type": "string",
                "description": "Country code."
              }
            }
          }
        },
        "global_dial_in_numbers": {
          "type": "array",
          "description": "List of global dial-in numbers.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Dial-in number: length is less than 16."
              },
              "country": {
                "type": "string",
                "description": "Country code."
              }
            }
          }
        },
        "conference_id": {
          "type": "integer",
          "description": "Conference ID."
        },
        "participant_password": {
          "type": "string",
          "description": "Participant password: numeric value - length is less than 6.",
          "minLength": 1,
          "maxLength": 6
        },
        "listen_only_password": {
          "type": "string",
          "description": "Listen-Only password: numeric value - length is less than 6.",
          "maxLength": 6
        }
      }
    },
    "User": {
      "type": "object",
      "description": "The user object represents a specific user on Zoom.",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name.",
          "maxLength": 64
        },
        "last_name": {
          "type": "string",
          "description": "User's last name.",
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "default": "john.doe@email.com"
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Basic",
            "Licensed",
            "On-prem"
          ],
          "description": "User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
        },
        "role_name": {
          "type": "string",
          "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name."
        },
        "pmi": {
          "type": "integer",
          "description": "Personal meeting ID.",
          "format": "int64"
        },
        "use_pmi": {
          "type": "boolean",
          "description": "Use Personal Meeting ID for instant meetings.",
          "default": false
        },
        "timezone": {
          "type": "string",
          "description": "The time zone of the user."
        },
        "dept": {
          "type": "string",
          "description": "Department."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "User create time."
        },
        "last_login_time": {
          "type": "string",
          "format": "date-time",
          "description": "User last login time."
        },
        "last_client_version": {
          "type": "string",
          "description": "User last login client version."
        }
      },
      "required": [
        "email",
        "type"
      ]
    },
    "UserUpdate": {
      "type": "object",
      "description": "The user update object represents a user on Zoom.",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name. Cannot contain more than 5 Chinese characters.",
          "maxLength": 64
        },
        "last_name": {
          "type": "string",
          "description": "User's last name. Cannot contain more than 5 Chinese characters.",
          "maxLength": 64
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Basic",
            "Licensed",
            "On-prem"
          ],
          "description": "User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
        },
        "pmi": {
          "type": "integer",
          "description": "Personal meeting ID: length must be 10.",
          "minLength": 10,
          "maxLength": 10
        },
        "use_pmi": {
          "type": "boolean",
          "description": "Use Personal Meeting ID for instant meetings.",
          "default": false
        },
        "timezone": {
          "type": "string",
          "description": "The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list."
        },
        "language": {
          "type": "string",
          "description": "language"
        },
        "dept": {
          "type": "string",
          "description": "Department for user profile: use for report."
        },
        "vanity_name": {
          "type": "string",
          "description": "Personal meeting room name."
        },
        "host_key": {
          "type": "string",
          "description": "Host key. It should be a 6-10 digit number.",
          "minLength": 6,
          "maxLength": 10
        },
        "cms_user_id": {
          "type": "string",
          "description": "Kaltura user ID."
        },
        "job_title": {
          "type": "string",
          "description": "User's job title.",
          "maxLength": 128
        },
        "company": {
          "type": "string",
          "description": "User's company.",
          "maxLength": 255
        },
        "location": {
          "type": "string",
          "description": "User's location.",
          "maxLength": 256
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number of the user. To update a phone number, you must also provide the `phone_country` field."
        },
        "phone_country": {
          "type": "string",
          "description": "[Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`."
        }
      }
    },
    "UserList": {
      "title": "User List",
      "description": "List of users.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "users": {
              "type": "array",
              "description": "List of user objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "The user object represents a specific user on Zoom.",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "User's first name.",
                        "maxLength": 64
                      },
                      "last_name": {
                        "type": "string",
                        "description": "User's last name.",
                        "maxLength": 64
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address.",
                        "default": "john.doe@email.com"
                      },
                      "type": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3
                        ],
                        "x-enum-descriptions": [
                          "Basic",
                          "Licensed",
                          "On-prem"
                        ],
                        "description": "User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem."
                      },
                      "role_name": {
                        "type": "string",
                        "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name."
                      },
                      "pmi": {
                        "type": "integer",
                        "description": "Personal meeting ID.",
                        "format": "int64"
                      },
                      "use_pmi": {
                        "type": "boolean",
                        "description": "Use Personal Meeting ID for instant meetings.",
                        "default": false
                      },
                      "timezone": {
                        "type": "string",
                        "description": "The time zone of the user."
                      },
                      "dept": {
                        "type": "string",
                        "description": "Department."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "User create time."
                      },
                      "last_login_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "User last login time."
                      },
                      "last_client_version": {
                        "type": "string",
                        "description": "User last login client version."
                      }
                    },
                    "required": [
                      "email",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "im_group_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "UserAssistantsList": {
      "type": "object",
      "title": "User assistants List",
      "description": "List of user's assistants.",
      "properties": {
        "assistants": {
          "type": "array",
          "description": "List of User's assistants.",
          "maximum": 30,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Assistant's user ID."
              },
              "email": {
                "type": "string",
                "description": "Assistant's email address."
              }
            }
          }
        }
      }
    },
    "UserSchedulersList": {
      "type": "object",
      "title": "User schedulers List",
      "description": "List of user's schedulers.",
      "properties": {
        "schedulers": {
          "type": "array",
          "description": "List of users for whom the current user can schedule meetings.",
          "maximum": 30,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique Identifier (User ID) of the Scheduler."
              },
              "email": {
                "type": "string",
                "description": "Email address of the scheduler."
              }
            }
          }
        }
      }
    },
    "UserSettings": {
      "title": "User settings",
      "type": "object",
      "properties": {
        "schedule_meeting": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start meetings with host video on."
            },
            "participants_video": {
              "type": "boolean",
              "description": "Start meetings with participants video on."
            },
            "audio_type": {
              "type": "string",
              "default": "voip",
              "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ],
              "x-enum-descriptions": [
                "Telephony and VoIP",
                "Audio PSTN telephony only",
                "VoIP only",
                "3rd party audio conference"
              ]
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Join the meeting before host arrives."
            },
            "force_pmi_jbh_password": {
              "type": "boolean",
              "description": "Require a password for personal meetings if attendees can join before host."
            },
            "pstn_password_protected": {
              "type": "boolean",
              "description": "Generate and require password for participants joining by phone."
            },
            "use_pmi_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
            },
            "use_pmi_for_instant_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
            },
            "require_password_for_scheduling_new_meetings": {
              "type": "boolean",
              "description": "Require a password when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
            },
            "require_password_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Require a password for meetings which have already been scheduled\n"
            },
            "default_password_for_scheduled_meetings": {
              "type": "string",
              "description": "Password for already scheduled meetings\n"
            },
            "require_password_for_instant_meetings": {
              "type": "boolean",
              "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
            },
            "require_password_for_pmi_meetings": {
              "type": "string",
              "description": "Require a password for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
              "enum": [
                "jbh_only",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "Only meetings with Join Before Host enabled",
                "All meetings using PMI",
                "Disabled"
              ]
            },
            "pmi_password": {
              "type": "string",
              "description": "PMI password\n"
            }
          }
        },
        "in_meeting": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "e2e_encryption": {
              "type": "boolean",
              "description": "End-to-end encryption required for all meetings."
            },
            "chat": {
              "type": "boolean",
              "default": false,
              "description": "Enable chat during meeting for all participants."
            },
            "private_chat": {
              "type": "boolean",
              "default": false,
              "description": "Enable 1:1 private chat between participants during meetings."
            },
            "auto_saving_chat": {
              "type": "boolean",
              "default": false,
              "description": "Auto save all in-meeting chats."
            },
            "entry_exit_chime": {
              "type": "string",
              "default": "all",
              "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
              "enum": [
                "host",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "when host joins/leaves",
                "when any participant joins/leaves",
                "no join/leave sound"
              ]
            },
            "record_play_voice": {
              "type": "boolean",
              "description": "Record and play their own voice."
            },
            "feedback": {
              "type": "boolean",
              "default": false,
              "description": "Enable option to send feedback to Zoom at the end of the meeting."
            },
            "co_host": {
              "type": "boolean",
              "default": false,
              "description": "Allow the host to add co-hosts."
            },
            "polling": {
              "type": "boolean",
              "default": false,
              "description": "Add polls to the meeting controls."
            },
            "attendee_on_hold": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to put attendee on hold."
            },
            "annotation": {
              "type": "boolean",
              "default": false,
              "description": "Allow participants to use annotation tools."
            },
            "remote_control": {
              "type": "boolean",
              "default": false,
              "description": "Enable remote control during screensharing."
            },
            "non_verbal_feedback": {
              "type": "boolean",
              "default": false,
              "description": "Enable non-verbal feedback through screens."
            },
            "breakout_room": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to split meeting participants into separate breakout rooms."
            },
            "remote_support": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to provide 1:1 remote support to a participant."
            },
            "closed_caption": {
              "type": "boolean",
              "default": false,
              "description": "Enable closed captions."
            },
            "group_hd": {
              "type": "boolean",
              "default": false,
              "description": "Enable group HD video."
            },
            "virtual_background": {
              "type": "boolean",
              "default": false,
              "description": "Enable virtual background."
            },
            "far_end_camera_control": {
              "type": "boolean",
              "default": false,
              "description": "Allow another user to take control of the camera."
            },
            "share_dual_camera": {
              "type": "boolean",
              "default": false,
              "description": "Share dual camera (deprecated)."
            },
            "waiting_room": {
              "type": "boolean",
              "default": false,
              "description": "Enable Waiting room - if enabled, attendees can only join after host approves."
            },
            "allow_live_streaming": {
              "type": "boolean",
              "description": "Allow live streaming."
            },
            "workplace_by_facebook": {
              "type": "boolean",
              "description": "Allow livestreaming by host through Workplace by Facebook."
            },
            "custom_live_streaming_service": {
              "type": "boolean",
              "description": "Allow custom live streaming."
            },
            "custom_service_instructions": {
              "type": "string",
              "description": "Custom service instructions."
            },
            "show_meeting_control_toolbar": {
              "description": "Always show meeting controls during a meeting.",
              "type": "boolean"
            }
          }
        },
        "email_notification": {
          "title": "User settings: Notification settings",
          "description": "",
          "type": "object",
          "properties": {
            "jbh_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When attendees join meeting before host."
            },
            "cancel_meeting_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When a meeting is cancelled."
            },
            "alternative_host_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When an alternative host is set or removed from a meeting."
            },
            "schedule_for_reminder": {
              "type": "boolean",
              "default": false,
              "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
            }
          }
        },
        "recording": {
          "title": "User settings: Recording settings",
          "description": "",
          "type": "object",
          "properties": {
            "local_recording": {
              "type": "boolean",
              "description": "Local recording."
            },
            "cloud_recording": {
              "type": "boolean",
              "default": false,
              "description": "Cloud recording."
            },
            "record_speaker_view": {
              "type": "boolean",
              "default": false,
              "description": "Record the active speaker view."
            },
            "record_gallery_view": {
              "type": "boolean",
              "default": false,
              "description": "Record the gallery view."
            },
            "record_audio_file": {
              "type": "boolean",
              "default": false,
              "description": "Record an audio only file."
            },
            "save_chat_text": {
              "type": "boolean",
              "default": false,
              "description": "Save chat text from the meeting."
            },
            "show_timestamp": {
              "type": "boolean",
              "default": false,
              "description": "Show timestamp on video."
            },
            "recording_audio_transcript": {
              "type": "boolean",
              "description": "Audio transcript."
            },
            "auto_recording": {
              "type": "string",
              "default": "local",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record on local",
                "Record on cloud",
                "Disabled"
              ]
            },
            "host_pause_stop_recording": {
              "type": "boolean",
              "default": false,
              "description": "Host can pause/stop the auto recording in the cloud."
            },
            "auto_delete_cmr": {
              "type": "boolean",
              "default": false,
              "description": "Auto delete cloud recordings."
            },
            "auto_delete_cmr_days": {
              "type": "integer",
              "description": "A specified number of days of auto delete cloud recordings.",
              "minimum": 1,
              "maximum": 60
            }
          }
        },
        "telephony": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "third_party_audio": {
              "type": "boolean",
              "description": "Third party audio conference."
            },
            "audio_conference_info": {
              "type": "string",
              "default": "",
              "description": "Third party audio conference info.",
              "maxLength": 2048
            },
            "show_international_numbers_link": {
              "type": "boolean",
              "description": "Show the international numbers link on the invitation email."
            }
          }
        },
        "feature": {
          "title": "User settings: Feature settings",
          "description": "",
          "type": "object",
          "properties": {
            "meeting_capacity": {
              "type": "integer",
              "description": "User’s meeting capacity."
            },
            "large_meeting": {
              "type": "boolean",
              "description": "Large meeting feature."
            },
            "large_meeting_capacity": {
              "type": "integer",
              "description": "Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not."
            },
            "webinar": {
              "type": "boolean",
              "description": "Webinar feature."
            },
            "webinar_capacity": {
              "type": "integer",
              "description": "Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not."
            },
            "cn_meeting": {
              "type": "boolean",
              "description": "CN meeting feature."
            },
            "in_meeting": {
              "type": "boolean",
              "description": "IN meeting feature."
            },
            "zoom_phone": {
              "type": "boolean",
              "description": "Zoom phone feature."
            }
          }
        },
        "tsp": {
          "type": "object",
          "description": "Account Settings: TSP.",
          "title": "User settings: TSP settings",
          "properties": {
            "call_out": {
              "type": "boolean",
              "description": "Call Out"
            },
            "call_out_countries": {
              "type": "array",
              "description": "Call Out Countries/Regions",
              "items": {}
            },
            "show_international_numbers_link": {
              "type": "boolean",
              "description": "Show international numbers link on the invitation email"
            }
          }
        }
      }
    },
    "UserSettingsUpdate": {
      "title": "User settings",
      "type": "object",
      "properties": {
        "schedule_meeting": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start meetings with host video on."
            },
            "participants_video": {
              "type": "boolean",
              "description": "Start meetings with participants video on."
            },
            "audio_type": {
              "type": "string",
              "default": "voip",
              "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ],
              "x-enum-descriptions": [
                "Telephony and VoIP",
                "Audio PSTN telephony only",
                "VoIP only",
                "3rd party audio conference"
              ]
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Join the meeting before host arrives."
            },
            "force_pmi_jbh_password": {
              "type": "boolean",
              "description": "Require a password for personal meetings if attendees can join before host."
            },
            "pstn_password_protected": {
              "type": "boolean",
              "description": "Generate and require password for participants joining by phone."
            },
            "use_pmi_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
            },
            "use_pmi_for_instant_meetings": {
              "type": "boolean",
              "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
            },
            "require_password_for_scheduling_new_meetings": {
              "type": "boolean",
              "description": "Require a password when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
            },
            "require_password_for_scheduled_meetings": {
              "type": "boolean",
              "description": "Require a password for meetings which have already been scheduled\n"
            },
            "default_password_for_scheduled_meetings": {
              "type": "string",
              "description": "Password for already scheduled meetings\n"
            },
            "require_password_for_instant_meetings": {
              "type": "boolean",
              "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
            },
            "require_password_for_pmi_meetings": {
              "type": "string",
              "description": "Require a password for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
              "enum": [
                "jbh_only",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "Only meetings with Join Before Host enabled",
                "All meetings using PMI",
                "Disabled"
              ]
            },
            "pmi_password": {
              "type": "string",
              "description": "PMI password\n"
            }
          }
        },
        "in_meeting": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "e2e_encryption": {
              "type": "boolean",
              "description": "End-to-end encryption required for all meetings."
            },
            "chat": {
              "type": "boolean",
              "default": false,
              "description": "Enable chat during meeting for all participants."
            },
            "private_chat": {
              "type": "boolean",
              "default": false,
              "description": "Enable 1:1 private chat between participants during meetings."
            },
            "auto_saving_chat": {
              "type": "boolean",
              "default": false,
              "description": "Auto save all in-meeting chats."
            },
            "entry_exit_chime": {
              "type": "string",
              "default": "all",
              "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
              "enum": [
                "host",
                "all",
                "none"
              ],
              "x-enum-descriptions": [
                "when host joins/leaves",
                "when any participant joins/leaves",
                "no join/leave sound"
              ]
            },
            "record_play_voice": {
              "type": "boolean",
              "description": "Record and play their own voice."
            },
            "feedback": {
              "type": "boolean",
              "default": false,
              "description": "Enable option to send feedback to Zoom at the end of the meeting."
            },
            "co_host": {
              "type": "boolean",
              "default": false,
              "description": "Allow the host to add co-hosts."
            },
            "polling": {
              "type": "boolean",
              "default": false,
              "description": "Add polls to the meeting controls."
            },
            "attendee_on_hold": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to put attendee on hold."
            },
            "annotation": {
              "type": "boolean",
              "default": false,
              "description": "Allow participants to use annotation tools."
            },
            "remote_control": {
              "type": "boolean",
              "default": false,
              "description": "Enable remote control during screensharing."
            },
            "non_verbal_feedback": {
              "type": "boolean",
              "default": false,
              "description": "Enable non-verbal feedback through screens."
            },
            "breakout_room": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to split meeting participants into separate breakout rooms."
            },
            "remote_support": {
              "type": "boolean",
              "default": false,
              "description": "Allow host to provide 1:1 remote support to a participant."
            },
            "closed_caption": {
              "type": "boolean",
              "default": false,
              "description": "Enable closed captions."
            },
            "group_hd": {
              "type": "boolean",
              "default": false,
              "description": "Enable group HD video."
            },
            "virtual_background": {
              "type": "boolean",
              "default": false,
              "description": "Enable virtual background."
            },
            "far_end_camera_control": {
              "type": "boolean",
              "default": false,
              "description": "Allow another user to take control of the camera."
            },
            "share_dual_camera": {
              "type": "boolean",
              "default": false,
              "description": "Share dual camera (deprecated)."
            },
            "waiting_room": {
              "type": "boolean",
              "default": false,
              "description": "Enable Waiting room - if enabled, attendees can only join after host approves."
            },
            "allow_live_streaming": {
              "type": "boolean",
              "description": "Allow live streaming."
            },
            "workplace_by_facebook": {
              "type": "boolean",
              "description": "Allow livestreaming by host through Workplace by Facebook."
            },
            "custom_live_streaming_service": {
              "type": "boolean",
              "description": "Allow custom live streaming."
            },
            "custom_service_instructions": {
              "type": "string",
              "description": "Custom service instructions."
            },
            "show_meeting_control_toolbar": {
              "description": "Always show meeting controls during a meeting.",
              "type": "boolean"
            }
          }
        },
        "email_notification": {
          "title": "User settings: Notification settings",
          "description": "",
          "type": "object",
          "properties": {
            "jbh_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When attendees join meeting before host."
            },
            "cancel_meeting_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When a meeting is cancelled."
            },
            "alternative_host_reminder": {
              "type": "boolean",
              "default": false,
              "description": "When an alternative host is set or removed from a meeting."
            },
            "schedule_for_reminder": {
              "type": "boolean",
              "default": false,
              "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
            }
          }
        },
        "recording": {
          "title": "User settings: Recording settings",
          "description": "",
          "type": "object",
          "properties": {
            "local_recording": {
              "type": "boolean",
              "description": "Local recording."
            },
            "cloud_recording": {
              "type": "boolean",
              "default": false,
              "description": "Cloud recording."
            },
            "record_speaker_view": {
              "type": "boolean",
              "default": false,
              "description": "Record the active speaker view."
            },
            "record_gallery_view": {
              "type": "boolean",
              "default": false,
              "description": "Record the gallery view."
            },
            "record_audio_file": {
              "type": "boolean",
              "default": false,
              "description": "Record an audio only file."
            },
            "save_chat_text": {
              "type": "boolean",
              "default": false,
              "description": "Save chat text from the meeting."
            },
            "show_timestamp": {
              "type": "boolean",
              "default": false,
              "description": "Show timestamp on video."
            },
            "recording_audio_transcript": {
              "type": "boolean",
              "description": "Audio transcript."
            },
            "auto_recording": {
              "type": "string",
              "default": "local",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record on local",
                "Record on cloud",
                "Disabled"
              ]
            },
            "host_pause_stop_recording": {
              "type": "boolean",
              "default": false,
              "description": "Host can pause/stop the auto recording in the cloud."
            },
            "auto_delete_cmr": {
              "type": "boolean",
              "default": false,
              "description": "Auto delete cloud recordings."
            },
            "auto_delete_cmr_days": {
              "type": "integer",
              "description": "A specified number of days of auto delete cloud recordings.",
              "minimum": 1,
              "maximum": 60
            }
          }
        },
        "telephony": {
          "title": "User settings: Meeting settings",
          "description": "",
          "type": "object",
          "properties": {
            "third_party_audio": {
              "type": "boolean",
              "description": "Third party audio conference."
            },
            "audio_conference_info": {
              "type": "string",
              "default": "",
              "description": "Third party audio conference info.",
              "maxLength": 2048
            },
            "show_international_numbers_link": {
              "type": "boolean",
              "description": "Show the international numbers link on the invitation email."
            }
          }
        },
        "feature": {
          "title": "User settings: Feature settings",
          "description": "",
          "type": "object",
          "properties": {
            "meeting_capacity": {
              "type": "integer",
              "description": "Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user."
            },
            "large_meeting": {
              "type": "boolean",
              "description": "Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user."
            },
            "large_meeting_capacity": {
              "type": "integer",
              "description": "Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000."
            },
            "webinar": {
              "type": "boolean",
              "description": "Enable Webinar feature for the user."
            },
            "webinar_capacity": {
              "type": "integer",
              "description": "Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000."
            },
            "zoom_phone": {
              "type": "boolean",
              "description": "Zoom phone feature."
            }
          }
        },
        "tsp": {
          "type": "object",
          "description": "Account Settings: TSP.",
          "title": "User settings: TSP settings",
          "properties": {
            "call_out": {
              "type": "boolean",
              "description": "Call Out"
            },
            "call_out_countries": {
              "type": "array",
              "description": "Call Out Countries/Regions",
              "items": {}
            },
            "show_international_numbers_link": {
              "type": "boolean",
              "description": "Show international numbers link on the invitation email"
            }
          }
        }
      }
    },
    "UserSettingsScheduleMeeting": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start meetings with host video on."
        },
        "participants_video": {
          "type": "boolean",
          "description": "Start meetings with participants video on."
        },
        "audio_type": {
          "type": "string",
          "default": "voip",
          "description": "Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ],
          "x-enum-descriptions": [
            "Telephony and VoIP",
            "Audio PSTN telephony only",
            "VoIP only",
            "3rd party audio conference"
          ]
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Join the meeting before host arrives."
        },
        "force_pmi_jbh_password": {
          "type": "boolean",
          "description": "Require a password for personal meetings if attendees can join before host."
        },
        "pstn_password_protected": {
          "type": "boolean",
          "description": "Generate and require password for participants joining by phone."
        },
        "use_pmi_for_scheduled_meetings": {
          "type": "boolean",
          "description": "Use Personal Meeting ID (PMI) when scheduling a meeting\n"
        },
        "use_pmi_for_instant_meetings": {
          "type": "boolean",
          "description": "Use Personal Meeting ID (PMI) when starting an instant meeting\n"
        },
        "require_password_for_scheduling_new_meetings": {
          "type": "boolean",
          "description": "Require a password when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
        },
        "require_password_for_scheduled_meetings": {
          "type": "boolean",
          "description": "Require a password for meetings which have already been scheduled\n"
        },
        "default_password_for_scheduled_meetings": {
          "type": "string",
          "description": "Password for already scheduled meetings\n"
        },
        "require_password_for_instant_meetings": {
          "type": "boolean",
          "description": "Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n"
        },
        "require_password_for_pmi_meetings": {
          "type": "string",
          "description": "Require a password for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.\n",
          "enum": [
            "jbh_only",
            "all",
            "none"
          ],
          "x-enum-descriptions": [
            "Only meetings with Join Before Host enabled",
            "All meetings using PMI",
            "Disabled"
          ]
        },
        "pmi_password": {
          "type": "string",
          "description": "PMI password\n"
        }
      }
    },
    "UserSettingsInMeeting": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "e2e_encryption": {
          "type": "boolean",
          "description": "End-to-end encryption required for all meetings."
        },
        "chat": {
          "type": "boolean",
          "default": false,
          "description": "Enable chat during meeting for all participants."
        },
        "private_chat": {
          "type": "boolean",
          "default": false,
          "description": "Enable 1:1 private chat between participants during meetings."
        },
        "auto_saving_chat": {
          "type": "boolean",
          "default": false,
          "description": "Auto save all in-meeting chats."
        },
        "entry_exit_chime": {
          "type": "string",
          "default": "all",
          "description": "Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.",
          "enum": [
            "host",
            "all",
            "none"
          ],
          "x-enum-descriptions": [
            "when host joins/leaves",
            "when any participant joins/leaves",
            "no join/leave sound"
          ]
        },
        "record_play_voice": {
          "type": "boolean",
          "description": "Record and play their own voice."
        },
        "feedback": {
          "type": "boolean",
          "default": false,
          "description": "Enable option to send feedback to Zoom at the end of the meeting."
        },
        "co_host": {
          "type": "boolean",
          "default": false,
          "description": "Allow the host to add co-hosts."
        },
        "polling": {
          "type": "boolean",
          "default": false,
          "description": "Add polls to the meeting controls."
        },
        "attendee_on_hold": {
          "type": "boolean",
          "default": false,
          "description": "Allow host to put attendee on hold."
        },
        "annotation": {
          "type": "boolean",
          "default": false,
          "description": "Allow participants to use annotation tools."
        },
        "remote_control": {
          "type": "boolean",
          "default": false,
          "description": "Enable remote control during screensharing."
        },
        "non_verbal_feedback": {
          "type": "boolean",
          "default": false,
          "description": "Enable non-verbal feedback through screens."
        },
        "breakout_room": {
          "type": "boolean",
          "default": false,
          "description": "Allow host to split meeting participants into separate breakout rooms."
        },
        "remote_support": {
          "type": "boolean",
          "default": false,
          "description": "Allow host to provide 1:1 remote support to a participant."
        },
        "closed_caption": {
          "type": "boolean",
          "default": false,
          "description": "Enable closed captions."
        },
        "group_hd": {
          "type": "boolean",
          "default": false,
          "description": "Enable group HD video."
        },
        "virtual_background": {
          "type": "boolean",
          "default": false,
          "description": "Enable virtual background."
        },
        "far_end_camera_control": {
          "type": "boolean",
          "default": false,
          "description": "Allow another user to take control of the camera."
        },
        "share_dual_camera": {
          "type": "boolean",
          "default": false,
          "description": "Share dual camera (deprecated)."
        },
        "waiting_room": {
          "type": "boolean",
          "default": false,
          "description": "Enable Waiting room - if enabled, attendees can only join after host approves."
        },
        "allow_live_streaming": {
          "type": "boolean",
          "description": "Allow live streaming."
        },
        "workplace_by_facebook": {
          "type": "boolean",
          "description": "Allow livestreaming by host through Workplace by Facebook."
        },
        "custom_live_streaming_service": {
          "type": "boolean",
          "description": "Allow custom live streaming."
        },
        "custom_service_instructions": {
          "type": "string",
          "description": "Custom service instructions."
        },
        "show_meeting_control_toolbar": {
          "description": "Always show meeting controls during a meeting.",
          "type": "boolean"
        }
      }
    },
    "UserSettingsEmailNotification": {
      "title": "User settings: Notification settings",
      "description": "",
      "type": "object",
      "properties": {
        "jbh_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When attendees join meeting before host."
        },
        "cancel_meeting_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When a meeting is cancelled."
        },
        "alternative_host_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When an alternative host is set or removed from a meeting."
        },
        "schedule_for_reminder": {
          "type": "boolean",
          "default": false,
          "description": "Notify the host there is a meeting is scheduled, rescheduled, or cancelled."
        }
      }
    },
    "UserSettingsRecording": {
      "title": "User settings: Recording settings",
      "description": "",
      "type": "object",
      "properties": {
        "local_recording": {
          "type": "boolean",
          "description": "Local recording."
        },
        "cloud_recording": {
          "type": "boolean",
          "default": false,
          "description": "Cloud recording."
        },
        "record_speaker_view": {
          "type": "boolean",
          "default": false,
          "description": "Record the active speaker view."
        },
        "record_gallery_view": {
          "type": "boolean",
          "default": false,
          "description": "Record the gallery view."
        },
        "record_audio_file": {
          "type": "boolean",
          "default": false,
          "description": "Record an audio only file."
        },
        "save_chat_text": {
          "type": "boolean",
          "default": false,
          "description": "Save chat text from the meeting."
        },
        "show_timestamp": {
          "type": "boolean",
          "default": false,
          "description": "Show timestamp on video."
        },
        "recording_audio_transcript": {
          "type": "boolean",
          "description": "Audio transcript."
        },
        "auto_recording": {
          "type": "string",
          "default": "local",
          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record on local",
            "Record on cloud",
            "Disabled"
          ]
        },
        "host_pause_stop_recording": {
          "type": "boolean",
          "default": false,
          "description": "Host can pause/stop the auto recording in the cloud."
        },
        "auto_delete_cmr": {
          "type": "boolean",
          "default": false,
          "description": "Auto delete cloud recordings."
        },
        "auto_delete_cmr_days": {
          "type": "integer",
          "description": "A specified number of days of auto delete cloud recordings.",
          "minimum": 1,
          "maximum": 60
        }
      }
    },
    "UserSettingsTelephony": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "third_party_audio": {
          "type": "boolean",
          "description": "Third party audio conference."
        },
        "audio_conference_info": {
          "type": "string",
          "default": "",
          "description": "Third party audio conference info.",
          "maxLength": 2048
        },
        "show_international_numbers_link": {
          "type": "boolean",
          "description": "Show the international numbers link on the invitation email."
        }
      }
    },
    "UserSettingsFeature": {
      "title": "User settings: Feature settings",
      "description": "",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "User’s meeting capacity."
        },
        "large_meeting": {
          "type": "boolean",
          "description": "Large meeting feature."
        },
        "large_meeting_capacity": {
          "type": "integer",
          "description": "Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not."
        },
        "webinar": {
          "type": "boolean",
          "description": "Webinar feature."
        },
        "webinar_capacity": {
          "type": "integer",
          "description": "Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not."
        },
        "cn_meeting": {
          "type": "boolean",
          "description": "CN meeting feature."
        },
        "in_meeting": {
          "type": "boolean",
          "description": "IN meeting feature."
        },
        "zoom_phone": {
          "type": "boolean",
          "description": "Zoom phone feature."
        }
      }
    },
    "UserSettingsFeatureUpdate": {
      "title": "User settings: Feature settings",
      "description": "",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user."
        },
        "large_meeting": {
          "type": "boolean",
          "description": "Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user."
        },
        "large_meeting_capacity": {
          "type": "integer",
          "description": "Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000."
        },
        "webinar": {
          "type": "boolean",
          "description": "Enable Webinar feature for the user."
        },
        "webinar_capacity": {
          "type": "integer",
          "description": "Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000."
        },
        "zoom_phone": {
          "type": "boolean",
          "description": "Zoom phone feature."
        }
      }
    },
    "UserPermissions": {
      "type": "object",
      "description": "",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "List of user permissions.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Webinar": {
      "description": "Webinar object.",
      "allOf": [
        {
          "type": "object",
          "description": "Base webinar object for sessions.",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Webinar topic."
            },
            "type": {
              "type": "integer",
              "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
              "default": 5,
              "enum": [
                5,
                6,
                9
              ],
              "x-enum-descriptions": [
                "Webinar",
                "Recurring Webinar with no fixed time",
                "Recurring Webinar with fixed time"
              ]
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
            },
            "duration": {
              "type": "integer",
              "description": "Webinar duration (minutes). Used for scheduled webinars only."
            },
            "timezone": {
              "type": "string",
              "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
            },
            "password": {
              "type": "string",
              "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
            },
            "agenda": {
              "type": "string",
              "description": "Webinar description."
            },
            "tracking_fields": {
              "type": "array",
              "description": "Tracking fields",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Tracking fields type"
                  },
                  "value": {
                    "type": "string",
                    "description": "Tracking fields value"
                  }
                }
              }
            },
            "recurrence": {
              "type": "object",
              "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
              "title": "Recurrence Webinar",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Daily",
                    "Weekly",
                    "Monthly"
                  ]
                },
                "repeat_interval": {
                  "type": "integer",
                  "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
                },
                "weekly_days": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "x-enum-descriptions": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ]
                },
                "monthly_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                },
                "monthly_week": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                  "enum": [
                    -1,
                    1,
                    2,
                    3,
                    4
                  ],
                  "x-enum-descriptions": [
                    "Last week",
                    "First week",
                    "Second week",
                    "Third week",
                    "Fourth week"
                  ]
                },
                "monthly_week_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "x-enum-descriptions": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ]
                },
                "end_times": {
                  "type": "integer",
                  "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                  "default": 1,
                  "maximum": 50
                },
                "end_date_time": {
                  "type": "string",
                  "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                  "format": "date-time"
                }
              },
              "required": [
                "type"
              ]
            },
            "settings": {
              "type": "object",
              "description": "Webinar settings.",
              "properties": {
                "host_video": {
                  "type": "boolean",
                  "description": "Start video when host joins webinar."
                },
                "panelists_video": {
                  "type": "boolean",
                  "description": "Start video when panelists join webinar."
                },
                "practice_session": {
                  "type": "boolean",
                  "description": "Enable practice session.",
                  "default": false
                },
                "hd_video": {
                  "type": "boolean",
                  "description": "Default to HD video.",
                  "default": false
                },
                "approval_type": {
                  "type": "integer",
                  "default": 2,
                  "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "x-enum-descriptions": [
                    "Automatically Approve",
                    "Manually Approve",
                    "No Registration Required"
                  ]
                },
                "registration_type": {
                  "type": "integer",
                  "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                  "default": 1,
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Attendees register once and can attend any of the occurrences",
                    "Attendees need to register for each occurrence to attend",
                    "Attendees register once and can choose one or more occurrences to attend"
                  ]
                },
                "audio": {
                  "type": "string",
                  "description": "Determine how participants can join the audio portion of the webinar.",
                  "default": "both",
                  "enum": [
                    "both",
                    "telephony",
                    "voip"
                  ],
                  "x-enum-descriptions": [
                    "Both Telephony and VoIP",
                    "Telephony only",
                    "VoIP only"
                  ]
                },
                "auto_recording": {
                  "type": "string",
                  "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                  "default": "none",
                  "enum": [
                    "local",
                    "cloud",
                    "none"
                  ],
                  "x-enum-descriptions": [
                    "Record to local device",
                    "Record to cloud",
                    "No Recording"
                  ]
                },
                "enforce_login": {
                  "type": "boolean",
                  "description": "Only signed-in users can join this webinar."
                },
                "enforce_login_domains": {
                  "type": "string",
                  "description": "Only signed-in users with specified domains can join webinars."
                },
                "alternative_hosts": {
                  "type": "string",
                  "description": "Alternative host emails or IDs. Multiple values separated by comma."
                },
                "close_registration": {
                  "type": "boolean",
                  "description": "Close registration after event date."
                },
                "show_share_button": {
                  "type": "boolean",
                  "description": "Show social share buttons on the registration page."
                },
                "allow_multiple_devices": {
                  "type": "boolean",
                  "description": "Allow attendees to join from multiple devices."
                },
                "on_demand": {
                  "type": "boolean",
                  "description": "Make the webinar on-demand",
                  "default": false
                },
                "global_dial_in_countries": {
                  "type": "array",
                  "description": "List of global dial-in countries",
                  "items": {
                    "type": "string"
                  }
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact name for registration"
                },
                "contact_email": {
                  "type": "string",
                  "description": "Contact email for registration"
                },
                "registrants_confirmation_email": {
                  "description": "Send confirmation email to registrants",
                  "type": "boolean"
                },
                "registrants_restrict_number": {
                  "type": "integer",
                  "default": 0,
                  "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                  "minimum": 0,
                  "maximum": 20000
                },
                "notify_registrants": {
                  "type": "boolean",
                  "description": "Send notification email to registrants when the host updates a webinar."
                },
                "post_webinar_survey": {
                  "type": "boolean",
                  "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                },
                "survey_url": {
                  "type": "string",
                  "description": "Survey url for post webinar survey"
                },
                "registrants_email_notification": {
                  "type": "boolean",
                  "description": "Registrants email notification"
                },
                "meeting_authentication": {
                  "type": "boolean",
                  "description": "Only authenticated users can join meetings"
                },
                "authentication_option": {
                  "type": "string",
                  "description": "Meeting authentication option id"
                },
                "authentication_domains": {
                  "type": "string",
                  "description": "Meeting authentication domains"
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "WebinarUpdate": {
      "description": "Webinar object",
      "allOf": [
        {
          "type": "object",
          "description": "Base webinar object for sessions.",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Webinar topic."
            },
            "type": {
              "type": "integer",
              "description": "Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
              "default": 5,
              "enum": [
                5,
                6,
                9
              ],
              "x-enum-descriptions": [
                "Webinar",
                "Recurring Webinar with no fixed time",
                "Recurring Webinar with fixed time"
              ]
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'.\" Should be in GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss.\" This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time."
            },
            "duration": {
              "type": "integer",
              "description": "Webinar duration (minutes). Used for scheduled webinar only."
            },
            "timezone": {
              "type": "string",
              "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats."
            },
            "password": {
              "type": "string",
              "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.",
              "maxLength": 10
            },
            "agenda": {
              "type": "string",
              "description": "Webinar description."
            },
            "tracking_fields": {
              "type": "array",
              "description": "Tracking fields",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Tracking fields type"
                  },
                  "value": {
                    "type": "string",
                    "description": "Tracking fields value"
                  }
                }
              }
            },
            "recurrence": {
              "type": "object",
              "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "Daily",
                    "Weekly",
                    "Monthly"
                  ]
                },
                "repeat_interval": {
                  "type": "integer",
                  "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
                },
                "weekly_days": {
                  "type": "string",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7"
                  ]
                },
                "monthly_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
                },
                "monthly_week": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
                  "enum": [
                    -1,
                    1,
                    2,
                    3,
                    4
                  ],
                  "x-enum-descriptions": [
                    "Last week",
                    "First week",
                    "Second week",
                    "Third week",
                    "Fourth week"
                  ]
                },
                "monthly_week_day": {
                  "type": "integer",
                  "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "x-enum-descriptions": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ]
                },
                "end_times": {
                  "type": "integer",
                  "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
                  "default": 1,
                  "maximum": 50
                },
                "end_date_time": {
                  "type": "string",
                  "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                  "format": "date-time"
                }
              },
              "required": [
                "type"
              ]
            },
            "settings": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Webinar settings.",
                  "properties": {
                    "host_video": {
                      "type": "boolean",
                      "description": "Start video when host joins webinar."
                    },
                    "panelists_video": {
                      "type": "boolean",
                      "description": "Start video when panelists join webinar."
                    },
                    "practice_session": {
                      "type": "boolean",
                      "description": "Enable practice session.",
                      "default": false
                    },
                    "hd_video": {
                      "type": "boolean",
                      "description": "Default to HD video.",
                      "default": false
                    },
                    "approval_type": {
                      "type": "integer",
                      "default": 2,
                      "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "x-enum-descriptions": [
                        "Automatically Approve",
                        "Manually Approve",
                        "No Registration Required"
                      ]
                    },
                    "registration_type": {
                      "type": "integer",
                      "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
                      "default": 1,
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "Attendees register once and can attend any of the occurrences",
                        "Attendees need to register for each occurrence to attend",
                        "Attendees register once and can choose one or more occurrences to attend"
                      ]
                    },
                    "audio": {
                      "type": "string",
                      "description": "Determine how participants can join the audio portion of the webinar.",
                      "default": "both",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ],
                      "x-enum-descriptions": [
                        "Both Telephony and VoIP",
                        "Telephony only",
                        "VoIP only"
                      ]
                    },
                    "auto_recording": {
                      "type": "string",
                      "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
                      "default": "none",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ],
                      "x-enum-descriptions": [
                        "Record to local device",
                        "Record to cloud",
                        "No Recording"
                      ]
                    },
                    "enforce_login": {
                      "type": "boolean",
                      "description": "Only signed-in users can join this webinar."
                    },
                    "enforce_login_domains": {
                      "type": "string",
                      "description": "Only signed-in users with specified domains can join webinars."
                    },
                    "alternative_hosts": {
                      "type": "string",
                      "description": "Alternative host emails or IDs. Multiple values separated by comma."
                    },
                    "close_registration": {
                      "type": "boolean",
                      "description": "Close registration after event date."
                    },
                    "show_share_button": {
                      "type": "boolean",
                      "description": "Show social share buttons on the registration page."
                    },
                    "allow_multiple_devices": {
                      "type": "boolean",
                      "description": "Allow attendees to join from multiple devices."
                    },
                    "on_demand": {
                      "type": "boolean",
                      "description": "Make the webinar on-demand",
                      "default": false
                    },
                    "global_dial_in_countries": {
                      "type": "array",
                      "description": "List of global dial-in countries",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contact_name": {
                      "type": "string",
                      "description": "Contact name for registration"
                    },
                    "contact_email": {
                      "type": "string",
                      "description": "Contact email for registration"
                    },
                    "registrants_confirmation_email": {
                      "description": "Send confirmation email to registrants",
                      "type": "boolean"
                    },
                    "registrants_restrict_number": {
                      "type": "integer",
                      "default": 0,
                      "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
                      "minimum": 0,
                      "maximum": 20000
                    },
                    "notify_registrants": {
                      "type": "boolean",
                      "description": "Send notification email to registrants when the host updates a webinar."
                    },
                    "post_webinar_survey": {
                      "type": "boolean",
                      "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
                    },
                    "survey_url": {
                      "type": "string",
                      "description": "Survey url for post webinar survey"
                    },
                    "registrants_email_notification": {
                      "type": "boolean",
                      "description": "Registrants email notification"
                    },
                    "meeting_authentication": {
                      "type": "boolean",
                      "description": "Only authenticated users can join meetings"
                    },
                    "authentication_option": {
                      "type": "string",
                      "description": "Meeting authentication option id"
                    },
                    "authentication_domains": {
                      "type": "string",
                      "description": "Meeting authentication domains"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "registrants_confirmation_email": {
                      "type": "boolean",
                      "description": "Send confirmation email to registrants."
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "type": "object"
    },
    "WebinarInfo": {
      "type": "object",
      "description": "Webinar object.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic."
        },
        "type": {
          "type": "integer",
          "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time in GMT/UTC."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time."
        },
        "agenda": {
          "type": "string",
          "description": "Webinar agenda."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Create time."
        },
        "start_url": {
          "type": "string",
          "description": "<br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>"
        },
        "join_url": {
          "type": "string",
          "description": "URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar."
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            }
          }
        },
        "occurrences": {
          "type": "array",
          "description": "Array of occurrence objects.",
          "items": {
            "type": "object",
            "description": "Occurence object. This object is only returned for Recurring Webinars.",
            "properties": {
              "occurrence_id": {
                "type": "string",
                "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences."
              },
              "start_time": {
                "type": "string",
                "format": "date-time",
                "description": "Start time."
              },
              "duration": {
                "type": "integer",
                "description": "Duration."
              },
              "status": {
                "type": "string",
                "description": "Occurrence status."
              }
            }
          }
        },
        "settings": {
          "type": "object",
          "description": "Webinar settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when host joins webinar."
            },
            "panelists_video": {
              "type": "boolean",
              "description": "Start video when panelists join webinar."
            },
            "practice_session": {
              "type": "boolean",
              "description": "Enable practice session.",
              "default": false
            },
            "hd_video": {
              "type": "boolean",
              "description": "Default to HD video.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the webinar.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed-in users can join this webinar."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed-in users with specified domains can join webinars."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host emails or IDs. Multiple values separated by comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date."
            },
            "show_share_button": {
              "type": "boolean",
              "description": "Show social share buttons on the registration page."
            },
            "allow_multiple_devices": {
              "type": "boolean",
              "description": "Allow attendees to join from multiple devices."
            },
            "on_demand": {
              "type": "boolean",
              "description": "Make the webinar on-demand",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_confirmation_email": {
              "description": "Send confirmation email to registrants",
              "type": "boolean"
            },
            "registrants_restrict_number": {
              "type": "integer",
              "default": 0,
              "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
              "minimum": 0,
              "maximum": 20000
            },
            "notify_registrants": {
              "type": "boolean",
              "description": "Send notification email to registrants when the host updates a webinar."
            },
            "post_webinar_survey": {
              "type": "boolean",
              "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
            },
            "survey_url": {
              "type": "string",
              "description": "Survey url for post webinar survey"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "Registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "string",
              "description": "Meeting authentication option id"
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication domains"
            }
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
          "title": "Recurrence Webinar",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
            },
            "weekly_days": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "WebinarList": {
      "title": "User List",
      "description": "List of webinars.",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "webinars": {
              "type": "array",
              "description": "List of webinar objects.",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Unique identifier for a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled."
                      },
                      "id": {
                        "type": "integer",
                        "description": "Webinar ID - also known as the webinar number."
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the host of the webinar."
                      },
                      "topic": {
                        "type": "string",
                        "description": "Meeting topic."
                      },
                      "type": {
                        "type": "integer",
                        "description": "Meeting type.",
                        "enum": [
                          5,
                          6,
                          9
                        ],
                        "x-enum-descriptions": [
                          "Webinar",
                          "Recurring Webinar with no fixed time",
                          "Recurring Webinar with fixed time"
                        ]
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Meeting duration."
                      },
                      "timezone": {
                        "type": "string",
                        "description": "[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of webinar creation."
                      },
                      "join_url": {
                        "type": "string",
                        "description": "Join URL of the webinar (using which others can join the webinar)."
                      },
                      "agenda": {
                        "type": "string",
                        "description": "Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar)."
                      },
                      "start_time": {
                        "type": "string",
                        "description": "Scheduled start time of the Webinar.",
                        "format": "date-time"
                      }
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "WebinarInstances": {
      "title": "Webinar instances",
      "description": "List of webinars.",
      "allOf": [
        {
          "properties": {
            "webinars": {
              "type": "array",
              "description": "List of ended webinar instances.",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Webinar UUID."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time."
                      }
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "WebinarMetric": {
      "type": "object",
      "title": "Webinar Metrics",
      "description": "Webinar metric details.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Webinar UUID."
        },
        "id": {
          "type": "integer",
          "description": "Webinar ID."
        },
        "topic": {
          "type": "string",
          "description": "Webinar topic."
        },
        "host": {
          "type": "string",
          "description": "User display name."
        },
        "email": {
          "type": "string",
          "description": "User email."
        },
        "user_type": {
          "type": "string",
          "description": "User type."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time."
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar end time."
        },
        "duration": {
          "type": "string",
          "description": "Webinar duration."
        },
        "participants": {
          "type": "integer",
          "description": "Webinar participant count."
        },
        "has_pstn": {
          "type": "boolean",
          "description": "Indicates whether or not PSTN was used for the Webinar."
        },
        "has_voip": {
          "type": "boolean",
          "description": "Indicates whether or not VoIP was used for the Webinar."
        },
        "has_3rd_party_audio": {
          "type": "boolean",
          "description": "Indicates whether or not TSP was used for the Webinar."
        },
        "has_video": {
          "type": "boolean",
          "description": "Indicates whether or not video was used for the Webinar."
        },
        "has_screen_share": {
          "type": "boolean",
          "description": "Indicates whether or not screen sharing was used for the Webinar."
        },
        "has_recording": {
          "type": "boolean",
          "description": "Indicates whether or not recording was used for the Webinar."
        },
        "has_sip": {
          "type": "boolean",
          "description": "Indicates whether or not SIP was used for the Webinar."
        },
        "dept": {
          "type": "string",
          "description": "Department of the host."
        }
      }
    },
    "WebinarPanelist": {
      "type": "object",
      "description": "Webinar panelist.",
      "properties": {
        "panelists": {
          "type": "array",
          "description": "List of panelist objects.",
          "maximum": 30,
          "items": {
            "allOf": [
              {
                "type": "object",
                "description": "Panelist base object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Panelist's full name."
                  },
                  "email": {
                    "type": "string",
                    "description": "Panelist's email.",
                    "format": "email"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "WebinarPanelistList": {
      "description": "Webinar panelist.",
      "allOf": [
        {
          "type": "object",
          "title": "Panelist List",
          "description": "List of panelists.",
          "properties": {
            "total_records": {
              "type": "integer",
              "description": "Total records."
            },
            "panelists": {
              "type": "array",
              "description": "List of panelist objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Panelist's ID."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Panelist base object.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Panelist's full name."
                      },
                      "email": {
                        "type": "string",
                        "description": "Panelist's email.",
                        "format": "email"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "join_url": {
                        "type": "string",
                        "description": "Join URL."
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "WebinarRegistrant": {
      "description": "Webinar registrant.",
      "allOf": [
        {
          "type": "object",
          "description": "Registrant base object.",
          "properties": {
            "email": {
              "type": "string",
              "description": "A valid email address of the registrant."
            },
            "first_name": {
              "type": "string",
              "description": "Registrant's first name."
            },
            "last_name": {
              "type": "string",
              "description": "Registrant's last name."
            },
            "address": {
              "type": "string",
              "description": "Registrant's address."
            },
            "city": {
              "type": "string",
              "description": "Registrant's city."
            },
            "country": {
              "type": "string",
              "description": "Registrant's country."
            },
            "zip": {
              "type": "string",
              "description": "Registrant's Zip/Postal Code."
            },
            "state": {
              "type": "string",
              "description": "Registrant's State/Province."
            },
            "phone": {
              "type": "string",
              "description": "Registrant's Phone number."
            },
            "industry": {
              "type": "string",
              "description": "Registrant's Industry."
            },
            "org": {
              "type": "string",
              "description": "Registrant's Organization."
            },
            "job_title": {
              "type": "string",
              "description": "Registrant's job title."
            },
            "purchasing_time_frame": {
              "type": "string",
              "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
            },
            "role_in_purchase_process": {
              "type": "string",
              "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
            },
            "no_of_employees": {
              "type": "string",
              "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
            },
            "comments": {
              "type": "string",
              "description": "A field that allows registrants to provide any questions or comments that they might have."
            },
            "custom_questions": {
              "type": "array",
              "description": "Custom questions.",
              "items": {
                "type": "object",
                "description": "Custom Question.",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "email",
            "first_name",
            "last_name"
          ]
        }
      ],
      "type": "object"
    },
    "WebinarRegistrantList": {
      "title": "Registration List",
      "description": "List of users.",
      "allOf": [
        {
          "title": "Registration List",
          "description": "List of users.",
          "allOf": [
            {
              "type": "object",
              "description": "Pagination Object.",
              "properties": {
                "page_count": {
                  "type": "integer",
                  "description": "The number of pages returned for the request made."
                },
                "page_number": {
                  "type": "integer",
                  "description": "The page number of the current results.",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of records returned with a single API call.",
                  "default": 30,
                  "maximum": 300
                },
                "total_records": {
                  "type": "integer",
                  "description": "The total number of all the records available across pages."
                }
              }
            },
            {
              "properties": {
                "registrants": {
                  "type": "array",
                  "description": "List of registrant objects.",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Registrant ID."
                          }
                        }
                      },
                      {
                        "description": " Registrant.",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Registrant base object.",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "A valid email address of the registrant."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "Registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Registrant's last name."
                              },
                              "address": {
                                "type": "string",
                                "description": "Registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "Registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "Registrant's country."
                              },
                              "zip": {
                                "type": "string",
                                "description": "Registrant's Zip/Postal Code."
                              },
                              "state": {
                                "type": "string",
                                "description": "Registrant's State/Province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "Registrant's Phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "Registrant's Industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "Registrant's Organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "Registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "This field can be included to gauge interest of webinar attendees towards buying your product or service.\n\nPurchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`"
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` "
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`"
                              },
                              "comments": {
                                "type": "string",
                                "description": "A field that allows registrants to provide any questions or comments that they might have."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Custom questions.",
                                "items": {
                                  "type": "object",
                                  "description": "Custom Question.",
                                  "properties": {
                                    "title": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "email",
                              "first_name",
                              "last_name"
                            ]
                          }
                        ],
                        "type": "object"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar."
                          },
                          "create_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the registrant registered."
                          },
                          "join_url": {
                            "type": "string",
                            "format": "string",
                            "description": "The URL using which an approved registrant can join the webinar."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "type": "object"
        }
      ],
      "type": "object"
    },
    "WebinarSettings": {
      "type": "object",
      "description": "Webinar settings.",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start video when host joins webinar."
        },
        "panelists_video": {
          "type": "boolean",
          "description": "Start video when panelists join webinar."
        },
        "practice_session": {
          "type": "boolean",
          "description": "Enable practice session.",
          "default": false
        },
        "hd_video": {
          "type": "boolean",
          "description": "Default to HD video.",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Automatically Approve",
            "Manually Approve",
            "No Registration Required"
          ]
        },
        "registration_type": {
          "type": "integer",
          "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Attendees register once and can attend any of the occurrences",
            "Attendees need to register for each occurrence to attend",
            "Attendees register once and can choose one or more occurrences to attend"
          ]
        },
        "audio": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the webinar.",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip"
          ],
          "x-enum-descriptions": [
            "Both Telephony and VoIP",
            "Telephony only",
            "VoIP only"
          ]
        },
        "auto_recording": {
          "type": "string",
          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record to local device",
            "Record to cloud",
            "No Recording"
          ]
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed-in users can join this webinar."
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed-in users with specified domains can join webinars."
        },
        "alternative_hosts": {
          "type": "string",
          "description": "Alternative host emails or IDs. Multiple values separated by comma."
        },
        "close_registration": {
          "type": "boolean",
          "description": "Close registration after event date."
        },
        "show_share_button": {
          "type": "boolean",
          "description": "Show social share buttons on the registration page."
        },
        "allow_multiple_devices": {
          "type": "boolean",
          "description": "Allow attendees to join from multiple devices."
        },
        "on_demand": {
          "type": "boolean",
          "description": "Make the webinar on-demand",
          "default": false
        },
        "global_dial_in_countries": {
          "type": "array",
          "description": "List of global dial-in countries",
          "items": {
            "type": "string"
          }
        },
        "contact_name": {
          "type": "string",
          "description": "Contact name for registration"
        },
        "contact_email": {
          "type": "string",
          "description": "Contact email for registration"
        },
        "registrants_confirmation_email": {
          "description": "Send confirmation email to registrants",
          "type": "boolean"
        },
        "registrants_restrict_number": {
          "type": "integer",
          "default": 0,
          "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
          "minimum": 0,
          "maximum": 20000
        },
        "notify_registrants": {
          "type": "boolean",
          "description": "Send notification email to registrants when the host updates a webinar."
        },
        "post_webinar_survey": {
          "type": "boolean",
          "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
        },
        "survey_url": {
          "type": "string",
          "description": "Survey url for post webinar survey"
        },
        "registrants_email_notification": {
          "type": "boolean",
          "description": "Registrants email notification"
        },
        "meeting_authentication": {
          "type": "boolean",
          "description": "Only authenticated users can join meetings"
        },
        "authentication_option": {
          "type": "string",
          "description": "Meeting authentication option id"
        },
        "authentication_domains": {
          "type": "string",
          "description": "Meeting authentication domains"
        }
      }
    },
    "ZoomRoom": {
      "type": "object",
      "title": "Zoom Room",
      "description": "Zoom room.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Zoom room ID."
        },
        "room_name": {
          "type": "string",
          "description": "Zoom room name."
        },
        "calender_name": {
          "type": "string",
          "description": "Zoom calendar name."
        },
        "email": {
          "type": "string",
          "description": "Zoom room email."
        },
        "account_type": {
          "type": "string",
          "description": "Zoom room email type."
        },
        "status": {
          "type": "string",
          "description": "Zoom room status."
        },
        "device_ip": {
          "type": "string",
          "description": "Zoom room device IP."
        },
        "camera": {
          "type": "string",
          "description": "Zoom room camera."
        },
        "microphone": {
          "type": "string",
          "description": "Zoom room microphone."
        },
        "speaker": {
          "type": "string",
          "description": "Zoom room speaker."
        },
        "last_start_time": {
          "type": "string",
          "description": "Zoom room last start time."
        },
        "location": {
          "type": "string",
          "description": "Zoom room location."
        },
        "health": {
          "type": "string"
        },
        "issues": {
          "type": "array",
          "description": "Zoom Room issues.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ZoomRoomList": {
      "title": "Zoom Room List",
      "description": "Zoom Room List",
      "allOf": [
        {
          "type": "object",
          "description": "Pagination Object.",
          "properties": {
            "page_count": {
              "type": "integer",
              "description": "The number of pages returned for the request made."
            },
            "page_number": {
              "type": "integer",
              "description": "The page number of the current results.",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "description": "The number of records returned with a single API call.",
              "default": 30,
              "maximum": 300
            },
            "total_records": {
              "type": "integer",
              "description": "The total number of all the records available across pages."
            }
          }
        },
        {
          "properties": {
            "zoom_rooms": {
              "type": "array",
              "description": "Array of Zoom Rooms",
              "items": {
                "type": "object",
                "title": "Zoom Room",
                "description": "Zoom room.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Zoom room ID."
                  },
                  "room_name": {
                    "type": "string",
                    "description": "Zoom room name."
                  },
                  "calender_name": {
                    "type": "string",
                    "description": "Zoom calendar name."
                  },
                  "email": {
                    "type": "string",
                    "description": "Zoom room email."
                  },
                  "account_type": {
                    "type": "string",
                    "description": "Zoom room email type."
                  },
                  "status": {
                    "type": "string",
                    "description": "Zoom room status."
                  },
                  "device_ip": {
                    "type": "string",
                    "description": "Zoom room device IP."
                  },
                  "camera": {
                    "type": "string",
                    "description": "Zoom room camera."
                  },
                  "microphone": {
                    "type": "string",
                    "description": "Zoom room microphone."
                  },
                  "speaker": {
                    "type": "string",
                    "description": "Zoom room speaker."
                  },
                  "last_start_time": {
                    "type": "string",
                    "description": "Zoom room last start time."
                  },
                  "location": {
                    "type": "string",
                    "description": "Zoom room location."
                  },
                  "health": {
                    "type": "string"
                  },
                  "issues": {
                    "type": "array",
                    "description": "Zoom Room issues.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "PollList": {
      "type": "object",
      "title": "Poll List",
      "description": "Poll List",
      "allOf": [
        {
          "properties": {
            "total_records": {
              "type": "integer",
              "description": "The number of all records available across pages"
            },
            "polls": {
              "type": "array",
              "description": "Array of Polls",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of Poll"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results",
                        "enum": [
                          "notstart",
                          "started",
                          "ended",
                          "sharing"
                        ],
                        "x-enum-descriptions": [
                          "Poll not start",
                          "Poll started",
                          "Poll ended",
                          "Poll is sharing"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Poll",
                    "description": "Poll",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title for the poll."
                      },
                      "questions": {
                        "type": "array",
                        "description": "Array of Polls",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Question to be asked to the attendees."
                            },
                            "type": {
                              "type": "string",
                              "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                              "enum": [
                                "single",
                                "multiple"
                              ],
                              "x-enum-descriptions": [
                                "single answer",
                                "multiple answer"
                              ]
                            },
                            "answers": {
                              "type": "array",
                              "description": "Answers to the questions",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "Poll": {
      "type": "object",
      "title": "Poll",
      "description": "Poll",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title for the poll."
        },
        "questions": {
          "type": "array",
          "description": "Array of Polls",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Question to be asked to the attendees."
              },
              "type": {
                "type": "string",
                "description": "Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice",
                "enum": [
                  "single",
                  "multiple"
                ],
                "x-enum-descriptions": [
                  "single answer",
                  "multiple answer"
                ]
              },
              "answers": {
                "type": "array",
                "description": "Answers to the questions",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "MeetingRegistrantQuestions": {
      "type": "object",
      "title": "Meeting Registrant Questions",
      "description": "Meeting Registrant Questions",
      "properties": {
        "questions": {
          "type": "array",
          "description": "Array of Registrant Questions",
          "items": {
            "type": "object",
            "properties": {
              "field_name": {
                "type": "string",
                "description": "Field name of the question.",
                "enum": [
                  "address",
                  "city",
                  "country",
                  "zip",
                  "state",
                  "phone",
                  "industry",
                  "org",
                  "job_title",
                  "purchasing_time_frame",
                  "role_in_purchase_process",
                  "no_of_employees",
                  "comments"
                ],
                "x-enum-descriptions": [
                  "Address",
                  "City",
                  "Country/Region",
                  "Zip/Postal Code",
                  "State/Province",
                  "Phone",
                  "Industry",
                  "Organization",
                  "Job Title",
                  "Purchasing Time Frame",
                  "Role in Purchase Process",
                  "Number of Employees",
                  "Questions & Comments"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "Indicates whether or not the displayed fields are required to be filled out by registrants."
              }
            }
          }
        },
        "custom_questions": {
          "type": "array",
          "description": "Array of Registrant Custom Questions",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the custom question."
              },
              "type": {
                "type": "string",
                "description": "Type of the question being asked.",
                "enum": [
                  "short",
                  "single"
                ],
                "x-enum-descriptions": [
                  "Short Answer",
                  "Single Answer"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "Indicates whether or not the custom question is required to be answered by participants or not."
              },
              "answers": {
                "type": "array",
                "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "WebinarRegistrantQuestions": {
      "type": "object",
      "title": "Webinar Registrant Questions",
      "description": "Webinar Registrant Questions",
      "properties": {
        "questions": {
          "type": "array",
          "description": "Array of registration fields whose values should be provided by registrants during registration.",
          "items": {
            "properties": {
              "field_name": {
                "type": "string",
                "description": "Field name",
                "enum": [
                  "last_name",
                  "address",
                  "city",
                  "country",
                  "zip",
                  "state",
                  "phone",
                  "industry",
                  "org",
                  "job_title",
                  "purchasing_time_frame",
                  "role_in_purchase_process",
                  "no_of_employees",
                  "comments"
                ],
                "x-enum-descriptions": [
                  "Last Name",
                  "Address",
                  "City",
                  "Country/Region",
                  "Zip/Postal Code",
                  "State/Province",
                  "Phone",
                  "Industry",
                  "Organization",
                  "Job Title",
                  "Purchasing Time Frame",
                  "Role in Purchase Process",
                  "Number of Employees",
                  "Questions & Comments"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "State whether the selected fields are required or optional."
              }
            }
          }
        },
        "custom_questions": {
          "type": "array",
          "description": "Array of Registrant Custom Questions.",
          "items": {
            "properties": {
              "title": {
                "type": "string",
                "description": "Custom question."
              },
              "type": {
                "type": "string",
                "description": "The question-answer type.",
                "enum": [
                  "short",
                  "single_radio",
                  "single_dropdown",
                  "multiple"
                ],
                "x-enum-descriptions": [
                  "Short Answer",
                  "Single Radio Answer",
                  "Single Dropdown Answer",
                  "Multiple Answer"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "State whether or not the custom question is required to be answered by a registrant."
              },
              "answers": {
                "type": "array",
                "description": "An array of answer choices. Can't be used for short answer type.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "RecordingRegistrantQuestions": {
      "type": "object",
      "title": "Recording Registrant Questions",
      "description": "Recording Registrant Questions",
      "properties": {
        "questions": {
          "type": "array",
          "description": "Array of Registrant Questions",
          "items": {
            "type": "object",
            "properties": {
              "field_name": {
                "type": "string",
                "description": "Field name.",
                "enum": [
                  "last_name",
                  "address",
                  "city",
                  "country",
                  "zip",
                  "state",
                  "phone",
                  "industry",
                  "org",
                  "job_title",
                  "purchasing_time_frame",
                  "role_in_purchase_process",
                  "no_of_employees",
                  "comments"
                ],
                "x-enum-descriptions": [
                  "Last Name",
                  "Address",
                  "City",
                  "Country/Region",
                  "Zip/Postal Code",
                  "State/Province",
                  "Phone",
                  "Industry",
                  "Organization",
                  "Job Title",
                  "Purchasing Time Frame",
                  "Role in Purchase Process",
                  "Number of Employees",
                  "Questions & Comments"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "State whether the field is required to be answered by the registrant or not."
              }
            }
          }
        },
        "custom_questions": {
          "type": "array",
          "description": "Array of Registrant Custom Questions",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the question."
              },
              "type": {
                "type": "string",
                "description": "The type of registration question and answers.",
                "enum": [
                  "short",
                  "single",
                  "multiple"
                ],
                "x-enum-descriptions": [
                  "Short Answer",
                  "Single Answer",
                  "Multiple Answer"
                ]
              },
              "required": {
                "type": "boolean",
                "description": "State whether registrants are required to answer custom questions or not."
              },
              "answers": {
                "type": "array",
                "description": "Answer choices for the question. Can not be used with Short answer type.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "TrackingFieldList": {
      "type": "object",
      "title": "Tracking Field List",
      "description": "Tracking Field List",
      "allOf": [
        {
          "properties": {
            "total_records": {
              "type": "integer",
              "description": "The number of all records available across pages"
            },
            "tracking_fields": {
              "type": "array",
              "description": "Array of Tracking Fields",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of Tracking Field"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Tracking Field",
                    "description": "Tracking Field",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "Label/ Name for the tracking field."
                      },
                      "required": {
                        "type": "boolean",
                        "description": "Tracking Field Required"
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Tracking Field Visible"
                      },
                      "recommended_values": {
                        "type": "array",
                        "description": "Array of recommended values",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "TrackingField": {
      "type": "object",
      "title": "Tracking Field",
      "description": "Tracking Field",
      "properties": {
        "field": {
          "type": "string",
          "description": "Label/ Name for the tracking field."
        },
        "required": {
          "type": "boolean",
          "description": "Tracking Field Required"
        },
        "visible": {
          "type": "boolean",
          "description": "Tracking Field Visible"
        },
        "recommended_values": {
          "type": "array",
          "description": "Array of recommended values",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccountSettingsTSP": {
      "type": "object",
      "description": "Account Settings: TSP.",
      "properties": {
        "call_out": {
          "type": "boolean",
          "description": "Call Out"
        },
        "call_out_countries": {
          "type": "array",
          "items": {},
          "description": "Call Out Countries/Regions"
        },
        "show_international_numbers_link": {
          "type": "boolean",
          "description": "Show international numbers link on the invitation email"
        },
        "display_toll_free_numbers": {
          "type": "boolean",
          "description": "Display toll-free numbers"
        }
      }
    },
    "CreateWebinarSettings": {
      "type": "object",
      "description": "Create Webinar settings.",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start video when host joins webinar."
        },
        "panelists_video": {
          "type": "boolean",
          "description": "Start video when panelists join webinar."
        },
        "practice_session": {
          "type": "boolean",
          "description": "Enable practice session.",
          "default": false
        },
        "hd_video": {
          "type": "boolean",
          "description": "Default to HD video.",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Automatically Approve",
            "Manually Approve",
            "No Registration Required"
          ]
        },
        "registration_type": {
          "type": "integer",
          "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Attendees register once and can attend any of the occurrences",
            "Attendees need to register for each occurrence to attend",
            "Attendees register once and can choose one or more occurrences to attend"
          ]
        },
        "audio": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting.",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip"
          ],
          "x-enum-descriptions": [
            "Both Telephony and VoIP",
            "Telephony only",
            "VoIP only"
          ]
        },
        "auto_recording": {
          "type": "string",
          "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record to local device",
            "Record to cloud",
            "No Recording"
          ]
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed-in users can join this meeting."
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed-in users with specified domains can join meetings."
        },
        "alternative_hosts": {
          "type": "string",
          "description": "Alternative host emails or IDs. Multiple values separated by comma."
        },
        "close_registration": {
          "type": "boolean",
          "description": "Close registration after event date."
        },
        "show_share_button": {
          "type": "boolean",
          "description": "Show social share buttons on the registration page."
        },
        "allow_multiple_devices": {
          "type": "boolean",
          "description": "Allow attendees to join from multiple devices."
        },
        "on_demand": {
          "type": "boolean",
          "description": "Make the webinar on-demand",
          "default": false
        },
        "global_dial_in_countries": {
          "type": "array",
          "description": "List of global dial-in countries",
          "items": {
            "type": "string"
          }
        },
        "contact_name": {
          "type": "string",
          "description": "Contact name for registration"
        },
        "contact_email": {
          "type": "string",
          "description": "Contact email for registration"
        },
        "registrants_restrict_number": {
          "type": "integer",
          "default": 0,
          "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
          "minimum": 0,
          "maximum": 20000
        },
        "post_webinar_survey": {
          "type": "boolean",
          "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
        },
        "survey_url": {
          "type": "string",
          "description": "Survey url for post webinar survey"
        },
        "registrants_email_notification": {
          "type": "boolean",
          "description": "registrants email notification"
        },
        "meeting_authentication": {
          "type": "boolean",
          "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`."
        },
        "authentication_option": {
          "type": "string",
          "description": "Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)."
        },
        "authentication_domains": {
          "type": "string",
          "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains."
        }
      }
    },
    "UserSettingsTSP": {
      "type": "object",
      "description": "Account Settings: TSP.",
      "title": "User settings: TSP settings",
      "properties": {
        "call_out": {
          "type": "boolean",
          "description": "Call Out"
        },
        "call_out_countries": {
          "type": "array",
          "description": "Call Out Countries/Regions",
          "items": {}
        },
        "show_international_numbers_link": {
          "type": "boolean",
          "description": "Show international numbers link on the invitation email"
        }
      }
    },
    "MeetingCreate": {
      "type": "object",
      "description": "Base object for meeting.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic."
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. Example: \"2020-03-31T12:02:00Z\"\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration (minutes). Used for scheduled meetings only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
          "maxLength": 10
        },
        "agenda": {
          "type": "string",
          "description": "Meeting description.",
          "maxLength": 2000
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            },
            "required": [
              "field"
            ]
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. ",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n"
            },
            "weekly_days": {
              "type": "string",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br>\n**Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n<br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the meeting should recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "type": "object",
          "description": "Meeting settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when the host joins the meeting."
            },
            "participant_video": {
              "type": "boolean",
              "description": "Start video when participants join the meeting."
            },
            "cn_meeting": {
              "type": "boolean",
              "description": "Host meeting in China.",
              "default": false
            },
            "in_meeting": {
              "type": "boolean",
              "description": "Host meeting in India.",
              "default": false
            },
            "join_before_host": {
              "type": "boolean",
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "default": false
            },
            "mute_upon_entry": {
              "type": "boolean",
              "description": "Mute participants upon entry.",
              "default": false
            },
            "watermark": {
              "type": "boolean",
              "description": "Add watermark when viewing a shared screen.",
              "default": false
            },
            "use_pmi": {
              "type": "boolean",
              "description": "Use Personal Meeting ID instead of an automatically generated meeting ID. It can only be used for scheduled meetings, instant meetings and recurring meetings with no fixed time.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed in users can join this meeting."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed in users with specified domains can join meetings."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host's emails or IDs: multiple values separated by a comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date",
              "default": false
            },
            "waiting_room": {
              "type": "boolean",
              "description": "Enable waiting room",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`."
            },
            "authentication_option": {
              "type": "string",
              "description": "Specify the authentication type for users to join a meeting with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)."
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains."
            }
          }
        }
      }
    },
    "create_webinar": {
      "type": "object",
      "description": "Base webinar object for sessions.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic."
        },
        "type": {
          "type": "integer",
          "description": "Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.<br> \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration (minutes). Used for scheduled webinars only."
        },
        "timezone": {
          "type": "string",
          "description": "Time zone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Webinar description."
        },
        "tracking_fields": {
          "type": "array",
          "description": "Tracking fields",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "Tracking fields type"
              },
              "value": {
                "type": "string",
                "description": "Tracking fields value"
              }
            },
            "required": [
              "field"
            ]
          }
        },
        "recurrence": {
          "type": "object",
          "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
          "title": "Recurrence Webinar",
          "properties": {
            "type": {
              "type": "integer",
              "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Daily",
                "Weekly",
                "Monthly"
              ]
            },
            "repeat_interval": {
              "type": "integer",
              "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
            },
            "weekly_days": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "monthly_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
            },
            "monthly_week": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
              "enum": [
                -1,
                1,
                2,
                3,
                4
              ],
              "x-enum-descriptions": [
                "Last week",
                "First week",
                "Second week",
                "Third week",
                "Fourth week"
              ]
            },
            "monthly_week_day": {
              "type": "integer",
              "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "x-enum-descriptions": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            "end_times": {
              "type": "integer",
              "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
              "default": 1,
              "maximum": 50
            },
            "end_date_time": {
              "type": "string",
              "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "format": "date-time"
            }
          },
          "required": [
            "type"
          ]
        },
        "settings": {
          "type": "object",
          "description": "Create Webinar settings.",
          "properties": {
            "host_video": {
              "type": "boolean",
              "description": "Start video when host joins webinar."
            },
            "panelists_video": {
              "type": "boolean",
              "description": "Start video when panelists join webinar."
            },
            "practice_session": {
              "type": "boolean",
              "description": "Enable practice session.",
              "default": false
            },
            "hd_video": {
              "type": "boolean",
              "description": "Default to HD video.",
              "default": false
            },
            "approval_type": {
              "type": "integer",
              "default": 2,
              "description": "`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.",
              "enum": [
                0,
                1,
                2
              ],
              "x-enum-descriptions": [
                "Automatically Approve",
                "Manually Approve",
                "No Registration Required"
              ]
            },
            "registration_type": {
              "type": "integer",
              "description": "Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.",
              "default": 1,
              "enum": [
                1,
                2,
                3
              ],
              "x-enum-descriptions": [
                "Attendees register once and can attend any of the occurrences",
                "Attendees need to register for each occurrence to attend",
                "Attendees register once and can choose one or more occurrences to attend"
              ]
            },
            "audio": {
              "type": "string",
              "description": "Determine how participants can join the audio portion of the meeting.",
              "default": "both",
              "enum": [
                "both",
                "telephony",
                "voip"
              ],
              "x-enum-descriptions": [
                "Both Telephony and VoIP",
                "Telephony only",
                "VoIP only"
              ]
            },
            "auto_recording": {
              "type": "string",
              "description": "Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.",
              "default": "none",
              "enum": [
                "local",
                "cloud",
                "none"
              ],
              "x-enum-descriptions": [
                "Record to local device",
                "Record to cloud",
                "No Recording"
              ]
            },
            "enforce_login": {
              "type": "boolean",
              "description": "Only signed-in users can join this meeting."
            },
            "enforce_login_domains": {
              "type": "string",
              "description": "Only signed-in users with specified domains can join meetings."
            },
            "alternative_hosts": {
              "type": "string",
              "description": "Alternative host emails or IDs. Multiple values separated by comma."
            },
            "close_registration": {
              "type": "boolean",
              "description": "Close registration after event date."
            },
            "show_share_button": {
              "type": "boolean",
              "description": "Show social share buttons on the registration page."
            },
            "allow_multiple_devices": {
              "type": "boolean",
              "description": "Allow attendees to join from multiple devices."
            },
            "on_demand": {
              "type": "boolean",
              "description": "Make the webinar on-demand",
              "default": false
            },
            "global_dial_in_countries": {
              "type": "array",
              "description": "List of global dial-in countries",
              "items": {
                "type": "string"
              }
            },
            "contact_name": {
              "type": "string",
              "description": "Contact name for registration"
            },
            "contact_email": {
              "type": "string",
              "description": "Contact email for registration"
            },
            "registrants_restrict_number": {
              "type": "integer",
              "default": 0,
              "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.",
              "minimum": 0,
              "maximum": 20000
            },
            "post_webinar_survey": {
              "type": "boolean",
              "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar"
            },
            "survey_url": {
              "type": "string",
              "description": "Survey url for post webinar survey"
            },
            "registrants_email_notification": {
              "type": "boolean",
              "description": "registrants email notification"
            },
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`."
            },
            "authentication_option": {
              "type": "string",
              "description": "Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings)."
            },
            "authentication_domains": {
              "type": "string",
              "description": "Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains."
            }
          }
        }
      }
    },
    "tsp-global-dial-in": {
      "type": "object",
      "title": "TSP Global Dial-In URL Setting",
      "properties": {
        "audio_url": {
          "type": "string",
          "description": "The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.",
          "maxLength": 512
        }
      }
    },
    "recurrence-webinar": {
      "type": "object",
      "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. ",
      "title": "Recurrence Webinar",
      "properties": {
        "type": {
          "type": "integer",
          "description": "Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Daily",
            "Weekly",
            "Monthly"
          ]
        },
        "repeat_interval": {
          "type": "integer",
          "description": "Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months."
        },
        "weekly_days": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br>\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field.<br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "x-enum-descriptions": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "monthly_day": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`."
        },
        "monthly_week": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.",
          "enum": [
            -1,
            1,
            2,
            3,
            4
          ],
          "x-enum-descriptions": [
            "Last week",
            "First week",
            "Second week",
            "Third week",
            "Fourth week"
          ]
        },
        "monthly_week_day": {
          "type": "integer",
          "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "x-enum-descriptions": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "end_times": {
          "type": "integer",
          "description": "Select how many times the webinar will recur before it is canceled. (Cannot be used with \"end_date_time\".)",
          "default": 1,
          "maximum": 50
        },
        "end_date_time": {
          "type": "string",
          "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
          "format": "date-time"
        }
      },
      "required": [
        "type"
      ]
    },
    "Channel": {
      "type": "object",
      "description": "The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). ",
      "properties": {
        "id": {
          "type": "string",
          "description": "Channel Id."
        },
        "name": {
          "type": "string",
          "description": "Name of the channel.",
          "maxLength": 128
        },
        "type": {
          "type": "integer",
          "description": "Type of the channel. The value can be one of the following:<br>\n`1`: Private channel. In this type of channel, members must be invited to join a channel.<br>\n`2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>\n`3`: Public channel. Anyone can search for this channel and join the channel.<br>",
          "enum": [
            1,
            2,
            3
          ]
        }
      }
    },
    "QOSParticipant": {
      "type": "object",
      "title": "Participant QOS",
      "description": "Participant QOS.",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid",
          "description": "Participant ID."
        },
        "user_name": {
          "type": "string",
          "description": "Participant display name."
        },
        "device": {
          "type": "string",
          "description": "The type of device using which the participant joined the meeting."
        },
        "ip_address": {
          "type": "string",
          "description": "Participant's IP address."
        },
        "location": {
          "type": "string",
          "description": "Participant's location."
        },
        "join_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which participant joined the meeting."
        },
        "leave_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which participant left the meeting."
        },
        "pc_name": {
          "type": "string",
          "description": "Participant's PC name."
        },
        "domain": {
          "type": "string",
          "description": "Participant's PC domain."
        },
        "mac_addr": {
          "type": "string",
          "description": "Participant's MAC address."
        },
        "harddisk_id": {
          "type": "string",
          "description": "Participant's hard disk ID."
        },
        "version": {
          "type": "string",
          "description": "Participant's Zoom Client version."
        },
        "user_qos": {
          "type": "array",
          "description": "Quality of service provided to the user.",
          "items": {
            "type": "object",
            "properties": {
              "date_time": {
                "type": "string",
                "format": "date-time",
                "description": "Date-time of QOS"
              },
              "audio_input": {
                "type": "object",
                "title": "QOS Object",
                "description": "Quality of Service object.",
                "properties": {
                  "bitrate": {
                    "type": "string",
                    "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                  },
                  "latency": {
                    "type": "string",
                    "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                  },
                  "jitter": {
                    "type": "string",
                    "description": "Jitter:  the variation in the delay of received packets."
                  },
                  "avg_loss": {
                    "type": "string",
                    "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                  },
                  "max_loss": {
                    "type": "string",
                    "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                  }
                }
              },
              "audio_output": {
                "type": "object",
                "title": "QOS Object",
                "description": "Quality of Service object.",
                "properties": {
                  "bitrate": {
                    "type": "string",
                    "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                  },
                  "latency": {
                    "type": "string",
                    "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                  },
                  "jitter": {
                    "type": "string",
                    "description": "Jitter:  the variation in the delay of received packets."
                  },
                  "avg_loss": {
                    "type": "string",
                    "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                  },
                  "max_loss": {
                    "type": "string",
                    "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                  }
                }
              },
              "video_input": {
                "title": "QOS Object",
                "description": "Quality of service object.",
                "allOf": [
                  {
                    "type": "object",
                    "title": "QOS Object",
                    "description": "Quality of Service object.",
                    "properties": {
                      "bitrate": {
                        "type": "string",
                        "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                      },
                      "latency": {
                        "type": "string",
                        "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                      },
                      "jitter": {
                        "type": "string",
                        "description": "Jitter:  the variation in the delay of received packets."
                      },
                      "avg_loss": {
                        "type": "string",
                        "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                      },
                      "max_loss": {
                        "type": "string",
                        "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                      }
                    }
                  },
                  {
                    "properties": {
                      "resolution": {
                        "type": "string",
                        "description": "Resolution."
                      },
                      "frame_rate": {
                        "type": "string",
                        "description": "Frame rate."
                      }
                    }
                  }
                ],
                "type": "object"
              },
              "video_output": {
                "title": "QOS Object",
                "description": "Quality of service object.",
                "allOf": [
                  {
                    "type": "object",
                    "title": "QOS Object",
                    "description": "Quality of Service object.",
                    "properties": {
                      "bitrate": {
                        "type": "string",
                        "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                      },
                      "latency": {
                        "type": "string",
                        "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                      },
                      "jitter": {
                        "type": "string",
                        "description": "Jitter:  the variation in the delay of received packets."
                      },
                      "avg_loss": {
                        "type": "string",
                        "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                      },
                      "max_loss": {
                        "type": "string",
                        "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                      }
                    }
                  },
                  {
                    "properties": {
                      "resolution": {
                        "type": "string",
                        "description": "Resolution."
                      },
                      "frame_rate": {
                        "type": "string",
                        "description": "Frame rate."
                      }
                    }
                  }
                ],
                "type": "object"
              },
              "as_input": {
                "title": "QOS Object",
                "description": "Quality of service object.",
                "allOf": [
                  {
                    "type": "object",
                    "title": "QOS Object",
                    "description": "Quality of Service object.",
                    "properties": {
                      "bitrate": {
                        "type": "string",
                        "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                      },
                      "latency": {
                        "type": "string",
                        "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                      },
                      "jitter": {
                        "type": "string",
                        "description": "Jitter:  the variation in the delay of received packets."
                      },
                      "avg_loss": {
                        "type": "string",
                        "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                      },
                      "max_loss": {
                        "type": "string",
                        "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                      }
                    }
                  },
                  {
                    "properties": {
                      "resolution": {
                        "type": "string",
                        "description": "Resolution."
                      },
                      "frame_rate": {
                        "type": "string",
                        "description": "Frame rate."
                      }
                    }
                  }
                ],
                "type": "object"
              },
              "as_output": {
                "title": "QOS Object",
                "description": "Quality of service object.",
                "allOf": [
                  {
                    "type": "object",
                    "title": "QOS Object",
                    "description": "Quality of Service object.",
                    "properties": {
                      "bitrate": {
                        "type": "string",
                        "description": "Bitrate:  the number of bits per second that can be transmitted along a digital network."
                      },
                      "latency": {
                        "type": "string",
                        "description": "Latency: The amount of time it takes for a pack to travel from one point to another. In Zoom's case, an audio, video, or screen share packet."
                      },
                      "jitter": {
                        "type": "string",
                        "description": "Jitter:  the variation in the delay of received packets."
                      },
                      "avg_loss": {
                        "type": "string",
                        "description": "Average loss: the average amount of packet loss, that is the percentage of packets that fail to arrive at their destination."
                      },
                      "max_loss": {
                        "type": "string",
                        "description": "Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination."
                      }
                    }
                  },
                  {
                    "properties": {
                      "resolution": {
                        "type": "string",
                        "description": "Resolution."
                      },
                      "frame_rate": {
                        "type": "string",
                        "description": "Frame rate."
                      }
                    }
                  }
                ],
                "type": "object"
              },
              "cpu_usage": {
                "type": "object",
                "properties": {
                  "zoom_min_cpu_usage": {
                    "type": "string",
                    "description": "Zoom Minimum CPU Usage"
                  },
                  "zoom_avg_cpu_usage": {
                    "type": "string",
                    "description": "Zoom Average CPU Usage"
                  },
                  "zoom_max_cpu_usage": {
                    "type": "string",
                    "description": "Zoom Maximum CPU Usage"
                  },
                  "system_max_cpu_usage": {
                    "type": "string",
                    "description": "System Maximum CPU Usage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AccountSettingsAuthenticationUpdate": {
      "title": "AccountSettingsAuthenticationUpdate",
      "oneOf": [
        {
          "properties": {
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "object",
              "description": "Meeting Authentication Options",
              "properties": {
                "id": {
                  "type": "string",
                  "description": " Authentication id"
                },
                "name": {
                  "type": "string",
                  "description": " Authentication name"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "enforce_login",
                    "enforce_login_with_domains"
                  ],
                  "description": " Authentication type"
                },
                "default_option": {
                  "type": "boolean",
                  "description": " Authentication default option"
                },
                "action": {
                  "type": "string",
                  "enum": [
                    "update",
                    "delete",
                    "add"
                  ],
                  "description": " Authentication Action"
                },
                "domains": {
                  "type": "string",
                  "description": " Authentication domains"
                }
              }
            }
          }
        },
        {
          "properties": {
            "recording_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can view cloud recordings"
            },
            "authentication_option": {
              "type": "object",
              "description": "Authentication Options",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Authentication id"
                },
                "name": {
                  "type": "string",
                  "description": "Authentication name"
                },
                "type": {
                  "type": "string",
                  "description": "Authentication type",
                  "enum": [
                    "internally",
                    "enforce_login",
                    "enforce_login_with_domains"
                  ]
                },
                "default_option": {
                  "type": "boolean",
                  "description": "Authentication default option"
                },
                "action": {
                  "type": "string",
                  "description": "Authentication action",
                  "enum": [
                    "update",
                    "delete",
                    "add"
                  ]
                },
                "domains": {
                  "type": "string",
                  "description": "Authentication domains"
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "AccountSettingsRecordingAuthenticationUpdate": {
      "type": "object",
      "title": "AccountSettingsRecordingAuthenticationUpdate",
      "description": "Only authenticated users can view cloud recordings\nThe viewers need to authenticate prior to viewing the cloud recordings, hosts can choose one of the authentication methods when sharing a cloud recording.",
      "properties": {
        "recording_authentication": {
          "type": "boolean"
        },
        "authentication_option": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "internally",
                "enforce_login",
                "enforce_login_with_domains"
              ]
            },
            "default_option": {
              "type": "boolean"
            },
            "action": {
              "type": "string",
              "enum": [
                "update",
                "add",
                "delete"
              ]
            },
            "domains": {
              "type": "string"
            }
          }
        }
      }
    },
    "AccountSettingsAuthentication": {
      "title": "AccountSettingsAuthentication",
      "oneOf": [
        {
          "properties": {
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_options": {
              "type": "array",
              "description": "Meeting Authentication Options",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Authentication id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Authentication name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Authentication type",
                    "enum": [
                      "enforce_login",
                      "enforce_login_with_domains"
                    ]
                  },
                  "default_option": {
                    "type": "boolean",
                    "description": "Authentication default option"
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Authentication visible"
                  },
                  "domains": {
                    "type": "string",
                    "description": "Authentication domians"
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "recording_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can view cloud recordings"
            },
            "authentication_options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Authentication id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Authentication name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Authentication type",
                    "enum": [
                      "internally",
                      "enforce_login",
                      "enforce_login_with_domains"
                    ]
                  },
                  "default_option": {
                    "type": "boolean",
                    "description": "Authentication default option"
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Authentication visible"
                  },
                  "domains": {
                    "type": "string",
                    "description": "Authentication domians"
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "GroupUserSettingsAuthenticationUpdate": {
      "oneOf": [
        {
          "properties": {
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_option": {
              "type": "object",
              "description": "Meeting Authentication Options",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Authentication id"
                },
                "name": {
                  "type": "string",
                  "description": "Authentication name"
                },
                "type": {
                  "type": "string",
                  "description": "Authentication type",
                  "enum": [
                    "enforce_login",
                    "enforce_login_with_domains"
                  ]
                },
                "default_option": {
                  "type": "boolean",
                  "description": "Authentication default option"
                },
                "action": {
                  "type": "string",
                  "description": "Authentication action",
                  "enum": [
                    "update",
                    "show",
                    "hide"
                  ]
                },
                "domains": {
                  "type": "string",
                  "description": "Authentication domains"
                }
              }
            }
          }
        },
        {
          "properties": {
            "recording_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can view cloud recordings"
            },
            "authentication_option": {
              "type": "object",
              "description": "Authentication Options",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Authentication id"
                },
                "name": {
                  "type": "string",
                  "description": "Authentication name"
                },
                "type": {
                  "type": "string",
                  "description": "Authentication type",
                  "enum": [
                    "internally",
                    "enforce_login",
                    "enforce_login_with_domains"
                  ]
                },
                "default_option": {
                  "type": "boolean",
                  "description": "Authentication default option"
                },
                "action": {
                  "type": "string",
                  "description": "Authentication action",
                  "enum": [
                    "update",
                    "show",
                    "hide"
                  ]
                },
                "domians": {
                  "type": "string",
                  "description": "Authentication domians"
                }
              }
            }
          }
        }
      ],
      "title": "GroupSettingsAuthenticationUpdate",
      "type": "object"
    },
    "GroupUserSettingsAuthentication": {
      "oneOf": [
        {
          "properties": {
            "meeting_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can join meetings"
            },
            "authentication_options": {
              "type": "array",
              "description": "Meeting Authentication Options",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Authentication id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Authentication name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Authentication type",
                    "enum": [
                      "enforce_login",
                      "enforce_login_with_domains"
                    ]
                  },
                  "default_option": {
                    "type": "boolean",
                    "description": "Authentication default option"
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Authentication visible"
                  },
                  "domains": {
                    "type": "string",
                    "description": "Authentication domains"
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "recording_authentication": {
              "type": "boolean",
              "description": "Only authenticated users can view cloud recordings"
            },
            "authentication_options": {
              "type": "array",
              "description": "Authentication Options",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Authentication id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Authentication name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Authentication type",
                    "enum": [
                      "internally",
                      "enforce_login",
                      "enforce_login_with_domains"
                    ]
                  },
                  "default_option": {
                    "type": "boolean",
                    "description": "Authentication default option"
                  },
                  "visible": {
                    "type": "boolean",
                    "description": "Authentication visible"
                  },
                  "domains": {
                    "type": "string",
                    "description": "Authentication domians"
                  }
                }
              }
            }
          }
        }
      ],
      "type": "object"
    },
    "PhonePlan": {
      "type": "object",
      "title": "PhonePlan",
      "description": "Phone Plan Object",
      "properties": {
        "plan_base": {
          "type": "object",
          "description": "Additional phone base plans.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Additional phone base <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
            },
            "callout_countries": {
              "type": "string",
              "description": "Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \"ID\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."
            }
          }
        },
        "plan_calling": {
          "type": "array",
          "description": "Additional phone calling plans.",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Additional phone calling <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
              },
              "hosts": {
                "type": "integer"
              }
            }
          }
        },
        "plan_number": {
          "type": "array",
          "description": "Additional phone number plans.",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Additional phone number <a href=\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\">plan type.</a>"
              },
              "hosts": {
                "type": "integer"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Account operations"
    },
    {
      "name": "Billing",
      "description": "Billing operations"
    },
    {
      "name": "Chat Channels"
    },
    {
      "name": "Chat Messages",
      "description": "Chat Messages operations"
    },
    {
      "name": "Chatbot Messages"
    },
    {
      "name": "Contacts",
      "description": "Contacts operations"
    },
    {
      "name": "Cloud Recording",
      "description": "Cloud Recording operations"
    },
    {
      "name": "Dashboards",
      "description": "Dashboard operations"
    },
    {
      "name": "Data Compliance"
    },
    {
      "name": "Devices",
      "description": "H323 Device operations"
    },
    {
      "name": "Groups",
      "description": "Group operations"
    },
    {
      "name": "IM Chat",
      "description": "IM Chat operations"
    },
    {
      "name": "IM Groups",
      "description": "IM Group operations"
    },
    {
      "name": "Meetings",
      "description": "Meeting operations"
    },
    {
      "name": "PAC",
      "description": "PAC operations"
    },
    {
      "name": "Phone"
    },
    {
      "name": "Phone Auto Receptionists"
    },
    {
      "name": "Phone Blocked List"
    },
    {
      "name": "Phone Call Queues"
    },
    {
      "name": "Phone Devices"
    },
    {
      "name": "Phone Site"
    },
    {
      "name": "Common Area Phones"
    },
    {
      "name": "Reports",
      "description": "Report operations"
    },
    {
      "name": "Roles",
      "description": "User Roles"
    },
    {
      "name": "Rooms",
      "description": "ZoomRooms operations"
    },
    {
      "name": "Rooms Account"
    },
    {
      "name": "Rooms Location"
    },
    {
      "name": "SIP Phone"
    },
    {
      "name": "TrackingField",
      "description": "Tracking Field operations"
    },
    {
      "name": "TSP",
      "description": "TSP operations"
    },
    {
      "name": "Users",
      "description": "User operations"
    },
    {
      "name": "Webhooks",
      "description": "Webhook operations"
    },
    {
      "name": "Webinars",
      "description": "Webinar operations"
    },
    {
      "name": "Master Account APIs",
      "description": "APIs available to the Master Account for a Zoom account."
    },
    {
      "name": "Rooms Devices"
    },
    {
      "name": "SIP Connected Audio"
    }
  ],
  "securityDefinitions": {
    "OAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://zoom.us/oauth/authorize",
      "tokenUrl": "https://zoom.us/oauth/token"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "Client Credentials": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://api.zoom.us/oauth/token",
      "description": "Client Credentials Flow for ChatBots"
    }
  },
  "security": [
    {
      "OAuth": []
    }
  ]
}