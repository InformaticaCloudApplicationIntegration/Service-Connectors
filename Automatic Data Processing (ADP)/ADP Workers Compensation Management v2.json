{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Workers - Compensation Management",
    "description": "A worker additional remuneration add management",
    "contact": {
      "email": "Wendy.L.Dodds@adp.com",
      "name": "Wendy Dodds"
    }
  },
  "host": "test-api.adp.com",
  "basePath": "/",
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/events/hr/v1/worker.work-assignment.additional-remuneration.add": {
      "post": {
        "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is added.",
        "summary": "6ccb9f21-b1c3-459a-b4f0-227901812f93",
        "tags": [
          "Add Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAddPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationAddEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is added.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationAddEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.add.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.additional-remuneration.add/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "78708634-037d-4c4b-bcad-238256416f88",
        "tags": [
          "Add Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAddMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationAddEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.add.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.additional-remuneration.change": {
      "post": {
        "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is removed.",
        "summary": "74244f92-34ac-4487-9590-87c7358b1f9f",
        "tags": [
          "Change Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is removed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.change.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.additional-remuneration.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "e66830d3-e355-4d96-b0b0-cef07c56ad62",
        "tags": [
          "Change Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.change.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.additional-remuneration.remove": {
      "post": {
        "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is removed.",
        "summary": "10537f8d-d4bb-492f-a6ea-9d755316ef78",
        "tags": [
          "Remove Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationRemovePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationRemoveEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's additional remuneration (e.g. bonus, commission, etc.) is removed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationRemoveEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.remove.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.additional-remuneration.remove/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "32df617c-3942-4bad-94e8-72dc0da52402",
        "tags": [
          "Remove Additional Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationRemoveMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAdditionalRemunerationRemoveEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.remove.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.base-remuneration.change": {
      "post": {
        "description": "A worker's base remuneration is changed.",
        "summary": "c73b83c7-2750-4683-9ee0-718c55c7c96a",
        "tags": [
          "Change Base Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentBaseRemunerationChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentBaseRemunerationChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's base remuneration is changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentBaseRemunerationChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.worker.workAssignment.baseRemuneration.change_response_sample_v01_00_rev004.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.base-remuneration.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "7ebe5982-c41c-4f66-a5c8-0ffa90c0b521",
        "tags": [
          "Change Base Remuneration"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentBaseRemunerationChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentBaseRemunerationChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.worker.workAssignment.baseRemuneration.change_meta_sample_v01_00_rev004.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkerWorkAssignmentAdditionalRemunerationAddEvent": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationAddEvent",
      "description": "An instance to capture the worker additional remuneration add event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.add.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "An instance to capture the worker additional remuneration add event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      }
    },
    "codeType_v02": {
      "title": "codeType_v02",
      "description": "The code for the related entity.  If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "originatorType_v02": {
      "title": "originatorType_v02",
      "description": "Base structure for event or process originator",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event originator",
          "type": "string"
        },
        "eventID": {
          "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
          "type": "string"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam",
          "type": "string"
        }
      }
    },
    "IDType_v02": {
      "title": "IDType_v02",
      "description": "The unique identifier of the related entity",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "actorType_v02": {
      "title": "actorType_v02",
      "description": "Base structure for  actor",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        }
      }
    },
    "coordinateType_v02": {
      "title": "coordinateType_v02",
      "description": "The coordinates of the location",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AssignedGroup": {
      "title": "AssignedGroup",
      "type": "object",
      "properties": {
        "groupID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "groupName": {
          "description": "The name of the group",
          "type": "string"
        },
        "assignedGroupMembers": {
          "description": "Associates that are part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroupMember"
          }
        }
      }
    },
    "AssignedGroupMember": {
      "title": "AssignedGroupMember",
      "description": "An instance of an Associate that is part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        }
      }
    },
    "ActAsParty": {
      "title": "ActAsParty",
      "description": "The party (client employee) information that the actor is acting as to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) in read only mode.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "The unique identifier - UUID",
          "type": "string"
        }
      }
    },
    "OnBehalfOfParty": {
      "title": "OnBehalfOfParty",
      "description": "The party (client employee) that the actor is acting on behalf of to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) and can take action on that person's behalf.  The Actor may have access to certain features or screens that the Client Employee cannot view, e.g. diagnostics screens.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "The unique identifier - UUID",
          "type": "string"
        }
      }
    },
    "linkType_v02": {
      "title": "linkType_v02",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel"
        },
        "canonicalUri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "Rel": {
      "title": "Rel",
      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
      "example": "alternate",
      "type": "string",
      "enum": [
        "alternate",
        "create",
        "canonical",
        "describedby",
        "edit-form",
        "enclosure",
        "full",
        "related",
        "root",
        "self",
        "up",
        "search",
        "first",
        "last",
        "next",
        "previous",
        "/adp/invoke",
        "/adp/image",
        "/adp/confirm-message",
        "/adp/status-monitor",
        "/adp/codelist",
        "/adp/template",
        "/adp/externalLink",
        "/adp/validation",
        "/adp/deeplink",
        "/adp/attachment",
        "/adp/workflow"
      ]
    },
    "MediaType": {
      "title": "MediaType",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/gzip",
      "type": "string",
      "enum": [
        "application/gzip",
        "application/json",
        "application/msword",
        "application/pdf",
        "application/postscript",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/xml",
        "application/x-www-form-urlencoded",
        "image/gif",
        "image/jpeg",
        "image/png",
        "image/tiff",
        "multipart/mixed",
        "text/html",
        "text/plain",
        "application/vnd.visio",
        "image/bmp",
        "image/x-ms-bmp",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "application/vnd.ms-powerpoint",
        "video/mp4",
        "audio/mpeg",
        "video/x-msvideo",
        "video/x-ms-wmv",
        "application/rtf",
        "application/vnd.ms-outlook",
        "text/csv",
        "video/quicktime",
        "application/zip",
        "application/illustrator",
        "text/xml"
      ]
    },
    "Method": {
      "title": "Method",
      "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "DELETE",
        "PUT"
      ]
    },
    "EncType": {
      "title": "EncType",
      "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
      "example": "application/json",
      "type": "string",
      "enum": [
        "application/json",
        "application/x-www-form-urlencoded"
      ]
    },
    "PayLoadArgument": {
      "title": "PayLoadArgument",
      "type": "object",
      "properties": {
        "argumentPath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "argumentValue": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        }
      }
    },
    "Data": {
      "title": "Data",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext"
        },
        "transform": {
          "$ref": "#/definitions/Transform"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "EventContext": {
      "title": "EventContext",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerEventContext"
        }
      }
    },
    "WorkerEventContext": {
      "title": "WorkerEventContext",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignment"
        }
      }
    },
    "WorkAssignment": {
      "title": "WorkAssignment",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "Transform": {
      "title": "Transform",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform"
        }
      }
    },
    "WorkAssignmentTransform": {
      "title": "WorkAssignmentTransform",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "additionalRemuneration": {
          "$ref": "#/definitions/remunerationAdditionalType_v02"
        }
      }
    },
    "remunerationAdditionalType_v02": {
      "title": "remunerationAdditionalType_v02",
      "description": "Additional remuneration includes all other forms of compensation beyond the base pay associated to a given work assignment.  The typeCode is used to further refine the type of compensation, e.g. bonus, commission, etc.",
      "type": "object",
      "properties": {
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "intervalCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "rate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRemunerationAssociatedRateQualifierType"
          }
        }
      }
    },
    "rateType_v02": {
      "title": "rateType_v02",
      "description": "A representation of a rate value",
      "type": "object",
      "properties": {
        "amountValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the amountValue would be 20",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "unitCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "baseUnitCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "baseMultiplierValue": {
          "description": "For any given rate, the base rate value is presumed to be 1, e.g. per one hour, per one month. If for example, the rate was 10 US dollars for every widget produced, the base rate value is presumed to be one and there is no need to communicate a baseMultiplierValue. If however, the rate was 10 US Dollars for every 3 widgets produced, the baseMultiplierValue would be 3",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AdditionalRemunerationAssociatedRateQualifierType": {
      "title": "AdditionalRemunerationAssociatedRateQualifierType",
      "type": "object",
      "properties": {
        "qualifierObjectTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "Output": {
      "title": "Output",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput"
        }
      }
    },
    "WorkerOutput": {
      "title": "WorkerOutput",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput"
        }
      }
    },
    "WorkAssignmentOutput": {
      "title": "WorkAssignmentOutput",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "additionalRemuneration": {
          "$ref": "#/definitions/AdditionalRemunerationOutput"
        }
      }
    },
    "AdditionalRemunerationOutput": {
      "title": "AdditionalRemunerationOutput",
      "description": "A list of pay compensations associated to a given work assignment.  Additional remuneration includes all other forms of compensation beyond the base pay associated to a given work assignment.  The typeCode is used to further refine the type of compensation, e.g. bonus, commission, etc.",
      "type": "object",
      "properties": {
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "intervalCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "rate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRemunerationAssociatedRateQualifierType"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error": {
      "title": "EventsHrV1WorkerWorkAssignmentAdditionalRemunerationAdd400Error",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
      },
      "type": "object",
      "properties": {
        "externalValue": {
          "type": "string"
        }
      },
      "required": [
        "externalValue"
      ]
    },
    "WorkerWorkAssignmentAdditionalRemunerationAddEventMeta": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationAddEventMeta",
      "description": "An instance to capture the worker additional remuneration add event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.add.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Meta": {
      "title": "Meta",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.additionalRemuneration.add",
          "type": "string",
          "default": "worker.workAssignment.additionalRemuneration.add"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.additionalRemuneration.addQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.additionalRemuneration.addQueryCriterion": {
      "title": "workerworkAssignment.additionalRemuneration.addQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "codeListType_v03": {
      "title": "codeListType_v03",
      "type": "object",
      "properties": {
        "codeListTitle": {
          "description": "Code list title",
          "type": "string"
        },
        "exclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "listItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeListItemType_v02"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "codeListItemType_v02": {
      "title": "codeListItemType_v02",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "valueDescription": {
          "description": "Additional list item description",
          "type": "string"
        },
        "foreignKey": {
          "description": "Allows for filtering the code list",
          "type": "string"
        },
        "inactiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "defaultIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "LogicalOperator": {
      "title": "LogicalOperator",
      "description": "A logical operation",
      "type": "object",
      "properties": {
        "logicalOperatorCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "mutuallyExclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "mutuallyExclusiveLogicalOperatorCodes": {
          "description": "A list of mutually exclusive operator codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataEventContext": {
      "title": "DataEventContext",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/itemID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringType": {
      "title": "stringType",
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "disallowItemType": {
      "title": "disallowItemType",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of an object within the collection",
          "type": "string"
        }
      }
    },
    "maskingRuleType": {
      "title": "maskingRuleType",
      "type": "object",
      "properties": {
        "authorizationRequiredIndicator": {
          "type": "boolean"
        },
        "authorizationResourceID": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "helperMessageType": {
      "title": "helperMessageType",
      "description": "Helper text provided to the user when they take an action to affirm to be correct, true, or genuine.",
      "type": "object",
      "properties": {
        "messageTxt": {
          "description": "Message to present to the user.",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "metaDataType": {
      "title": "metaDataType",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[duration]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "valueSetType": {
      "title": "valueSetType",
      "description": "A reference to the codelist extended with values",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ValueSetMeta"
        },
        "valueSetListItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/valueSetItemType"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "ValueSetMeta": {
      "title": "ValueSetMeta",
      "type": "object",
      "properties": {
        "idValuePath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "itemDescriptionPath": {
          "description": "Short name field of the code list item",
          "type": "string"
        }
      }
    },
    "valueSetItemType": {
      "title": "valueSetItemType",
      "description": "The value set item type",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "itemDescription": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "defaultIndicator": {
          "description": "Indicates if the current value is a default (pre-selected)",
          "type": "boolean"
        }
      }
    },
    "objectType": {
      "title": "objectType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataTransform": {
      "title": "DataTransform",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/additionalRemuneration": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/additionalRemuneration/typeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/typeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/typeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/typeCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/intervalCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/intervalCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/intervalCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/intervalCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/additionalRemuneration/rate/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/additionalRemuneration/rate/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/rate/unitCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/rate/unitCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/unitCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/unitCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/baseUnitCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/rate/baseUnitCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/baseUnitCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/baseUnitCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/rate/baseMultiplierValue": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectTypeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectTypeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectTypeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectTypeCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/qualifierObjectID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/additionalRemuneration/associatedRateQualifiers/itemID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringCodeListType": {
      "title": "stringCodeListType",
      "type": "object",
      "properties": {
        "codeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "booleanType": {
      "title": "booleanType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property",
          "type": "string"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "boolean"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/DataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataType": {
      "title": "DataType",
      "description": "Data type of the attribute",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "ContextNumberAmountValueType": {
      "title": "ContextNumberAmountValueType",
      "description": "Context rules for a given object",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "minAmountValue": {
          "description": "Indicates the minimum amout value required for a property.",
          "type": "number",
          "format": "double"
        },
        "maxAmountValue": {
          "description": "Indicates the maximum amount value supported for a property",
          "type": "number",
          "format": "double"
        },
        "minValue": {
          "description": "Indicates the minimum value required for a property.",
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "description": "Indicates the maximum value supported for a property",
          "type": "number",
          "format": "double"
        },
        "multipleOf": {
          "description": "Indicates that the value must be a multiple of this value or divisible by this value.",
          "type": "number",
          "format": "double"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "number",
          "format": "double"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/DataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "numberType": {
      "title": "numberType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "description": "Indicates the minimum value required for a property.",
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "description": "Indicates the maximum value supported for a property",
          "type": "number",
          "format": "double"
        },
        "multipleOf": {
          "description": "Indicates that the value must be a multiple of this value or divisible by this value.",
          "type": "number",
          "format": "double"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "number",
          "format": "double"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "arrayType": {
      "title": "arrayType",
      "type": "object",
      "properties": {
        "minItems": {
          "description": "Indicates the minimum items required for an array type.  This is only relevant if the given property is an array.",
          "type": "integer",
          "format": "int32"
        },
        "maxItems": {
          "description": "Indicates the maximum items supported for an array type.  This is only relevant if the given property is an array.",
          "type": "integer",
          "format": "int32"
        },
        "sameValueProperties": {
          "description": "A list of properties which must have the exact same value within the array",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueProperties": {
          "description": "A list of properties which together must be unique",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "WorkerWorkAssignmentAdditionalRemunerationChangeEvent": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationChangeEvent",
      "description": "An instance to capture the worker additional remuneration change event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.change.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event1"
          }
        }
      }
    },
    "Event1": {
      "title": "Event1",
      "description": "An instance to capture the worker additional remuneration change event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data1"
        }
      }
    },
    "Data1": {
      "title": "Data1",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext1"
        },
        "transform": {
          "$ref": "#/definitions/Transform"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "EventContext1": {
      "title": "EventContext1",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerEventContext1"
        }
      }
    },
    "WorkerEventContext1": {
      "title": "WorkerEventContext1",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignment1"
        }
      }
    },
    "WorkAssignment1": {
      "title": "WorkAssignment1",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "additionalRemuneration": {
          "$ref": "#/definitions/AdditionalRemunerationEventContext"
        }
      }
    },
    "AdditionalRemunerationEventContext": {
      "title": "AdditionalRemunerationEventContext",
      "description": "A list of pay compensations associated to a given work assignment.  Additional remuneration includes all other forms of compensation beyond the base pay associated to a given work assignment.  The typeCode is used to further refine the type of compensation, e.g. bonus, commission, etc.",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkerWorkAssignmentAdditionalRemunerationChangeEventMeta": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationChangeEventMeta",
      "description": "An instance to capture the worker additional remuneration change event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.change.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta1"
        }
      }
    },
    "Meta1": {
      "title": "Meta1",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.additionalRemuneration.change",
          "type": "string",
          "default": "worker.workAssignment.additionalRemuneration.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.additionalRemuneration.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.additionalRemuneration.changeQueryCriterion": {
      "title": "workerworkAssignment.additionalRemuneration.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataEventContext1": {
      "title": "DataEventContext1",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment/additionalRemuneration": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/additionalRemuneration/itemID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "WorkerWorkAssignmentAdditionalRemunerationRemoveEvent": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationRemoveEvent",
      "description": "An instance to capture the worker additional remuneration remove event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.remove.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event2"
          }
        }
      }
    },
    "Event2": {
      "title": "Event2",
      "description": "An instance to capture the worker additional remuneration remove event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      }
    },
    "Data2": {
      "title": "Data2",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext1"
        },
        "transform": {
          "$ref": "#/definitions/Transform2"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "Transform2": {
      "title": "Transform2",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "WorkerWorkAssignmentAdditionalRemunerationRemoveEventMeta": {
      "title": "WorkerWorkAssignmentAdditionalRemunerationRemoveEventMeta",
      "description": "An instance to capture the worker additional remuneration remove event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.additional-remuneration.remove.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta2"
        }
      }
    },
    "Meta2": {
      "title": "Meta2",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.additionalRemuneration.remove",
          "type": "string",
          "default": "worker.workAssignment.additionalRemuneration.remove"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.additionalRemuneration.removeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform2"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.additionalRemuneration.removeQueryCriterion": {
      "title": "workerworkAssignment.additionalRemuneration.removeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataTransform2": {
      "title": "DataTransform2",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        }
      }
    },
    "WorkerWorkAssignmentBaseRemunerationChangeEvent": {
      "title": "WorkerWorkAssignmentBaseRemunerationChangeEvent",
      "description": "An instance to capture change in base remuneration event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.worker.workAssignment.baseRemuneration.change_request_sample_v01_00_rev004.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event3"
          }
        },
        "meta": {
          "$ref": "#/definitions/metaType_v02"
        },
        "confirmMessage": {
          "$ref": "#/definitions/confirmMessageType_v01"
        }
      }
    },
    "Event3": {
      "title": "Event3",
      "description": "An instance to capture the worker base remuneration change event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data3"
        }
      }
    },
    "Data3": {
      "title": "Data3",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext3"
        },
        "transform": {
          "$ref": "#/definitions/Transform3"
        },
        "output": {
          "$ref": "#/definitions/Output3"
        }
      }
    },
    "EventContext3": {
      "title": "EventContext3",
      "description": "Event context for an work assignment level events",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerAssignmentEventContext"
        }
      }
    },
    "WorkerAssignmentEventContext": {
      "title": "WorkerAssignmentEventContext",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignment"
        }
      }
    },
    "Transform3": {
      "title": "Transform3",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform2"
        }
      }
    },
    "WorkAssignmentTransform2": {
      "title": "WorkAssignmentTransform2",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "baseRemuneration": {
          "$ref": "#/definitions/remunerationBaseTransformType_v02"
        },
        "payScaleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeStepCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nextPayGradeStepDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        },
        "paymentInstruction": {
          "$ref": "#/definitions/PaymentInstructionTransform"
        }
      }
    },
    "remunerationBaseTransformType_v02": {
      "title": "remunerationBaseTransformType_v02",
      "description": "The pay (i.e. salary, wage) associated to a work assignment. The structure allows for the explicit communication of pre-defined equivalents for the base remuneration",
      "type": "object",
      "properties": {
        "recordingBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "hourlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "dailyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "weeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "biweeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "semiMonthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "monthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "annualRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payPeriodRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "commissionRatePercentage": {
          "$ref": "#/definitions/ratePercentageType_v02"
        }
      }
    },
    "rateAmountType_v02": {
      "title": "rateAmountType_v02",
      "description": "A representation of a rate amount value",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "amountValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the amountValue would be 20",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        }
      }
    },
    "ratePercentageType_v02": {
      "title": "ratePercentageType_v02",
      "description": "A representation of a rate percentage value",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "percentageValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the percentageValue would be 20",
          "type": "number",
          "format": "double"
        },
        "baseUnitCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "customFieldContainerType_v02": {
      "title": "customFieldContainerType_v02",
      "description": "A container of custom fields. The category within each custom object allows for the categorizing or grouping of the associated custom field for the purpose of data mining. For example, the typeCode on a custom string object might be valued as SIZE and the correlating name codes might be t-shirt, pants, jacket, etc.",
      "type": "object",
      "properties": {
        "amountFields": {
          "description": "A list of custom amounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountField"
          }
        },
        "codeFields": {
          "description": "A list of custom codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeField"
          }
        },
        "dateFields": {
          "description": "A list of custom dates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateField"
          }
        },
        "dateTimeFields": {
          "description": "A list of custom datetimes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateTimeField"
          }
        },
        "indicatorFields": {
          "description": "A list of custom indicators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicatorField"
          }
        },
        "numberFields": {
          "description": "A list of custom numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberField"
          }
        },
        "percentFields": {
          "description": "A list of custom percentages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PercentField"
          }
        },
        "stringFields": {
          "description": "A list of custom strings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringField"
          }
        },
        "telephoneFields": {
          "description": "A list of custom telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TelephoneField"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "AmountField": {
      "title": "AmountField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "amountValue": {
          "description": "The monetary value of the object in which the amount is associated",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "CodeField": {
      "title": "CodeField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DateField": {
      "title": "DateField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "dateValue": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DateTimeField": {
      "title": "DateTimeField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "dateTimeValue": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "IndicatorField": {
      "title": "IndicatorField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "indicatorValue": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "NumberField": {
      "title": "NumberField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "numberValue": {
          "description": "A custom number",
          "type": "number",
          "format": "double"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "PercentField": {
      "title": "PercentField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "percentValue": {
          "description": "The percentage value",
          "type": "number",
          "format": "double"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "StringField": {
      "title": "StringField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "stringValue": {
          "description": "A custom string",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "TelephoneField": {
      "title": "TelephoneField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "PaymentInstructionTransform": {
      "title": "PaymentInstructionTransform",
      "description": "Instructions for the worker's benefits as a result of the remuneration change",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "cancelAutomaticPayIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "Output3": {
      "title": "Output3",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput3"
        }
      }
    },
    "WorkerOutput3": {
      "title": "WorkerOutput3",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput3"
        }
      }
    },
    "WorkAssignmentOutput3": {
      "title": "WorkAssignmentOutput3",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "baseRemuneration": {
          "$ref": "#/definitions/remunerationBaseType_v02"
        },
        "payScaleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeStepCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nextPayGradeStepDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        },
        "paymentInstruction": {
          "$ref": "#/definitions/PaymentInstructionOutput"
        }
      }
    },
    "remunerationBaseType_v02": {
      "title": "remunerationBaseType_v02",
      "description": "The pay (i.e. salary, wage) associated to a work assignment. The structure allows for the explicit communication of pre-defined equivalents for the base remuneration",
      "type": "object",
      "properties": {
        "hourlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "dailyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "weeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "monthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "annualRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "commissionRatePercentage": {
          "$ref": "#/definitions/ratePercentageType_v02"
        },
        "recordingBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "biweeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "semiMonthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payPeriodRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssociatedRateQualifierType"
          }
        }
      }
    },
    "AssociatedRateQualifierType": {
      "title": "AssociatedRateQualifierType",
      "type": "object",
      "properties": {
        "qualifierObjectTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "PaymentInstructionOutput": {
      "title": "PaymentInstructionOutput",
      "description": "Instructions for the worker's benefits as a result of the remuneration change",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "cancelAutomaticPayIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "metaType_v02": {
      "title": "metaType_v02",
      "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
      "type": "object",
      "properties": {
        "startSequence": {
          "description": "Sequence of a related entity when included in the collection or a group",
          "type": "integer",
          "format": "int32"
        },
        "completeIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "totalNumber": {
          "description": "Number of total instance resources in an instance resource set. Note: An instance resource set is a set of instance resources that is determined by a server to satisfy the sets membership criteria (i.e., selection, filter, expansion and search criteria) of a resource management operation (e.g. GET request) upon a collection resource",
          "type": "integer",
          "format": "int32"
        },
        "resourceSetID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "confirmMessageType_v01": {
      "title": "confirmMessageType_v01",
      "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
      "type": "object",
      "properties": {
        "confirmMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "createDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "requestReceiptDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "protocolStatusCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "protocolCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "requestID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "requestStatusCode": {
          "$ref": "#/definitions/RequestStatusCode"
        },
        "requestMethodCode": {
          "$ref": "#/definitions/RequestMethodCode"
        },
        "sessionID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "requestETag": {
          "description": "The entity tag of the entity in the request.",
          "type": "string"
        },
        "requestLink": {
          "$ref": "#/definitions/linkType_v02"
        },
        "processingStatusCode": {
          "$ref": "#/definitions/ProcessingStatusCode"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/processMessage_v01"
          }
        },
        "resourceMessages": {
          "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMessage"
          }
        }
      }
    },
    "IDType_v01": {
      "title": "IDType_v01",
      "description": "The unique identifier of the related entity",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "codeType_v01": {
      "title": "codeType_v01",
      "description": "The code for the related entity",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "RequestStatusCode": {
      "title": "RequestStatusCode",
      "description": "The process results status code for the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue"
        }
      }
    },
    "CodeValue": {
      "title": "CodeValue",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "partiallyFailed",
        "failed"
      ]
    },
    "RequestMethodCode": {
      "title": "RequestMethodCode",
      "description": "The method that was used on the request corresponding to this message instance.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue1"
        }
      }
    },
    "CodeValue1": {
      "title": "CodeValue1",
      "description": "The code for the related entity.",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "PUT",
        "POST",
        "PATCH",
        "DELETE"
      ]
    },
    "ProcessingStatusCode": {
      "title": "ProcessingStatusCode",
      "description": "Processing status of the related request message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue2"
        }
      }
    },
    "CodeValue2": {
      "title": "CodeValue2",
      "description": "The code for the related entity.",
      "example": "received",
      "type": "string",
      "enum": [
        "received",
        "validated",
        "started",
        "completed"
      ]
    },
    "processMessage_v01": {
      "title": "processMessage_v01",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/messageTypeCodeType_v01"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "developerMessage": {
          "$ref": "#/definitions/messageType_v01"
        }
      }
    },
    "messageTypeCodeType_v01": {
      "title": "messageTypeCodeType_v01",
      "description": "Schema describing the type of the user or developer message",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue3"
        }
      }
    },
    "CodeValue3": {
      "title": "CodeValue3",
      "description": "The code for the related entity.",
      "example": "success",
      "type": "string",
      "enum": [
        "success",
        "warning",
        "error",
        "info"
      ]
    },
    "ExpressionLanguageCode": {
      "title": "ExpressionLanguageCode",
      "description": "Identifies the language used for expressions communicated in this message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue4"
        }
      }
    },
    "CodeValue4": {
      "title": "CodeValue4",
      "description": "The code for the related entity.",
      "example": "jPath",
      "type": "string",
      "enum": [
        "jPath"
      ]
    },
    "messageType_v01": {
      "title": "messageType_v01",
      "description": "Representation of a message.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code associated with the message description.",
          "type": "string"
        },
        "title": {
          "description": "Title of the message description.",
          "type": "string"
        },
        "messageTxt": {
          "description": "The value/content of the message description.",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "ResourceMessage": {
      "title": "ResourceMessage",
      "description": "Each object contains detailed information for a resource referenced in the original request.",
      "type": "object",
      "properties": {
        "resourceMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/ResourceMessageResourceStatus"
        },
        "resourceLink": {
          "$ref": "#/definitions/linkType_v02"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessMessageWithResourceStatusCode"
          }
        }
      }
    },
    "ResourceMessageResourceStatus": {
      "title": "ResourceMessageResourceStatus",
      "description": "The processing results status code of the resource of the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue5"
        }
      }
    },
    "CodeValue5": {
      "title": "CodeValue5",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "failed",
        "warning"
      ]
    },
    "ProcessMessageWithResourceStatusCode": {
      "title": "ProcessMessageWithResourceStatusCode",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/messageTypeCodeType_v01"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "developerMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/codeType_v01"
        }
      }
    },
    "WorkerWorkAssignmentBaseRemunerationChangeEventMeta": {
      "title": "WorkerWorkAssignmentBaseRemunerationChangeEventMeta",
      "description": "An instance to capture change in base remuneration event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.worker.workAssignment.baseRemuneration.change_meta_sample_v01_00_rev004.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta3"
        }
      }
    },
    "Meta3": {
      "title": "Meta3",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.baseRemuneration.change",
          "type": "string",
          "default": "worker.workAssignment.baseRemuneration.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.baseRemuneration.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform3"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.baseRemuneration.changeQueryCriterion": {
      "title": "workerworkAssignment.baseRemuneration.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataTransform3": {
      "title": "DataTransform3",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/recordingBasisCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/recordingBasisCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/recordingBasisCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/recordingBasisCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/hourlyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/dailyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/weeklyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/biweeklyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/semiMonthlyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/monthlyRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/annualRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/baseRemuneration/payPeriodRateAmount/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/percentageValue": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/baseUnitCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/baseUnitCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/baseUnitCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/baseRemuneration/commissionRatePercentage/baseUnitCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payScaleCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/payScaleCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payScaleCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payScaleCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/payGradeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeStepCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/payGradeStepCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeStepCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/payGradeStepCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/nextPayGradeStepDate": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/customFieldGroup/amountFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/amountFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/amountFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/amountFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/amountFields/amountValue": {
          "$ref": "#/definitions/ContextNumberAmountValueType"
        },
        "/workAssignment/customFieldGroup/amountFields/currencyCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/amountFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/codeFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/codeFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/codeFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/codeFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/dateFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/dateFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/dateFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/dateValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/dateTimeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/dateTimeFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/indicatorValue": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/customFieldGroup/indicatorFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/numberFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/numberFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/numberFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/numberFields/numberValue": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/customFieldGroup/numberFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/percentFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/percentFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/percentFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/percentFields/percentValue": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/customFieldGroup/percentFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/stringFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/stringFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/stringFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/stringValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/stringFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/categoryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/categoryCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/categoryCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/categoryCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/telephoneFields/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/links/href": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/rel": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/canonicalUri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/title": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/targetSchema": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/mediaType": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/method": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/encType": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/schema": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/payLoadArguments": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/customFieldGroup/links/payLoadArguments/argumentPath": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/customFieldGroup/links/payLoadArguments/argumentValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/paymentInstruction": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/paymentInstruction/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/paymentInstruction/cancelAutomaticPayIndicator": {
          "$ref": "#/definitions/booleanType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Add Additional Remuneration",
      "description": "A worker additional remuneration add management"
    },
    {
      "name": "Change Additional Remuneration",
      "description": "A worker additional remuneration change management"
    },
    {
      "name": "Remove Additional Remuneration",
      "description": "A worker additional remuneration remove management"
    },
    {
      "name": "Change Base Remuneration",
      "description": "A worker base remuneration change management"
    },
    {
      "name": "Request Worker Base Remuneration Change",
      "description": "Request Worker Base Remuneration Change details"
    },
    {
      "name": "Calculate Base Remuneration Equivalent",
      "description": "An instance to capture an event when a base remuneration equivalent is calculated"
    }
  ]
}