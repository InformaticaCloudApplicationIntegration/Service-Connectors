{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Workers - Work Deployment Management",
    "description": "A worker assignment work location management",
    "contact": {
      "email": "Wendy.L.Dodds@adp.com",
      "name": "Wendy Dodds"
    }
  },
  "host": "test-api.adp.com",
  "basePath": "/",
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/events/hr/v1/worker.work-assignment.assigned-work-location.change": {
      "post": {
        "description": "A worker's assigned work location is changed.",
        "summary": "71e39eb3-d0ce-4324-ab24-c7986dda10a7",
        "tags": [
          "Change Assigned Work Location"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAssignedWorkLocationEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's assigned work location is changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAssignedWorkLocationEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.assigned-work-location.change.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.assigned-work-location.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "4dddd1aa-7b29-41b9-ad08-467909de49ee",
        "tags": [
          "Change Assigned Work Location"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentAssignedWorkLocationEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.assigned-work-location.change.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.home-work-location.change": {
      "post": {
        "description": "The home work location of the work assignment is changed.",
        "summary": "d542a8be-76d2-4587-be10-2bbf4c177eda",
        "tags": [
          "Change Home Work Location"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentHomeWorkLocationChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentHomeWorkLocationChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "The home work location of the work assignment is changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentHomeWorkLocationChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.home-work-location.change.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.home-work-location.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "85b27827-261e-4513-99ab-29db51c4475c",
        "tags": [
          "Change Home Work Location"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentHomeWorkLocationChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentHomeWorkLocationChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.home-work-location.change.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.standard-hours.change": {
      "post": {
        "description": "A worker's number of standard hours is changed.",
        "summary": "dc44f119-eb8d-4672-bc4d-19b5360e6d74",
        "tags": [
          "Change Standard Hours"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentStandardHoursChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentStandardHoursChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's number of standard hours is changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentStandardHoursChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.standard-hours.change.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.standard-hours.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "1d4ff7eb-4d5e-4f3d-ace1-c42f780a5b7e",
        "tags": [
          "Change Standard Hours"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentStandardHoursChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentStandardHoursChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.standard-hours.change.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.work-level.change": {
      "post": {
        "description": "A worker's work level, e.g. fulltime versus part-time, is changed.",
        "summary": "6eee5b3f-d475-4175-86c5-944c8d7d77a0",
        "tags": [
          "Change Work Level"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentWorkLevelChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkLevelChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's work level, e.g. fulltime versus part-time, is changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkLevelChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.work-level.change.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.work-level.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "e5f79138-42cc-4d34-8332-e43f07fdbf9a",
        "tags": [
          "Change Work Level"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentWorkLevelChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkLevelChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.work-level.change.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.worker-type.change": {
      "post": {
        "description": "A worker's worker type changed.",
        "summary": "4335aa62-7068-4ea8-bc0b-119935dbc9bb",
        "tags": [
          "Change Worker Type"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentWorkerTypeChangePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkerTypeChangeEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker's worker type changed.",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkerTypeChangeEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.v1.worker.work-assignment.worker-type.change_response_sample_v01_00_rev001.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.work-assignment.worker-type.change/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "f6732d1a-ae52-4867-9eab-dbce481b580f",
        "tags": [
          "Change Worker Type"
        ],
        "operationId": "EventsHrV1WorkerWorkAssignmentWorkerTypeChangeMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerWorkAssignmentWorkerTypeChangeEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.v1.worker.work-assignment.worker-type.change_meta_sample_v01_00_rev001.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkerWorkAssignmentAssignedWorkLocationEvent": {
      "title": "WorkerWorkAssignmentAssignedWorkLocationEvent",
      "description": "An instance to capture the worker work assignment assigned work location change event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.assigned-work-location.change.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "An instance to capture the worker work assignment assigned work location change event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete.",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment.",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event.",
          "type": "string",
          "format": "date-time"
        },
        "originator": {
          "$ref": "#/definitions/Originator"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      }
    },
    "ServiceCategoryCode": {
      "title": "ServiceCategoryCode",
      "description": "The service domain, e.g. HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode": {
      "title": "EventNameCode",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventReasonCode": {
      "title": "EventReasonCode",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation. This is optional and valued as defined by the system of record.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode": {
      "title": "EventStatusCode",
      "description": "This identifies the status of the event. An event that has initiated by the system of record, such as a benefits annual enrollment event, will have an event status code of created. An event that is saved in a work in progress state (as determined by the permissible state codes), will have an event status code of inProgress. An event that has been recorded, will have an event status code of complete. This is set by the system of record and valued based on a standard codeslist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "PriorityCode": {
      "title": "PriorityCode",
      "description": "This allows the system of record to prioritize events and is valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Originator": {
      "title": "Originator",
      "description": "An originator is a user, machine or event that triggered the event.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event originator",
          "type": "string"
        },
        "eventID": {
          "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
          "type": "string"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode1"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        }
      }
    },
    "ApplicationID": {
      "title": "ApplicationID",
      "description": "The unique identifier of the application which originated the event.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode"
        }
      }
    },
    "SchemeCode": {
      "title": "SchemeCode",
      "description": "The scheme code",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode1": {
      "title": "EventNameCode1",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Actor": {
      "title": "Actor",
      "description": "The actor is the party that completed the recording of the event.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        },
        "deviceUserAgentID": {
          "description": "Identifier of the user agent of the device used by the actor who worked on the event",
          "type": "string"
        }
      }
    },
    "GeoCoordinate": {
      "title": "GeoCoordinate",
      "description": "The coordinates of the location of the actor",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Link": {
      "title": "Link",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
          "type": "string"
        }
      }
    },
    "Rel": {
      "title": "Rel",
      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
      "example": "alternate",
      "type": "string",
      "enum": [
        "alternate",
        "create",
        "canonical",
        "describedby",
        "edit-form",
        "enclosure",
        "full",
        "related",
        "root",
        "self",
        "up",
        "search",
        "/adp/invoke",
        "/adp/image",
        "/adp/confirm-message",
        "/adp/status-monitor",
        "/adp/codelist",
        "/adp/template",
        "/adp/externalLink"
      ]
    },
    "MediaType": {
      "title": "MediaType",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/json",
      "type": "string",
      "enum": [
        "application/json",
        "text/html",
        "application/pdf",
        "image/jpeg",
        "image/gif",
        "image/png",
        "application/msword",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
      ]
    },
    "Method": {
      "title": "Method",
      "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "DELETE",
        "PUT"
      ]
    },
    "EncType": {
      "title": "EncType",
      "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
      "example": "application/json",
      "type": "string",
      "enum": [
        "application/json",
        "application/x-www-form-urlencoded"
      ]
    },
    "Data": {
      "title": "Data",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext"
        },
        "transform": {
          "$ref": "#/definitions/Transform"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "EventContext": {
      "title": "EventContext",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "A globally unique (GUID) identifier of the context expression. This conveys the context of the associated data. For example, if the context is set to Germany, the data would adhere to the business rules and formatting rules relevant to Germany",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerEventContext"
        }
      }
    },
    "WorkerEventContext": {
      "title": "WorkerEventContext",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of a covered individual when there is an AOID",
          "type": "string"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignment"
        }
      }
    },
    "WorkAssignment": {
      "title": "WorkAssignment",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "assignedWorkLocation": {
          "$ref": "#/definitions/AssignedWorkLocationEventContext"
        }
      }
    },
    "AssignedWorkLocationEventContext": {
      "title": "AssignedWorkLocationEventContext",
      "description": "The assigned work location is the location (or locations) where the worker is physically located.",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "Transform": {
      "title": "Transform",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode1"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode1"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform"
        }
      }
    },
    "EventReasonCode1": {
      "title": "EventReasonCode1",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode1": {
      "title": "EventStatusCode1",
      "description": "This identifies the status of the event. An event that has been created, either by the system of record or as the result of a user, will have an event status code of Created. An event that is saved in a work in progress state (as determined by the permissable state codes), will have an event status code of InProgress. An event that has been recorded, will have an event status code of Complete. This value is set by the system of record.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransform": {
      "title": "WorkAssignmentTransform",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "assignedWorkLocation": {
          "$ref": "#/definitions/AssignedWorkLocation"
        }
      }
    },
    "AssignedWorkLocation": {
      "title": "AssignedWorkLocation",
      "description": "The assigned work location is the location (or locations) where the worker is physically located.",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode"
        },
        "communication": {
          "$ref": "#/definitions/Communication"
        },
        "aliasNames": {
          "description": "The list of other names, by which a location is known",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationAliasNameItem"
          }
        },
        "address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "NameCode": {
      "title": "NameCode",
      "description": "The location type code and description, e.g. HDQ, headquarters",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Communication": {
      "title": "Communication",
      "description": "Communication objects to include various communication mechanisms, e,g, phone, email, etc.",
      "type": "object",
      "properties": {
        "landlines": {
          "description": "A list of land-line telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Landline"
          }
        },
        "mobiles": {
          "description": "A list of mobile telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mobile"
          }
        },
        "faxes": {
          "description": "A list of fax telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Faxis"
          }
        },
        "pagers": {
          "description": "A list of pager telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pager"
          }
        },
        "emails": {
          "description": "A list of email addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Email"
          }
        },
        "internetAddresses": {
          "description": "A list of internet URIs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternetAddressWithItemID"
          }
        },
        "instantMessages": {
          "description": "A list of instant messages URIs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstantMessage"
          }
        },
        "socialNetworks": {
          "description": "A list of social networks addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SocialNetwork"
          }
        }
      }
    },
    "Landline": {
      "title": "Landline",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "NameCode1": {
      "title": "NameCode1",
      "description": "A coded name or descriptive label of the associated entity. If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Mobile": {
      "title": "Mobile",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "Faxis": {
      "title": "Faxis",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "Pager": {
      "title": "Pager",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "Email": {
      "title": "Email",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "emailUri": {
          "description": "The URI of the associated email address",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "InternetAddressWithItemID": {
      "title": "InternetAddressWithItemID",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "uri": {
          "description": "The URI of the associated email address",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "InstantMessage": {
      "title": "InstantMessage",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "uri": {
          "description": "The URI of the associated email address",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "SocialNetwork": {
      "title": "SocialNetwork",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode1"
        },
        "uri": {
          "description": "The URI of the associated email address",
          "type": "string"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "LocationAliasNameItem": {
      "title": "LocationAliasNameItem",
      "description": "The code for the related entity.  If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary",
      "type": "object",
      "properties": {
        "typeCode": {
          "$ref": "#/definitions/TypeCode"
        },
        "nameValue": {
          "description": "The name for the related location",
          "type": "string"
        }
      }
    },
    "TypeCode": {
      "title": "TypeCode",
      "description": "The code for the related entity, e.g. division, region, district",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Address": {
      "title": "Address",
      "description": "An address related to the associated entity",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode9"
        },
        "scriptCode": {
          "$ref": "#/definitions/ScriptCode"
        },
        "attentionOfName": {
          "description": "Attention of Name",
          "type": "string"
        },
        "careOfName": {
          "description": "Care Of Name",
          "type": "string"
        },
        "lineOne": {
          "description": "Line One of Street Address Information",
          "type": "string"
        },
        "lineTwo": {
          "description": "Line Two of Street Address Information",
          "type": "string"
        },
        "lineThree": {
          "description": "Line Three of Street Address Information",
          "type": "string"
        },
        "lineFour": {
          "description": "Line Four of Street Address Information",
          "type": "string"
        },
        "lineFive": {
          "description": "Line Five of Street Address Information",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The number of a building in the context of a physical address, e.g. House Number",
          "type": "string"
        },
        "buildingName": {
          "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
          "type": "string"
        },
        "blockName": {
          "description": "The name the block",
          "type": "string"
        },
        "streetName": {
          "description": "The name of the street",
          "type": "string"
        },
        "streetTypeCode": {
          "$ref": "#/definitions/StreetTypeCode"
        },
        "unit": {
          "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
          "type": "string"
        },
        "floor": {
          "description": "A floor in the context of an address",
          "type": "string"
        },
        "stairCase": {
          "description": "A reference to a particular staircase in the context of an address",
          "type": "string"
        },
        "door": {
          "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
          "type": "string"
        },
        "postOfficeBox": {
          "description": "A post office box",
          "type": "string"
        },
        "deliveryPoint": {
          "description": "A way to identify a specific delivery location, e.g. a mail-stop",
          "type": "string"
        },
        "plotID": {
          "description": "A way to identify a building plot, e.g. a specific building construction site",
          "type": "string"
        },
        "cityName": {
          "description": "A city in the context of an address",
          "type": "string"
        },
        "countrySubdivisionLevel1": {
          "$ref": "#/definitions/CountrySubdivisionLevel1"
        },
        "countrySubdivisionLevel2": {
          "$ref": "#/definitions/CountrySubdivisionLevel2"
        },
        "countryCode": {
          "description": "The 2 character country code. As per ISO 3166-1 Alpha 2",
          "type": "string"
        },
        "postalCode": {
          "description": "The string of characters used to identify the postal code",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate1"
        }
      }
    },
    "NameCode9": {
      "title": "NameCode9",
      "description": "A descriptive coded name of the address",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "ScriptCode": {
      "title": "ScriptCode",
      "description": "The type of script the in which the associated entity is represented. Associated codelist is ISO15924-A. Use the alpha-4 representation versus the single digit numeric representation. Format is lowercase with initial letter capitalized. For example, Cyrillic is Cyrl",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "StreetTypeCode": {
      "title": "StreetTypeCode",
      "description": "The type of street, e.g. Lane, Passage, Way",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "CountrySubdivisionLevel1": {
      "title": "CountrySubdivisionLevel1",
      "description": "A country subdivision correlating to a administrative level one level below country. For example, in the United States, this would be a state",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "subdivisionType": {
          "description": "The type of a country sub-division, e.g. state, county",
          "type": "string"
        }
      }
    },
    "CountrySubdivisionLevel2": {
      "title": "CountrySubdivisionLevel2",
      "description": "A country subdivision correlating to a administrative level two levels below country. For example, in the United States, this might be a county",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "subdivisionType": {
          "description": "The type of a country sub-division, e.g. state, county",
          "type": "string"
        }
      }
    },
    "GeoCoordinate1": {
      "title": "GeoCoordinate1",
      "description": "The coordinates of the location of the address",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Output": {
      "title": "Output",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput"
        }
      }
    },
    "WorkerOutput": {
      "title": "WorkerOutput",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput"
        }
      }
    },
    "WorkerID": {
      "title": "WorkerID",
      "description": "An identifier for a worker, e.g. an Employee ID",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode"
        }
      }
    },
    "WorkAssignmentOutput": {
      "title": "WorkAssignmentOutput",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "assignedWorkLocation": {
          "$ref": "#/definitions/AssignedWorkLocationOutput"
        }
      }
    },
    "AssignedWorkLocationOutput": {
      "title": "AssignedWorkLocationOutput",
      "description": "The assigned work location is the location (or locations) where the worker is physically located.",
      "type": "object",
      "properties": {
        "aliasNames": {
          "description": "The list of other names, by which a location is known",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationAliasNameItem"
          }
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "nameCode": {
          "$ref": "#/definitions/NameCode"
        },
        "communication": {
          "$ref": "#/definitions/Communication"
        },
        "itemID": {
          "description": "The unique identifier of the object in a collection",
          "type": "string"
        }
      }
    },
    "EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error": {
      "title": "EventsHrV1WorkerWorkAssignmentAssignedWorkLocationChange400Error",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
      },
      "type": "object",
      "properties": {
        "externalValue": {
          "type": "string"
        }
      },
      "required": [
        "externalValue"
      ]
    },
    "WorkerWorkAssignmentAssignedWorkLocationEventMeta": {
      "title": "WorkerWorkAssignmentAssignedWorkLocationEventMeta",
      "description": "An instance to capture the worker work assignment assigned work location change event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.assigned-work-location.change.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Meta": {
      "title": "Meta",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.assignedWorkLocation.change",
          "type": "string",
          "default": "worker.workAssignment.assignedWorkLocation.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.assignedWorkLocation.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.assignedWorkLocation.changeQueryCriterion": {
      "title": "workerworkAssignment.assignedWorkLocation.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "codeListType_v03": {
      "title": "codeListType_v03",
      "type": "object",
      "properties": {
        "codeListTitle": {
          "description": "Code list title",
          "type": "string"
        },
        "exclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "listItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeListItemType_v02"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "codeListItemType_v02": {
      "title": "codeListItemType_v02",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "valueDescription": {
          "description": "Additional list item description",
          "type": "string"
        },
        "foreignKey": {
          "description": "Allows for filtering the code list",
          "type": "string"
        },
        "inactiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "defaultIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "linkType_v02": {
      "title": "linkType_v02",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel1"
        },
        "canonicalUri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType1"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "Rel1": {
      "title": "Rel1",
      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
      "example": "alternate",
      "type": "string",
      "enum": [
        "alternate",
        "create",
        "canonical",
        "describedby",
        "edit-form",
        "enclosure",
        "full",
        "related",
        "root",
        "self",
        "up",
        "search",
        "first",
        "last",
        "next",
        "previous",
        "/adp/invoke",
        "/adp/image",
        "/adp/confirm-message",
        "/adp/status-monitor",
        "/adp/codelist",
        "/adp/template",
        "/adp/externalLink",
        "/adp/validation",
        "/adp/deeplink",
        "/adp/attachment",
        "/adp/workflow"
      ]
    },
    "MediaType1": {
      "title": "MediaType1",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/gzip",
      "type": "string",
      "enum": [
        "application/gzip",
        "application/json",
        "application/msword",
        "application/pdf",
        "application/postscript",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/xml",
        "application/x-www-form-urlencoded",
        "image/gif",
        "image/jpeg",
        "image/png",
        "image/tiff",
        "multipart/mixed",
        "text/html",
        "text/plain",
        "application/vnd.visio",
        "image/bmp",
        "image/x-ms-bmp",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "application/vnd.ms-powerpoint",
        "video/mp4",
        "audio/mpeg",
        "video/x-msvideo",
        "video/x-ms-wmv",
        "application/rtf",
        "application/vnd.ms-outlook",
        "text/csv",
        "video/quicktime",
        "application/zip",
        "application/illustrator",
        "text/xml"
      ]
    },
    "PayLoadArgument": {
      "title": "PayLoadArgument",
      "type": "object",
      "properties": {
        "argumentPath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "argumentValue": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        }
      }
    },
    "LogicalOperator": {
      "title": "LogicalOperator",
      "description": "A logical operation",
      "type": "object",
      "properties": {
        "logicalOperatorCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "mutuallyExclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "mutuallyExclusiveLogicalOperatorCodes": {
          "description": "A list of mutually exclusive operator codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataEventContext": {
      "title": "DataEventContext",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment/assignedWorkLocation": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/assignedWorkLocation/itemID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringType": {
      "title": "stringType",
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "disallowItemType": {
      "title": "disallowItemType",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of an object within the collection",
          "type": "string"
        }
      }
    },
    "maskingRuleType": {
      "title": "maskingRuleType",
      "type": "object",
      "properties": {
        "authorizationRequiredIndicator": {
          "type": "boolean"
        },
        "authorizationResourceID": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "helperMessageType": {
      "title": "helperMessageType",
      "description": "Helper text provided to the user when they take an action to affirm to be correct, true, or genuine.",
      "type": "object",
      "properties": {
        "messageTxt": {
          "description": "Message to present to the user.",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "metaDataType": {
      "title": "metaDataType",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[duration]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "valueSetType": {
      "title": "valueSetType",
      "description": "A reference to the codelist extended with values",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ValueSetMeta"
        },
        "valueSetListItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/valueSetItemType"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "ValueSetMeta": {
      "title": "ValueSetMeta",
      "type": "object",
      "properties": {
        "idValuePath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "itemDescriptionPath": {
          "description": "Short name field of the code list item",
          "type": "string"
        }
      }
    },
    "valueSetItemType": {
      "title": "valueSetItemType",
      "description": "The value set item type",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "itemDescription": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "defaultIndicator": {
          "description": "Indicates if the current value is a default (pre-selected)",
          "type": "boolean"
        }
      }
    },
    "objectType": {
      "title": "objectType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataTransform": {
      "title": "DataTransform",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/assignedWorkLocation": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/assignedWorkLocation/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/landlines/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/mobiles/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/emailUri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/emails/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/socialNetworks/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/faxes/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/pagers/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/internetAddresses/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/communication/instantMessages/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/assignedWorkLocation/address": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/assignedWorkLocation/address/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/attentionOfName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/careOfName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/lineOne": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/lineTwo": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/lineThree": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/cityName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel1": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel1/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel1/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel1/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel1/subdivisionType": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/postalCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/geoCoordinate": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/assignedWorkLocation/address/geoCoordinate/latitude": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/assignedWorkLocation/address/geoCoordinate/longitude": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/assignedWorkLocation/address/scriptCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/scriptCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/scriptCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/scriptCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/lineFour": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/lineFive": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/buildingNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/buildingName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/blockName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/streetName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/streetTypeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/streetTypeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/streetTypeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/streetTypeCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/unit": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/floor": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/stairCase": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/door": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/postOfficeBox": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/deliveryPoint": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/plotID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel2": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel2/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel2/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel2/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/assignedWorkLocation/address/countrySubdivisionLevel2/subdivisionType": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringCodeListType": {
      "title": "stringCodeListType",
      "type": "object",
      "properties": {
        "codeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "booleanType": {
      "title": "booleanType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property",
          "type": "string"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "boolean"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/DataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataType": {
      "title": "DataType",
      "description": "Data type of the attribute",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "arrayType": {
      "title": "arrayType",
      "type": "object",
      "properties": {
        "minItems": {
          "description": "Indicates the minimum items required for an array type.  This is only relevant if the given property is an array.",
          "type": "integer",
          "format": "int32"
        },
        "maxItems": {
          "description": "Indicates the maximum items supported for an array type.  This is only relevant if the given property is an array.",
          "type": "integer",
          "format": "int32"
        },
        "sameValueProperties": {
          "description": "A list of properties which must have the exact same value within the array",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueProperties": {
          "description": "A list of properties which together must be unique",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "numberType": {
      "title": "numberType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "description": "Indicates the minimum value required for a property.",
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "description": "Indicates the maximum value supported for a property",
          "type": "number",
          "format": "double"
        },
        "multipleOf": {
          "description": "Indicates that the value must be a multiple of this value or divisible by this value.",
          "type": "number",
          "format": "double"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "number",
          "format": "double"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "WorkerWorkAssignmentHomeWorkLocationChangeEvent": {
      "title": "WorkerWorkAssignmentHomeWorkLocationChangeEvent",
      "description": "An instance to capture the work assignment home work location change event.",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.home-work-location.change.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event1"
          }
        }
      }
    },
    "Event1": {
      "title": "Event1",
      "description": "An instance to capture the work assignment home work location change event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete.",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment.",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event.",
          "type": "string",
          "format": "date-time"
        },
        "originator": {
          "$ref": "#/definitions/Originator"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "data": {
          "$ref": "#/definitions/Data1"
        }
      }
    },
    "Data1": {
      "title": "Data1",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext1"
        },
        "transform": {
          "$ref": "#/definitions/Transform1"
        },
        "output": {
          "$ref": "#/definitions/Output1"
        }
      }
    },
    "EventContext1": {
      "title": "EventContext1",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "A globally unique (GUID) identifier of the context expression. This conveys the context of the associated data. For example, if the context is set to Germany, the data would adhere to the business rules and formatting rules relevant to Germany",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerAssignmentEventContext"
        }
      }
    },
    "WorkerAssignmentEventContext": {
      "title": "WorkerAssignmentEventContext",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of a covered individual when there is an AOID",
          "type": "string"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignment1"
        }
      }
    },
    "WorkAssignment1": {
      "title": "WorkAssignment1",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        }
      }
    },
    "Transform1": {
      "title": "Transform1",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode1"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode1"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform1"
        }
      }
    },
    "WorkAssignmentTransform1": {
      "title": "WorkAssignmentTransform1",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "homeWorkLocation": {
          "$ref": "#/definitions/HomeWorkLocation"
        }
      }
    },
    "HomeWorkLocation": {
      "title": "HomeWorkLocation",
      "description": "The home work location is the location out of which the work assignment is based. It does not necessarily mean that the worker is physically located in that location. This data becomes relevant for affirmative action reasons. In the US for example, if a worker works from home or a location where there is not an EEO-1 form/location, then the worker is accounted for based on the location of the reports to manager or work unit. Additionally, other things like market salaries, taxes, etc. would be aligned to home office location",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/NameCode"
        },
        "communication": {
          "$ref": "#/definitions/Communication"
        },
        "aliasNames": {
          "description": "The list of other names, by which a location is known",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationAliasNameItem"
          }
        },
        "address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Output1": {
      "title": "Output1",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput1"
        }
      }
    },
    "WorkerOutput1": {
      "title": "WorkerOutput1",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput1"
        }
      }
    },
    "WorkAssignmentOutput1": {
      "title": "WorkAssignmentOutput1",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "homeWorkLocation": {
          "$ref": "#/definitions/HomeWorkLocation"
        }
      }
    },
    "WorkerWorkAssignmentHomeWorkLocationChangeEventMeta": {
      "title": "WorkerWorkAssignmentHomeWorkLocationChangeEventMeta",
      "description": "An instance to capture the work assignment home work location change event. - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.home-work-location.change.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta1"
        }
      }
    },
    "Meta1": {
      "title": "Meta1",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.homeWorkLocation.change",
          "type": "string",
          "default": "worker.workAssignment.homeWorkLocation.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.homeWorkLocation.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "description": "Validation rules for the event context",
          "type": "object"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform1"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.homeWorkLocation.changeQueryCriterion": {
      "title": "workerworkAssignment.homeWorkLocation.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataTransform1": {
      "title": "DataTransform1",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/homeWorkLocation": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/homeWorkLocation/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/landlines/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/mobiles/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/emails": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/emailUri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/emails/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/socialNetworks/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/faxes/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/countryDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/areaDialing": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/dialNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/extension": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/access": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/formattedNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/pagers/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/internetAddresses/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages": {
          "$ref": "#/definitions/arrayType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/uri": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/itemID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/communication/instantMessages/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment/homeWorkLocation/address": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/homeWorkLocation/address/nameCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/nameCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/nameCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/nameCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/attentionOfName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/careOfName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/lineOne": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/lineTwo": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/lineThree": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/cityName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel1": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel1/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel1/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel1/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel1/subdivisionType": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countryCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/postalCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/geoCoordinate": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/homeWorkLocation/address/geoCoordinate/latitude": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/homeWorkLocation/address/geoCoordinate/longitude": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/homeWorkLocation/address/scriptCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/scriptCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/scriptCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/scriptCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/lineFour": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/lineFive": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/buildingNumber": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/buildingName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/blockName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/streetName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/streetTypeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/streetTypeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/streetTypeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/streetTypeCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/unit": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/floor": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/stairCase": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/door": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/postOfficeBox": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/deliveryPoint": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/plotID": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel2": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel2/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel2/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel2/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/homeWorkLocation/address/countrySubdivisionLevel2/subdivisionType": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "WorkerWorkAssignmentStandardHoursChangeEvent": {
      "title": "WorkerWorkAssignmentStandardHoursChangeEvent",
      "description": "An instance to capture the work assignment standard hours change event.",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.standard-hours.change.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event2"
          }
        }
      }
    },
    "Event2": {
      "title": "Event2",
      "description": "An instance to capture the worker on leave event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete.",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment.",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event.",
          "type": "string",
          "format": "date-time"
        },
        "originator": {
          "$ref": "#/definitions/Originator"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      }
    },
    "Data2": {
      "title": "Data2",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext2"
        },
        "transform": {
          "$ref": "#/definitions/Transform2"
        },
        "output": {
          "$ref": "#/definitions/Output2"
        }
      }
    },
    "EventContext2": {
      "title": "EventContext2",
      "description": "Event context for an work assignment level events",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "A globally unique (GUID) identifier of the context expression. This conveys the context of the associated data. For example, if the context is set to Germany, the data would adhere to the business rules and formatting rules relevant to Germany",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerAssignmentEventContext"
        }
      }
    },
    "Transform2": {
      "title": "Transform2",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode1"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode1"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform2"
        }
      }
    },
    "WorkAssignmentTransform2": {
      "title": "WorkAssignmentTransform2",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "standardHours": {
          "$ref": "#/definitions/StandardHours"
        }
      }
    },
    "StandardHours": {
      "title": "StandardHours",
      "description": "The standard number of hours of work associated to a position, typically used to drive the definition of a full time assignment, e.g. 40 in the US, 37.5 in the UK, 35 in FR. This number is usually expressed based on a week. The unitCode is used to convey that measurement",
      "type": "object",
      "properties": {
        "hoursQuantity": {
          "description": "The number of hours",
          "type": "number",
          "format": "double"
        },
        "unitCode": {
          "$ref": "#/definitions/UnitCode"
        }
      }
    },
    "UnitCode": {
      "title": "UnitCode",
      "description": "The unit associated to the number of hours, e.g. week.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Output2": {
      "title": "Output2",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput2"
        }
      }
    },
    "WorkerOutput2": {
      "title": "WorkerOutput2",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput2"
        }
      }
    },
    "WorkAssignmentOutput2": {
      "title": "WorkAssignmentOutput2",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "standardHours": {
          "$ref": "#/definitions/StandardHours"
        }
      }
    },
    "WorkerWorkAssignmentStandardHoursChangeEventMeta": {
      "title": "WorkerWorkAssignmentStandardHoursChangeEventMeta",
      "description": "An instance to capture the work assignment standard hours change event. - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.standard-hours.change.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta2"
        }
      }
    },
    "Meta2": {
      "title": "Meta2",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.standardHours.change",
          "type": "string",
          "default": "worker.workAssignment.standardHours.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.standardHours.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform2"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.standardHours.changeQueryCriterion": {
      "title": "workerworkAssignment.standardHours.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataEventContext1": {
      "title": "DataEventContext1",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workAssignment/itemID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "DataTransform2": {
      "title": "DataTransform2",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/standardHours": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/standardHours/hoursQuantity": {
          "$ref": "#/definitions/numberType"
        },
        "/workAssignment/standardHours/unitCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/standardHours/unitCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/standardHours/unitCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/standardHours/unitCode/longName": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "WorkerWorkAssignmentWorkLevelChangeEvent": {
      "title": "WorkerWorkAssignmentWorkLevelChangeEvent",
      "description": "An instance to capture",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.work-level.change.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event3"
          }
        }
      }
    },
    "Event3": {
      "title": "Event3",
      "description": "An instance to capture the work assignment work level change event.",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete.",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment.",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event.",
          "type": "string",
          "format": "date-time"
        },
        "originator": {
          "$ref": "#/definitions/Originator"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "data": {
          "$ref": "#/definitions/Data3"
        }
      }
    },
    "Data3": {
      "title": "Data3",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext2"
        },
        "transform": {
          "$ref": "#/definitions/Transform3"
        },
        "output": {
          "$ref": "#/definitions/Output3"
        }
      }
    },
    "Transform3": {
      "title": "Transform3",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode1"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode1"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform3"
        }
      }
    },
    "WorkAssignmentTransform3": {
      "title": "WorkAssignmentTransform3",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "workLevelCode": {
          "$ref": "#/definitions/WorkLevelCode"
        }
      }
    },
    "WorkLevelCode": {
      "title": "WorkLevelCode",
      "description": "The work level code, e.g. Fulltime, Parttime",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Output3": {
      "title": "Output3",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput3"
        }
      }
    },
    "WorkerOutput3": {
      "title": "WorkerOutput3",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput3"
        }
      }
    },
    "WorkAssignmentOutput3": {
      "title": "WorkAssignmentOutput3",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "workLevelCode": {
          "$ref": "#/definitions/WorkLevelCode"
        }
      }
    },
    "WorkerWorkAssignmentWorkLevelChangeEventMeta": {
      "title": "WorkerWorkAssignmentWorkLevelChangeEventMeta",
      "description": "An instance to capture  - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.work-assignment.work-level.change.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta3"
        }
      }
    },
    "Meta3": {
      "title": "Meta3",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.workLevel.change",
          "type": "string",
          "default": "worker.workAssignment.workLevel.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.workLevel.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform3"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.workLevel.changeQueryCriterion": {
      "title": "workerworkAssignment.workLevel.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataTransform3": {
      "title": "DataTransform3",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/workLevelCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/workLevelCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/workLevelCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/workLevelCode/longName": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "WorkerWorkAssignmentWorkerTypeChangeEvent": {
      "title": "WorkerWorkAssignmentWorkerTypeChangeEvent",
      "description": "An instance to capture a worker type change",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.v1.worker.work-assignment.worker-type.change_request_sample_v01_00_rev001.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event4"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta4"
        },
        "confirmMessage": {
          "$ref": "#/definitions/ConfirmMessage"
        }
      }
    },
    "Event4": {
      "title": "Event4",
      "description": "An instance to capture the work assignment worker type change event.",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode4"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode8"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode8"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode8"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode4"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "True indicates that the requestor wants notifications on the status of the request",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/Originator4"
        },
        "actor": {
          "$ref": "#/definitions/Actor4"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        },
        "data": {
          "$ref": "#/definitions/Data4"
        }
      }
    },
    "ServiceCategoryCode4": {
      "title": "ServiceCategoryCode4",
      "description": "The service domain, e.g. HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode8": {
      "title": "EventNameCode8",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventReasonCode8": {
      "title": "EventReasonCode8",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage or Divorce. This is optional and valued as defined by the system of record",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode8": {
      "title": "EventStatusCode8",
      "description": "This identifies the status of the event. An event that has been initiated by the system of record will have an event status code of created. An event that is saved in a work in progress state will have an event status code of inProgress. An event that has been recorded will have an event status code of complete. These values are set by the system of record and valued based on a standard codeslist",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "PriorityCode4": {
      "title": "PriorityCode4",
      "description": "This allows the system of record to prioritize events and is valued based on a standard codelist",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Originator4": {
      "title": "Originator4",
      "description": "An originator is a user, machine or event that triggered the event",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID8"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event originator",
          "type": "string"
        },
        "eventID": {
          "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
          "type": "string"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode9"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam",
          "type": "string"
        }
      }
    },
    "ApplicationID8": {
      "title": "ApplicationID8",
      "description": "The unique identifier of the application which originated the event or a process",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode12"
        }
      }
    },
    "SchemeCode12": {
      "title": "SchemeCode12",
      "description": "The scheme code",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode9": {
      "title": "EventNameCode9",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Actor4": {
      "title": "Actor4",
      "description": "The actor is the party that completed the recording of the event",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID9"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event or a process",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        },
        "deviceUserAgentID": {
          "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        }
      }
    },
    "ApplicationID9": {
      "title": "ApplicationID9",
      "description": "The unique identifier of the application which originated the event.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode12"
        }
      }
    },
    "AssignedGroup": {
      "title": "AssignedGroup",
      "type": "object",
      "properties": {
        "groupID": {
          "description": "The unique identifier of the group",
          "type": "string"
        },
        "groupName": {
          "description": "The name of the group",
          "type": "string"
        },
        "assignedGroupMembers": {
          "description": "Associates that are part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroupMember"
          }
        }
      }
    },
    "AssignedGroupMember": {
      "title": "AssignedGroupMember",
      "description": "An instance of an Associate that is part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        }
      }
    },
    "ActAsParty": {
      "title": "ActAsParty",
      "description": "The party (client employee) information that the actor is acting as to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) in read only mode.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID9"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event or a process",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        },
        "deviceUserAgentID": {
          "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "A unique identifier of a client employee's organization id",
          "type": "string"
        }
      }
    },
    "OnBehalfOfParty": {
      "title": "OnBehalfOfParty",
      "description": "The party (client employee) that the actor is acting on behalf of to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) and can take action on that person's behalf.  The Actor may have access to certain features or screens that the Client Employee cannot view, e.g. diagnostics screens.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID9"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event or a process",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        },
        "deviceUserAgentID": {
          "description": "Identifier of the user agent of the device used by the actor who worked on the event or process",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "A unique identifier of a client employee's organization id",
          "type": "string"
        }
      }
    },
    "Link4": {
      "title": "Link4",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel1"
        },
        "canonicalUri": {
          "description": "A unique identifier of the feature/function/operation, the link poins to",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType8"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "MediaType8": {
      "title": "MediaType8",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/gzip",
      "type": "string",
      "enum": [
        "application/gzip",
        "application/json",
        "application/msword",
        "application/pdf",
        "application/postscript",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/xml",
        "application/x-www-form-urlencoded",
        "image/gif",
        "image/jpeg",
        "image/png",
        "image/tiff",
        "multipart/mixed",
        "text/html",
        "text/plain",
        "application/vnd.visio",
        "image/bmp",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "application/vnd.ms-powerpoint",
        "video/mp4",
        "audio/mpeg",
        "video/x-msvideo",
        "video/x-ms-wmv",
        "application/rtf",
        "application/vnd.ms-outlook",
        "text/csv",
        "video/quicktime",
        "application/zip",
        "application/illustrator",
        "text/xml"
      ]
    },
    "Data4": {
      "title": "Data4",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext2"
        },
        "transform": {
          "$ref": "#/definitions/Transform4"
        },
        "output": {
          "$ref": "#/definitions/Output4"
        }
      }
    },
    "Transform4": {
      "title": "Transform4",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode9"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode9"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "True indicates that the requestor wants notifications on the status of the request",
          "type": "boolean"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentTransform4"
        }
      }
    },
    "EventReasonCode9": {
      "title": "EventReasonCode9",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode9": {
      "title": "EventStatusCode9",
      "description": "This identifies the status of the event. An event that has been created, either by the system of record or as the result of a user, will have an event status code of Created. An event that is saved in a work in progress state (as determined by the permissable state codes), will have an event status code of InProgress. An event that has been recorded, will have an event status code of Complete. This value is set by the system of record",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransform4": {
      "title": "WorkAssignmentTransform4",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "workerTypeCode": {
          "$ref": "#/definitions/WorkerTypeCode"
        }
      }
    },
    "WorkerTypeCode": {
      "title": "WorkerTypeCode",
      "description": "This describes the type of the worker in a given work assignment, e.g. permanent employee, fixed term employee, apprentice, vendor employee, volunteer, apprentice, independent contractor, etc.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Output4": {
      "title": "Output4",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput4"
        }
      }
    },
    "WorkerOutput4": {
      "title": "WorkerOutput4",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID4"
        },
        "workAssignment": {
          "$ref": "#/definitions/WorkAssignmentOutput4"
        }
      }
    },
    "WorkerID4": {
      "title": "WorkerID4",
      "description": "An identifier for a worker, e.g. an Employee ID",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode12"
        }
      }
    },
    "WorkAssignmentOutput4": {
      "title": "WorkAssignmentOutput4",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of a work assignment",
          "type": "string"
        },
        "workerTypeCode": {
          "$ref": "#/definitions/WorkerTypeCode"
        }
      }
    },
    "Meta4": {
      "title": "Meta4",
      "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
      "type": "object",
      "properties": {
        "startSequence": {
          "description": "The instance resource sequence (number) identifying the first resource returned in the response. The server generates this sequence.  It is used by the client to determine the start sequence of the subsequent Get request",
          "type": "integer",
          "format": "int32"
        },
        "completeIndicator": {
          "description": "Indicates whether the response completes the return of all of the resources of the instance resource set to the requesting system",
          "type": "boolean"
        },
        "totalNumber": {
          "description": "Number of total instance resources in an instance resource set. Note: An instance resource set is a set of instance resources that is determined by a server to satisfy the sets membership criteria (i.e., selection, filter, expansion and search criteria) of a resource management operation (e.g. GET request) upon a collection resource",
          "type": "integer",
          "format": "int32"
        },
        "resourceSetID": {
          "description": "Unique identifier of the instance resource set.  It is generated by the server as a result of the original Get request",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        }
      }
    },
    "ConfirmMessage": {
      "title": "ConfirmMessage",
      "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
      "type": "object",
      "properties": {
        "confirmMessageID": {
          "$ref": "#/definitions/ConfirmMessageID"
        },
        "createDateTime": {
          "description": "The date & time that the message instance was generated.; follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
          "type": "string",
          "format": "date-time"
        },
        "requestReceiptDateTime": {
          "description": "The date & time that the request submitted by the client was received. Note, this timestamp may not be the same as the time the client actually submitted the request if there is a queuing mechanism between the client and server processing the request; it follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
          "type": "string",
          "format": "date-time"
        },
        "protocolStatusCode": {
          "$ref": "#/definitions/ProtocolStatusCode"
        },
        "protocolCode": {
          "$ref": "#/definitions/ProtocolCode"
        },
        "requestID": {
          "$ref": "#/definitions/RequestID"
        },
        "requestStatusCode": {
          "$ref": "#/definitions/RequestStatusCode"
        },
        "requestMethodCode": {
          "$ref": "#/definitions/RequestMethodCode"
        },
        "sessionID": {
          "$ref": "#/definitions/SessionID"
        },
        "requestETag": {
          "description": "The entity tag of the entity in the request.",
          "type": "string"
        },
        "requestLink": {
          "$ref": "#/definitions/RequestLink"
        },
        "processingStatusCode": {
          "$ref": "#/definitions/ProcessingStatusCode"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessMessage"
          }
        },
        "resourceMessages": {
          "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMessage"
          }
        }
      }
    },
    "ConfirmMessageID": {
      "title": "ConfirmMessageID",
      "description": "An identifier for the instance of the confirm message.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "ProtocolStatusCode": {
      "title": "ProtocolStatusCode",
      "description": "Protocol-specific response status code.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "ProtocolCode": {
      "title": "ProtocolCode",
      "description": "Code that identifies the protocol used for the request.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "RequestID": {
      "title": "RequestID",
      "description": "The identifier of the request that generated this response.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "RequestStatusCode": {
      "title": "RequestStatusCode",
      "description": "The process results status code for the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue"
        }
      }
    },
    "CodeValue": {
      "title": "CodeValue",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "partiallyFailed",
        "failed"
      ]
    },
    "RequestMethodCode": {
      "title": "RequestMethodCode",
      "description": "The method that was used on the request corresponding to this message instance.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue1"
        }
      }
    },
    "CodeValue1": {
      "title": "CodeValue1",
      "description": "The code for the related entity.",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "PUT",
        "POST",
        "PATCH",
        "DELETE"
      ]
    },
    "SessionID": {
      "title": "SessionID",
      "description": "A session identifier if one is available.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "RequestLink": {
      "title": "RequestLink",
      "description": "The link of the request that generated this response.",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel1"
        },
        "canonicalUri": {
          "description": "A unique identifier of the feature/function/operation, the link poins to",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType8"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "ProcessingStatusCode": {
      "title": "ProcessingStatusCode",
      "description": "Processing status of the related request message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue2"
        }
      }
    },
    "CodeValue2": {
      "title": "CodeValue2",
      "description": "The code for the related entity.",
      "example": "received",
      "type": "string",
      "enum": [
        "received",
        "validated",
        "started",
        "completed"
      ]
    },
    "ProcessMessage": {
      "title": "ProcessMessage",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/ProcessMessageID"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/MessageTypeCode"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/UserMessage"
        },
        "developerMessage": {
          "$ref": "#/definitions/DeveloperMessage"
        }
      }
    },
    "ProcessMessageID": {
      "title": "ProcessMessageID",
      "description": "An identifier for the instance of the process message.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "MessageTypeCode": {
      "title": "MessageTypeCode",
      "description": "Process Message instances may be of type: success, warning, error, or info.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue3"
        }
      }
    },
    "CodeValue3": {
      "title": "CodeValue3",
      "description": "The code for the related entity.",
      "example": "success",
      "type": "string",
      "enum": [
        "success",
        "warning",
        "error",
        "info"
      ]
    },
    "ExpressionLanguageCode": {
      "title": "ExpressionLanguageCode",
      "description": "Identifies the language used for expressions communicated in this message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue4"
        }
      }
    },
    "CodeValue4": {
      "title": "CodeValue4",
      "description": "The code for the related entity.",
      "example": "jPath",
      "type": "string",
      "enum": [
        "jPath"
      ]
    },
    "UserMessage": {
      "title": "UserMessage",
      "description": "Message returned to the user",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code associated with the message description.",
          "type": "string"
        },
        "title": {
          "description": "Title of the message description.",
          "type": "string"
        },
        "messageTxt": {
          "description": "The value/content of the message description.",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        }
      }
    },
    "DeveloperMessage": {
      "title": "DeveloperMessage",
      "description": "Message returned to the user",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code associated with the message description.",
          "type": "string"
        },
        "title": {
          "description": "Title of the message description.",
          "type": "string"
        },
        "messageTxt": {
          "description": "The value/content of the message description.",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        }
      }
    },
    "ResourceMessage": {
      "title": "ResourceMessage",
      "description": "Each object contains detailed information for a resource referenced in the original request.",
      "type": "object",
      "properties": {
        "resourceMessageID": {
          "$ref": "#/definitions/ResourceMessageID"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/ResourceMessageResourceStatus"
        },
        "resourceLink": {
          "$ref": "#/definitions/ResourceLink"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessMessageWithResourceStatusCode"
          }
        }
      }
    },
    "ResourceMessageID": {
      "title": "ResourceMessageID",
      "description": "An identifier for the instance of the resource message.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "ResourceMessageResourceStatus": {
      "title": "ResourceMessageResourceStatus",
      "description": "The processing results status code of the resource of the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue5"
        }
      }
    },
    "CodeValue5": {
      "title": "CodeValue5",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "failed",
        "warning"
      ]
    },
    "ResourceLink": {
      "title": "ResourceLink",
      "description": "The link of the request that generated this response.",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel1"
        },
        "canonicalUri": {
          "description": "A unique identifier of the feature/function/operation, the link poins to",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType8"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "ProcessMessageWithResourceStatusCode": {
      "title": "ProcessMessageWithResourceStatusCode",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/ProcessMessageID"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/MessageTypeCode"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link4"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/UserMessage"
        },
        "developerMessage": {
          "$ref": "#/definitions/DeveloperMessage"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/ResourceStatusCode"
        }
      }
    },
    "ResourceStatusCode": {
      "title": "ResourceStatusCode",
      "description": "DEPRECATED - Use messageTypeCode instead. The processing results status code of the resource of the request.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "WorkerWorkAssignmentWorkerTypeChangeEventMeta": {
      "title": "WorkerWorkAssignmentWorkerTypeChangeEventMeta",
      "description": "An instance to capture a worker type change - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events_hr.v1.worker.work-assignment.worker-type.change_meta_sample_v01_00_rev001.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta5"
        }
      }
    },
    "Meta5": {
      "title": "Meta5",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.workAssignment.workerType.change",
          "type": "string",
          "default": "worker.workAssignment.workerType.change"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerworkAssignment.workerType.changeQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform4"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerworkAssignment.workerType.changeQueryCriterion": {
      "title": "workerworkAssignment.workerType.changeQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataTransform4": {
      "title": "DataTransform4",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/workAssignment": {
          "$ref": "#/definitions/objectType"
        },
        "/workAssignment/workerTypeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/workAssignment/workerTypeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/workerTypeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/workAssignment/workerTypeCode/longName": {
          "$ref": "#/definitions/stringType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Change Assigned Work Location",
      "description": "A worker assignment work location management"
    },
    {
      "name": "Change Home Work Location",
      "description": "A worker home work location change management"
    },
    {
      "name": "Change Standard Hours",
      "description": "A worker standard hours change management"
    },
    {
      "name": "Change Work Level",
      "description": "A worker work level change management"
    },
    {
      "name": "Change Worker Type",
      "description": "An instance to capture the work assignment worker type change event."
    }
  ]
}