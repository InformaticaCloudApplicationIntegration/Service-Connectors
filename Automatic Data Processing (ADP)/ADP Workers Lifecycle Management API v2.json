{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Workers - Lifecycle Management",
    "description": "The worker.hire event indicates the creation of a work agreement between a person and an employer for the first time EVER. Worker.Hire always results in a primary work assignment. Worker.hire may result in a worker status of either 'Active' or 'Pending' depending on whether or not the Worker.Start event is supported by the system of record.",
    "contact": {
      "email": "Wendy.L.Dodds@adp.com",
      "name": "Wendy Dodds"
    }
  },
  "host": "test-api.adp.com",
  "basePath": "/",
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/events/hr/v1/worker.hire": {
      "post": {
        "description": "A worker is hired.",
        "summary": "1acc8631-7b92-4597-9b4e-a1d9c48eb118",
        "tags": [
          "Hire Worker"
        ],
        "operationId": "EventsHrV1WorkerHirePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerHireEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker is hired.",
            "schema": {
              "$ref": "#/definitions/WorkerHireEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.hire.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.on-leave": {
      "post": {
        "description": "Worker on leave.  Worker's status changed to on leave effective on such and such a date",
        "summary": "7651aac0-86b3-4bd6-b7c0-c54bb2bca643",
        "tags": [
          "Worker On Leave"
        ],
        "operationId": "EventsHrV1WorkerOnLeavePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerOnLeaveEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Worker on leave.  Worker's status changed to on leave effective on such and such a date",
            "schema": {
              "$ref": "#/definitions/WorkerOnLeaveEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.onLeave.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.on-leave/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "66d7835b-aa9b-4b04-8ff8-548fd0e6aa2a",
        "tags": [
          "Worker On Leave"
        ],
        "operationId": "EventsHrV1WorkerOnLeaveMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerOnLeaveEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.onLeave.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.rehire": {
      "post": {
        "description": "A worker is rehired.",
        "summary": "f3355703-f654-47ee-a98a-f67b74c4b364",
        "tags": [
          "Rehire Worker"
        ],
        "operationId": "EventsHrV1WorkerRehirePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerRehireEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker is rehired.",
            "schema": {
              "$ref": "#/definitions/WorkerRehireEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.rehire.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.terminate": {
      "post": {
        "description": "A worker is terminated involuntarily.",
        "summary": "5d49bacc-5e3b-4e05-b95a-0ed38dd67cb5",
        "tags": [
          "Terminate Worker"
        ],
        "operationId": "EventsHrV1WorkerTerminatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "posted contents",
            "schema": {
              "$ref": "#/definitions/WorkerTerminateEvent"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "A worker is terminated involuntarily.",
            "schema": {
              "$ref": "#/definitions/WorkerTerminateEvent"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.terminate.123.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    },
    "/events/hr/v1/worker.terminate/meta": {
      "get": {
        "description": "Returns an event metadata",
        "summary": "c14ebd07-90bd-4e8d-893f-6b76133a5ecb",
        "tags": [
          "Terminate Worker"
        ],
        "operationId": "EventsHrV1WorkerTerminateMetaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleCode",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The role the user is playing during the transaction.  Possible values: employee,manager,practitioner,administrator,supervisor.  The roleCode header will be passed in all calls. When coming from Myself capabilities rolecode=employee. When coming from Team capabilities roleCode=manager. When coming from Practitioner capabilities roleCode=practitioner."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData $filter parameter MUST be used to specify the filter criterion.  Please refer RESTful Web API Design Standard document for this query parameter specification details."
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "“Accept-Language” “: ” ( language | “*” ) [“;” “q” “=”qvalue]. Specifies the language(s) that are acceptable for the response. The optional qvalue represents a quality level for acceptable languages."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event metadata",
            "schema": {
              "$ref": "#/definitions/WorkerTerminateEventMeta"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.terminate.meta.json"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/EventsHrV1WorkerHire400Error"
            },
            "examples": {
              "application/json": {
                "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "WorkerHireEvent": {
      "title": "WorkerHireEvent",
      "description": "An instance to capture the worker hire event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.hire.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "meta": {
          "$ref": "#/definitions/metaType_v02"
        },
        "confirmMessage": {
          "$ref": "#/definitions/confirmMessageType_v01"
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "An instance to capture the worker hire event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      }
    },
    "codeType_v02": {
      "title": "codeType_v02",
      "description": "The code for the related entity.  If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "originatorType_v02": {
      "title": "originatorType_v02",
      "description": "Base structure for event or process originator",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "personOID": {
          "description": "The unique identifier of a person who originated the event or a process",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event originator",
          "type": "string"
        },
        "eventID": {
          "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
          "type": "string"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam",
          "type": "string"
        }
      }
    },
    "IDType_v02": {
      "title": "IDType_v02",
      "description": "The unique identifier of the related entity",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "actorType_v02": {
      "title": "actorType_v02",
      "description": "Base structure for  actor",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        }
      }
    },
    "coordinateType_v02": {
      "title": "coordinateType_v02",
      "description": "The coordinates of the location",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AssignedGroup": {
      "title": "AssignedGroup",
      "type": "object",
      "properties": {
        "groupID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "groupName": {
          "description": "The name of the group",
          "type": "string"
        },
        "assignedGroupMembers": {
          "description": "Associates that are part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroupMember"
          }
        }
      }
    },
    "AssignedGroupMember": {
      "title": "AssignedGroupMember",
      "description": "An instance of an Associate that is part of the group(s) assigned to the review event.  The actor is the member that actually completes the event.",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        }
      }
    },
    "ActAsParty": {
      "title": "ActAsParty",
      "description": "The party (client employee) information that the actor is acting as to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) in read only mode.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "The unique identifier - UUID",
          "type": "string"
        }
      }
    },
    "OnBehalfOfParty": {
      "title": "OnBehalfOfParty",
      "description": "The party (client employee) that the actor is acting on behalf of to complete the recording of the event. Example:  An ADP Support User (principal A = Actor) views data within an ADP Application as a client employee (principal B) and can take action on that person's behalf.  The Actor may have access to certain features or screens that the Client Employee cannot view, e.g. diagnostics screens.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "personOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "deviceUserAgentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "assignedGroups": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedGroup"
          }
        },
        "organizationOID": {
          "description": "The unique identifier - UUID",
          "type": "string"
        }
      }
    },
    "linkType_v02": {
      "title": "linkType_v02",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel"
        },
        "canonicalUri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayLoadArgument"
          }
        }
      }
    },
    "Rel": {
      "title": "Rel",
      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
      "example": "alternate",
      "type": "string",
      "enum": [
        "alternate",
        "create",
        "canonical",
        "describedby",
        "edit-form",
        "enclosure",
        "full",
        "related",
        "root",
        "self",
        "up",
        "search",
        "first",
        "last",
        "next",
        "previous",
        "/adp/invoke",
        "/adp/image",
        "/adp/confirm-message",
        "/adp/status-monitor",
        "/adp/codelist",
        "/adp/template",
        "/adp/externalLink",
        "/adp/validation",
        "/adp/deeplink",
        "/adp/attachment",
        "/adp/workflow"
      ]
    },
    "MediaType": {
      "title": "MediaType",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/gzip",
      "type": "string",
      "enum": [
        "application/gzip",
        "application/json",
        "application/msword",
        "application/pdf",
        "application/postscript",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/xml",
        "application/x-www-form-urlencoded",
        "image/gif",
        "image/jpeg",
        "image/png",
        "image/tiff",
        "multipart/mixed",
        "text/html",
        "text/plain",
        "application/vnd.visio",
        "image/bmp",
        "image/x-ms-bmp",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "application/vnd.ms-powerpoint",
        "video/mp4",
        "audio/mpeg",
        "video/x-msvideo",
        "video/x-ms-wmv",
        "application/rtf",
        "application/vnd.ms-outlook",
        "text/csv",
        "video/quicktime",
        "application/zip",
        "application/illustrator",
        "text/xml"
      ]
    },
    "Method": {
      "title": "Method",
      "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "DELETE",
        "PUT"
      ]
    },
    "EncType": {
      "title": "EncType",
      "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
      "example": "application/json",
      "type": "string",
      "enum": [
        "application/json",
        "application/x-www-form-urlencoded"
      ]
    },
    "PayLoadArgument": {
      "title": "PayLoadArgument",
      "type": "object",
      "properties": {
        "argumentPath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "argumentValue": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        }
      }
    },
    "Data": {
      "title": "Data",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/eventContextBase_v01"
        },
        "transform": {
          "$ref": "#/definitions/Transform"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "eventContextBase_v01": {
      "title": "eventContextBase_v01",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "Transform": {
      "title": "Transform",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "worker": {
          "$ref": "#/definitions/WorkerTransform"
        }
      }
    },
    "WorkerTransform": {
      "title": "WorkerTransform",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "person": {
          "$ref": "#/definitions/personType_v02"
        },
        "workerDates": {
          "$ref": "#/definitions/WorkerDatesTransform"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "businessCommunication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/workAssignmentTransformType_v02"
        },
        "payrollTaxProfile": {
          "$ref": "#/definitions/PayrollTaxProfileTransform"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        }
      }
    },
    "personType_v02": {
      "title": "personType_v02",
      "description": "Object describing the details of a person",
      "type": "object",
      "properties": {
        "governmentIDs": {
          "description": "A list of government identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/governmentIDItemType_v02"
          }
        },
        "legalName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "legalAddress": {
          "$ref": "#/definitions/personalAddressType_v02"
        },
        "communication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "birthDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "deceasedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "deathDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "genderCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "genderIdentityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "sexualOrientationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "religionCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "maritalStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "socialInsurancePrograms": {
          "description": "Social insurance is a government operated social security scheme that provides income loss, maternity, sickness benefits, and retirement pensions to the working population. It is funded by regular contributions based on wage or salary by both employees and employers, and by government through taxation. Examples in the USA are Medicare and Medicaid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/socialInsuranceProgramItemType_v02"
          }
        },
        "tobaccoUserIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabilityIdentificationDeclinedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabledIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabilityTypeCodes": {
          "description": "Person disabilites, e.g. Amputee, Hearing Impairment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "disabilityPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "studentIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "studentStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "identityDocuments": {
          "description": "A list of identity documents, that serve as to confirm the identification of the holder , e.g. a birth certificate, an ID Card",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityDocument"
          }
        },
        "immigrationDocuments": {
          "description": "A list of immigration documents for a person who is not a citizen of the country in which he or see resides , e.g. a passport, visa, alien registration card, aka, green card, residence permit, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmigrationDocument"
          }
        },
        "passports": {
          "description": "A list of passport documents, issued by a national govenment which certifies the identiy and nationality of its holder",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Passport"
          }
        },
        "workAuthorizationDocuments": {
          "description": "A list of documents that authorize work, e.g. visas, a work permit, a labor card, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAuthorizationDocument"
          }
        },
        "preferredName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "alternatePreferredNames": {
          "description": "Other preferred names of the person expressed in a different language or script",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternatePreferredName"
          }
        },
        "formerNames": {
          "description": "Former names of the person in the associated context",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormerName"
          }
        },
        "birthName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "birthPlace": {
          "$ref": "#/definitions/birthPlaceType_v02"
        },
        "otherPersonalAddresses": {
          "description": "A list of addresses related to the associated entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherPersonalAddress"
          }
        },
        "ethnicityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "ethnicityGroupCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "raceCode": {
          "$ref": "#/definitions/RaceCode"
        },
        "citizenshipCountryCodes": {
          "description": "Person countries of citizenship, in which the Address is in. ISO_3166-1-alpha-2 code list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "residencyCountryCodes": {
          "description": "Person countries of residence.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "highestEducationLevelCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "militaryStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "militaryDischargeDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "militaryClassificationCodes": {
          "description": "Person military classification, e.g. Armed Forces Medal Veteran, Disabled Veteran, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "governmentIDItemType_v02": {
      "title": "governmentIDItemType_v02",
      "description": "A government identifier, e.g. a national identity number or a social insurance number",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID",
          "type": "string"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "expirationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "statusType_v02": {
      "title": "statusType_v02",
      "description": "Status to include the status code and effective date (ISO-8601:2000 format)",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "personNameType_v02": {
      "title": "personNameType_v02",
      "description": "Object describing the details of a person name",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "The first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "Person middle name or initial",
          "type": "string"
        },
        "familyName1": {
          "description": "Person family name 1",
          "type": "string"
        },
        "familyName2": {
          "description": "Person family name 2",
          "type": "string"
        },
        "formattedName": {
          "description": "A formatted version of the person name",
          "type": "string"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "preferredSalutations": {
          "description": "A list of preferred salutations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/salutationType_v02"
          }
        },
        "titlePrefixCodes": {
          "description": "Person title Prefix Codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "nickName": {
          "description": "A preferred name, e.g. a nickname",
          "type": "string"
        },
        "generationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualificationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "titleAffixCodes": {
          "description": "Person titles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "familyName1Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "familyName2Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "initials": {
          "description": "Person initials",
          "type": "string"
        }
      }
    },
    "salutationType_v02": {
      "title": "salutationType_v02",
      "description": "A preferred salutation, e.g. Mr., Dr., etc.",
      "type": "object",
      "properties": {
        "salutationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "sequenceNumber": {
          "description": "Sequence of a related entity when included in the collection or a group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "titleAffixType_v02": {
      "title": "titleAffixType_v02",
      "description": "Person titles, e.g. social, professional, generational, etc.",
      "type": "object",
      "properties": {
        "affixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "sequenceNumber": {
          "description": "Sequence of a related entity when included in the collection or a group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "personalAddressType_v02": {
      "title": "personalAddressType_v02",
      "description": "Personal address objects / components",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "attentionOfName": {
          "description": "Attention of Name",
          "type": "string"
        },
        "careOfName": {
          "description": "Care Of Name",
          "type": "string"
        },
        "lineOne": {
          "description": "Line One of Street Address Information",
          "type": "string"
        },
        "lineTwo": {
          "description": "Line Two of Street Address Information",
          "type": "string"
        },
        "lineThree": {
          "description": "Line Three of Street Address Information",
          "type": "string"
        },
        "cityName": {
          "description": "A city in the context of an address",
          "type": "string"
        },
        "countrySubdivisionLevel1": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "postalCode": {
          "description": "The string of characters used to identify the postal code",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "lineFour": {
          "description": "Line Four of Street Address Information",
          "type": "string"
        },
        "lineFive": {
          "description": "Line Five of Street Address Information",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The number of a building in the context of a physical address, e.g. House Number",
          "type": "string"
        },
        "buildingName": {
          "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
          "type": "string"
        },
        "blockName": {
          "description": "The name the block",
          "type": "string"
        },
        "streetName": {
          "description": "The name of the street",
          "type": "string"
        },
        "streetTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "unit": {
          "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
          "type": "string"
        },
        "floor": {
          "description": "A floor in the context of an address",
          "type": "string"
        },
        "stairCase": {
          "description": "A reference to a particular staircase in the context of an address",
          "type": "string"
        },
        "door": {
          "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
          "type": "string"
        },
        "postOfficeBox": {
          "description": "A post office box",
          "type": "string"
        },
        "deliveryPoint": {
          "description": "A way to identify a specific delivery location, e.g. a mail-stop",
          "type": "string"
        },
        "plotID": {
          "description": "A way to identify a building plot, e.g. a specific building construction site",
          "type": "string"
        },
        "countrySubdivisionLevel2": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "sameAsAddressIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "sameAsAddressLink": {
          "$ref": "#/definitions/linkType_v02"
        }
      }
    },
    "countrySubdivisionType_v02": {
      "title": "countrySubdivisionType_v02",
      "description": "A country sub-division correlating to a administrative level one or two levels below country. For example, in the United States, this might be a state or a county",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "subdivisionType": {
          "description": "The type of a country sub-division, e.g. state, county",
          "type": "string"
        }
      }
    },
    "communicationType_v02": {
      "title": "communicationType_v02",
      "description": "Communication objects to include various communication mechanisms, e,g, phone, email, etc.",
      "type": "object",
      "properties": {
        "landlines": {
          "description": "A list of land-line telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Landline"
          }
        },
        "mobiles": {
          "description": "A list of mobile telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mobile"
          }
        },
        "emails": {
          "description": "A list of email addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailContactCommunicationType"
          }
        },
        "socialNetworks": {
          "description": "A list of social networks addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SocialNetworkContactCommunicationType"
          }
        },
        "faxes": {
          "description": "A list of fax telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Faxis"
          }
        },
        "pagers": {
          "description": "A list of pager telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pager"
          }
        },
        "internetAddresses": {
          "description": "A list of internet URIs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternetAddressWithItemID"
          }
        },
        "instantMessages": {
          "description": "A list of instant messages URIs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstantMessage"
          }
        }
      }
    },
    "Landline": {
      "title": "Landline",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "Mobile": {
      "title": "Mobile",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "EmailContactCommunicationType": {
      "title": "EmailContactCommunicationType",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "emailUri": {
          "description": "The email URI of the related entity",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "SocialNetworkContactCommunicationType": {
      "title": "SocialNetworkContactCommunicationType",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "uri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "Faxis": {
      "title": "Faxis",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "Pager": {
      "title": "Pager",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "InternetAddressWithItemID": {
      "title": "InternetAddressWithItemID",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "uri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "InstantMessage": {
      "title": "InstantMessage",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "uri": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "notificationIndicator": {
          "type": "boolean"
        }
      }
    },
    "socialInsuranceProgramItemType_v02": {
      "title": "socialInsuranceProgramItemType_v02",
      "description": "Social insurance is a government operated social security scheme that provides income loss, maternity, sickness benefits, and retirement pensions to the working population. It is funded by regular contributions based on wage or salary by both employees and employers, and by government through taxation. Examples in the USA are Medicare and Medicaid",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "coveredIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "coveragePeriod": {
          "$ref": "#/definitions/CoveragePeriod"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "CoveragePeriod": {
      "title": "CoveragePeriod",
      "description": "The date range of the coverage for the related entity",
      "type": "object",
      "properties": {
        "startDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "IdentityDocument": {
      "title": "IdentityDocument",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "issuingParty": {
          "$ref": "#/definitions/partyBaseType_v02"
        },
        "issueDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "partyBaseType_v02": {
      "title": "partyBaseType_v02",
      "description": "Schema describing the details of a party - an agency, bureau, or other organization issuing the associated document; the body or persons exercising power or command. An issuing party is often is a government agency or official authority, but sometimes might be a private organization",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "address": {
          "$ref": "#/definitions/organizationAddressType_v02"
        }
      }
    },
    "organizationAddressType_v02": {
      "title": "organizationAddressType_v02",
      "description": "organization address objects / components",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "attentionOfName": {
          "description": "Attention of Name",
          "type": "string"
        },
        "careOfName": {
          "description": "Care Of Name",
          "type": "string"
        },
        "lineOne": {
          "description": "Line One of Street Address Information",
          "type": "string"
        },
        "lineTwo": {
          "description": "Line Two of Street Address Information",
          "type": "string"
        },
        "lineThree": {
          "description": "Line Three of Street Address Information",
          "type": "string"
        },
        "cityName": {
          "description": "A city in the context of an address",
          "type": "string"
        },
        "countrySubdivisionLevel1": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "postalCode": {
          "description": "The string of characters used to identify the postal code",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "lineFour": {
          "description": "Line Four of Street Address Information",
          "type": "string"
        },
        "lineFive": {
          "description": "Line Five of Street Address Information",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The number of a building in the context of a physical address, e.g. House Number",
          "type": "string"
        },
        "buildingName": {
          "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
          "type": "string"
        },
        "blockName": {
          "description": "The name the block",
          "type": "string"
        },
        "streetName": {
          "description": "The name of the street",
          "type": "string"
        },
        "streetTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "unit": {
          "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
          "type": "string"
        },
        "floor": {
          "description": "A floor in the context of an address",
          "type": "string"
        },
        "stairCase": {
          "description": "A reference to a particular staircase in the context of an address",
          "type": "string"
        },
        "door": {
          "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
          "type": "string"
        },
        "postOfficeBox": {
          "description": "A post office box",
          "type": "string"
        },
        "deliveryPoint": {
          "description": "A way to identify a specific delivery location, e.g. a mail-stop",
          "type": "string"
        },
        "plotID": {
          "description": "A way to identify a building plot, e.g. a specific building construction site",
          "type": "string"
        },
        "countrySubdivisionLevel2": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        }
      }
    },
    "ImmigrationDocument": {
      "title": "ImmigrationDocument",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "issuingParty": {
          "$ref": "#/definitions/partyBaseType_v02"
        },
        "issueDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "authorizedStayDuration": {
          "description": "Represents the duration of time as represented by ISO 8601. Where the value space is a six dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second. The number of seconds can include decimal digits to arbitary pecision. PnYn MnDTnH nMnS, where: [n] is replaced by the value for each of the date and time elements that follow the [n]. Leading zeros are not required, but the maximum number of digits for each element should be agreed to by the communicating parties. The capital letters 'P', 'Y', 'M', 'W', 'D', 'T', 'H', 'M', and 'S' are designators for each of the date and time elements and are not replaced. P is the duration designator (historically called 'period') placed at the start of the duration representation. Y is the year designator that follows the value for the number of years. M is the month designator that follows the value for the number of months. D is the day designator that follows the value for the number of days. T is the time designator that precedes the time components of the representation. H is the hour designator that follows the value for the number of hours. M is the minute designator that follows the value for the number of minutes. S is the second designator that follows the value for the number of seconds. The number of seconds can include decimal digits to arbitrary precision",
          "type": "string"
        },
        "reentryRequirementDuration": {
          "description": "Represents the duration of time as represented by ISO 8601. Where the value space is a six dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second. The number of seconds can include decimal digits to arbitary pecision. PnYn MnDTnH nMnS, where: [n] is replaced by the value for each of the date and time elements that follow the [n]. Leading zeros are not required, but the maximum number of digits for each element should be agreed to by the communicating parties. The capital letters 'P', 'Y', 'M', 'W', 'D', 'T', 'H', 'M', and 'S' are designators for each of the date and time elements and are not replaced. P is the duration designator (historically called 'period') placed at the start of the duration representation. Y is the year designator that follows the value for the number of years. M is the month designator that follows the value for the number of months. D is the day designator that follows the value for the number of days. T is the time designator that precedes the time components of the representation. H is the hour designator that follows the value for the number of hours. M is the minute designator that follows the value for the number of minutes. S is the second designator that follows the value for the number of seconds. The number of seconds can include decimal digits to arbitrary precision",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "Passport": {
      "title": "Passport",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "issuingParty": {
          "$ref": "#/definitions/partyBaseType_v02"
        },
        "issueDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAuthorizationDocument": {
      "title": "WorkAuthorizationDocument",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "issuingParty": {
          "$ref": "#/definitions/partyBaseType_v02"
        },
        "issueDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "AlternatePreferredName": {
      "title": "AlternatePreferredName",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "The first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "Person middle name or initial",
          "type": "string"
        },
        "familyName1": {
          "description": "Person family name 1",
          "type": "string"
        },
        "familyName2": {
          "description": "Person family name 2",
          "type": "string"
        },
        "formattedName": {
          "description": "A formatted version of the person name",
          "type": "string"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "preferredSalutations": {
          "description": "A list of preferred salutations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/salutationType_v02"
          }
        },
        "titlePrefixCodes": {
          "description": "Person title Prefix Codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "nickName": {
          "description": "A preferred name, e.g. a nickname",
          "type": "string"
        },
        "generationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualificationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "titleAffixCodes": {
          "description": "Person titles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "familyName1Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "familyName2Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "initials": {
          "description": "Person initials",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "languageCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "FormerName": {
      "title": "FormerName",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "The first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "Person middle name or initial",
          "type": "string"
        },
        "familyName1": {
          "description": "Person family name 1",
          "type": "string"
        },
        "familyName2": {
          "description": "Person family name 2",
          "type": "string"
        },
        "formattedName": {
          "description": "A formatted version of the person name",
          "type": "string"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "preferredSalutations": {
          "description": "A list of preferred salutations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/salutationType_v02"
          }
        },
        "titlePrefixCodes": {
          "description": "Person title Prefix Codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "nickName": {
          "description": "A preferred name, e.g. a nickname",
          "type": "string"
        },
        "generationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualificationAffixCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "titleAffixCodes": {
          "description": "Person titles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/titleAffixType_v02"
          }
        },
        "familyName1Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "familyName2Prefix": {
          "description": "Person family name pre-fix",
          "type": "string"
        },
        "initials": {
          "description": "Person initials",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "birthPlaceType_v02": {
      "title": "birthPlaceType_v02",
      "description": "The place a person was born. This can have taxation impacts.  Inlcudes certain address components",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "A city in the context of an address",
          "type": "string"
        },
        "countrySubdivisionLevel1": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "countrySubdivisionLevel2": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "postalCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "formattedBirthPlace": {
          "description": "A formatted version of the place where a person is born.",
          "type": "string"
        }
      }
    },
    "OtherPersonalAddress": {
      "title": "OtherPersonalAddress",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "attentionOfName": {
          "description": "Attention of Name",
          "type": "string"
        },
        "careOfName": {
          "description": "Care Of Name",
          "type": "string"
        },
        "lineOne": {
          "description": "Line One of Street Address Information",
          "type": "string"
        },
        "lineTwo": {
          "description": "Line Two of Street Address Information",
          "type": "string"
        },
        "lineThree": {
          "description": "Line Three of Street Address Information",
          "type": "string"
        },
        "cityName": {
          "description": "A city in the context of an address",
          "type": "string"
        },
        "countrySubdivisionLevel1": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "countryCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "postalCode": {
          "description": "The string of characters used to identify the postal code",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/coordinateType_v02"
        },
        "scriptCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "lineFour": {
          "description": "Line Four of Street Address Information",
          "type": "string"
        },
        "lineFive": {
          "description": "Line Five of Street Address Information",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The number of a building in the context of a physical address, e.g. House Number",
          "type": "string"
        },
        "buildingName": {
          "description": "The name of a building in the context of a physical address, e.g. Rockefeller Center",
          "type": "string"
        },
        "blockName": {
          "description": "The name the block",
          "type": "string"
        },
        "streetName": {
          "description": "The name of the street",
          "type": "string"
        },
        "streetTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "unit": {
          "description": "A unit in the context of an address, e.g. an Apartment Number or an Office",
          "type": "string"
        },
        "floor": {
          "description": "A floor in the context of an address",
          "type": "string"
        },
        "stairCase": {
          "description": "A reference to a particular staircase in the context of an address",
          "type": "string"
        },
        "door": {
          "description": "A reference to a particular door in the context of an address. e.g. Apartment Number",
          "type": "string"
        },
        "postOfficeBox": {
          "description": "A post office box",
          "type": "string"
        },
        "deliveryPoint": {
          "description": "A way to identify a specific delivery location, e.g. a mail-stop",
          "type": "string"
        },
        "plotID": {
          "description": "A way to identify a building plot, e.g. a specific building construction site",
          "type": "string"
        },
        "countrySubdivisionLevel2": {
          "$ref": "#/definitions/countrySubdivisionType_v02"
        },
        "sameAsAddressIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "sameAsAddressLink": {
          "$ref": "#/definitions/linkType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "RaceCode": {
      "title": "RaceCode",
      "description": "Race is a classification system used to categorize humans into large and distinct populations or groups by heritable phenotypic characteristics, geographic ancestry, culture, history, language, physical appearance, ethnicity, and social status",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "identificationMethodCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "customFieldContainerType_v02": {
      "title": "customFieldContainerType_v02",
      "description": "A container of custom fields. The category within each custom object allows for the categorizing or grouping of the associated custom field for the purpose of data mining. For example, the typeCode on a custom string object might be valued as SIZE and the correlating name codes might be t-shirt, pants, jacket, etc.",
      "type": "object",
      "properties": {
        "amountFields": {
          "description": "A list of custom amounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountField"
          }
        },
        "codeFields": {
          "description": "A list of custom codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeField"
          }
        },
        "dateFields": {
          "description": "A list of custom dates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateField"
          }
        },
        "dateTimeFields": {
          "description": "A list of custom datetimes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateTimeField"
          }
        },
        "indicatorFields": {
          "description": "A list of custom indicators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicatorField"
          }
        },
        "numberFields": {
          "description": "A list of custom numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberField"
          }
        },
        "percentFields": {
          "description": "A list of custom percentages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PercentField"
          }
        },
        "stringFields": {
          "description": "A list of custom strings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringField"
          }
        },
        "telephoneFields": {
          "description": "A list of custom telephone numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TelephoneField"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "AmountField": {
      "title": "AmountField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "amountValue": {
          "description": "The monetary value of the object in which the amount is associated",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "CodeField": {
      "title": "CodeField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DateField": {
      "title": "DateField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "dateValue": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DateTimeField": {
      "title": "DateTimeField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "dateTimeValue": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "IndicatorField": {
      "title": "IndicatorField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "indicatorValue": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "NumberField": {
      "title": "NumberField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "numberValue": {
          "description": "A custom number",
          "type": "number",
          "format": "double"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "PercentField": {
      "title": "PercentField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "percentValue": {
          "description": "The percentage value",
          "type": "number",
          "format": "double"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "StringField": {
      "title": "StringField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "stringValue": {
          "description": "A custom string",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "TelephoneField": {
      "title": "TelephoneField",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "categoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "countryDialing": {
          "description": "The country dialing code is the national prefix to be used when dialing TO that particular country FROM another country.",
          "type": "string"
        },
        "areaDialing": {
          "description": "The local area dialing code for a telephone number.",
          "type": "string"
        },
        "dialNumber": {
          "description": "The local communication number, not including country dialing or area dialing codes.   If component parts of the telephone number are being communicated then the dialNumber is required.",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the local communication number.  In the case of a Telephone Number accessing a Pager Network, the extension may be the Pager Identification Number required to leave a message for the Pager Number (i.e. Pager Pin).  These are mutually exclusive.",
          "type": "string"
        },
        "access": {
          "description": "National Direct Dialing Prefix.  Also known as the trunk prefix or National Prefix.  It is the number to be dialed in a domestic telephone call, preceding any necessary area code and subscriber number (i.e. dial number).  When calling from outside of the country, the national direct dial prefix is omitted by the caller.  In Australia, Germany, and United Kingdom the trunk prefix is 0.  In the US and Canada it is 1.",
          "type": "string"
        },
        "formattedNumber": {
          "description": "The formatted telephone number.  The component parts of the telephone are put together into a presentation pattern as defined by the regex format specified.  Please note that \\ is used as an escape character in regex, but a double \\ is needed to escape within the json schema.  The regex will accept +CC NNNNNNNNNNNNNN where + is the symbol indicating the caller to enter their country specific code to call from outside the country.  CC is the country code for an international number (optional), and the area code and dial number.  The local access code (i.e. 1 (201) 333 4444. 1 is the access code in US) is not passed.  The UI will present the phone number following its own presentation convention",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkerDatesTransform": {
      "title": "WorkerDatesTransform",
      "description": "These dates are related to the highest level legal relationship that a person has with the organization. If a given worker has multiple relationships with the organization, these are the dates associated with the primary relationship.",
      "type": "object",
      "properties": {
        "originalHireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "rehireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "adjustedServiceDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "acquisitionDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "retirementDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "statusReasonType_v02": {
      "title": "statusReasonType_v02",
      "description": "Status to include the status code, effective date (ISO-8601:2000 format) and the reason for change",
      "type": "object",
      "properties": {
        "statusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "reasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "workAssignmentTransformType_v02": {
      "title": "workAssignmentTransformType_v02",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "primaryIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "offerExtensionDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "offerAcceptanceDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "hireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "seniorityDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedStartDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "actualStartDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "assignmentStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "assignmentCostCenters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/costCenterType_v02"
          }
        },
        "workerProbationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "workerProbationPeriod": {
          "$ref": "#/definitions/datePeriodType_v01"
        },
        "workerTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "assignmentTermCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "workLevelCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nationalityContextCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "vipIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "vipTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "executiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "executiveTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "officerIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "officerTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "managementPositionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "legalEntityID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "highlyCompensatedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "highlyCompensatedTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "stockOwnerIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "stockOwnerPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "workerGroups": {
          "description": "A list of worker groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformWorkerGroup"
          }
        },
        "jobCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "jobTitle": {
          "description": "The job title",
          "type": "string"
        },
        "occupationalClassifications": {
          "description": "A reference to a system used to classify workers into occupational categories for the purpose of collecting, calculating, or disseminating data. In the US, an example of this is the EEOC system; in the UK, an example of this is the SOC system. This is the at the assignment level in France",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformOccupationalClassification"
          }
        },
        "industryClassifications": {
          "description": "The occupational classification reflects the type of job or work that the person does, while the industry classification reflects the business activity of their employer or company. The occupational and industry classifications are based on a persons sole or primary job, unless otherwise specified. For the unemployed, the occupation and industry are based on the last job held. An example of an industry classification code in the US is the NAICS code.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformIndustryClassification"
          }
        },
        "wageLawCoverage": {
          "$ref": "#/definitions/wageLawCoverageType_v02"
        },
        "positionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "positionTitle": {
          "description": "The position title",
          "type": "string"
        },
        "laborUnion": {
          "$ref": "#/definitions/laborUnionType_v02"
        },
        "bargainingUnit": {
          "$ref": "#/definitions/bargainingUnitType_v02"
        },
        "workShiftCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "workArrangementCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "standardHours": {
          "$ref": "#/definitions/standardHoursType_v02"
        },
        "fullTimeEquivalenceRatio": {
          "description": "The ratio",
          "type": "number",
          "format": "double"
        },
        "homeOrganizationalUnits": {
          "description": "A list of the various types of home organizational units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformHomeOrganizationalUnitItem"
          }
        },
        "assignedOrganizationalUnits": {
          "description": "A list of organizational units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformAssignedOrganizationalUnitItem"
          }
        },
        "homeWorkLocation": {
          "$ref": "#/definitions/locationType_v02"
        },
        "assignedWorkLocations": {
          "description": "A list of work locations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformAssignedWorkLocation"
          }
        },
        "remunerationBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payCycleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "standardPayPeriodHours": {
          "$ref": "#/definitions/standardHoursType_v02"
        },
        "baseRemuneration": {
          "$ref": "#/definitions/WorkAssignmentTransformBaseRemuneration"
        },
        "additionalRemunerations": {
          "description": "A list of pay compensations associated to a given work assignment.  Additional remuneration includes all other forms of compensation beyond the base pay associated to a given work assignment.  The typeCode is used to further refine the type of compensation, e.g. bonus, commission, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformAdditionalRemuneration"
          }
        },
        "reportsTo": {
          "description": "A reference list of workers to whom a given worker reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentTransformReportsTo"
          }
        },
        "payrollProcessingStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "payScaleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payrollGroupCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "annualBenefitBaseRate": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payrollScheduleGroupID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "payrollFileNumber": {
          "description": "The payroll file number",
          "type": "string"
        },
        "payrollRegionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "payGradePayRange": {
          "$ref": "#/definitions/rangeType_v02"
        },
        "compaRatio": {
          "description": "The ratio",
          "type": "number",
          "format": "double"
        },
        "payGradeStepCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeStepPayRate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "nextPayGradeStepDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "minimumPayGradeStepDuration": {
          "description": "Represents the duration of time as represented by ISO 8601. Where the value space is a six dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second. The number of seconds can include decimal digits to arbitary pecision. PnYn MnDTnH nMnS, where: [n] is replaced by the value for each of the date and time elements that follow the [n]. Leading zeros are not required, but the maximum number of digits for each element should be agreed to by the communicating parties. The capital letters 'P', 'Y', 'M', 'W', 'D', 'T', 'H', 'M', and 'S' are designators for each of the date and time elements and are not replaced. P is the duration designator (historically called 'period') placed at the start of the duration representation. Y is the year designator that follows the value for the number of years. M is the month designator that follows the value for the number of months. D is the day designator that follows the value for the number of days. T is the time designator that precedes the time components of the representation. H is the hour designator that follows the value for the number of hours. M is the minute designator that follows the value for the number of minutes. S is the second designator that follows the value for the number of seconds. The number of seconds can include decimal digits to arbitrary precision",
          "type": "string"
        },
        "geographicPayDifferentialCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "geographicPayDifferentialPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        }
      }
    },
    "costCenterType_v02": {
      "title": "costCenterType_v02",
      "description": "The cost Center is used for taxing the costs of the related entity",
      "type": "object",
      "properties": {
        "costCenterID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "costCenterName": {
          "description": "The cost center name of the activity",
          "type": "string"
        },
        "costCenterPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        }
      }
    },
    "datePeriodType_v01": {
      "title": "datePeriodType_v01",
      "description": "The string reprersentation of the date range. Used to specify effective period.  Follows the ISO-8601:2000 format",
      "type": "object",
      "properties": {
        "startDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "WorkAssignmentTransformWorkerGroup": {
      "title": "WorkAssignmentTransformWorkerGroup",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "groupCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransformOccupationalClassification": {
      "title": "WorkAssignmentTransformOccupationalClassification",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "classificationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransformIndustryClassification": {
      "title": "WorkAssignmentTransformIndustryClassification",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "classificationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "wageLawCoverageType_v02": {
      "title": "wageLawCoverageType_v02",
      "description": "A code indicating whether the work assignment is covered under applicable wage and labor laws relating to working hours, overtime, and similar protections, e.g. FLSA in the US",
      "type": "object",
      "properties": {
        "wageLawNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "coverageCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "laborUnionType_v02": {
      "title": "laborUnionType_v02",
      "description": "An associated labor union",
      "type": "object",
      "properties": {
        "laborUnionCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "seniorityDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "bargainingUnitType_v02": {
      "title": "bargainingUnitType_v02",
      "description": "A bargaining unit is a group of employees who are so grouped for the purpose of collective bargaining. A bargaining unit is also known as a local labor union",
      "type": "object",
      "properties": {
        "bargainingUnitCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "seniorityDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "standardHoursType_v02": {
      "title": "standardHoursType_v02",
      "description": "The standard number of hours of work associated to a position, typically used to drive the definition of a full time assignment, e.g. 40 in the US, 37.5 in the UK, 35 in FR. This number is usually expressed based on a week. The unitCode is used to convey that measurement.",
      "type": "object",
      "properties": {
        "hoursQuantity": {
          "description": "The number of hours",
          "type": "number",
          "format": "double"
        },
        "unitCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "WorkAssignmentTransformHomeOrganizationalUnitItem": {
      "title": "WorkAssignmentTransformHomeOrganizationalUnitItem",
      "description": "The HOME organizational unit defines the work assignment and perhaps funds it. The should only be one home organizational unit for a given type, e.g. only one home department.",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransformAssignedOrganizationalUnitItem": {
      "title": "WorkAssignmentTransformAssignedOrganizationalUnitItem",
      "description": "The ASSIGNED organizational unit is one for which the work assignment is doing work",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "locationType_v02": {
      "title": "locationType_v02",
      "description": "Schema to describe details of a location",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "communication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "address": {
          "$ref": "#/definitions/organizationAddressType_v02"
        }
      }
    },
    "WorkAssignmentTransformAssignedWorkLocation": {
      "title": "WorkAssignmentTransformAssignedWorkLocation",
      "description": "The assigned work location is the location (or locations) where the worker is physically located.",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "communication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "address": {
          "$ref": "#/definitions/organizationAddressType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransformBaseRemuneration": {
      "title": "WorkAssignmentTransformBaseRemuneration",
      "description": "The base or primary pay (i.e. salary, wage) associated to a work assignment. The structure allows for the explicit communication of pre-defined equivalents for the base remuneration",
      "type": "object",
      "properties": {
        "recordingBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "hourlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "dailyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "weeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "biweeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "semiMonthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "monthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "annualRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payPeriodRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "commissionRatePercentage": {
          "$ref": "#/definitions/ratePercentageType_v02"
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "rateAmountType_v02": {
      "title": "rateAmountType_v02",
      "description": "A representation of a rate amount value",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "amountValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the amountValue would be 20",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        }
      }
    },
    "ratePercentageType_v02": {
      "title": "ratePercentageType_v02",
      "description": "A representation of a rate percentage value",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "percentageValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the percentageValue would be 20",
          "type": "number",
          "format": "double"
        },
        "baseUnitCode": {
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "WorkAssignmentTransformAdditionalRemuneration": {
      "title": "WorkAssignmentTransformAdditionalRemuneration",
      "type": "object",
      "properties": {
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "intervalCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "rate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRemunerationAssociatedRateQualifierType"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "rateType_v02": {
      "title": "rateType_v02",
      "description": "A representation of a rate value",
      "type": "object",
      "properties": {
        "amountValue": {
          "description": "The numeric value associated to the rate. In the example 5 US dollars per hour, the number 5 is the rate value. In the example 3 bags of rice per month, the number 3 is the rate value. In the example, 20 percent of annual sales, the amountValue would be 20",
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "unitCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "baseUnitCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "baseMultiplierValue": {
          "description": "For any given rate, the base rate value is presumed to be 1, e.g. per one hour, per one month. If for example, the rate was 10 US dollars for every widget produced, the base rate value is presumed to be one and there is no need to communicate a baseMultiplierValue. If however, the rate was 10 US Dollars for every 3 widgets produced, the baseMultiplierValue would be 3",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AdditionalRemunerationAssociatedRateQualifierType": {
      "title": "AdditionalRemunerationAssociatedRateQualifierType",
      "type": "object",
      "properties": {
        "qualifierObjectTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "WorkAssignmentTransformReportsTo": {
      "title": "WorkAssignmentTransformReportsTo",
      "description": "The work assignment to whom a given worker reports",
      "type": "object",
      "properties": {
        "positionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "positionTitle": {
          "description": "The position title",
          "type": "string"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "reportsToWorkerName": {
          "$ref": "#/definitions/contactNameType_v02"
        },
        "reportsToRelationshipCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "contactNameType_v02": {
      "title": "contactNameType_v02",
      "description": "The name of the contact",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "The first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "Person middle name or initial",
          "type": "string"
        },
        "familyName1": {
          "description": "Person family name 1",
          "type": "string"
        },
        "familyName2": {
          "description": "Person family name 2",
          "type": "string"
        },
        "formattedName": {
          "description": "A formatted version of the person name",
          "type": "string"
        }
      }
    },
    "rangeType_v02": {
      "title": "rangeType_v02",
      "description": "Minumum, maximum and median remuneration rates",
      "type": "object",
      "properties": {
        "minimumRate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "medianRate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "maximumRate": {
          "$ref": "#/definitions/rateType_v02"
        }
      }
    },
    "PayrollTaxProfileTransform": {
      "title": "PayrollTaxProfileTransform",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "stateIncomeTaxInstructions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateIncomeTaxInstructionTransform"
          }
        },
        "suiTaxInstruction": {
          "$ref": "#/definitions/SUIInstructionTransform"
        }
      }
    },
    "StateIncomeTaxInstructionTransform": {
      "title": "StateIncomeTaxInstructionTransform",
      "type": "object",
      "properties": {
        "stateCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "workedInJurisdictionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "livedInJurisdictionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "codeType_v01": {
      "title": "codeType_v01",
      "description": "The code for the related entity",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "SUIInstructionTransform": {
      "title": "SUIInstructionTransform",
      "type": "object",
      "properties": {
        "stateCode": {
          "$ref": "#/definitions/codeType_v01"
        }
      }
    },
    "Output": {
      "title": "Output",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput"
        }
      }
    },
    "WorkerOutput": {
      "title": "WorkerOutput",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "person": {
          "$ref": "#/definitions/PersonOutput"
        },
        "workerDates": {
          "$ref": "#/definitions/WorkerDatesOutput"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "businessCommunication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/workAssignmentType_v02"
        },
        "payrollTaxProfile": {
          "$ref": "#/definitions/PayrollTaxProfileOutput"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        }
      }
    },
    "PersonOutput": {
      "title": "PersonOutput",
      "description": "An associate is a person with a relationship to an organization",
      "type": "object",
      "properties": {
        "governmentIDs": {
          "description": "A list of government identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/governmentIDItemType_v02"
          }
        },
        "legalName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "legalAddress": {
          "$ref": "#/definitions/personalAddressType_v02"
        },
        "communication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "birthDate": {
          "description": "The birth date of the person. Follows the ISO-8601:2000 format",
          "type": "string"
        },
        "deceasedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "deathDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "genderCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "genderIdentityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "sexualOrientationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "religionCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "maritalStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "socialInsurancePrograms": {
          "description": "Social insurance is a government operated social security scheme that provides income loss, maternity, sickness benefits, and retirement pensions to the working population. It is funded by regular contributions based on wage or salary by both employees and employers, and by government through taxation. Examples in the USA are Medicare and Medicaid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/socialInsuranceProgramItemType_v02"
          }
        },
        "tobaccoUserIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabilityIdentificationDeclinedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabledIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "disabilityTypeCodes": {
          "description": "Person disabilites, e.g. Amputee, Hearing Impairment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "disabilityPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "studentIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "studentStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "identityDocuments": {
          "description": "A list of identity documents, that serve as to confirm the identification of the holder , e.g. a birth certificate, an ID Card",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityDocument"
          }
        },
        "immigrationDocuments": {
          "description": "A list of immigration documents for a person who is not a citizen of the country in which he or see resides , e.g. a passport, visa, alien registration card, aka, green card, residence permit, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmigrationDocument"
          }
        },
        "passports": {
          "description": "A list of passport documents, issued by a national govenment which certifies the identiy and nationality of its holder",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Passport"
          }
        },
        "workAuthorizationDocuments": {
          "description": "A list of documents that authorize work, e.g. visas, a work permit, a labor card, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAuthorizationDocument"
          }
        },
        "preferredName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "alternatePreferredNames": {
          "description": "Other preferred names of the person expressed in a different language or script",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternatePreferredName"
          }
        },
        "formerNames": {
          "description": "Former names of the person in the associated context",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormerName"
          }
        },
        "birthName": {
          "$ref": "#/definitions/personNameType_v02"
        },
        "birthPlace": {
          "$ref": "#/definitions/birthPlaceType_v02"
        },
        "otherPersonalAddresses": {
          "description": "A list of addresses related to the associated entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherPersonalAddress"
          }
        },
        "ethnicityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "ethnicityGroupCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "raceCode": {
          "$ref": "#/definitions/RaceCode"
        },
        "citizenshipCountryCodes": {
          "description": "Person countries of citizenship, in which the Address is in. ISO_3166-1-alpha-2 code list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "residencyCountryCodes": {
          "description": "Person countries of residence.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "highestEducationLevelCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "militaryStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "militaryDischargeDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "militaryClassificationCodes": {
          "description": "Person military classification, e.g. Armed Forces Medal Veteran, Disabled Veteran, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeType_v02"
          }
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "WorkerDatesOutput": {
      "title": "WorkerDatesOutput",
      "description": "These dates are related to the highest level legal relationship that a person has with the organization. If a given worker has multiple relationships with the organization, these are the dates associated with the primary relationship.",
      "type": "object",
      "properties": {
        "originalHireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "rehireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "adjustedServiceDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "acquisitionDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "retirementDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "workAssignmentType_v02": {
      "title": "workAssignmentType_v02",
      "description": "A work assignment pertains to the duties and responsibilities that should be performed by the worker",
      "type": "object",
      "properties": {
        "primaryIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "offerExtensionDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "offerAcceptanceDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "hireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "seniorityDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedStartDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "actualStartDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "assignmentStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "assignmentCostCenters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/costCenterType_v02"
          }
        },
        "workerProbationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "workerProbationPeriod": {
          "$ref": "#/definitions/datePeriodType_v01"
        },
        "workerTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "assignmentTermCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "workLevelCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nationalityContextCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "vipIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "vipTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "executiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "executiveTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "officerIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "officerTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "managementPositionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "legalEntityID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "highlyCompensatedIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "highlyCompensatedTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "stockOwnerIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "stockOwnerPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "workerGroups": {
          "description": "A list of worker groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerGroup"
          }
        },
        "jobCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "jobTitle": {
          "description": "The job title",
          "type": "string"
        },
        "occupationalClassifications": {
          "description": "A reference to a system used to classify workers into occupational categories for the purpose of collecting, calculating, or disseminating data. In the US, an example of this is the EEOC system; in the UK, an example of this is the SOC system. This is the at the assignment level in France",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OccupationalClassification"
          }
        },
        "industryClassifications": {
          "description": "The occupational classification reflects the type of job or work that the person does, while the industry classification reflects the business activity of their employer or company. The occupational and industry classifications are based on a persons sole or primary job, unless otherwise specified. For the unemployed, the occupation and industry are based on the last job held. An example of an industry classification code in the US is the NAICS code.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndustryClassification"
          }
        },
        "wageLawCoverage": {
          "$ref": "#/definitions/wageLawCoverageType_v02"
        },
        "positionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "positionTitle": {
          "description": "The position title",
          "type": "string"
        },
        "laborUnion": {
          "$ref": "#/definitions/laborUnionType_v02"
        },
        "bargainingUnit": {
          "$ref": "#/definitions/bargainingUnitType_v02"
        },
        "workShiftCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "workArrangementCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "standardHours": {
          "$ref": "#/definitions/standardHoursType_v02"
        },
        "fullTimeEquivalenceRatio": {
          "description": "The ratio",
          "type": "number",
          "format": "double"
        },
        "homeOrganizationalUnits": {
          "description": "A list of the various types of home organizational units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HomeOrganizationalUnitItem"
          }
        },
        "assignedOrganizationalUnits": {
          "description": "A list of organizational units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedOrganizationalUnitItem"
          }
        },
        "homeWorkLocation": {
          "$ref": "#/definitions/locationType_v02"
        },
        "assignedWorkLocations": {
          "description": "A list of work locations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedWorkLocation"
          }
        },
        "remunerationBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payCycleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "standardPayPeriodHours": {
          "$ref": "#/definitions/standardHoursType_v02"
        },
        "baseRemuneration": {
          "$ref": "#/definitions/BaseRemuneration"
        },
        "additionalRemunerations": {
          "description": "A list of pay compensations associated to a given work assignment.  Additional remuneration includes all other forms of compensation beyond the base pay associated to a given work assignment.  The typeCode is used to further refine the type of compensation, e.g. bonus, commission, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRemuneration"
          }
        },
        "reportsTo": {
          "description": "A reference list of workers to whom a given worker reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkAssignmentReportsTo"
          }
        },
        "payrollProcessingStatusCode": {
          "$ref": "#/definitions/statusType_v02"
        },
        "payrollGroupCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "annualBenefitBaseRate": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payrollScheduleGroupID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "payrollFileNumber": {
          "description": "The payroll file number",
          "type": "string"
        },
        "payrollRegionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "payScaleCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradePayRange": {
          "$ref": "#/definitions/rangeType_v02"
        },
        "compaRatio": {
          "description": "The ratio",
          "type": "number",
          "format": "double"
        },
        "payGradeStepCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "payGradeStepPayRate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "nextPayGradeStepDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "minimumPayGradeStepDuration": {
          "description": "Represents the duration of time as represented by ISO 8601. Where the value space is a six dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second. The number of seconds can include decimal digits to arbitary pecision. PnYn MnDTnH nMnS, where: [n] is replaced by the value for each of the date and time elements that follow the [n]. Leading zeros are not required, but the maximum number of digits for each element should be agreed to by the communicating parties. The capital letters 'P', 'Y', 'M', 'W', 'D', 'T', 'H', 'M', and 'S' are designators for each of the date and time elements and are not replaced. P is the duration designator (historically called 'period') placed at the start of the duration representation. Y is the year designator that follows the value for the number of years. M is the month designator that follows the value for the number of months. D is the day designator that follows the value for the number of days. T is the time designator that precedes the time components of the representation. H is the hour designator that follows the value for the number of hours. M is the minute designator that follows the value for the number of minutes. S is the second designator that follows the value for the number of seconds. The number of seconds can include decimal digits to arbitrary precision",
          "type": "string"
        },
        "geographicPayDifferentialCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "geographicPayDifferentialPercentage": {
          "description": "A representation of a percentage value",
          "type": "number",
          "format": "double"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "WorkerGroup": {
      "title": "WorkerGroup",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "groupCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "OccupationalClassification": {
      "title": "OccupationalClassification",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "classificationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "IndustryClassification": {
      "title": "IndustryClassification",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "classificationCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "HomeOrganizationalUnitItem": {
      "title": "HomeOrganizationalUnitItem",
      "description": "The HOME organizational unit defines the work assignment and perhaps funds it. The should only be one home organizational unit for a given type, e.g. only one home department.",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "AssignedOrganizationalUnitItem": {
      "title": "AssignedOrganizationalUnitItem",
      "description": "The ASSIGNED organizational unit is one for which the work assignment is doing work",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "AssignedWorkLocation": {
      "title": "AssignedWorkLocation",
      "description": "The assigned work location is the location (or locations) where the worker is physically located.",
      "type": "object",
      "properties": {
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "communication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "address": {
          "$ref": "#/definitions/organizationAddressType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "BaseRemuneration": {
      "title": "BaseRemuneration",
      "description": "The base or primary pay (i.e. salary, wage) associated to a work assignment. The structure allows for the explicit communication of pre-defined equivalents for the base remuneration",
      "type": "object",
      "properties": {
        "hourlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "dailyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "weeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "monthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "annualRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "commissionRatePercentage": {
          "$ref": "#/definitions/ratePercentageType_v02"
        },
        "recordingBasisCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "biweeklyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "semiMonthlyRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "payPeriodRateAmount": {
          "$ref": "#/definitions/rateAmountType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssociatedRateQualifierType"
          }
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "AssociatedRateQualifierType": {
      "title": "AssociatedRateQualifierType",
      "type": "object",
      "properties": {
        "qualifierObjectTypeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "qualifierObjectID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "AdditionalRemuneration": {
      "title": "AdditionalRemuneration",
      "type": "object",
      "properties": {
        "typeCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "intervalCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "nameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "rate": {
          "$ref": "#/definitions/rateType_v02"
        },
        "associatedRateQualifiers": {
          "description": "Describes the conditions under which the associated rate can be expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRemunerationAssociatedRateQualifierType"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "effectiveDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "WorkAssignmentReportsTo": {
      "title": "WorkAssignmentReportsTo",
      "description": "The work assignment to whom a given worker reports",
      "type": "object",
      "properties": {
        "positionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "positionTitle": {
          "description": "The position title",
          "type": "string"
        },
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "reportsToWorkerName": {
          "$ref": "#/definitions/contactNameType_v02"
        },
        "reportsToRelationshipCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "PayrollTaxProfileOutput": {
      "title": "PayrollTaxProfileOutput",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "stateIncomeTaxInstructions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateIncomeTaxInstructionOutput"
          }
        },
        "suiTaxInstruction": {
          "$ref": "#/definitions/SUIInstructionOutput"
        }
      }
    },
    "StateIncomeTaxInstructionOutput": {
      "title": "StateIncomeTaxInstructionOutput",
      "type": "object",
      "properties": {
        "stateCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "workedInJurisdictionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "livedInJurisdictionIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "SUIInstructionOutput": {
      "title": "SUIInstructionOutput",
      "type": "object",
      "properties": {
        "stateCode": {
          "$ref": "#/definitions/codeType_v01"
        }
      }
    },
    "metaType_v02": {
      "title": "metaType_v02",
      "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
      "type": "object",
      "properties": {
        "startSequence": {
          "description": "Sequence of a related entity when included in the collection or a group",
          "type": "integer",
          "format": "int32"
        },
        "completeIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "totalNumber": {
          "description": "Number of total instance resources in an instance resource set. Note: An instance resource set is a set of instance resources that is determined by a server to satisfy the sets membership criteria (i.e., selection, filter, expansion and search criteria) of a resource management operation (e.g. GET request) upon a collection resource",
          "type": "integer",
          "format": "int32"
        },
        "resourceSetID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "confirmMessageType_v01": {
      "title": "confirmMessageType_v01",
      "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
      "type": "object",
      "properties": {
        "confirmMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "createDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "requestReceiptDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "protocolStatusCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "protocolCode": {
          "$ref": "#/definitions/codeType_v01"
        },
        "requestID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "requestStatusCode": {
          "$ref": "#/definitions/RequestStatusCode"
        },
        "requestMethodCode": {
          "$ref": "#/definitions/RequestMethodCode"
        },
        "sessionID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "requestETag": {
          "description": "The entity tag of the entity in the request.",
          "type": "string"
        },
        "requestLink": {
          "$ref": "#/definitions/linkType_v02"
        },
        "processingStatusCode": {
          "$ref": "#/definitions/ProcessingStatusCode"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/processMessage_v01"
          }
        },
        "resourceMessages": {
          "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMessage"
          }
        }
      }
    },
    "IDType_v01": {
      "title": "IDType_v01",
      "description": "The unique identifier of the related entity",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "RequestStatusCode": {
      "title": "RequestStatusCode",
      "description": "The process results status code for the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue"
        }
      }
    },
    "CodeValue": {
      "title": "CodeValue",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "partiallyFailed",
        "failed"
      ]
    },
    "RequestMethodCode": {
      "title": "RequestMethodCode",
      "description": "The method that was used on the request corresponding to this message instance.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue1"
        }
      }
    },
    "CodeValue1": {
      "title": "CodeValue1",
      "description": "The code for the related entity.",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "PUT",
        "POST",
        "PATCH",
        "DELETE"
      ]
    },
    "ProcessingStatusCode": {
      "title": "ProcessingStatusCode",
      "description": "Processing status of the related request message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue2"
        }
      }
    },
    "CodeValue2": {
      "title": "CodeValue2",
      "description": "The code for the related entity.",
      "example": "received",
      "type": "string",
      "enum": [
        "received",
        "validated",
        "started",
        "completed"
      ]
    },
    "processMessage_v01": {
      "title": "processMessage_v01",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/messageTypeCodeType_v01"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "developerMessage": {
          "$ref": "#/definitions/messageType_v01"
        }
      }
    },
    "messageTypeCodeType_v01": {
      "title": "messageTypeCodeType_v01",
      "description": "Schema describing the type of the user or developer message",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue3"
        }
      }
    },
    "CodeValue3": {
      "title": "CodeValue3",
      "description": "The code for the related entity.",
      "example": "success",
      "type": "string",
      "enum": [
        "success",
        "warning",
        "error",
        "info"
      ]
    },
    "ExpressionLanguageCode": {
      "title": "ExpressionLanguageCode",
      "description": "Identifies the language used for expressions communicated in this message.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue4"
        }
      }
    },
    "CodeValue4": {
      "title": "CodeValue4",
      "description": "The code for the related entity.",
      "example": "jPath",
      "type": "string",
      "enum": [
        "jPath"
      ]
    },
    "messageType_v01": {
      "title": "messageType_v01",
      "description": "Representation of a message.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code associated with the message description.",
          "type": "string"
        },
        "title": {
          "description": "Title of the message description.",
          "type": "string"
        },
        "messageTxt": {
          "description": "The value/content of the message description.",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "ResourceMessage": {
      "title": "ResourceMessage",
      "description": "Each object contains detailed information for a resource referenced in the original request.",
      "type": "object",
      "properties": {
        "resourceMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/ResourceMessageResourceStatus"
        },
        "resourceLink": {
          "$ref": "#/definitions/linkType_v02"
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessMessageWithResourceStatusCode"
          }
        }
      }
    },
    "ResourceMessageResourceStatus": {
      "title": "ResourceMessageResourceStatus",
      "description": "The processing results status code of the resource of the request.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "$ref": "#/definitions/CodeValue5"
        }
      }
    },
    "CodeValue5": {
      "title": "CodeValue5",
      "description": "The code for the related entity.",
      "example": "succeeded",
      "type": "string",
      "enum": [
        "succeeded",
        "failed",
        "warning"
      ]
    },
    "ProcessMessageWithResourceStatusCode": {
      "title": "ProcessMessageWithResourceStatusCode",
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "properties": {
        "processMessageID": {
          "$ref": "#/definitions/IDType_v01"
        },
        "messageTypeCode": {
          "$ref": "#/definitions/messageTypeCodeType_v01"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "$ref": "#/definitions/ExpressionLanguageCode"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "userMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "developerMessage": {
          "$ref": "#/definitions/messageType_v01"
        },
        "resourceStatusCode": {
          "$ref": "#/definitions/codeType_v01"
        }
      }
    },
    "EventsHrV1WorkerHire400Error": {
      "title": "EventsHrV1WorkerHire400Error",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/confirmMessage_v1_0_rev002.json"
      },
      "type": "object",
      "properties": {
        "externalValue": {
          "type": "string"
        }
      },
      "required": [
        "externalValue"
      ]
    },
    "WorkerOnLeaveEvent": {
      "title": "WorkerOnLeaveEvent",
      "description": "An instance to capture the worker on leave event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.onLeave.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event1"
          }
        }
      }
    },
    "Event1": {
      "title": "Event1",
      "description": "An instance to capture the worker on leave event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete.",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/ServiceCategoryCode"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment.",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode"
        },
        "priorityCode": {
          "$ref": "#/definitions/PriorityCode"
        },
        "recordDateTime": {
          "description": "This is the date time the event is recorded in the system of record with an event status code equal to complete. This value is set by the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "This is the date time the event is created. If a system of record creates the event instance, as in the case of an annual enrollment for example, then is sets the creation date time. If a user declares an event, then this is set to the date time when the first call is made to the system of record.",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "This value is set by the system of record and used to term the life cycle of an event instance.",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "This value is set by the system of record and allows for the presentation of a date by which the system of record would like the user to complete the event.",
          "type": "string",
          "format": "date-time"
        },
        "originator": {
          "$ref": "#/definitions/Originator"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "data": {
          "$ref": "#/definitions/Data1"
        }
      }
    },
    "ServiceCategoryCode": {
      "title": "ServiceCategoryCode",
      "description": "The service domain, e.g. HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode": {
      "title": "EventNameCode",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventReasonCode": {
      "title": "EventReasonCode",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation. This is optional and valued as defined by the system of record.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode": {
      "title": "EventStatusCode",
      "description": "This identifies the status of the event. An event that has initiated by the system of record, such as a benefits annual enrollment event, will have an event status code of created. An event that is saved in a work in progress state (as determined by the permissible state codes), will have an event status code of inProgress. An event that has been recorded, will have an event status code of complete. This is set by the system of record and valued based on a standard codeslist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "PriorityCode": {
      "title": "PriorityCode",
      "description": "This allows the system of record to prioritize events and is valued based on a standard codelist.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Originator": {
      "title": "Originator",
      "description": "An originator is a user, machine or event that triggered the event.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event originator",
          "type": "string"
        },
        "eventID": {
          "description": "The unique identifier of the event instance. This is generated once an event is recorded with an event status code equal to Complete. This value is set by the system of record.",
          "type": "string"
        },
        "eventNameCode": {
          "$ref": "#/definitions/EventNameCode1"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        }
      }
    },
    "ApplicationID": {
      "title": "ApplicationID",
      "description": "The unique identifier of the application which originated the event.",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode"
        }
      }
    },
    "SchemeCode": {
      "title": "SchemeCode",
      "description": "The scheme code",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventNameCode1": {
      "title": "EventNameCode1",
      "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Actor": {
      "title": "Actor",
      "description": "The actor is the party that completed the recording of the event.",
      "type": "object",
      "properties": {
        "applicationID": {
          "$ref": "#/definitions/ApplicationID"
        },
        "associateOID": {
          "description": "The unique identifier of an associate who originated the event.",
          "type": "string"
        },
        "formattedName": {
          "description": "Human readable name of the event actor",
          "type": "string"
        },
        "deviceID": {
          "description": "The unique identifier of the device, e.g. a time clock, door entry beam.",
          "type": "string"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        },
        "deviceUserAgentID": {
          "description": "Identifier of the user agent of the device used by the actor who worked on the event",
          "type": "string"
        }
      }
    },
    "GeoCoordinate": {
      "title": "GeoCoordinate",
      "description": "The coordinates of the location of the actor",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The angle, in degrees, of a position on Earth above the equator. (Latitude is negative for a place below the equator.) specified in decimal degrees",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The angle, in degrees, of a position on Earth around the equator from the Greenwich Meridian specified in decimal degrees",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Link": {
      "title": "Link",
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URI of the related entity",
          "type": "string"
        },
        "rel": {
          "$ref": "#/definitions/Rel1"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user.",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation.",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType1"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "encType": {
          "$ref": "#/definitions/EncType"
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body.",
          "type": "string"
        }
      }
    },
    "Rel1": {
      "title": "Rel1",
      "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
      "example": "alternate",
      "type": "string",
      "enum": [
        "alternate",
        "create",
        "canonical",
        "describedby",
        "edit-form",
        "enclosure",
        "full",
        "related",
        "root",
        "self",
        "up",
        "search",
        "/adp/invoke",
        "/adp/image",
        "/adp/confirm-message",
        "/adp/status-monitor",
        "/adp/codelist",
        "/adp/template",
        "/adp/externalLink"
      ]
    },
    "MediaType1": {
      "title": "MediaType1",
      "description": "The media type that the linked resource will return (Response)",
      "example": "application/json",
      "type": "string",
      "enum": [
        "application/json",
        "text/html",
        "application/pdf",
        "image/jpeg",
        "image/gif",
        "image/png",
        "application/msword",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
      ]
    },
    "Data1": {
      "title": "Data1",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext"
        },
        "transform": {
          "$ref": "#/definitions/Transform1"
        },
        "output": {
          "$ref": "#/definitions/Output1"
        }
      }
    },
    "EventContext": {
      "title": "EventContext",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "A globally unique (GUID) identifier of the context expression. This conveys the context of the associated data. For example, if the context is set to Germany, the data would adhere to the business rules and formatting rules relevant to Germany",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerEventContext"
        }
      }
    },
    "WorkerEventContext": {
      "title": "WorkerEventContext",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of a covered individual when there is an AOID",
          "type": "string"
        }
      }
    },
    "Transform1": {
      "title": "Transform1",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/EventReasonCode1"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/EventStatusCode1"
        },
        "effectiveDateTime": {
          "description": "This is the effective date, or effective date time fo the event from a business perspective. In some systems, this may be referred to as the Event Date. For example, for a birth event, this is the date of birth. If there is no effective date from a business perspective, this is set equal to the record date time.",
          "type": "string",
          "format": "date-time"
        },
        "worker": {
          "$ref": "#/definitions/WorkerTransform1"
        }
      }
    },
    "EventReasonCode1": {
      "title": "EventReasonCode1",
      "description": "This allows for further refinement of the associated event. For example, for a worker.maritalStatus.change event, the reason code could be used to describe whether it is a Marriage vs. Divorce vs. Separation.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "EventStatusCode1": {
      "title": "EventStatusCode1",
      "description": "This identifies the status of the event. An event that has been created, either by the system of record or as the result of a user, will have an event status code of Created. An event that is saved in a work in progress state (as determined by the permissable state codes), will have an event status code of InProgress. An event that has been recorded, will have an event status code of Complete. This value is set by the system of record.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "WorkerTransform1": {
      "title": "WorkerTransform1",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "workerStatus": {
          "$ref": "#/definitions/WorkerStatus"
        }
      }
    },
    "WorkerStatus": {
      "title": "WorkerStatus",
      "description": "The status of the worker in the organization at the highest level. If a given worker has multiple relationships with the organization, this is the status that arches over all those relationships",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "Output1": {
      "title": "Output1",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput1"
        }
      }
    },
    "WorkerOutput1": {
      "title": "WorkerOutput1",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "A unique identifier of an associate",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/WorkerID"
        },
        "workerStatus": {
          "$ref": "#/definitions/WorkerStatus1"
        }
      }
    },
    "WorkerID": {
      "title": "WorkerID",
      "description": "An identifier for a worker, e.g. an Employee ID",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "An actual ID value",
          "type": "string"
        },
        "schemeCode": {
          "$ref": "#/definitions/SchemeCode"
        }
      }
    },
    "WorkerStatus1": {
      "title": "WorkerStatus1",
      "description": "The status of the worker in the organization at the highest level. If a given worker has multiple relationships with the organization, this is the status that arches over all those relationships",
      "type": "object",
      "properties": {
        "statusCode": {
          "$ref": "#/definitions/StatusCode"
        },
        "reasonCode": {
          "$ref": "#/definitions/ReasonCode"
        },
        "effectiveDate": {
          "description": "The effective date of the related entity. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "StatusCode": {
      "title": "StatusCode",
      "description": "The status of the work assignment, e.g. active, inactive",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "ReasonCode": {
      "title": "ReasonCode",
      "description": "The reason associated to the correlating status, e.g. new hire, rehire, termination, etc.",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "WorkerOnLeaveEventMeta": {
      "title": "WorkerOnLeaveEventMeta",
      "description": "An instance to capture the worker on leave event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.onLeave.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Meta": {
      "title": "Meta",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.onLeave",
          "type": "string",
          "default": "worker.onLeave"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workeronLeaveQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workeronLeaveQueryCriterion": {
      "title": "workeronLeaveQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "codeListType_v03": {
      "title": "codeListType_v03",
      "type": "object",
      "properties": {
        "codeListTitle": {
          "description": "Code list title",
          "type": "string"
        },
        "exclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "listItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeListItemType_v02"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "codeListItemType_v02": {
      "title": "codeListItemType_v02",
      "type": "object",
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "valueDescription": {
          "description": "Additional list item description",
          "type": "string"
        },
        "foreignKey": {
          "description": "Allows for filtering the code list",
          "type": "string"
        },
        "inactiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "defaultIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "LogicalOperator": {
      "title": "LogicalOperator",
      "description": "A logical operation",
      "type": "object",
      "properties": {
        "logicalOperatorCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "mutuallyExclusiveIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "mutuallyExclusiveLogicalOperatorCodes": {
          "description": "A list of mutually exclusive operator codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataEventContext": {
      "title": "DataEventContext",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringType": {
      "title": "stringType",
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "disallowItemType": {
      "title": "disallowItemType",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "A unique identifier of an object within the collection",
          "type": "string"
        }
      }
    },
    "maskingRuleType": {
      "title": "maskingRuleType",
      "type": "object",
      "properties": {
        "authorizationRequiredIndicator": {
          "type": "boolean"
        },
        "authorizationResourceID": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "helperMessageType": {
      "title": "helperMessageType",
      "description": "Helper text provided to the user when they take an action to affirm to be correct, true, or genuine.",
      "type": "object",
      "properties": {
        "messageTxt": {
          "description": "Message to present to the user.",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "metaDataType": {
      "title": "metaDataType",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[duration]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "valueSetType": {
      "title": "valueSetType",
      "description": "A reference to the codelist extended with values",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ValueSetMeta"
        },
        "valueSetListItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/valueSetItemType"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "ValueSetMeta": {
      "title": "ValueSetMeta",
      "type": "object",
      "properties": {
        "idValuePath": {
          "description": "Code value (typically a key field) of the code list item",
          "type": "string"
        },
        "itemDescriptionPath": {
          "description": "Short name field of the code list item",
          "type": "string"
        }
      }
    },
    "valueSetItemType": {
      "title": "valueSetItemType",
      "description": "The value set item type",
      "type": "object",
      "properties": {
        "idValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "itemDescription": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "defaultIndicator": {
          "description": "Indicates if the current value is a default (pre-selected)",
          "type": "boolean"
        }
      }
    },
    "objectType": {
      "title": "objectType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataTransform": {
      "title": "DataTransform",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workerStatus": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/worker/workerStatus/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/effectiveDate": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "stringCodeListType": {
      "title": "stringCodeListType",
      "type": "object",
      "properties": {
        "codeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "readOnly": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property.",
          "type": "string"
        },
        "minLength": {
          "description": "Indicates the minimum length required for a property.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "description": "Indicates the maximum length supported for a property",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "string"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "masking": {
          "$ref": "#/definitions/maskingRuleType"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greaterThan": {
          "description": "The value of the related property must be greater than the value of  all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lessThan": {
          "description": "The value of the related property must be less than the value of all the given properties in the array.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/metaDataType"
        },
        "valueSet": {
          "$ref": "#/definitions/valueSetType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "booleanType": {
      "title": "booleanType",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "True indicates that the property is marked read only in the given context",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "optional": {
          "description": "True indicates that this property does not need to be valued",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "hidden": {
          "description": "True indicates that the property is carried in the message - to and from the System of Record, but is not exposed in the UI",
          "type": "boolean"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "disallow": {
          "description": "Specified on a target property.  If the passed conditions are true then this property is disallowed and therefore, not presented to a user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disallowItemType"
          }
        },
        "shortLabelName": {
          "description": "Provides a client defined UI label for the property which is less than an average of 20 characters in length.",
          "type": "string"
        },
        "longLabelName": {
          "description": "Provides a client defined UI long label for the property",
          "type": "string"
        },
        "default": {
          "description": "Indicates the default value which should be populated by default",
          "type": "boolean"
        },
        "equals": {
          "description": "Provides 1 to many properties which the value of this property must be equal to.  If the property is equal to any of the value of the properties then the validation is successful.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "description": "List conditional dependencies of supported properties (readOnly, pattern, hidden, disallow etc.) of an attribute or an object. Dependencies can be defined using oneOf (OR) / allOf (AND) object. oneOf - successful if one of the conditions satisfies, allOf - successful if all the conditions satisfies. Refer API specification for dependencies context object syntax and rules. Dependencies context cannot be validated against context schema if dependencies is defined context JSON, because the dependencies JSON structure is dynamically defined for attributes and the not defined in the context schema. Attribute level properties and dependencies properties are mutually exclusive, example - readOnly property can be set either at attribute level or inside dependencies. If both hidden and disallow properties are set inside dependencies or at attribute level, hidden property takes precedence.",
          "type": "object"
        },
        "helperMessage": {
          "$ref": "#/definitions/helperMessageType"
        },
        "dataType": {
          "$ref": "#/definitions/DataType"
        },
        "dependencyLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "DataType": {
      "title": "DataType",
      "description": "Data type of the attribute",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "integer",
        "boolean",
        "object",
        "array",
        "null",
        "any",
        "string[date-time]",
        "string[date]",
        "string[time]",
        "string[regex]",
        "string[phone]",
        "string[uri]",
        "string[email]",
        "string[ip-address]",
        "string[ipv6]",
        "string[host-name]",
        "integer[regex]",
        "integer[utc-millisec]",
        "number[regex]",
        "number[utc-millisec]"
      ]
    },
    "WorkerRehireEvent": {
      "title": "WorkerRehireEvent",
      "description": "An instance to capture the worker rehire event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.rehire.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "description": "An event instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event2"
          }
        },
        "meta": {
          "$ref": "#/definitions/metaType_v02"
        },
        "confirmMessage": {
          "$ref": "#/definitions/confirmMessageType_v01"
        }
      }
    },
    "Event2": {
      "title": "Event2",
      "description": "An instance to capture the worker rehire event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      }
    },
    "Data2": {
      "title": "Data2",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/eventContextBase_v01"
        },
        "transform": {
          "$ref": "#/definitions/Transform2"
        },
        "output": {
          "$ref": "#/definitions/Output2"
        }
      }
    },
    "Transform2": {
      "title": "Transform2",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "worker": {
          "$ref": "#/definitions/WorkerTransform2"
        }
      }
    },
    "WorkerTransform2": {
      "title": "WorkerTransform2",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "person": {
          "$ref": "#/definitions/personType_v02"
        },
        "workerDates": {
          "$ref": "#/definitions/WorkerDatesTransform"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "businessCommunication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/workAssignmentTransformType_v02"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        }
      }
    },
    "Output2": {
      "title": "Output2",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput2"
        }
      }
    },
    "WorkerOutput2": {
      "title": "WorkerOutput2",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "person": {
          "$ref": "#/definitions/PersonOutput"
        },
        "workerDates": {
          "$ref": "#/definitions/WorkerDates"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "businessCommunication": {
          "$ref": "#/definitions/communicationType_v02"
        },
        "workAssignment": {
          "$ref": "#/definitions/workAssignmentType_v02"
        },
        "customFieldGroup": {
          "$ref": "#/definitions/customFieldContainerType_v02"
        }
      }
    },
    "WorkerDates": {
      "title": "WorkerDates",
      "description": "These dates are related to the highest level legal relationship that a person has with the organization. If a given worker has multiple relationships with the organization, these are the dates associated with the primary relationship.",
      "type": "object",
      "properties": {
        "originalHireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "rehireDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "adjustedServiceDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "acquisitionDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "retirementDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "WorkerTerminateEvent": {
      "title": "WorkerTerminateEvent",
      "description": "An instance to capture the worker termination event",
      "example": {
        "summary": "A sample file",
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.terminate.json"
      },
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event3"
          }
        },
        "meta": {
          "$ref": "#/definitions/metaType_v02"
        },
        "confirmMessage": {
          "$ref": "#/definitions/confirmMessageType_v01"
        }
      }
    },
    "Event3": {
      "title": "Event3",
      "description": "An instance to capture the worker termination event",
      "type": "object",
      "properties": {
        "eventID": {
          "description": "The unique identifier of the event instance. This is set by the system of record once an event is recorded as in progress or complete",
          "type": "string"
        },
        "serviceCategoryCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventNameCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventTitle": {
          "description": "The event title offers a way to describe a particular instance of an event at a level more granular than the event name, e.g. 2014 Annual Enrollment",
          "type": "string"
        },
        "eventSubTitle": {
          "description": "The event sub title provides event instance summary details, e.g. All Annual Enrollment elections become effective on January 1, 2014",
          "type": "string"
        },
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "priorityCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "recordDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "dueDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "originator": {
          "$ref": "#/definitions/originatorType_v02"
        },
        "actor": {
          "$ref": "#/definitions/actorType_v02"
        },
        "actAsParty": {
          "$ref": "#/definitions/ActAsParty"
        },
        "onBehalfOfParty": {
          "$ref": "#/definitions/OnBehalfOfParty"
        },
        "eTag": {
          "description": "The entity tag of the entity in the request",
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "data": {
          "$ref": "#/definitions/Data3"
        }
      }
    },
    "Data3": {
      "title": "Data3",
      "description": "Event Data",
      "type": "object",
      "properties": {
        "eventContext": {
          "$ref": "#/definitions/EventContext1"
        },
        "transform": {
          "$ref": "#/definitions/Transform3"
        },
        "output": {
          "$ref": "#/definitions/Output3"
        }
      }
    },
    "EventContext1": {
      "title": "EventContext1",
      "description": "Data which sets the context for the event.  That is, the keys which set context",
      "type": "object",
      "properties": {
        "contextExpressionID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "worker": {
          "$ref": "#/definitions/WorkerEventContext1"
        }
      }
    },
    "WorkerEventContext1": {
      "title": "WorkerEventContext1",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        }
      }
    },
    "Transform3": {
      "title": "Transform3",
      "description": "Data which is transformed as a result of the event",
      "type": "object",
      "properties": {
        "eventReasonCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/codeType_v02"
        },
        "effectiveDateTime": {
          "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date-time"
        },
        "notificationIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        },
        "worker": {
          "$ref": "#/definitions/WorkerTransform3"
        }
      }
    },
    "WorkerTransform3": {
      "title": "WorkerTransform3",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "workerDates": {
          "$ref": "#/definitions/WorkerDatesTransform2"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusType_v02"
        },
        "voluntaryIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "WorkerDatesTransform2": {
      "title": "WorkerDatesTransform2",
      "description": "These dates are related to the highest level legal relationship that a person has with the organization. If a given worker has multiple relationships with the organization, these are the dates associated with the primary relationship.",
      "type": "object",
      "properties": {
        "terminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        },
        "expectedTerminationDate": {
          "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Output3": {
      "title": "Output3",
      "description": "Result of the event",
      "type": "object",
      "properties": {
        "worker": {
          "$ref": "#/definitions/WorkerOutput3"
        }
      }
    },
    "WorkerOutput3": {
      "title": "WorkerOutput3",
      "description": "A worker is someone who performs duties and has responsibilities for an organization",
      "type": "object",
      "properties": {
        "associateOID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        },
        "workerID": {
          "$ref": "#/definitions/IDType_v02"
        },
        "workerDates": {
          "$ref": "#/definitions/WorkerDatesOutput"
        },
        "workerStatus": {
          "$ref": "#/definitions/statusReasonType_v02"
        },
        "voluntaryIndicator": {
          "description": "Boolean expression",
          "type": "boolean"
        }
      }
    },
    "WorkerTerminateEventMeta": {
      "title": "WorkerTerminateEventMeta",
      "description": "An instance to capture the worker termination event - Meta",
      "example": {
        "externalValue": "https://s3.amazonaws.com/es-schema-dev-portal-iat/schema/events.hr.v1.worker.terminate.meta.json"
      },
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta1"
        }
      }
    },
    "Meta1": {
      "title": "Meta1",
      "description": "Event meta data",
      "type": "object",
      "properties": {
        "/serviceCategoryCode/codeValue": {
          "description": "The service domain, e.g HR, Payroll, Benefits, etc. This field is always present and valued based on a standard codelist.",
          "example": "hr",
          "type": "string",
          "default": "hr"
        },
        "/eventNameCode/codeValue": {
          "description": "This is the canonical name of the event, e.g. dependent.add, worker.hire. This field is always present and valued based on a standard codelist.",
          "example": "worker.terminate",
          "type": "string",
          "default": "worker.terminate"
        },
        "queryCriteria": {
          "description": "A collection of query criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workerterminateQueryCriterion"
          }
        },
        "/data/eventContext": {
          "$ref": "#/definitions/DataEventContext1"
        },
        "/data/transforms": {
          "description": "A collection of transform rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransform1"
          }
        }
      },
      "required": [
        "/serviceCategoryCode/codeValue",
        "/eventNameCode/codeValue"
      ]
    },
    "workerterminateQueryCriterion": {
      "title": "workerterminateQueryCriterion",
      "description": "A single query parameter",
      "type": "object",
      "properties": {
        "queryOptionCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "obligationCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "queryOptionTypeCode": {
          "description": "A simple (string) code.  Can have a code list reference",
          "type": "string"
        },
        "defaultNumberValue": {
          "description": "The default number value",
          "type": "number",
          "format": "double"
        },
        "defaultStringValue": {
          "description": "The default string value",
          "type": "string"
        },
        "resourcePathMax": {
          "description": "Maximum number of resource paths supported",
          "type": "integer",
          "format": "int32"
        },
        "pattern": {
          "description": "Indicates a regular expression on the required pattern for the value",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A collection of acceptable resource paths to pass to the query option",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedResourcePaths": {
          "description": "A collection of resource paths which may not be passed to the query option.  An example use of this is where you allow all paths except 1 or 2.  You would want to only specify those which are excluded",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryValueCodeList": {
          "$ref": "#/definitions/codeListType_v03"
        },
        "logicalOperators": {
          "description": "A collection of logical operators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalOperator"
          }
        },
        "itemID": {
          "description": "The simple (string) identifier of an object",
          "type": "string"
        }
      }
    },
    "DataEventContext1": {
      "title": "DataEventContext1",
      "description": "Validation rules for the event context",
      "type": "object",
      "properties": {
        "/contextExpressionID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/associateOID": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerID": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workerID/idValue": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerID/schemeCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/worker/workerID/schemeCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerID/schemeCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerID/schemeCode/longName": {
          "$ref": "#/definitions/stringType"
        }
      }
    },
    "DataTransform1": {
      "title": "DataTransform1",
      "type": "object",
      "properties": {
        "itemID": {
          "description": "The unique identifier of the collection.",
          "type": "string"
        },
        "/eventReasonCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventReasonCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventReasonCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/eventStatusCode/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/eventStatusCode/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/effectiveDateTime": {
          "$ref": "#/definitions/stringType"
        },
        "/notificationIndicator": {
          "$ref": "#/definitions/booleanType"
        },
        "/worker": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workerDates": {
          "$ref": "#/definitions/objectType"
        },
        "/worker/workerDates/terminationDate": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerDates/expectedTerminationDate": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus": {
          "$ref": "#/definitions/stringCodeListType"
        },
        "/worker/workerStatus/codeValue": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/shortName": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/longName": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/workerStatus/effectiveDate": {
          "$ref": "#/definitions/stringType"
        },
        "/worker/voluntaryIndicator": {
          "$ref": "#/definitions/booleanType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Hire Worker",
      "description": "The worker.hire event indicates the creation of a work agreement between a person and an employer for the first time EVER. Worker.Hire always results in a primary work assignment. Worker.hire may result in a worker status of either 'Active' or 'Pending' depending on whether or not the Worker.Start event is supported by the system of record."
    },
    {
      "name": "Worker Starts",
      "description": "The worker.start event indicates that the worker has actually shown up for work for the first time EVER. This is conveyed via a worker status change from 'Pending' to 'Active' and the valuing of the actualStartDate property."
    },
    {
      "name": "Worker On Leave",
      "description": "The worker.on-leave event indicates that the worker has started leave, and that the leave crosses all work assignments. This is conveyed via a worker status change to 'On Leave'."
    },
    {
      "name": "Rehire Worker",
      "description": "Worker rehire management events."
    },
    {
      "name": "Terminate Worker",
      "description": "The worker.terminate event indicates that the worker has been terminated at the highest level, across all work assignments. This is conveyed via a worker status change to 'Terminated'. This event may be refined to explain the reason for the termination via the event reason code. For example, the communication that a worker has retired and no longer works for the employer in any capacity would be conveyed as a worker status of 'Terminated' and an event reason code of 'Retired'."
    }
  ]
}