{
  "swagger": "2.0",
  "info": {
    "version": "1001.0.0",
    "title": "Jira Software Cloud API",
    "description": "Jira Software Cloud REST API documentation",
    "contact": {
      "url": "https://getsupport.atlassian.com"
    }
  },
  "host": "example.com",
  "basePath": "//your-domain.atlassian.net/",
  "securityDefinitions": {
    "auth": {
      "type": "basic"
    }
  },
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/rest/agile/1.0/backlog/issue": {
      "post": {
        "description": "Move issues to the backlog.  \nThis operation is equivalent to remove future and active sprints from a given set of issues. At most 50 issues may be moved at once.",
        "summary": "Move issues to backlog",
        "tags": [
          "Backlog"
        ],
        "operationId": "RestAgile10BacklogIssuePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues.",
            "schema": {}
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/backlog/{boardId}/issue": {
      "post": {
        "description": "Move issues to the backlog of a particular board (if they are already on that board).  \nThis operation is equivalent to remove future and active sprints from a given set of issues if the board has sprints If the board does not have sprints this will put the issues back into the backlog from the board. At most 50 issues may be moved at once.",
        "summary": "Move issues to backlog for board",
        "tags": [
          "Backlog"
        ],
        "operationId": "RestAgile10BacklogIssueByBoardIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest1"
            }
          }
        ],
        "responses": {
          "207": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues.",
            "schema": {}
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board": {
      "get": {
        "description": "Returns all boards. This only includes boards that the user has permission to view.",
        "summary": "Get all boards",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of boards to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to boards of the specified types. Valid values: scrum, kanban, simple."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to boards that match or partially match the specified name."
          },
          {
            "name": "projectKeyOrId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to boards that are relevant to a project. Relevance means that the jql filter defined in board contains a reference to a project."
          },
          {
            "name": "accountIdLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "userkeyLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "usernameLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "projectLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "includePrivate",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Appends private boards to the end of the list. The name and type fields are excluded for security reasons."
          },
          {
            "name": "negateLocationFiltering",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If set to true, negate filters used for querying by location. By default false."
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Ordering of the results by a given field. If not provided, values will not be sorted. Valid values: name."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "List of fields to expand for each board. Valid values: admins, permissions."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested boards, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":84,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\"},{\"id\":92,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92\",\"name\":\"kanban board\",\"type\":\"kanban\"}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not have valid license.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Creates a new board. Board name, type and filter ID is required.\n\n*   `name` \\- Must be less than 255 characters.\n*   `type` \\- Valid values: scrum, kanban\n*   `filterId` \\- ID of a filter that the user has permissions to view. Note, if the user does not have the 'Create shared objects' permission and tries to create a shared board, a private board will be created instead (remember that board sharing depends on the filter sharing).\n*   `location` \\- The container that the board will be located in. `location` must include the `type` property (Valid values: project, user). If choosing 'project', then a project must be specified by a `projectKeyOrId` property in `location`. If choosing 'user', the current user is chosen by default. The `projectKeyOrId` property should not be provided.\n\nNote:\n\n*   If you want to create a new project with an associated board, use the [Jira platform REST API](https://docs.atlassian.com/jira/REST/latest). For more information, see the [Create project](#api-api-<ver>-project-post) method. The `projectTypeKey` for software boards must be 'software' and the `projectTemplateKey` must be either `com.pyxis.greenhopper.jira:gh-kanban-template` or `com.pyxis.greenhopper.jira:gh-scrum-template`.\n*   You can create a filter using the [Jira REST API](https://docs.atlassian.com/jira/REST/latest). For more information, see the [Create filter](#api-api-<ver>-filter-post) method.\n*   If you do not ORDER BY the Rank field for the filter of your board, you will not be able to reorder issues on the board.",
        "summary": "Create board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the created board.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":84,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}": {
      "get": {
        "description": "Returns the board for the given board ID. This board will only be returned if the user has permission to view it. Admins without the view permission will see the board as a private one, so will see only a subset of the board's data (board location for instance).",
        "summary": "Get board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the requested board."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested board.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":84,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\",\"location\":{\"projectId\":10040,\"userId\":10040,\"userAccountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Example Project\",\"projectName\":\"Example Project\",\"projectKey\":\"Example Project Key\",\"projectTypeKey\":\"KEY\",\"name\":\"Example Project\"}}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes the board. Admin without the view permission can still remove the board.",
        "summary": "Delete board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardByBoardIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the board to be deleted"
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the board has been successfully removed.",
            "headers": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license, or when the user does not have the permission to delete the board. The user has to be a Jira Administrator or a board administrator to remove the board.",
            "schema": {}
          },
          "404": {
            "description": "Returned if a board with the given ID does not exist or the user does not have the permission to view the board.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/backlog": {
      "get": {
        "description": "Returns all issues from the board's backlog, for the given board ID. This only includes issues that the user has permission to view. The backlog contains incomplete issues that are not assigned to any future or active sprint. Note, if the user does not have permission to view the board, no issues will be returned at all. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues for backlog",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardBacklogByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that has the backlog containing the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter is currently not used."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/configuration": {
      "get": {
        "description": "Get the board configuration. The response contains the following fields:\n\n*   `id` \\- ID of the board.\n*   `name` \\- Name of the board.\n*   `filter` \\- Reference to the filter used by the given board.\n*   `location` \\- Reference to the container that the board is located in. Includes the container type (Valid values: project, user).\n*   `subQuery` (Kanban only) - JQL subquery used by the given board.\n*   `columnConfig` \\- The column configuration lists the columns for the board, in the order defined in the column configuration. For each column, it shows the issue status mapping as well as the constraint type (Valid values: none, issueCount, issueCountExclSubs) for the min/max number of issues. Note, the last column with statuses mapped to it is treated as the \"Done\" column, which means that issues in that column will be marked as already completed.\n*   `estimation` (Scrum only) - Contains information about type of estimation used for the board. Valid values: none, issueCount, field. If the estimation type is \"field\", the ID and display name of the field used for estimation is also returned. Note, estimates for an issue can be updated by a PUT /rest/api/~ver~/issue/{issueIdOrKey} request, however the fields must be on the screen. \"timeoriginalestimate\" field will never be on the screen, so in order to update it \"originalEstimate\" in \"timetracking\" field should be updated.\n*   `ranking` \\- Contains information about custom field used for ranking in the given board.",
        "summary": "Get configuration",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardConfigurationByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board for which configuration is requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the configuration of the board for given boardId.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardConfigurationResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":10000,\"name\":\"Board\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84/config\",\"location\":{\"type\":\"project\",\"key\":\"PROJ\",\"id\":\"10010\",\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/10010\",\"name\":\"name\"},\"filter\":{\"id\":\"1001\",\"self\":\"http://your-domain.atlassian.net/filter/1001\"},\"columnConfig\":{\"columns\":[{\"name\":\"To Do\",\"statuses\":[{\"id\":\"1\",\"self\":\"http://your-domain.atlassian.net/status/1\"},{\"id\":\"4\",\"self\":\"http://your-domain.atlassian.net/status/4\"}]},{\"name\":\"In progress\",\"statuses\":[{\"id\":\"3\",\"self\":\"http://your-domain.atlassian.net/status/3\"}],\"min\":2,\"max\":4},{\"name\":\"Done\",\"statuses\":[{\"id\":\"5\",\"self\":\"http://your-domain.atlassian.net/status/5\"}]}],\"constraintType\":\"issueCount\"},\"estimation\":{\"type\":\"field\",\"field\":{\"fieldId\":\"customfield_10002\",\"displayName\":\"Story Points\"}},\"ranking\":{\"rankCustomFieldId\":10020}}"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user cannot view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/epic": {
      "get": {
        "description": "Returns all epics from the board, for the given board ID. This only includes epics that the user has permission to view. Note, if the user does not have permission to view the board, no epics will be returned at all.",
        "summary": "Get epics",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardEpicByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested epics."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned epics. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of epics to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "done",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to epics that are either done or not done. Valid values: true, false."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested epics, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/13\",\"name\":\"epic 2\",\"summary\":\"epic 2 summary\",\"color\":{\"key\":\"color_2\"},\"done\":false}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/epic/none/issue": {
      "get": {
        "description": "Returns all issues that do not belong to any epic on a board, for a given board ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues without epic",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardEpicNoneIssueByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/epic/{epicId}/issue": {
      "get": {
        "description": "Returns all issues that belong to an epic on the board, for the given epic ID and the board ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues for epic",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardEpicIssueByBoardIdAndEpicIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested issues."
          },
          {
            "name": "epicId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the epic that contains the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/features": {
      "get": {
        "description": "Get features for board",
        "summary": "Get features for board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardFeaturesByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardFeaturesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "description": "Toggle features",
        "summary": "Toggle features",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardFeaturesByBoardIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardFeaturesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardFeaturesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/issue": {
      "get": {
        "description": "Returns all issues from a board, for a given board ID. This only includes issues that the user has permission to view. An issue belongs to the board if its status is mapped to the board's column. Epic issues do not belongs to the scrum boards. Note, if the user does not have permission to view the board, no issues will be returned at all. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues for board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardIssueByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This parameter is currently not used."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Move issues from the backog to the board (if they are already in the backlog of that board).  \nThis operation either moves an issue(s) onto a board from the backlog (by adding it to the issueList for the board) Or transitions the issue(s) to the first column for a kanban board with backlog. At most 50 issues may be moved at once.",
        "summary": "Move issues to board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardIssueByBoardIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest1"
            }
          }
        ],
        "responses": {
          "207": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/project": {
      "get": {
        "description": "Returns all projects that are associated with the board, for the given board ID. If the user does not have permission to view the board, no projects will be returned at all. Returned projects are ordered by the name.\n\nA project is associated with a board if the board filter contains reference the project or there is an issue from the project that belongs to the board.\n\nThe board filter contains reference the project only if JQL query guarantees that returned issues will be returned from the project set defined in JQL. For instance the query `project in (ABC, BCD) AND reporter = admin` have reference to ABC and BCD projects but query `project in (ABC, BCD) OR reporter = admin` doesn't have reference to any project.\n\nAn issue belongs to the board if its status is mapped to the board's column. Epic issues do not belongs to the scrum boards.",
        "summary": "Get projects",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardProjectByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains returned projects."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned projects. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of projects to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the board's projects, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":10,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/ABC\",\"id\":\"10001\",\"key\":\"ABC\",\"name\":\"Alphabetical\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to access it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/project/full": {
      "get": {
        "description": "Returns all projects that are statically associated with the board, for the given board ID. Returned projects are ordered by the name.\n\nA project is associated with a board if the board filter contains reference the project.\n\nThe board filter contains reference the project only if JQL query guarantees that returned issues will be returned from the project set defined in JQL. For instance the query `project in (ABC, BCD) AND reporter = admin` have reference to ABC and BCD projects but query `project in (ABC, BCD) OR reporter = admin` doesn't have reference to any project.",
        "summary": "Get projects full",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardProjectFullByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains returned projects."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the board's projects, at the specified page of the results.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to access it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/properties": {
      "get": {
        "description": "Returns the keys of all properties for the board identified by the id. The user who retrieves the property keys is required to have permissions to view the board.",
        "summary": "Get board property keys",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardPropertiesByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the board from which property keys will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the board with given id exists.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "com.atlassian.jira.rest.v2.entity.property.EntityPropertyResourceExamples#GET_PROPERTIES_KEYS_RESPONSE_200"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/properties/{propertyKey}": {
      "get": {
        "description": "Returns the value of the property with a given key from the board identified by the provided id. The user who retrieves the property is required to have permissions to view the board.",
        "summary": "Get board property",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardPropertiesByBoardIdAndPropertyKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the board from which the property will be returned."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the property to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the board exists and the property was found.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "com.atlassian.jira.rest.v2.entity.property.EntityPropertyResourceExamples#GET_PROPERTY_RESPONSE_200"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "description": "Sets the value of the specified board's property.\n\nYou can use this resource to store a custom data against the board identified by the id. The user who stores the data is required to have permissions to modify the board.",
        "summary": "Set board property",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardPropertiesByBoardIdAndPropertyKeyPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the board on which the property will be set."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the board's property. The maximum length of the key is 255 bytes."
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the board property is successfully updated.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board with given id does not exist or the user doesn't have permissions to see it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Removes the property from the board identified by the id. Ths user removing the property is required to have permissions to modify the board.",
        "summary": "Delete board property",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardPropertiesByBoardIdAndPropertyKeyDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the id of the board from which the property will be removed."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the property to remove."
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the board property was removed successfully.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/quickfilter": {
      "get": {
        "description": "Returns all quick filters from a board, for a given board ID.",
        "summary": "Get all quick filters",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardQuickfilterByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested quick filters."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned quick filters. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of sprints to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested quick filters, at the specified page of the results. Quick filters will be ordered first by position.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardQuickfilterResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0},{\"id\":2,\"boardId\":1,\"name\":\"Tasks\",\"jql\":\"issueType = task\",\"description\":\"Issues of type task\",\"position\":0}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/quickfilter/{quickFilterId}": {
      "get": {
        "description": "Returns the quick filter for a given quick filter ID. The quick filter will only be returned if the user can view the board that the quick filter belongs to.",
        "summary": "Get quick filter",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardQuickfilterByBoardIdAndQuickFilterIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "quickFilterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the requested quick filter."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested quick filter.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardQuickfilterResponse1"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0}"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board with given id does not exist or if the quick filter with given id is not found or the user doesn't have permissions to see it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/reports": {
      "get": {
        "description": "Get reports for board",
        "summary": "Get reports for board",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardReportsByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardReportsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/sprint": {
      "get": {
        "description": "Returns all sprints from a board, for a given board ID. This only includes sprints that the user has permission to view.",
        "summary": "Get all sprints",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardSprintByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested sprints."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned sprints. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of sprints to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to sprints in specified states. Valid values: future, active, closed. You can define multiple states separated by commas, e.g. state=active,closed"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested sprints, at the specified page of the results. Sprints will be ordered first by state (i.e. closed, active, future) then by their position in the backlog.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"},{\"id\":72,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/73\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/sprint/{sprintId}/issue": {
      "get": {
        "description": "Get all issues you have access to that belong to the sprint from the board. Issue returned from this resource contains additional fields like: sprint, closedSprints, flagged and epic. Issues are returned ordered by rank. JQL order has higher priority than default rank.",
        "summary": "Get issues for sprint",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardSprintIssueByBoardIdAndSprintIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains requested issues."
          },
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint that contains requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/board/{boardId}/version": {
      "get": {
        "description": "Returns all versions from a board, for a given board ID. This only includes versions that the user has permission to view. Note, if the user does not have permission to view the board, no versions will be returned at all. Returned versions are ordered by the name of the project from which they belong and then by sequence defined by user.",
        "summary": "Get all versions",
        "tags": [
          "Board"
        ],
        "operationId": "RestAgile10BoardVersionByBoardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board that contains the requested versions."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned versions. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of versions to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "released",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results to versions that are either released or unreleased. Valid values: true, false."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested versions, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"self\":\"http://your-domain.atlassian.net/version/10000\",\"id\":10000,\"projectId\":10000,\"name\":\"Version 1\",\"description\":\"A first version\",\"archived\":false,\"released\":true,\"releaseDate\":\"2015-04-20T01:02:00.000+10:00\"},{\"self\":\"http://your-domain.atlassian.net/version/10010\",\"id\":10010,\"projectId\":10000,\"name\":\"Next Version\",\"description\":\"Minor Bugfix version\",\"archived\":false,\"released\":false}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/epic/none/issue": {
      "get": {
        "description": "Returns all issues that do not belong to any epic. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues without epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicNoneIssueGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Removes issues from epics. The user needs to have the edit issue permission for all issue they want to remove from epics. The maximum number of issues that can be moved in one operation is 50.",
        "summary": "Remove issues from epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicNoneIssuePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to assign issues.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/epic/{epicIdOrKey}": {
      "get": {
        "description": "Returns the epic for a given epic ID. This epic will only be returned if the user has permission to view it.",
        "summary": "Get epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicByEpicIdOrKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id or key of the requested epic."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested epic.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true}"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Performs a partial update of the epic. A partial update means that fields not present in the request JSON will not be updated. Valid values for color are `color_1` to `color_9`.",
        "summary": "Partially update epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicByEpicIdOrKeyPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id or key of the epic to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10EpicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated epic",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or edit issue permission.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/epic/{epicIdOrKey}/issue": {
      "get": {
        "description": "Returns all issues that belong to the epic, for the given epic ID. This only includes issues that the user has permission to view. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. By default, the returned issues are ordered by rank.",
        "summary": "Get issues for epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicIssueByEpicIdOrKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id or key of the epic that contains the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Moves issues to an epic, for a given epic id. Issues can be only in a single epic at the same time. That means that already assigned issues to an epic, will not be assigned to the previous epic anymore. The user needs to have the edit issue permission for all issue they want to move and to the epic. The maximum number of issues that can be moved in one operation is 50.",
        "summary": "Move issues to epic",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicIssueByEpicIdOrKeyPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id or key of the epic that you want to assign issues to."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have edit issue permission for all issues to assign or for the epic.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/epic/{epicIdOrKey}/rank": {
      "put": {
        "description": "Moves (ranks) an epic before or after a given epic.\n\nIf rankCustomFieldId is not defined, the default rank field will be used.",
        "summary": "Rank epics",
        "tags": [
          "Epic"
        ],
        "operationId": "RestAgile10EpicRankByEpicIdOrKeyPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id or key of the epic to rank."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "bean which contains the information where the given epic should be ranked.",
            "schema": {
              "$ref": "#/definitions/RestAgile10EpicRankRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to rank. To rank issues user have to have schedule issue permission for epics that they want to rank.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the given epics in the path parameter or the request body do not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/issue/rank": {
      "put": {
        "description": "Moves (ranks) issues before or after a given issue. At most 50 issues may be ranked at once.\n\nThis operation may fail for some issues, although this will be rare. In that case the 207 status code is returned for the whole response and detailed information regarding each issue is available in the response body.\n\nIf rankCustomFieldId is not defined, the default rank field will be used.",
        "summary": "Rank issues",
        "tags": [
          "Issue"
        ],
        "operationId": "RestAgile10IssueRankPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "bean which contains list of issues to rank and information where it should be ranked.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest1"
            }
          }
        ],
        "responses": {
          "207": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to rank. To rank issues user has to have schedule issue permission for issues that they want to rank.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/issue/{issueIdOrKey}": {
      "get": {
        "description": "Returns a single issue, for a given issue ID or issue key. Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.",
        "summary": "Get issue",
        "tags": [
          "Issue"
        ],
        "operationId": "RestAgile10IssueByIssueIdOrKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID or key of the requested issue."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          },
          {
            "name": "updateHistory",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "A boolean indicating whether the issue retrieved by this method should be added to the current user's issue history"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issue.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned in these cases:\n\n*   the issue does not exist\n*   the user does not have permission to view issue",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/issue/{issueIdOrKey}/estimation": {
      "get": {
        "description": "Returns the estimation of the issue and a fieldId of the field that is used for it. `boardId` param is required. This param determines which field will be updated on a issue.\n\nOriginal time internally stores and returns the estimation as a number of seconds.\n\nThe field used for estimation on the given board can be obtained from [board configuration resource](#agile/1.0/board-getConfiguration). More information about the field are returned by [edit meta resource](#api-api-<ver>-issue-getEditIssueMeta) or [field resource](#api-api-<ver>-field-get).",
        "summary": "Get issue estimation for board",
        "tags": [
          "Issue"
        ],
        "operationId": "RestAgile10IssueEstimationByIssueIdOrKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID or key of the requested issue."
          },
          {
            "name": "boardId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board required to determine which field is used for estimation."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the estimation of the issue and a fieldId of the field that is used for it.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"fieldId\":\"customfield_12532\",\"value\":\"8.0\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId was not provided, field does not exists or value was in wrong format.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to edit issue.",
            "schema": {}
          },
          "404": {
            "description": "Returned in these cases:\n\n*   the issue does not exist\n*   the user does not have permission to view issue\n*   the board does not exist\n*   the user does not have permission to view board\n*   the issue does not belong to the board",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "description": "Updates the estimation of the issue. boardId param is required. This param determines which field will be updated on a issue.\n\nNote that this resource changes the estimation field of the issue regardless of appearance the field on the screen.\n\nOriginal time tracking estimation field accepts estimation in formats like \"1w\", \"2d\", \"3h\", \"20m\" or number which represent number of minutes. However, internally the field stores and returns the estimation as a number of seconds.\n\nThe field used for estimation on the given board can be obtained from [board configuration resource](#agile/1.0/board-getConfiguration). More information about the field are returned by [edit meta resource](#api-api-<ver>-issue-issueIdOrKey-editmeta-get) or [field resource](#api-api-<ver>-field-get).",
        "summary": "Estimate issue for board",
        "tags": [
          "Issue"
        ],
        "operationId": "RestAgile10IssueEstimationByIssueIdOrKeyPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID or key of the requested issue."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "bean that contains value of a new estimation.",
            "schema": {
              "$ref": "#/definitions/RestAgile10IssueEstimationRequest"
            }
          },
          {
            "name": "boardId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the board required to determine which field is used for estimation."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the estimation of the issue and a fieldId of the field that is used for it.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"fieldId\":\"customfield_12532\",\"value\":\"8.0\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the boardId was not provided, field does not exists or value was in wrong format.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to edit issue.",
            "schema": {}
          },
          "404": {
            "description": "Returned in these cases:\n\n*   the issue does not exist\n*   the user does not have permission to view issue\n*   the board does not exist\n*   the user does not have permission to view board\n*   the issue does not belong to the board",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint": {
      "post": {
        "description": "Creates a future sprint. Sprint name and origin board id are required. Start date, end date, and goal are optional.\n\nNote, the sprint name is trimmed.",
        "summary": "Create sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10SprintRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created sprint",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"future\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint/{sprintId}": {
      "get": {
        "description": "Returns the sprint for a given sprint ID. The sprint will only be returned if the user can view the board that the sprint was created on, or view at least one of the issues in the sprint.",
        "summary": "Get sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintBySprintIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the requested sprint."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested sprint.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Performs a partial update of a sprint. A partial update means that fields not present in the request JSON will not be updated.\n\nNotes:\n\n*   Sprints that are in a closed state cannot be updated.\n*   A sprint can be started by updating the state to 'active'. This requires the sprint to be in the 'future' state and have a startDate and endDate set.\n*   A sprint can be completed by updating the state to 'closed'. This action requires the sprint to be in the 'active' state. This sets the completeDate to the time of the request.\n*   Other changes to state are not allowed.\n*   The completeDate field cannot be updated manually.",
        "summary": "Partially update sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintBySprintIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10SprintRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sprint",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint does not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "description": "Performs a full update of a sprint. A full update means that the result will be exactly the same as the request body. Any fields not present in the request JSON will be set to null.\n\nNotes:\n\n*   Sprints that are in a closed state cannot be updated.\n*   A sprint can be started by updating the state to 'active'. This requires the sprint to be in the 'future' state and have a startDate and endDate set.\n*   A sprint can be completed by updating the state to 'closed'. This action requires the sprint to be in the 'active' state. This sets the completeDate to the time of the request.\n*   Other changes to state are not allowed.\n*   The completeDate field cannot be updated manually.",
        "summary": "Update sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintBySprintIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "the ID of the sprint to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10SprintRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sprint",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint does not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes a sprint. Once a sprint is deleted, all open issues in the sprint will be moved to the backlog.",
        "summary": "Delete sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintBySprintIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the sprint was deleted successfully",
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to delete sprints.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint does not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint/{sprintId}/issue": {
      "get": {
        "description": "Returns all issues in a sprint, for a given sprint ID. This only includes issues that the user has permission to view. By default, the returned issues are ordered by rank.",
        "summary": "Get issues for sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintIssueBySprintIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint that contains the requested issues."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details."
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated."
          },
          {
            "name": "jql",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.  \nNote that `username` and `userkey` have been deprecated as search terms for this parameter. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountId` instead."
          },
          {
            "name": "validateQuery",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Specifies whether to validate the JQL query or not. Default: true."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A comma-separated list of the parameters to expand."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "schema": {
              "$ref": "#/definitions/RestAgile10BoardResponse"
            },
            "examples": {
              "application/json": {
                "value": "{\"expand\":\"\",\"id\":\"10001\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"http://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"http://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"http://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"http://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\"},\"comment\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2018-12-17T05:39:50.551+0000\",\"updated\":\"2018-12-17T05:39:50.551+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/user?accountId=99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"accountId\":\"99:27935d01-92a7-4687-8272-a9b8d3b2ae2e\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2018-12-17T05:39:50.560+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-12-17T05:39:50.560+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license.",
            "schema": {}
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "post": {
        "description": "Moves issues to a sprint, for a given sprint ID. Issues can only be moved to open or active sprints. The maximum number of issues that can be moved in one operation is 50.",
        "summary": "Move issues to sprint and rank",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintIssueBySprintIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint that you want to assign issues to."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10BacklogIssueRequest1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the request is invalid.",
            "schema": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to assign issues.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint does not exist or the user does not have permission to view it.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint/{sprintId}/properties": {
      "get": {
        "description": "Returns the keys of all properties for the sprint identified by the id. The user who retrieves the property keys is required to have permissions to view the sprint.",
        "summary": "Get properties keys",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintPropertiesBySprintIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the sprint from which property keys will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the sprint with given id exists.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the calling user does not have permission to view the sprint.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint/{sprintId}/properties/{propertyKey}": {
      "get": {
        "description": "Returns the value of the property with a given key from the sprint identified by the provided id. The user who retrieves the property is required to have permissions to view the sprint.",
        "summary": "Get property",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintPropertiesBySprintIdAndPropertyKeyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the sprint from which the property will be returned."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the property to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the sprint exists and the property was found.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the calling user does not have permission to view the sprint.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint with a given id does not exist or if the property with given key is not found.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "description": "Sets the value of the specified sprint's property.\n\nYou can use this resource to store a custom data against the sprint identified by the id. The user who stores the data is required to have permissions to modify the sprint.",
        "summary": "Set property",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintPropertiesBySprintIdAndPropertyKeyPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the sprint on which the property will be set."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the sprint's property. The maximum length of the key is 255 bytes."
          }
        ],
        "responses": {
          "201": {
            "description": "Returned if the sprint property is successfully updated.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the calling user does not have permission to edit the sprint",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Removes the property from the sprint identified by the id. Ths user removing the property is required to have permissions to modify the sprint.",
        "summary": "Delete property",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintPropertiesBySprintIdAndPropertyKeyDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the ID of the sprint from which the property will be removed."
          },
          {
            "name": "propertyKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the key of the property to remove."
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the sprint property was removed successfully.",
            "headers": {}
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number).",
            "schema": {}
          },
          "401": {
            "description": "Returned if the calling user is not authenticated.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the calling user does not have permission to modify the sprint.",
            "schema": {}
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist or if the property with given key is not found.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/agile/1.0/sprint/{sprintId}/swap": {
      "post": {
        "description": "Swap the position of the sprint with the second sprint.",
        "summary": "Swap sprint",
        "tags": [
          "Sprint"
        ],
        "operationId": "RestAgile10SprintSwapBySprintIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the sprint to swap."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestAgile10SprintSwapRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the sprint swap was performed successfully",
            "headers": {}
          },
          "401": {
            "description": "Returned if the user is not logged in.",
            "schema": {}
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to at least one sprint.",
            "schema": {}
          },
          "404": {
            "description": "Returned if at least one sprint does not exist or user does not have permission to view to at least one sprint.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/devinfo/0.10/bulk": {
      "post": {
        "description": "Stores development information provided in the request to make it available when viewing issues in JIRA. Existing repository and entity data for the same ID will be replaced if the updateSequenceId of existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and/or maintenance times.",
        "summary": "Store development information",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010BulkPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Request object, which contains development information",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010BulkRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010BulkResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no repositories or development information entities were provided, or more than 5 properties were submitted, or there are one or more properties with leading underscore '_' symbol in their keys.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'WRITE' scope",
            "schema": {}
          },
          "413": {
            "description": "Data is too large. Submit fewer devinfo entities in each payload.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/devinfo/0.10/repository/{repositoryId}": {
      "get": {
        "description": "For the specified repository ID, retrieves the repository and the most recent 400 development information entities. The result will be what is currently stored, ignoring any pending updates or deletes.",
        "summary": "Get repository",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010RepositoryByRepositoryIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of repository to fetch"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          }
        ],
        "responses": {
          "200": {
            "description": "The repository data currently stored for the given ID.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010RepositoryResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'READ' scope",
            "schema": {}
          },
          "404": {
            "description": "No data found for the given repository ID.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes the repository data stored by the given ID and all related development information entities. Deletion is performed asynchronously.",
        "summary": "Delete repository",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010RepositoryByRepositoryIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of repository to delete"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request has been accepted. Data will eventually be removed from Jira if it exists.",
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/devinfo/0.10/bulkByProperties": {
      "delete": {
        "description": "Deletes development information entities which have all the provided properties. Entities will be deleted that match ALL of the properties (i.e. treated as an AND). For example if request is DELETE bulk?accountId=123&projectId=ABC entities which have properties accountId=123 and projectId=ABC will be deleted. Special property '\\_updateSequenceId' can be used to delete all entities with updateSequenceId less or equal than the value specified. In addition to the optional '\\_updateSequenceId', one or more query params must be supplied to specify properties to delete by. Deletion is performed asynchronously: specified entities will eventually be removed from Jira.",
        "summary": "Delete development information by properties",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010BulkByPropertiesDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.",
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no query properties are specified. If '_updateSequenceId' is not a numeric value. If multiple values of the same property key are specified. Deleting data for many property values, for the same property key, requires multiple requests to this resource.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/devinfo/0.10/existsByProperties": {
      "get": {
        "description": "Checks if development information which have all the provided properties exists. For example, if request is GET existsByProperties?accountId=123&projectId=ABC then result will be positive only if there is at least one entity or repository with both properties accountId=123 and projectId=ABC. Special property '\\_updateSequenceId' can be used to filter all entities with updateSequenceId less or equal than the value specified. In addition to the optional '\\_updateSequenceId', one or more query params must be supplied to specify properties to search by.",
        "summary": "Check if data exists for the supplied properties",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010ExistsByPropertiesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional property. Filters out entities and repositories which have updateSequenceId greater than specified."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns whether data exists for the specified properties.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010ExistsByPropertiesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no query properties are specified. If '_updateSequenceId' is not a numeric value. If multiple values of the same property key are specified.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'READ' scope",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/devinfo/0.10/repository/{repositoryId}/{entityType}/{entityId}": {
      "delete": {
        "description": "Deletes particular development information entity. Deletion is performed asynchronously.",
        "summary": "Delete development information entity",
        "tags": [
          "Development Information"
        ],
        "operationId": "RestDevinfo010RepositoryEntityIdByRepositoryIdAndEntityTypeDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "enum": [
              "commit",
              "branch",
              "pull_request"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the provider app installed in Jira. If the JWT token corresponds to an app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request has been accepted. Data will eventually be removed from Jira if it exists.",
            "headers": {}
          },
          "400": {
            "description": "Wrong entity type specified",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/RestDevinfo010Bulk400Error"
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/featureflags/0.1/bulk": {
      "post": {
        "description": "Update / insert Feature Flag data. Feature Flags are identified by their ID, and existing Feature Flag data for the same ID will be replaced if it exists and the updateSequenceId of existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and/or maintenance times. The getFeatureFlagById operation can be used to confirm that data has been stored successfully (if needed). In the case of multiple Feature Flags being submitted in one request, each is validated individually prior to submission. Details of which Feature Flags failed submission (if any) are available in the response object. Only apps that define the Feature Flags module can access this resource. This resource requires the 'WRITE' scope.",
        "summary": "Submit Feature Flag data",
        "tags": [
          "Feature Flags"
        ],
        "operationId": "RestFeatureflags01BulkPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Feature Flag data to submit.",
            "schema": {
              "$ref": "#/definitions/RestFeatureflags01BulkRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted Feature Flag that is of a valid format will be eventually available in Jira. Details of which Feature Flags were submitted and which failed submission (due to data format problems etc.) are available in the response object.",
            "schema": {
              "$ref": "#/definitions/RestFeatureflags01BulkResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. Note that in the case of an individual Feature Flag having an invalid format (rather than the request as a whole) the response for the request will be a 202 and details of the invalid Feature Flag will be contained in the response object.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module, or the app does not define the 'WRITE' scope.",
            "schema": {}
          },
          "413": {
            "description": "Data is too large. Submit fewer Feature Flags in each payload.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/featureflags/0.1/bulkByProperties": {
      "delete": {
        "description": "Bulk delete all Feature Flags that match the given request. In addition to the optional `updateSequenceId`, one or more query params must be supplied to specify Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (e.g. treated as an AND). See the documentation for the submitFeatureFlags operation for more details. e.g. DELETE /bulkByProperties?accountId=account-123&createdBy=user-456 Deletion is performed asynchronously. The getFeatureFlagById operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the Feature Flags module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete Feature Flags by Property",
        "tags": [
          "Feature Flags"
        ],
        "operationId": "RestFeatureflags01BulkByPropertiesDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `updateSequenceId` to use to control deletion. Only stored data with an `updateSequenceId` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.",
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/featureflags/0.1/flag/{featureFlagId}": {
      "get": {
        "description": "Retrieve the currently stored Feature Flag data for the given ID. The result will be what is currently stored, ignoring any pending updates or deletes. Only apps that define the Feature Flags module can access this resource. This resource requires the 'READ' scope.",
        "summary": "Get a Feature Flag by ID",
        "tags": [
          "Feature Flags"
        ],
        "operationId": "RestFeatureflags01FlagByFeatureFlagIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "featureFlagId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the Feature Flag to fetch."
          }
        ],
        "responses": {
          "200": {
            "description": "The Feature Flag data currently stored for the given ID.",
            "schema": {
              "$ref": "#/definitions/RestFeatureflags01FlagResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module, or the app does not define the 'READ' scope.",
            "schema": {}
          },
          "404": {
            "description": "No data found for the given Feature Flag ID.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the Feature Flag data currently stored for the given ID. Deletion is performed asynchronously. The getFeatureFlagById operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the Feature Flags module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete a Feature Flag by ID",
        "tags": [
          "Feature Flags"
        ],
        "operationId": "RestFeatureflags01FlagByFeatureFlagIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "featureFlagId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the Feature Flag to delete."
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `updateSequenceId` to use to control deletion. Only stored data with an `updateSequenceId` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.",
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/deployments/0.1/bulk": {
      "post": {
        "description": "Update / insert deployment data. Deployments are identified by the combination of `pipelineId`, `enviromentId` and `deploymentSequenceNumber`, and existing deployment data for the same deployment will be replaced if it exists and the `updateSequenceNumber` of existing data is less than the incoming data. Submissions are processed asynchronously. Submitted data will eventually be available in Jira. Most updates are available within a short period of time, but may take some time during peak load and/or maintenance times. The `getDeploymentByKey` operation can be used to confirm that data has been stored successfully (if needed). In the case of multiple deployments being submitted in one request, each is validated individually prior to submission. Details of which deployments failed submission (if any) are available in the response object. Only apps that define the `jiraDeploymentInfoProvider` module can access this resource. This resource requires the 'WRITE' scope.",
        "summary": "Submit deployment data",
        "tags": [
          "Deployments"
        ],
        "operationId": "RestDeployments01BulkPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Deployment data to submit.",
            "schema": {
              "$ref": "#/definitions/RestDeployments01BulkRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted deployment that is of a valid format will eventually be available in Jira. Details of which deployments were submitted and which failed submission (due to data format problems etc.) are available in the response object.",
            "schema": {
              "$ref": "#/definitions/RestDeployments01BulkResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. Note that in the case of an individual deployment having an invalid format (rather than the request as a whole) the response for the request will be a 202 and details of the invalid deployment will be contained in the response object.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module, or the app does not define the 'WRITE' scope.",
            "schema": {}
          },
          "413": {
            "description": "Data is too large. Submit fewer deployments in each payload.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/deployments/0.1/bulkByProperties": {
      "delete": {
        "description": "Bulk delete all deployments that match the given request. In addition to the optional `_updateSequenceNumber`, one or more query params must be supplied to specify the Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (i.e. treated as AND). See the documentation for the `submitDeployments` operation for more details. Example operation: DELETE /bulkByProperties?accountId=account-123&createdBy=user-456 Deletion is performed asynchronously. The `getDeploymentByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the `jiraDeploymentInfoProvider` module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete deployments by Property",
        "tags": [
          "Deployments"
        ],
        "operationId": "RestDeployments01BulkByPropertiesDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.",
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/deployments/0.1/pipelines/{pipelineId}/environments/{environmentId}/deployments/{deploymentSequenceNumber}": {
      "get": {
        "description": "Retrieve the currently stored deployment data for the given `pipelineId`, `enviromentId` and `deploymentSequenceNumber` combination. The result will be what is currently stored, ignoring any pending updates or deletes. Only apps that define the `jiraDeploymentInfoProvider` module can access this resource. This resource requires the 'READ' scope.",
        "summary": "Get a deployment by key",
        "tags": [
          "Deployments"
        ],
        "operationId": "RestDeployments01PipelinesEnvironmentsDeploymentsDeploymentSequenceNumberByPipelineIdAndEnvironmentIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the deployment's pipeline."
          },
          {
            "name": "environmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the deployment's environment."
          },
          {
            "name": "deploymentSequenceNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The deployment's deploymentSequenceNumber."
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment data currently stored for the given ID.",
            "schema": {
              "$ref": "#/definitions/RestDeployments01PipelinesEnvironmentsDeploymentsDeploymentSequenceNumberResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module, or the app does not define the 'READ' scope.",
            "schema": {}
          },
          "404": {
            "description": "No data found for the given deployment ID.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the currently stored deployment data for the given `pipelineId`, `enviromentId` and `deploymentSequenceNumber` combination. Deletion is performed asynchronously. The `getDeploymentByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the `jiraDeploymentInfoProvider` module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete a deployment by key",
        "tags": [
          "Deployments"
        ],
        "operationId": "RestDeployments01PipelinesEnvironmentsDeploymentsDeploymentSequenceNumberByPipelineIdAndEnvironmentIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the deployment's pipeline."
          },
          {
            "name": "environmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The ID of the deployment's environment."
          },
          {
            "name": "deploymentSequenceNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The deployment's deploymentSequenceNumber."
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `_updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.",
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/builds/0.1/bulk": {
      "post": {
        "description": "Update / insert builds data. Builds are identified by the combination of `pipelineId` and `buildNumber`, and existing build data for the same build will be replaced if it exists and the `updateSequenceNumber` of the existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and/or maintenance times. The `getBuildByKey` operation can be used to confirm that data has been stored successfully (if needed). In the case of multiple builds being submitted in one request, each is validated individually prior to submission. Details of which build failed submission (if any) are available in the response object. Only apps that define the `jiraBuildInfoProvider` module can access this resource. This resource requires the 'WRITE' scope.",
        "summary": "Submit build data",
        "tags": [
          "Builds"
        ],
        "operationId": "RestBuilds01BulkPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to an app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Builds data to submit.",
            "schema": {
              "$ref": "#/definitions/RestBuilds01BulkRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted build that is of a valid format will be eventually available in Jira. Details of which builds were submitted and which failed submission (due to data format problems etc.) are available in the response object.",
            "schema": {
              "$ref": "#/definitions/RestBuilds01BulkResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format. Note that in the case of an individual build having an invalid format (rather than the request as a whole) the response for the request will be a 202 and details of the invalid build will be contained in the response object.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module, or the app does not define the 'WRITE' scope.",
            "schema": {}
          },
          "413": {
            "description": "Data is too large. Submit fewer builds in each payload.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/builds/0.1/bulkByProperties": {
      "delete": {
        "description": "Bulk delete all builds data that match the given request. In addition to the optional `_updateSequenceNumber`, one or more query params must be supplied to specify Properties to delete by. If more than one Property is provided, data will be deleted that matches ALL of the Properties (e.g. treated as an AND). See the documentation for the `submitBuilds` operation for more details. e.g. DELETE /bulkByProperties?accountId=account-123&repoId=repo-345 Deletion is performed asynchronously. The `getBuildByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the `jiraBuildInfoProvider` module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete builds by Property",
        "tags": [
          "Builds"
        ],
        "operationId": "RestBuilds01BulkByPropertiesDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to an app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be\nrejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together. If not provided, all stored data that matches the request will be deleted."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.",
            "headers": {}
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/rest/builds/0.1/pipelines/{pipelineId}/builds/{buildNumber}": {
      "get": {
        "description": "Retrieve the currently stored build data for the given `pipelineId` and `buildNumber` combination. The result will be what is currently stored, ignoring any pending updates or deletes. Only apps that define the `jiraBuildInfoProvider` module can access this resource. This resource requires the 'READ' scope.",
        "summary": "Get a build by key",
        "tags": [
          "Builds"
        ],
        "operationId": "RestBuilds01PipelinesBuildsByPipelineIdAndBuildNumberGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to an app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be\nrejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The `pipelineId` of the build."
          },
          {
            "name": "buildNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The `buildNumber` of the build."
          }
        ],
        "responses": {
          "200": {
            "description": "The build data currently stored for the given key.",
            "schema": {
              "$ref": "#/definitions/RestBuilds01PipelinesBuildsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module, or the app does not define the 'READ' scope.",
            "schema": {}
          },
          "404": {
            "description": "No build data found for the given key.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the build data currently stored for the given `pipelineId` and `buildNumber` combination. Deletion is performed asynchronously. The `getBuildByKey` operation can be used to confirm that data has been deleted successfully (if needed). Only apps that define the `jiraBuildInfoProvider` module can access this resource. This resource requires the 'DELETE' scope.",
        "summary": "Delete a build by key",
        "tags": [
          "Builds"
        ],
        "operationId": "RestBuilds01PipelinesBuildsByPipelineIdAndBuildNumberDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "JWT \\S+",
            "description": "All requests must be signed with a Connect JWT token that corresponds to an app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be\nrejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details."
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 255,
            "description": "The `pipelineId` of the build to delete."
          },
          {
            "name": "buildNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The `buildNumber` of the build to delete."
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "An optional `updateSequenceNumber` to use to control deletion. Only stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted. This can be used help ensure submit/delete requests are applied correctly if issued close together."
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.",
            "headers": {}
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.",
            "schema": {}
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module, or the app does not define the 'DELETE' scope.",
            "schema": {}
          },
          "429": {
            "description": "API rate limit has been exceeded.",
            "schema": {}
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.",
            "schema": {}
          },
          "default": {
            "description": "An unknown error has occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "RestAgile10BacklogIssueRequest": {
      "title": "RestAgile10BacklogIssueRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "issues": [
            "PR-1",
            "10001",
            "PR-3"
          ]
        }
      },
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      }
    },
    "RestAgile10BacklogIssueRequest1": {
      "title": "RestAgile10BacklogIssueRequest1",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "issues": [
            "PR-1",
            "10001",
            "PR-3"
          ],
          "rankBeforeIssue": "PR-4",
          "rankCustomFieldId": 10521
        }
      },
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rankBeforeIssue": {
          "type": "string"
        },
        "rankAfterIssue": {
          "type": "string"
        },
        "rankCustomFieldId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestAgile10BoardResponse": {
      "title": "RestAgile10BoardResponse",
      "example": {
        "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":84,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\"},{\"id\":92,\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/92\",\"name\":\"kanban board\",\"type\":\"kanban\"}]}"
      },
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "RestAgile10BoardRequest": {
      "title": "RestAgile10BoardRequest",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "filterId": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "projectKeyOrId": {
          "type": "string"
        }
      }
    },
    "RestAgile10BoardConfigurationResponse": {
      "title": "RestAgile10BoardConfigurationResponse",
      "example": {
        "value": "{\"id\":10000,\"name\":\"Board\",\"self\":\"http://your-domain.atlassian.net/rest/agile/1.0/board/84/config\",\"location\":{\"type\":\"project\",\"key\":\"PROJ\",\"id\":\"10010\",\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/project/10010\",\"name\":\"name\"},\"filter\":{\"id\":\"1001\",\"self\":\"http://your-domain.atlassian.net/filter/1001\"},\"columnConfig\":{\"columns\":[{\"name\":\"To Do\",\"statuses\":[{\"id\":\"1\",\"self\":\"http://your-domain.atlassian.net/status/1\"},{\"id\":\"4\",\"self\":\"http://your-domain.atlassian.net/status/4\"}]},{\"name\":\"In progress\",\"statuses\":[{\"id\":\"3\",\"self\":\"http://your-domain.atlassian.net/status/3\"}],\"min\":2,\"max\":4},{\"name\":\"Done\",\"statuses\":[{\"id\":\"5\",\"self\":\"http://your-domain.atlassian.net/status/5\"}]}],\"constraintType\":\"issueCount\"},\"estimation\":{\"type\":\"field\",\"field\":{\"fieldId\":\"customfield_10002\",\"displayName\":\"Story Points\"}},\"ranking\":{\"rankCustomFieldId\":10020}}"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "filter": {
          "$ref": "#/definitions/Filter"
        },
        "subQuery": {
          "$ref": "#/definitions/SubQuery"
        },
        "columnConfig": {
          "$ref": "#/definitions/ColumnConfig"
        },
        "estimation": {
          "$ref": "#/definitions/Estimation"
        },
        "ranking": {
          "$ref": "#/definitions/Ranking"
        }
      }
    },
    "Filter": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        }
      }
    },
    "SubQuery": {
      "title": "SubQuery",
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "ColumnConfig": {
      "title": "ColumnConfig",
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "constraintType": {
          "type": "string"
        }
      }
    },
    "Column": {
      "title": "Column",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          }
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Status": {
      "title": "Status",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        }
      }
    },
    "Estimation": {
      "title": "Estimation",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "field": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "Field": {
      "title": "Field",
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "Ranking": {
      "title": "Ranking",
      "type": "object",
      "properties": {
        "rankCustomFieldId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestAgile10BoardFeaturesResponse": {
      "title": "RestAgile10BoardFeaturesResponse",
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "RestAgile10BoardFeaturesRequest": {
      "title": "RestAgile10BoardFeaturesRequest",
      "type": "object",
      "properties": {
        "boardId": {
          "type": "integer",
          "format": "int64"
        },
        "feature": {
          "type": "string"
        },
        "enabling": {
          "type": "boolean"
        }
      }
    },
    "RestAgile10BoardQuickfilterResponse": {
      "title": "RestAgile10BoardQuickfilterResponse",
      "example": {
        "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0},{\"id\":2,\"boardId\":1,\"name\":\"Tasks\",\"jql\":\"issueType = task\",\"description\":\"Issues of type task\",\"position\":0}]}"
      },
      "type": "object",
      "properties": {
        "maxResults": {
          "type": "integer",
          "format": "int32"
        },
        "startAt": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "isLast": {
          "type": "boolean"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "title": "Value",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "boardId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "jql": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestAgile10BoardQuickfilterResponse1": {
      "title": "RestAgile10BoardQuickfilterResponse1",
      "example": {
        "value": "{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0}"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "boardId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "jql": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestAgile10BoardReportsResponse": {
      "title": "RestAgile10BoardReportsResponse",
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "RestAgile10EpicRequest": {
      "title": "RestAgile10EpicRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "name": "epic 2",
          "summary": "epic 2 summary",
          "color": {
            "key": "color_6"
          },
          "done": true
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "Color": {
      "title": "Color",
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/Key"
        }
      }
    },
    "Key": {
      "title": "Key",
      "example": "color_1",
      "type": "string",
      "enum": [
        "color_1",
        "color_2",
        "color_3",
        "color_4",
        "color_5",
        "color_6",
        "color_7",
        "color_8",
        "color_9",
        "color_10",
        "color_11",
        "color_12",
        "color_13",
        "color_14"
      ]
    },
    "RestAgile10EpicRankRequest": {
      "title": "RestAgile10EpicRankRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "rankBeforeEpic": "10000",
          "rankCustomFieldId": 10521
        }
      },
      "type": "object",
      "properties": {
        "rankBeforeEpic": {
          "type": "string"
        },
        "rankAfterEpic": {
          "type": "string"
        },
        "rankCustomFieldId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestAgile10IssueEstimationRequest": {
      "title": "RestAgile10IssueEstimationRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": "{\"value\":\"8.0\"}"
      },
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "RestAgile10SprintRequest": {
      "title": "RestAgile10SprintRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "name": "sprint 1",
          "startDate": "2015-04-11T05:22:00+00:00",
          "endDate": "2015-04-19T15:22:00+00:00",
          "originBoardId": 5,
          "goal": "sprint 1 goal"
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "originBoardId": {
          "type": "integer",
          "format": "int64"
        },
        "goal": {
          "type": "string"
        }
      }
    },
    "RestAgile10SprintRequest1": {
      "title": "RestAgile10SprintRequest1",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "name": "new name"
        }
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "self": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "completeDate": {
          "type": "string"
        },
        "originBoardId": {
          "type": "integer",
          "format": "int64"
        },
        "goal": {
          "type": "string"
        }
      }
    },
    "RestAgile10SprintSwapRequest": {
      "title": "RestAgile10SprintSwapRequest",
      "example": {
        "summary": "Example",
        "description": "This example was copied over from Swagger V2 into this OAS 3.0 file.",
        "value": {
          "sprintToSwapWith": 3
        }
      },
      "type": "object",
      "properties": {
        "sprintToSwapWith": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestDevinfo010BulkRequest": {
      "title": "RestDevinfo010BulkRequest",
      "description": "Request object for development information push operations, entities are grouped by repository",
      "type": "object",
      "properties": {
        "repositories": {
          "description": "List of repositories containing development information. Must not contain duplicates. Maximum number of entities across all repositories is 1000",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Repository"
          },
          "maxItems": 100
        },
        "preventTransitions": {
          "description": "Flag to prevent automatic issue transitions and smart commits being fired, default is false",
          "type": "boolean"
        },
        "properties": {
          "description": "Arbitrary properties to tag the submitted repositories with. These properties can be used for delete operations to e.g. clean up all development information associated with an account in the event that the account is removed from the provider system. Note that these properties will never be returned with repository or entity data. They are not intended for use as metadata to associate with a repository. Maximum length of each key or value is 255 characters. Maximum allowed number of properties key/value pairs is 5. Properties keys cannot start with '_' character. Properties keys cannot contain ':' character.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "repositories"
      ]
    },
    "Repository": {
      "title": "Repository",
      "description": "Represents a repository, containing development information such as commits, pull requests, and branches",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this repository. Max length is 255 characters",
          "example": "atlassian-connect-jira-example",
          "type": "string"
        },
        "description": {
          "description": "Description of this repository. Max length is 1024 characters",
          "example": "The repository which stores code of the Atlassian Connect Add-on Devinfo application.",
          "type": "string"
        },
        "forkOf": {
          "description": "The ID of the repository this repository was forked from, if it's a fork. Max length is 255 characters",
          "example": "56c7c750-cee2-48e2-b920-d7706dfd11f7",
          "type": "string"
        },
        "url": {
          "description": "The URL of this repository. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example",
          "type": "string"
        },
        "commits": {
          "description": "List of commits to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Commit"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "branches": {
          "description": "List of branches to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Branch"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "pullRequests": {
          "description": "List of pull requests to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequest"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "avatar": {
          "description": "The URL of the avatar for this repository. Max length is 1024 characters",
          "example": "http://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/avatar/32",
          "type": "string"
        },
        "avatarDescription": {
          "description": "Description of the avatar for this repository. Max length is 1024 characters",
          "example": "Avatar description",
          "type": "string"
        },
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "url",
        "id",
        "updateSequenceId"
      ]
    },
    "Commit": {
      "title": "Commit",
      "description": "Represents a commit in the version control system",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "issueKeys": {
          "description": "List of issues keys that this entity is associated with. They must be valid JIRA issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100",
          "example": [
            "ISSUE-1",
            "TEST-2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "description": "The hash of the commit. Max length is 255 characters",
          "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
          "type": "string"
        },
        "flags": {
          "description": "The set of flags for this commit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flag"
          },
          "uniqueItems": true
        },
        "message": {
          "description": "The commit message. Max length is 1024 characters",
          "example": "README.md edited online with Bitbucket",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Author"
        },
        "fileCount": {
          "description": "The total number of files added, removed, or modified by this commit",
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "url": {
          "description": "The URL of this commit. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
          "type": "string"
        },
        "files": {
          "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "authorTimestamp": {
          "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format",
          "example": "10/31/2016 11:27:25 PM",
          "type": "string"
        },
        "displayId": {
          "description": "Shortened identifier for this commit, used for display. Max length is 255 characters",
          "example": "a7727ee",
          "type": "string"
        }
      },
      "required": [
        "id",
        "issueKeys",
        "updateSequenceId",
        "hash",
        "message",
        "author",
        "fileCount",
        "url",
        "authorTimestamp",
        "displayId"
      ]
    },
    "Flag": {
      "title": "Flag",
      "example": "MERGE_COMMIT",
      "type": "string",
      "enum": [
        "MERGE_COMMIT"
      ]
    },
    "Author": {
      "title": "Author",
      "description": "The author of this commit",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this user in a format suitable for display. Max length is 255 characters",
          "example": "Jane Doe",
          "type": "string"
        },
        "email": {
          "description": "The email address of the user, used to associate the user with a JIRA user. Max length is 255 characters",
          "example": "jane_doe@atlassian.com",
          "type": "string"
        },
        "username": {
          "description": "The username of the user, used to associate the user with a JIRA user if there are multiple users for a given email. Max length is 255 characters",
          "example": "jdoe",
          "type": "string"
        },
        "url": {
          "description": "The URL of the profile for this user. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe",
          "type": "string"
        },
        "avatar": {
          "description": "The URL of the avatar for this user. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe/avatar/32",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "File": {
      "title": "File",
      "description": "Describes changes to a file",
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of the file. Max length is 1024 characters",
          "example": "/home/user/src/atlassian-connect-jira-example/README.md",
          "type": "string"
        },
        "url": {
          "description": "The URL of this file. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/src/a7727ee6350c33cdf90826dc21abaa26a5704370/README.md",
          "type": "string"
        },
        "changeType": {
          "$ref": "#/definitions/ChangeType"
        },
        "linesAdded": {
          "description": "Number of lines added to the file",
          "example": 0,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "linesRemoved": {
          "description": "Number of lines removed from the file",
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        }
      },
      "required": [
        "path",
        "url",
        "changeType",
        "linesAdded",
        "linesRemoved"
      ]
    },
    "ChangeType": {
      "title": "ChangeType",
      "description": "The operation performed on this file",
      "example": "ADDED",
      "type": "string",
      "enum": [
        "ADDED",
        "COPIED",
        "DELETED",
        "MODIFIED",
        "MOVED",
        "UNKNOWN"
      ]
    },
    "Branch": {
      "title": "Branch",
      "description": "Represents a branch in the version control system",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "issueKeys": {
          "description": "List of issues keys that this entity is associated with. They must be valid JIRA issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100",
          "example": [
            "ISSUE-1",
            "TEST-2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the branch. Max length is 255 characters",
          "example": "master",
          "type": "string"
        },
        "lastCommit": {
          "$ref": "#/definitions/LastCommit"
        },
        "createPullRequestUrl": {
          "description": "The URL of the page for creating a pull request from this branch. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/new",
          "type": "string"
        },
        "url": {
          "description": "The URL of the branch. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/master",
          "type": "string"
        }
      },
      "required": [
        "id",
        "issueKeys",
        "updateSequenceId",
        "name",
        "lastCommit",
        "url"
      ]
    },
    "LastCommit": {
      "title": "LastCommit",
      "description": "The most recent commit on this branch, used to display the date of the latest activity for this branch",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "issueKeys": {
          "description": "List of issues keys that this entity is associated with. They must be valid JIRA issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100",
          "example": [
            "ISSUE-1",
            "TEST-2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "description": "The hash of the commit. Max length is 255 characters",
          "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
          "type": "string"
        },
        "flags": {
          "description": "The set of flags for this commit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flag"
          },
          "uniqueItems": true
        },
        "message": {
          "description": "The commit message. Max length is 1024 characters",
          "example": "README.md edited online with Bitbucket",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Author"
        },
        "fileCount": {
          "description": "The total number of files added, removed, or modified by this commit",
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "url": {
          "description": "The URL of this commit. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
          "type": "string"
        },
        "files": {
          "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "authorTimestamp": {
          "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format",
          "example": "10/31/2016 11:27:25 PM",
          "type": "string"
        },
        "displayId": {
          "description": "Shortened identifier for this commit, used for display. Max length is 255 characters",
          "example": "a7727ee",
          "type": "string"
        }
      },
      "required": [
        "id",
        "issueKeys",
        "updateSequenceId",
        "hash",
        "message",
        "author",
        "fileCount",
        "url",
        "authorTimestamp",
        "displayId"
      ]
    },
    "PullRequest": {
      "title": "PullRequest",
      "description": "Represents a pull request",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "issueKeys": {
          "description": "List of issues keys that this entity is associated with. They must be valid JIRA issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100",
          "example": [
            "ISSUE-1",
            "TEST-2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "title": {
          "description": "Title of the pull request. Max length is 1024 characters",
          "example": "Pull request 2, fixing all the issues caused by pull request #1",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Author2"
        },
        "commentCount": {
          "description": "The number of comments on the pull request",
          "example": 42,
          "type": "integer",
          "format": "int32"
        },
        "sourceBranch": {
          "description": "The name of the source branch of this PR. Max length is 255 characters",
          "example": "ISSUE-1-feature-branch",
          "type": "string"
        },
        "sourceBranchUrl": {
          "description": "The url of the source branch of this PR. This is used to match this PR against the branch. Max length is 255 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/ISSUE-1-feature-branch",
          "type": "string"
        },
        "lastUpdate": {
          "description": "The most recent update to this PR. Formatted as a UTC ISO 8601 date time format",
          "example": "10/31/2016 11:27:25 PM",
          "type": "string"
        },
        "destinationBranch": {
          "description": "The name of destination branch of this PR. Max length is 255 characters",
          "example": "master",
          "type": "string"
        },
        "reviewers": {
          "description": "The list of reviewers of this pull request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reviewer"
          }
        },
        "url": {
          "description": "The URL of this pull request. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/2",
          "type": "string"
        },
        "displayId": {
          "description": "Shortened identifier for this pull request, used for display. Max length is 255 characters",
          "example": "Pull request 2",
          "type": "string"
        }
      },
      "required": [
        "id",
        "issueKeys",
        "updateSequenceId",
        "status",
        "title",
        "author",
        "commentCount",
        "sourceBranch",
        "lastUpdate",
        "url",
        "displayId"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "The status of the pull request. In the case of concurrent updates, priority is given in the order OPEN, MERGED, DECLINED, UNKNOWN",
      "example": "OPEN",
      "type": "string",
      "enum": [
        "OPEN",
        "MERGED",
        "DECLINED",
        "UNKNOWN"
      ]
    },
    "Author2": {
      "title": "Author2",
      "description": "The author of this pull request",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this user in a format suitable for display. Max length is 255 characters",
          "example": "Jane Doe",
          "type": "string"
        },
        "email": {
          "description": "The email address of the user, used to associate the user with a JIRA user. Max length is 255 characters",
          "example": "jane_doe@atlassian.com",
          "type": "string"
        },
        "username": {
          "description": "The username of the user, used to associate the user with a JIRA user if there are multiple users for a given email. Max length is 255 characters",
          "example": "jdoe",
          "type": "string"
        },
        "url": {
          "description": "The URL of the profile for this user. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe",
          "type": "string"
        },
        "avatar": {
          "description": "The URL of the avatar for this user. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe/avatar/32",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Reviewer": {
      "title": "Reviewer",
      "description": "The reviewer of a pull request",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this reviewer. Max length is 255 characters",
          "example": "Jane Doe",
          "type": "string"
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "url": {
          "description": "The URL of the profile for this reviewer. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe",
          "type": "string"
        },
        "avatar": {
          "description": "The URL of the avatar for this reviewer. Max length is 1024 characters",
          "example": "https://atlassian.com/account/jane_doe/avatar/32",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ApprovalStatus": {
      "title": "ApprovalStatus",
      "description": "The approval status of this reviewer, default is UNAPPROVED",
      "example": "APPROVED",
      "type": "string",
      "enum": [
        "APPROVED",
        "UNAPPROVED"
      ]
    },
    "RestDevinfo010BulkResponse": {
      "title": "RestDevinfo010BulkResponse",
      "description": "The result of a successful store development information request",
      "type": "object",
      "properties": {
        "acceptedDevinfoEntities": {
          "description": "The IDs of devinfo entities that have been accepted for submission grouped by their repository ids. Note that a devinfo entity that isn't updated due to it's updateSequenceId being out of order is not considered a failed submission.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AcceptedDevinfoEntities"
          }
        },
        "failedDevinfoEntities": {
          "description": "IDs of devinfo entities that have not been accepted for submission and caused error descriptions, usually due to a problem with the request data. The entities (if present) will be grouped by their repository id and type. Entity IDs are listed with errors associated with that devinfo entity that have prevented it being submitted.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FailedDevinfoEntities"
          }
        },
        "unknownIssueKeys": {
          "description": "Issue keys that are not known on this Jira instance (if any). These may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist. If a devinfo entity has been associated with issue keys other than those in this array it will still be stored against those valid keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AcceptedDevinfoEntities": {
      "title": "AcceptedDevinfoEntities",
      "description": "Ids of entities grouped by entity type",
      "type": "object",
      "properties": {
        "commits": {
          "description": "Commits ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branches": {
          "description": "Branches ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pullRequests": {
          "description": "Pull requests ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FailedDevinfoEntities": {
      "title": "FailedDevinfoEntities",
      "description": "Represents errors related to particular repository and its entities",
      "type": "object",
      "properties": {
        "errorMessages": {
          "description": "Repository errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        },
        "commits": {
          "description": "Commits errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Commit1"
          }
        },
        "branches": {
          "description": "Branches errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Branch1"
          }
        },
        "pullRequests": {
          "description": "Pull requests errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequest1"
          }
        }
      }
    },
    "ErrorMessage": {
      "title": "ErrorMessage",
      "description": "A message supplied in the case of an error.",
      "type": "object",
      "properties": {
        "message": {
          "description": "A human-readable message describing the error.",
          "type": "string"
        },
        "errorTraceId": {
          "description": "An optional trace ID that can be used by Jira developers to locate the source of the error.",
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "Commit1": {
      "title": "Commit1",
      "description": "Represents error happened with particular entity",
      "type": "object",
      "properties": {
        "id": {
          "description": "Entity id",
          "type": "string"
        },
        "errorMessages": {
          "description": "Error message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "Branch1": {
      "title": "Branch1",
      "description": "Represents error happened with particular entity",
      "type": "object",
      "properties": {
        "id": {
          "description": "Entity id",
          "type": "string"
        },
        "errorMessages": {
          "description": "Error message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "PullRequest1": {
      "title": "PullRequest1",
      "description": "Represents error happened with particular entity",
      "type": "object",
      "properties": {
        "id": {
          "description": "Entity id",
          "type": "string"
        },
        "errorMessages": {
          "description": "Error message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "RestDevinfo010Bulk400Error": {
      "title": "RestDevinfo010Bulk400Error",
      "description": "A response returned in the case of an error.",
      "type": "object",
      "properties": {
        "errorMessages": {
          "description": "List of errors occurred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      },
      "required": [
        "errorMessages"
      ]
    },
    "RestDevinfo010RepositoryResponse": {
      "title": "RestDevinfo010RepositoryResponse",
      "description": "Represents a repository, containing development information such as commits, pull requests, and branches",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this repository. Max length is 255 characters",
          "example": "atlassian-connect-jira-example",
          "type": "string"
        },
        "description": {
          "description": "Description of this repository. Max length is 1024 characters",
          "example": "The repository which stores code of the Atlassian Connect Add-on Devinfo application.",
          "type": "string"
        },
        "forkOf": {
          "description": "The ID of the repository this repository was forked from, if it's a fork. Max length is 255 characters",
          "example": "56c7c750-cee2-48e2-b920-d7706dfd11f7",
          "type": "string"
        },
        "url": {
          "description": "The URL of this repository. Max length is 1024 characters",
          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example",
          "type": "string"
        },
        "commits": {
          "description": "List of commits to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Commit"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "branches": {
          "description": "List of branches to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Branch"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "pullRequests": {
          "description": "List of pull requests to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequest"
          },
          "minItems": 0,
          "maxItems": 400
        },
        "avatar": {
          "description": "The URL of the avatar for this repository. Max length is 1024 characters",
          "example": "http://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/avatar/32",
          "type": "string"
        },
        "avatarDescription": {
          "description": "Description of the avatar for this repository. Max length is 1024 characters",
          "example": "Avatar description",
          "type": "string"
        },
        "id": {
          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters",
          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
          "type": "string"
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301248,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "url",
        "id",
        "updateSequenceId"
      ]
    },
    "RestDevinfo010ExistsByPropertiesResponse": {
      "title": "RestDevinfo010ExistsByPropertiesResponse",
      "description": "Whether there is data for the properties supplied in a query",
      "type": "object",
      "properties": {
        "hasDataMatchingProperties": {
          "description": "Whether there is data matching the query",
          "type": "boolean"
        }
      }
    },
    "entityType": {
      "title": "entityType",
      "example": "commit",
      "type": "string",
      "enum": [
        "commit",
        "branch",
        "pull_request"
      ]
    },
    "RestFeatureflags01BulkRequest": {
      "title": "RestFeatureflags01BulkRequest",
      "description": "The payload used to submit (update / insert) Feature Flag data.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Arbitrary properties to tag the submitted Feature Flags with. These properties can be used for delete operations to e.g. clean up all Feature Flags associated with an account in the event that the account is removed from the Provider system. Note that these properties will never be returned with Feature Flag data. They are not intended for use as metadata to associate with a Feature Flag. Internally they are stored as a hash so that personal information etc. is never stored within Jira.",
          "example": "{\r\n  \"accountId\": \"account-234\",\r\n  \"projectId\": \"project-123\"\r\n}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flags": {
          "description": "A list of Feature Flags to submit to Jira. Each Feature Flag may be associated with 1 or more Jira issue keys, and will be associated with any properties included in this request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flag4"
          },
          "minItems": 1
        }
      },
      "required": [
        "flags"
      ]
    },
    "Flag4": {
      "title": "Flag4",
      "description": "Data related to a single Feature Flag, across any Environment that the flag is present in.",
      "type": "object",
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion"
        },
        "id": {
          "description": "The identifier for the Feature Flag. Must be unique for a given Provider.",
          "example": "111-222-333",
          "type": "string",
          "maxLength": 255
        },
        "key": {
          "description": "The identifier that users would use to reference the Feature Flag in their source code etc.\n\nWill be made available via the UI for users to copy into their source code etc.",
          "example": "my-awesome-feature",
          "type": "string",
          "maxLength": 255
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this Feature Flag in the case of out-of-order receipt of update requests.\n\nThis can be any monotonically increasing number. A suggested implementation is to use epoch millis from the Provider system, but other alternatives are valid (e.g. a Provider could store a counter against each Feature Flag and increment that on each update to Jira).\n\nUpdates for a Feature Flag that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301448,
          "type": "integer",
          "format": "int64"
        },
        "displayName": {
          "description": "The human-readable name for the Feature Flag. Will be shown in the UI.\n\nIf not provided, will use the ID for display.",
          "example": "Enable awesome feature",
          "type": "string",
          "maxLength": 255
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the Feature Flag information with.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "summary": {
          "$ref": "#/definitions/Summary"
        },
        "details": {
          "description": "Detail information for this Feature Flag.\n\nThis may be information for each environment the Feature Flag is defined in or a selection of environments made by the user, as appropriate.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Detail"
          },
          "minItems": 1
        }
      },
      "required": [
        "id",
        "key",
        "updateSequenceId",
        "issueKeys",
        "summary",
        "details"
      ]
    },
    "SchemaVersion": {
      "title": "SchemaVersion",
      "description": "The FeatureFlagData schema version used for this flag data. \n\nPlaceholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "Summary": {
      "title": "Summary",
      "description": "Summary information for this Feature Flag.\n\nProviders may elect to provide information from a specific environment, or they may choose to 'roll up' information from across multiple environments - whatever makes most sense in the Provider system.\n\nThis is the summary information that will be presented to the user on e.g. the issue screen.",
      "type": "object",
      "properties": {
        "url": {
          "description": "A URL users can use to link to a summary view of this flag, if appropriate. \n\nThis could be any location that makes sense in the Provider system (e.g. if the summary information comes from a specific environment, it might make sense to link the user to the flag in that environment).",
          "example": "https://example.com/project/feature-123/summary",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the Feature Flag.\n\nProviders may choose to supply the last-updated timestamp from a specific environment, or the 'most recent' last-updated timestamp across all environments - whatever makes sense in the Provider system.\n\nExpected format is an RFC3339 formated string.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "status",
        "lastUpdated"
      ]
    },
    "Status3": {
      "title": "Status3",
      "description": "The Feature Flag status to present to the user as a summary of the state of the Feature Flag.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the Feature Flag is enabled in the given environment (or in summary). \n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.",
          "type": "boolean"
        },
        "defaultValue": {
          "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.",
          "example": "Disabled",
          "type": "string",
          "maxLength": 255
        },
        "rollout": {
          "$ref": "#/definitions/Rollout"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Rollout": {
      "title": "Rollout",
      "description": "Details of the rollout for the Feature Flag in an environment (or in summary).\n\nIf 'enabled' is false, this field will be ignored. If 'enabled' is true, this field should be provided to describe the rollout. If 'enabled' is true and this field is missing, rollout will be assumed to be 100%.",
      "example": {
        "percentage": 80
      },
      "type": "object",
      "properties": {
        "percentage": {
          "description": "If the Feature Flag rollout is a simple percentage rollout",
          "type": "number",
          "minimum": 0.0,
          "format": "double"
        },
        "text": {
          "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.",
          "type": "string",
          "maxLength": 255
        },
        "rules": {
          "description": "A count of the number of rules active for this Feature Flag in an environment.",
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        }
      }
    },
    "Detail": {
      "title": "Detail",
      "description": "Details of a Feature Flag for a single environment.",
      "type": "object",
      "properties": {
        "url": {
          "description": "A URL users can use to link to this Feature Flag, in this environment.",
          "example": "https://example.com/project/feature-123/production",
          "type": "string",
          "maxLength": 2000
        },
        "lastUpdated": {
          "description": "The last-updated timestamp for this Feature Flag, in this environment.\n\nExpected format is an RFC3339 formated string.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        },
        "environment": {
          "$ref": "#/definitions/Environment"
        },
        "status": {
          "$ref": "#/definitions/Status4"
        }
      },
      "required": [
        "url",
        "lastUpdated",
        "environment",
        "status"
      ]
    },
    "Environment": {
      "title": "Environment",
      "description": "The environment the details of the Feature Flag are for.",
      "example": {
        "name": "prod-us-west",
        "type": "production"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the environment.",
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      },
      "required": [
        "name"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "The 'type' or 'category' of environment this environment belongs to.",
      "example": "development",
      "type": "string",
      "enum": [
        "development",
        "testing",
        "staging",
        "production"
      ]
    },
    "Status4": {
      "title": "Status4",
      "description": "The status of the Feature Flag in the environment.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the Feature Flag is enabled in the given environment (or in summary). \n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.",
          "type": "boolean"
        },
        "defaultValue": {
          "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.",
          "example": "Disabled",
          "type": "string",
          "maxLength": 255
        },
        "rollout": {
          "$ref": "#/definitions/Rollout"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "RestFeatureflags01BulkResponse": {
      "title": "RestFeatureflags01BulkResponse",
      "description": "The result of a successful submitFeatureFlags request.",
      "type": "object",
      "properties": {
        "acceptedFeatureFlags": {
          "description": "The IDs of Feature Flags that have been accepted for submission. A Feature Flag may be rejected if it was only associated with unknown issue keys. Note that a Feature Flag that isn't updated due to it's updateSequenceId being out of order is not considered a failed submission.",
          "example": [
            "111-222-333",
            "444-555-666"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedFeatureFlags": {
          "description": "Details of Feature Flags that have not been accepted for submission, usually due to a problem with the request data. The object (if present) will be keyed by Feature Flag ID and include any errors associated with that Feature Flag that have prevented it being submitted.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownIssueKeys": {
          "description": "Issue keys that are not known on this Jira instance (if any). These may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist. If a Feature Flag has been associated with issue keys other than those in this array it will still be stored against those valid keys. If a Feature Flag was only associated with issue keys deemed to be invalid it won't be persisted.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          }
        }
      }
    },
    "FailedFeatureFlag": {
      "title": "FailedFeatureFlag",
      "description": "A message supplied in the case of an error.",
      "type": "object",
      "properties": {
        "message": {
          "description": "A human-readable message describing the error.",
          "type": "string"
        },
        "errorTraceId": {
          "description": "An optional trace ID that can be used by Jira developers to locate the source of the error.",
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "RestFeatureflags01FlagResponse": {
      "title": "RestFeatureflags01FlagResponse",
      "description": "Data related to a single Feature Flag, across any Environment that the flag is present in.",
      "type": "object",
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion1"
        },
        "id": {
          "description": "The identifier for the Feature Flag. Must be unique for a given Provider.",
          "example": "111-222-333",
          "type": "string",
          "maxLength": 255
        },
        "key": {
          "description": "The identifier that users would use to reference the Feature Flag in their source code etc. Will be made available via the UI for users to copy into their source code etc.",
          "example": "my-awesome-feature",
          "type": "string",
          "maxLength": 255
        },
        "updateSequenceId": {
          "description": "An ID used to apply an ordering to updates for this Feature Flag in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the Provider system, but other alternatives are valid (e.g. a Provider could store a counter against each Feature Flag and increment that on each update to Jira). Updates for a Feature Flag that are received with an updateSqeuenceId lower than what is currently stored will be ignored.",
          "example": 1523494301448,
          "type": "integer",
          "format": "int64"
        },
        "displayName": {
          "description": "The human-readable name for the Feature Flag. Will be shown in the UI. If not provided, will use the ID for display.",
          "example": "Enable awesome feature",
          "type": "string",
          "maxLength": 255
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the Feature Flag information with.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "summary": {
          "$ref": "#/definitions/Summary1"
        },
        "details": {
          "description": "Detail information for this Feature Flag. This may be information for each environment the Feature Flag is defined in or a selection of environments made by the user, as appropriate.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Detail"
          },
          "minItems": 1
        }
      },
      "required": [
        "id",
        "key",
        "updateSequenceId",
        "issueKeys",
        "summary",
        "details"
      ]
    },
    "SchemaVersion1": {
      "title": "SchemaVersion1",
      "description": "The FeatureFlagData schema version used for this flag data. Placeholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "Summary1": {
      "title": "Summary1",
      "description": "Summary information for this Feature Flag. Providers may elect to provide information from a specific environment, or they may choose to 'roll up' information from across multiple environments - whatever makes most sense in the Provider system. This is the summary information that will be presented to the user on e.g. the issue screen.",
      "type": "object",
      "properties": {
        "url": {
          "description": "A URL users can use to link to a summary view of this flag, if appropriate. This could be any location that makes sense in the Provider system (e.g. if the summary information comes from a specific environment, it might make sense to link the user to the flag in that environment).",
          "example": "https://example.com/project/feature-123/summary",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "$ref": "#/definitions/Status5"
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the Feature Flag. Providers may choose to supply the last-updated timestamp from a specific environment, or the 'most recent' last-updated timestamp across all environments - whatever makes sense in the Provider system. Expected format is an RFC3339 formated string.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "status",
        "lastUpdated"
      ]
    },
    "Status5": {
      "title": "Status5",
      "description": "The Feature Flag status to present to the user as a summary of the state of the Feature Flag.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the Feature Flag is enabled in the given environment (or in summary). Enabled may imply a partial rollout, which can be described using the 'rollout' field.",
          "type": "boolean"
        },
        "defaultValue": {
          "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate. This value may be presented to the user in the UI.",
          "example": "Disabled",
          "type": "string",
          "maxLength": 255
        },
        "rollout": {
          "$ref": "#/definitions/Rollout2"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Rollout2": {
      "title": "Rollout2",
      "description": "Details of the rollout for the Feature Flag in an environment (or in summary). If 'enabled' is false, this field will be ignored. If 'enabled' is true, this field should be provided to describe the rollout. If 'enabled' is true and this field is missing, rollout will be assumed to be 100%.",
      "example": {
        "percentage": 80
      },
      "type": "object",
      "properties": {
        "percentage": {
          "description": "If the Feature Flag rollout is a simple percentage rollout",
          "type": "number",
          "minimum": 0.0,
          "format": "double"
        },
        "text": {
          "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.",
          "type": "string",
          "maxLength": 255
        },
        "rules": {
          "description": "A count of the number of rules active for this Feature Flag in an environment.",
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        }
      }
    },
    "RestDeployments01BulkRequest": {
      "title": "RestDeployments01BulkRequest",
      "description": "The payload used to submit (update / insert) deployment data.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Arbitrary properties to tag the submitted deployments with. These properties can be used for delete operations to e.g. clean up all deployments associated with an account in the event that the account is removed from the Provider system. Note that these properties will never be returned with deployment data. They are not intended for use as metadata to associate with a deployment. Internally they are stored as a hash so that personal information etc. is never stored within Jira.",
          "example": "{\r\n  \"accountId\": \"account-234\",\r\n  \"projectId\": \"project-123\"\r\n}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deployments": {
          "description": "A list of deployments to submit to Jira. Each deployment may be associated with one or more Jira issue keys, and will be associated with any properties included in this request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          },
          "minItems": 1
        }
      },
      "required": [
        "deployments"
      ]
    },
    "Deployment": {
      "title": "Deployment",
      "description": "Data related to a specific deployment in a specific environment that the deployment is present in.",
      "type": "object",
      "properties": {
        "deploymentSequenceNumber": {
          "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.",
          "example": 100,
          "type": "integer",
          "format": "int64"
        },
        "updateSequenceNumber": {
          "description": "A number used to apply an order to the updates to the deployment, as identified by the deploymentSequenceNumber, in the case of out-of-order receipt of update requests. It must be a monotonically increasing number. For example, epoch time could be one way to generate the updateSequenceNumber.",
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the deployment information with.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "displayName": {
          "description": "The human-readable name for the deployment. Will be shown in the UI.",
          "example": "Deployment number 16 of Data Depot",
          "type": "string",
          "maxLength": 255
        },
        "url": {
          "description": "A URL users can use to link to this deployment, in this environment.",
          "example": "http://mydeployer.com/project1/1111-222-333/prod-east",
          "type": "string",
          "maxLength": 2000
        },
        "description": {
          "description": "A short description of the deployment",
          "example": "The bits are being transferred",
          "type": "string",
          "maxLength": 255
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the deployment.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "An (optional) additional label that may be displayed with deployment information. Can be used to display version information etc. for the deployment.",
          "example": "Release 2018-01-20_08-47-bc2421a",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "environment": {
          "$ref": "#/definitions/Environment2"
        },
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion2"
        }
      },
      "required": [
        "deploymentSequenceNumber",
        "updateSequenceNumber",
        "issueKeys",
        "displayName",
        "url",
        "description",
        "lastUpdated",
        "state",
        "pipeline",
        "environment"
      ]
    },
    "State": {
      "title": "State",
      "description": "The state of the deployment",
      "example": "unknown",
      "type": "string",
      "enum": [
        "unknown",
        "pending",
        "in_progress",
        "cancelled",
        "failed",
        "rolled_back",
        "successful"
      ]
    },
    "Pipeline": {
      "title": "Pipeline",
      "description": "The pipeline that generated this deployment.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of this pipeline, must be unique for the provider.",
          "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c",
          "type": "string",
          "maxLength": 255
        },
        "displayName": {
          "description": "The name of the pipeline to present to the user.",
          "example": "Data Depot Deployment",
          "type": "string",
          "maxLength": 255
        },
        "url": {
          "description": "A URL users can use to link to this deployment pipeline.",
          "example": "http://mydeployer.com/project1",
          "type": "string",
          "maxLength": 2000
        }
      },
      "required": [
        "id",
        "displayName",
        "url"
      ]
    },
    "Environment2": {
      "title": "Environment2",
      "description": "The environment that this deployment is targeting.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of this enviroment, must be unique for the provider so that it can be shared across pipelines.",
          "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba",
          "type": "string",
          "maxLength": 255
        },
        "displayName": {
          "description": "The name of the environment to present to the user.",
          "example": "US East",
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type2"
        }
      },
      "required": [
        "id",
        "displayName",
        "type"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "The type of the environment.",
      "example": "unmapped",
      "type": "string",
      "enum": [
        "unmapped",
        "development",
        "testing",
        "staging",
        "production"
      ]
    },
    "SchemaVersion2": {
      "title": "SchemaVersion2",
      "description": "The DeploymentData schema version used for this deployment data.\n\nPlaceholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "RestDeployments01BulkResponse": {
      "title": "RestDeployments01BulkResponse",
      "description": "The result of a successful submitDeployments request.",
      "type": "object",
      "properties": {
        "acceptedDeployments": {
          "description": "The keys of deployments that have been accepted for submission. A deployment key is a composite key that consists of `pipelineId`, `environmentId` and `deploymentSequenceNumber`. A deployment may be rejected if it was only associated with unknown issue keys. Note that a deployment that isn't updated due to it's updateSequenceNumber being out of order is not considered a failed submission.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcceptedDeployment"
          }
        },
        "rejectedDeployments": {
          "description": "Details of deployments that have not been accepted for submission, usually due to a problem with the request data. The object will contain the deployment key and any errors associated with that deployment that have prevented it being submitted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RejectedDeployment"
          }
        },
        "unknownIssueKeys": {
          "description": "Issue keys that are not known on this Jira instance (if any). These may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist. If a deployment has been associated with issue keys other than those in this array it will still be stored against those valid keys. If a deployment was only associated with issue keys deemed to be invalid it won't be persisted.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          }
        }
      }
    },
    "AcceptedDeployment": {
      "title": "AcceptedDeployment",
      "description": "Fields that uniquely reference a deployment.",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "The identifier of a pipeline, must be unique for the provider.",
          "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c",
          "type": "string",
          "maxLength": 255
        },
        "environmentId": {
          "description": "The identifier of an enviroment, must be unique for the provider so that it can be shared across pipelines.",
          "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba",
          "type": "string",
          "maxLength": 255
        },
        "deploymentSequenceNumber": {
          "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.",
          "example": 100,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "pipelineId",
        "environmentId",
        "deploymentSequenceNumber"
      ]
    },
    "RejectedDeployment": {
      "title": "RejectedDeployment",
      "description": "A deployment that has not been accepted for submission, usually due to a problem with the request data.\n\nThe object is comprised of the key of the rejected deployment and the corresponding error messages.",
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/Key1"
        },
        "errors": {
          "description": "The error messages for the rejected deployment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "required": [
        "key",
        "errors"
      ]
    },
    "Key1": {
      "title": "Key1",
      "description": "The key of the rejected deployment",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "The identifier of a pipeline, must be unique for the provider.",
          "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c",
          "type": "string",
          "maxLength": 255
        },
        "environmentId": {
          "description": "The identifier of an enviroment, must be unique for the provider so that it can be shared across pipelines.",
          "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba",
          "type": "string",
          "maxLength": 255
        },
        "deploymentSequenceNumber": {
          "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.",
          "example": 100,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "pipelineId",
        "environmentId",
        "deploymentSequenceNumber"
      ]
    },
    "Error": {
      "title": "Error",
      "description": "A message supplied in the case of an error.",
      "type": "object",
      "properties": {
        "message": {
          "description": "A human-readable message describing the error.",
          "type": "string"
        },
        "errorTraceId": {
          "description": "An optional trace ID that can be used by Jira developers to locate the source of the error.",
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "RestDeployments01PipelinesEnvironmentsDeploymentsDeploymentSequenceNumberResponse": {
      "title": "RestDeployments01PipelinesEnvironmentsDeploymentsDeploymentSequenceNumberResponse",
      "description": "Data related to a specific deployment in a specific environment that the deployment is present in.",
      "type": "object",
      "properties": {
        "deploymentSequenceNumber": {
          "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.",
          "example": 100,
          "type": "integer",
          "format": "int64"
        },
        "updateSequenceNumber": {
          "description": "A number used to apply an order to the updates to the deployment, as identified by the deploymentSequenceNumber, in the case of out-of-order receipt of update requests. It must be a monotonically increasing number. For example, epoch time could be one way to generate the updateSequenceNumber.",
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the deployment information with.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "displayName": {
          "description": "The human-readable name for the deployment. Will be shown in the UI.",
          "example": "Deployment number 16 of Data Depot",
          "type": "string",
          "maxLength": 255
        },
        "url": {
          "description": "A URL users can use to link to this deployment, in this environment.",
          "example": "http://mydeployer.com/project1/1111-222-333/prod-east",
          "type": "string",
          "maxLength": 2000
        },
        "description": {
          "description": "A short description of the deployment",
          "example": "The bits are being transferred",
          "type": "string",
          "maxLength": 255
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the deployment.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "An (optional) additional label that may be displayed with deployment information. Can be used to display version information etc. for the deployment.",
          "example": "Release 2018-01-20_08-47-bc2421a",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "environment": {
          "$ref": "#/definitions/Environment2"
        },
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion3"
        }
      },
      "required": [
        "deploymentSequenceNumber",
        "updateSequenceNumber",
        "issueKeys",
        "displayName",
        "url",
        "description",
        "lastUpdated",
        "state",
        "pipeline",
        "environment"
      ]
    },
    "SchemaVersion3": {
      "title": "SchemaVersion3",
      "description": "The DeploymentData schema version used for this deployment data. Placeholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "RestBuilds01BulkRequest": {
      "title": "RestBuilds01BulkRequest",
      "description": "The payload used to submit (update / insert) build data.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Arbitrary properties to tag the submitted builds with. These properties can be used for delete operations to e.g. clean up all builds associated with an account in the event that the account is removed from your system. Note that these properties will never be returned with build data. They are not intended for use as metadata to associate with a build. Internally they are stored as a hash so that personal information etc. is never stored within Jira. A maximum of 5 properties can be associated with a build.",
          "example": "{\r\n  \"accountId\": \"account-234\",\r\n  \"projectId\": \"project-123\"\r\n}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "builds": {
          "description": "A list of builds to submit to Jira. Each build may be associated with one or more Jira issue keys, and will be associated with any properties included in this request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Build"
          },
          "minItems": 1
        }
      },
      "required": [
        "builds"
      ]
    },
    "Build": {
      "title": "Build",
      "description": "Data related to a single build",
      "type": "object",
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion4"
        },
        "pipelineId": {
          "description": "An ID that relates a sequence of builds. Depending on your use case this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.",
          "example": "my-build-plan",
          "type": "string",
          "maxLength": 255
        },
        "buildNumber": {
          "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.",
          "example": 16,
          "type": "integer",
          "format": "int64"
        },
        "updateSequenceNumber": {
          "description": "A nubmer used to apply an order to the updates to the build, as identified by `pipelineId` and `buildNumber`,\nin the case of out-of-order receipt of update requests.\n\nIt must be a monotonically increasing number. For example, epoch time could be one way to generate the\n`updateSequenceNumber`.\n\nUpdates for a build that is received with an `updateSqeuenceNumber` less than or equal to what is currently\nstored will be ignored.",
          "example": 1523494301448,
          "type": "integer",
          "format": "int64"
        },
        "displayName": {
          "description": "The human-readable name for the build.\n\nWill be shown in the UI.",
          "example": "My Project build #16",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "description": "An optional description to attach to this build.\n\nThis may be anything that makes sense in your system.",
          "example": "My Project build #16: Failed",
          "type": "string",
          "maxLength": 255
        },
        "label": {
          "description": "A human-readable string that to provide information about the build.",
          "type": "string",
          "maxLength": 255
        },
        "url": {
          "description": "The URL to this build in your system.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State2"
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the build.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the build information with.\n\nYou are free to associate issue keys in any way you like. However, we recommend that you use the name\nof the branch the build was executed on, and extract issue keys from that name using a simple regex. This has\nthe advantage that it provides an intuitive association of builds to issue keys.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "testInfo": {
          "$ref": "#/definitions/TestInfo"
        },
        "references": {
          "description": "Optional information that links a build to a commit, branch etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "minItems": 1,
          "maxItems": 5
        }
      },
      "required": [
        "pipelineId",
        "buildNumber",
        "updateSequenceNumber",
        "displayName",
        "url",
        "state",
        "lastUpdated",
        "issueKeys"
      ]
    },
    "SchemaVersion4": {
      "title": "SchemaVersion4",
      "description": "The schema version used for this data.\n\nPlaceholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "State2": {
      "title": "State2",
      "description": "The state of this build",
      "example": "pending",
      "type": "string",
      "enum": [
        "pending",
        "in_progress",
        "successful",
        "failed",
        "cancelled",
        "unknown"
      ]
    },
    "TestInfo": {
      "title": "TestInfo",
      "description": "Optional information about tests that were executed during the build.",
      "type": "object",
      "properties": {
        "totalNumber": {
          "description": "The total number of tests considered during a build.",
          "example": 150,
          "type": "integer",
          "format": "int64"
        },
        "numberPassed": {
          "description": "The number of tests that passed during a build.",
          "example": 145,
          "type": "integer",
          "format": "int64"
        },
        "numberFailed": {
          "description": "The number of tests that failed during a build.",
          "example": 5,
          "type": "integer",
          "format": "int64"
        },
        "numberSkipped": {
          "description": "The number of tests that were skipped during a build.",
          "example": 0,
          "type": "integer",
          "default": 0,
          "format": "int64"
        }
      },
      "required": [
        "totalNumber",
        "numberPassed",
        "numberFailed"
      ]
    },
    "Reference": {
      "title": "Reference",
      "description": "Information that links a build to a commit, branch etc.\n\nUsed to provide a richer user experience by enabling us to associate builds from your system with e.g.\nbranches / commits / tags etc. supplied by another app in the Jira UI.",
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/Commit3"
        },
        "ref": {
          "$ref": "#/definitions/Ref"
        }
      }
    },
    "Commit3": {
      "title": "Commit3",
      "description": "Details about the commit the build was run against.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the commit. E.g. for a Git repository this would be the SHA1 hash.",
          "example": "08cd9c26b2b8d7cf6e6af6b49da8895d065c259f",
          "type": "string",
          "maxLength": 255
        },
        "repositoryUri": {
          "description": "An identifier for the repository containing the commit.\n\nIn most cases this should be the URL of the repository in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be some identifier that is\nunique to that repository.",
          "example": "https://bitbucket.org/atlassian/biij-vendor-api",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "id",
        "repositoryUri"
      ]
    },
    "Ref": {
      "title": "Ref",
      "description": "Details about the ref (branch, tag etc.) the build was run on.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the ref the build ran on",
          "example": "feature/ISSUE-123-some-work",
          "type": "string",
          "maxLength": 255
        },
        "uri": {
          "description": "An identifer for the ref.\n\nIn most cases this should be the URL of the tag/branch etc. in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be something that uniquely\nidentifies the ref.",
          "example": "https://bitbucket.org/atlassian/biij-vendor-api/refs/feature/ISSUE-123-some-work",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "name",
        "uri"
      ]
    },
    "RestBuilds01BulkResponse": {
      "title": "RestBuilds01BulkResponse",
      "description": "The result of a successful `submitBuilds` request.",
      "type": "object",
      "properties": {
        "acceptedBuilds": {
          "description": "The keys of builds that have been accepted for submission. A build key is a composite key that consists of `pipelineId` and `buildNumber`. A build may be rejected if it was only associated with unknown issue keys, or if the submitted data for that build does not match the required schema. Note that a build that isn't updated due to it's `updateSequenceNumber` being out of order is not considered a failed submission.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcceptedBuild"
          }
        },
        "rejectedBuilds": {
          "description": "Details of builds that have not been accepted for submission. A build may be rejected if it was only associated with unknown issue keys, or if the submitted data for the build does not match the required schema.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RejectedBuild"
          }
        },
        "unknownIssueKeys": {
          "description": "Issue keys that are not known on this Jira instance (if any). These may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist. If a build has been associated with issue keys other than those in this array it will still be stored against those valid keys. If a build was only associated with issue keys deemed to be invalid it won't be persisted.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          }
        }
      }
    },
    "AcceptedBuild": {
      "title": "AcceptedBuild",
      "description": "Fields that uniquely reference a build.",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "An ID that relates a sequence of builds. Depending on your system this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.",
          "example": "my-build-plan",
          "type": "string",
          "maxLength": 255
        },
        "buildNumber": {
          "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.",
          "example": 16,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "pipelineId",
        "buildNumber"
      ]
    },
    "RejectedBuild": {
      "title": "RejectedBuild",
      "description": "A build that has not been accepted for submission, usually due to a problem with the request data.\n\nThe object is comprised of the key of the rejected build and the corresponding error messages.",
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/Key2"
        },
        "errors": {
          "description": "The error messages for the rejected build",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "required": [
        "key",
        "errors"
      ]
    },
    "Key2": {
      "title": "Key2",
      "description": "The key of the rejected build",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "An ID that relates a sequence of builds. Depending on your system this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.",
          "example": "my-build-plan",
          "type": "string",
          "maxLength": 255
        },
        "buildNumber": {
          "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.",
          "example": 16,
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "pipelineId",
        "buildNumber"
      ]
    },
    "RestBuilds01PipelinesBuildsResponse": {
      "title": "RestBuilds01PipelinesBuildsResponse",
      "description": "Data related to a single build",
      "type": "object",
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion5"
        },
        "pipelineId": {
          "description": "An ID that relates a sequence of builds. Depending on your use case this might be a project ID, pipeline ID, plan key etc. - whatever logical unit you use to group a sequence of builds. The combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.",
          "example": "my-build-plan",
          "type": "string",
          "maxLength": 255
        },
        "buildNumber": {
          "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`. Used to identify the 'most recent' build in that sequence of builds. The combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.",
          "example": 16,
          "type": "integer",
          "format": "int64"
        },
        "updateSequenceNumber": {
          "description": "A nubmer used to apply an order to the updates to the build, as identified by `pipelineId` and `buildNumber`, in the case of out-of-order receipt of update requests. It must be a monotonically increasing number. For example, epoch time could be one way to generate the `updateSequenceNumber`. Updates for a build that is received with an `updateSqeuenceNumber` less than or equal to what is currently stored will be ignored.",
          "example": 1523494301448,
          "type": "integer",
          "format": "int64"
        },
        "displayName": {
          "description": "The human-readable name for the build. Will be shown in the UI.",
          "example": "My Project build #16",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "description": "An optional description to attach to this build. This may be anything that makes sense in your system.",
          "example": "My Project build #16: Failed",
          "type": "string",
          "maxLength": 255
        },
        "label": {
          "description": "A human-readable string that to provide information about the build.",
          "type": "string",
          "maxLength": 255
        },
        "url": {
          "description": "The URL to this build in your system.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State2"
        },
        "lastUpdated": {
          "description": "The last-updated timestamp to present to the user as a summary of the state of the build.",
          "example": "1/20/2018 11:27:25 PM",
          "type": "string",
          "format": "date-time"
        },
        "issueKeys": {
          "description": "The Jira issue keys to associate the build information with. You are free to associate issue keys in any way you like. However, we recommend that you use the name of the branch the build was executed on, and extract issue keys from that name using a simple regex. This has the advantage that it provides an intuitive association of builds to issue keys.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\w{1,255}-\\d{1,255}"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "testInfo": {
          "$ref": "#/definitions/TestInfo"
        },
        "references": {
          "description": "Optional information that links a build to a commit, branch etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "minItems": 1,
          "maxItems": 5
        }
      },
      "required": [
        "pipelineId",
        "buildNumber",
        "updateSequenceNumber",
        "displayName",
        "url",
        "state",
        "lastUpdated",
        "issueKeys"
      ]
    },
    "SchemaVersion5": {
      "title": "SchemaVersion5",
      "description": "The schema version used for this data. Placeholder to support potential schema changes in the future.",
      "example": "1.0",
      "type": "string",
      "enum": [
        "1.0"
      ]
    }
  },
  "tags": [
    {
      "name": "Backlog",
      "description": "Apis related to the backlog"
    },
    {
      "name": "Board",
      "description": "Apis related to boards"
    },
    {
      "name": "Epic",
      "description": "Apis related to epics"
    },
    {
      "name": "Issue",
      "description": "Apis related to issues"
    },
    {
      "name": "Sprint",
      "description": "Apis related to sprints"
    },
    {
      "name": "Development Information",
      "description": "Apis related to integrating development information (commits, branches and pull requests) with Jira. These apis are only available to Atlassian Connect apps. To use these apis you must have the Development Tool module (see https://developer.atlassian.com/cloud/jira/software/modules/development-tool/) in your app's descriptor"
    },
    {
      "name": "Feature Flags",
      "description": "Apis related to integrating Feature Flags with Jira Software. These apis are only available to Atlassian Connect apps. To use these apis you must have the Feature Flag module (see https://developer.atlassian.com/cloud/jira/software/modules/feature-flag/) in your app's descriptor"
    },
    {
      "name": "Deployments",
      "description": "Apis related to integrating deployments with Jira Software. These apis are only available to Atlassian Connect apps. To use these apis you must have the Deployment module (see https://developer.atlassian.com/cloud/jira/software/modules/deployment/) in your app's descriptor."
    },
    {
      "name": "Builds",
      "description": "APIs related to integrating builds data with Jira Software. These apis are only available to Atlassian Connect apps. To use these apis you must have the Build module (see https://developer.atlassian.com/cloud/jira/software/modules/build/) in your app's descriptor."
    }
  ],
  "externalDocs": {
    "url": "https://www.atlassian.com",
    "description": "Find out more about Atlassian things"
  }
}