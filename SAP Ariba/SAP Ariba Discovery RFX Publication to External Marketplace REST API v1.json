{
  "swagger": "2.0",
  "security": [
    {
      "OAuth2": []
    }
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "To use this API, you need to obtain the OAuth client credentials (client ID and secret) from SAP Ariba. After that, pass these client credentials to the SAP Ariba API token endpoint to obtain an access token.",
      "tokenUrl": "https://{regionOauth}/oauth/token",
      "flow": "application",
      "scopes": {}
    }
  },
  "externalDocs": {
    "description": "More information is available at https://developer.ariba.com/api where you can select your region's datacenter.",
    "url": "https://developer.ariba.com/api"
  },
  "info": {
    "version": "1.0",
    "title": "Discovery RFX Publication to External Marketplace API",
    "description": "This API set makes it possible to post SAP Ariba Sourcing RFx events on portals and web sites outside the usual discovery area, increasing the number of potential bidders by exposing events to new audiences in new venues."
  },
  "x-sap-shortText": "Enables you to post SAP Ariba Sourcing RFx events on external marketplaces.",
  "host": "sandbox.api.sap.com",
  "basePath": "/ariba/api/discoveryrfx/v1/sandbox",
  "schemes": [
    "https"
  ],
  "x-servers": [
    {
      "url": "https://{region}/api/discoveryrfx/v1/{environment}",
      "description": "Discovery RFX Publication to External Marketplace API endpoint",
      "templates": {
        "region": {
          "enum": [
            "openapi.ariba.com"
          ],
          "default": "openapi.ariba.com",
          "description": "The SAP Ariba region where the SAP Ariba APIs are used."
        },
        "regionOauth": {
          "enum": [
            "api.ariba.com"
          ],
          "default": "api.ariba.com",
          "description": "The SAP Ariba regional OAuth server associated with the region where the SAP Ariba APIs are used."
        },
        "environment": {
          "enum": [
            "sandbox",
            "prod"
          ],
          "default": "sandbox",
          "description": "Public URI Prefix for different environments, prod is Test or Production environment for Cloud Business Applications and sandbox is Mock environment with sample data. For more information, go to the SAP Ariba Developer Portal at https://developer.ariba.com."
        }
      }
    }
  ],
  "tags": [
    {
      "name": "discoveryrfx",
      "description": "Discovery RFX Publication to External Marketplace API"
    },
    {
      "name": "US",
      "description": "US data center"
    },
    {
      "name": "event-controller",
      "description": "Rfx Event Controller"
    }
  ],
  "paths": {
    "/events": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "getRfxEventStatus",
        "operationId": "getRfxEventStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "rsqlfilter",
            "in": "query",
            "description": "rsqlfilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/action/site/{siteId}/events/{eventId}/acknowledge": {
      "post": {
        "tags": [
          "event-controller"
        ],
        "summary": "acknowledgeEvents",
        "operationId": "acknowledgeEventsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "eventId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/site/{siteId}/events": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "getNextRfxEvents",
        "operationId": "getNextRfxEventsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "name": "rsqlfilter",
            "in": "query",
            "description": "rsqlfilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/site/{siteId}/events/{eventId}": {
      "put": {
        "tags": [
          "event-controller"
        ],
        "summary": "updateRfxEvent",
        "operationId": "updateRfxEventUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "eventId",
            "required": true,
            "type": "string"
          },
          {
            "name": "rsqlfilter",
            "in": "query",
            "description": "rsqlfilter",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "biddingUrlData",
            "description": "The external bidding url data in json format. e.g. '{\"url\":\"http://gov.bc.ca\"}' ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/site/{siteId}/events/{eventId}/attachment/{cId}": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "getRfxAttachment",
        "operationId": "getRfxAttachmentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "eventId",
            "required": true,
            "type": "string"
          },
          {
            "name": "cId",
            "in": "path",
            "description": "cId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InputStreamResource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "awardDate": {
          "type": "string"
        },
        "buyerANID": {
          "type": "string"
        },
        "contractLength": {
          "$ref": "#/definitions/Number"
        },
        "description": {
          "type": "string"
        },
        "discoveryURL": {
          "type": "string"
        },
        "eventId": {
          "type": "string"
        },
        "opportunityAmtRange": {
          "$ref": "#/definitions/AmountRange"
        },
        "postingTitle": {
          "type": "string"
        },
        "productCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseDeadline": {
          "type": "string"
        },
        "serviceLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startDate": {
          "type": "string"
        }
      }
    },
    "InputStream": {
      "type": "object"
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "Number": {
      "type": "object"
    },
    "AmountRange": {
      "type": "object",
      "properties": {
        "lowerEnd": {
          "type": "string"
        },
        "upperEnd": {
          "type": "string"
        }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "$ref": "#/definitions/Number"
        },
        "isZip": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputStreamResource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    }
  }
}