{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Approval API",
        "description": "The SAP Fieldglass Approval API allows clients to approve or reject SAP Fieldglass work items. Clients retrieve the work items pending an approval action from the authenticated user and return the workflow action to be performed (either approve or reject). The list and details provided by the SAP Fieldglass API give clients the ability to present work items for approval to their users with the level of detail needed to make an informed approval decision and the mechanism to return the approval or rejection decision.'",
        "termsOfService": "https://www.fieldglass.net/TermsOfUse.en_US.pdf",
        "contact": {
            "name": "SAP Fieldglass Approval API",
            "url": "http://www.fieldglass.com",
            "email": "Fieldglass_API@sap.com"
        },
        "license": {
            "name": "SAP Fieldglass",
            "url": "https://www.fieldglass.net/TermsOfUse.en_US.pdf"
        }
    },
    "externalDocs": {
        "description": "SAP Fieldglass Approval API Guide",
        "url": "https://help.sap.com/viewer/695f67ff045b402bad469e7340b3108c/Latest/en-US"
    },
    "x-servers": [
        {
            "url": "https://{hostname}/api/{suffix}",
            "description": "REST API",
            "templates": {
                "hostname": {
                    "enum": [
                        "www.fieldglass.net"
                    ],
                    "default": "www.fieldglass.net",
                    "description": "The SAP Fieldglass region where the SAP Fieldglass APIs are used."
                },
                "suffix": {
                    "enum": [
                        "v1",
                        "vc"
                    ],
                    "default": "vc",
                    "description": "The suffix for the URL."
                }
            }
        }
    ],
    "x-sap-shortText": "Enables you to approve or reject SAP Fieldglass work items.",
    "host": "sandbox.api.sap.com",
    "basePath": "/fieldglass/api/v1",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "OAuth2": {
            "type": "oauth2",
            "description": "To use this REST API, you need to get OAuth client credentials (user credentials and client-specific application key) from an SAP Fieldglass account representative. After that, you need to pass the obtained client credentials to the SAP Fieldglass token endpoint to obtain an access token.",
            "flow": "application",
            "tokenUrl": "https://api1.fgvms.com/api/oauth2/v2.0/token?grant_type=client_credentials",
            "scopes": {
                "user": "approve work items"
            }
        }
    },
    "security": [
        {
            "OAuth2": [
                "user"
            ]
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/approvals": {
            "get": {
                "summary": "Get a list of items that require approval",
                "description": "Returns a list of work items requiring approval action.",
                "tags": [
                    "Approval"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/headerAuthorization"
                    },
                    {
                        "$ref": "#/parameters/headerApplicationKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/approvals"
                        }
                    },
                    "400": {
                        "description": "Bad Request. This response is returned if the specified URL is invalid, the request is not formatted correctly, or if the request is missing a required field."
                    },
                    "401": {
                        "description": "Unauthorized. User/password or application key is not verified.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Token is not verified."
                    },
                    "404": {
                        "description": "Not Found. Service being requested does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error. Server is not available.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "503": {
                        "description": "Internal Server Error. Server is not available.",
                        "examples": {
                            "text/html": "<html><body><b>Http/1.1 Service Unavailable</b></body> </html>"
                        }
                    }
                }
            }
        },
        "/approvals/module_{moduleId}": {
            "get": {
                "summary": "Get items that require approval for a module",
                "description": "Returns a list of work items requiring approval action, filtered down to a specific module.",
                "tags": [
                    "Approval"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/headerAuthorization"
                    },
                    {
                        "$ref": "#/parameters/headerApplicationKey"
                    },
                    {
                        "name": "moduleId",
                        "description": "The ID for the module (for example, 40 for Job Posting or 270 for Work Order). A full list can be found in the supporting documentation.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/approvals"
                        }
                    },
                    "400": {
                        "description": "Bad Request. This response is returned if the specified URL is invalid, the request is not formatted correctly, or if the request is missing a required field."
                    },
                    "401": {
                        "description": "Unauthorized. User/password or application key is not verified.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Token is not verified."
                    },
                    "404": {
                        "description": "Not Found. Service being requested does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error. Server is not available.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "503": {
                        "description": "Internal Server Error. Server is not available.",
                        "examples": {
                            "text/html": "<html><body><b>Http/1.1 Service Unavailable</b></body> </html>"
                        }
                    }
                }
            }
        },
        "/approvals/module_{moduleId}/{workItemId}/action/{action}": {
            "post": {
                "summary": "Approve or reject an item",
                "description": "Take action on the work item by either approving or rejecting it.",
                "tags": [
                    "Approval"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/headerAuthorization"
                    },
                    {
                        "$ref": "#/parameters/headerApplicationKey"
                    },
                    {
                        "name": "moduleId",
                        "description": "The ID for the module (for example, 40 for Job Posting or 270 for Work Order). A full list can be found in the supporting documentation.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workItemId",
                        "description": "The ID of the work item. You can get this from the response received when getting the list of items that require approval.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "description": "The action to take on the work item. This can be either ''approve'' or ''reject''. If it is reject, the reasonId is required.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comments",
                        "description": "Any comments about the action.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reasonId",
                        "description": "The reasonId for the rejection. This is required when the action is 'reject'. You can get a list of rejection reasons available for the module from the response when getting rejection reasons.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/approvals"
                        }
                    },
                    "400": {
                        "description": "Bad Request. This response is returned if the specified URL is invalid, the request is not formatted correctly, or if the request is missing a required field."
                    },
                    "401": {
                        "description": "Unauthorized. User/password or application key is not verified.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Token is not verified."
                    },
                    "404": {
                        "description": "Not Found. Service being requested does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error. Server is not available.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "503": {
                        "description": "Internal Server Error. Server is not available.",
                        "examples": {
                            "text/html": "<html><body><b>Http/1.1 Service Unavailable</b></body> </html>"
                        }
                    }
                }
            }
        },
        "/approvals/module_{moduleId}/{workItemId}": {
            "get": {
                "summary": "Get details for work item",
                "description": "Returns details for a specific work item.",
                "tags": [
                    "Approval"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/headerAuthorization"
                    },
                    {
                        "$ref": "#/parameters/headerApplicationKey"
                    },
                    {
                        "name": "moduleId",
                        "description": "The ID for the module (for example, 40 for Job Posting or 270 for Work Order). A full list can be found in the supporting documentation.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workItemId",
                        "description": "The ID of the work item.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/approvals"
                        }
                    },
                    "400": {
                        "description": "Bad Request. This response is returned if the specified URL is invalid, the request is not formatted correctly, or if the request is missing a required field."
                    },
                    "401": {
                        "description": "Unauthorized. User/password or application key is not verified.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Token is not verified."
                    },
                    "404": {
                        "description": "Not Found. Service being requested does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error. Server is not available.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "503": {
                        "description": "Internal Server Error. Server is not available.",
                        "examples": {
                            "text/html": "<html><body><b>Http/1.1 Service Unavailable</b></body> </html>"
                        }
                    }
                }
            }
        },
        "/approvals/reject_reasons/module_{moduleId}": {
            "get": {
                "summary": "Get rejection reasons",
                "description": "Returns all configured work item rejection reasons by module.",
                "tags": [
                    "Approval"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/headerAuthorization"
                    },
                    {
                        "$ref": "#/parameters/headerApplicationKey"
                    },
                    {
                        "name": "moduleId",
                        "description": "The ID for the module (for example, 40 for Job Posting or 270 for Work Order). A full list can be found in the supporting documentation.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/approvals"
                        }
                    },
                    "400": {
                        "description": "Bad Request. This response is returned if the specified URL is invalid, the request is not formatted correctly, or if the request is missing a required field."
                    },
                    "401": {
                        "description": "Unauthorized. User/password or application key is not verified.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden. Token is not verified."
                    },
                    "404": {
                        "description": "Not Found. Service being requested does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error. Server is not available.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "503": {
                        "description": "Internal Server Error. Server is not available.",
                        "examples": {
                            "text/html": "<html><body><b>Http/1.1 Service Unavailable</b></body> </html>"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "headerAuthorization": {
            "name": "Authorization",
            "description": "Only required for production access when using SAP Fieldglass.",
            "type": "string",
            "in": "header",
            "required": false
        },
        "headerApplicationKey": {
            "name": "X-ApplicationKey",
            "description": "The company-specific key provided by SAP Fieldglass for API access. Required for production access.",
            "type": "string",
            "in": "header",
            "required": false
        }
    },
    "definitions": {
        "approvals": {
            "type": "object",
            "properties": {
                "HEADER": {
                    "type": "object",
                    "properties": {
                        "appVersion": {
                            "type": "string",
                            "description": "API version."
                        },
                        "OSUAStr": {
                            "type": "string",
                            "description": "API version"
                        },
                        "numRecs": {
                            "type": "integer",
                            "description": "Number of records returned in the payload."
                        },
                        "status": {
                            "type": "string",
                            "description": "Status of the API call."
                        },
                        "details": {
                            "type": "string",
                            "description": "Always All Ok for successful responses."
                        }
                    }
                },
                "PAYLOAD": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "moduleID": {
                                "type": "string",
                                "description": "Numeric module reference ID."
                            },
                            "moduleName": {
                                "type": "string",
                                "description": "Name of module, also type of object to be approved."
                            },
                            "ID": {
                                "type": "string",
                                "description": "Globally unique database-level identifier of object. This is the ID used for the drill down call. Not visible to end users."
                            },
                            "Attributes": {
                                "type": "object",
                                "properties": {
                                    "ref": {
                                        "type": "string",
                                        "description": "Object ID, visible to end users."
                                    },
                                    "uom": {
                                        "type": "string",
                                        "description": "3-character currency code."
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Name of object as defined by user."
                                    },
                                    "startDate": {
                                        "type": "string",
                                        "description": "Start date."
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "description": "End date."
                                    },
                                    "amount": {
                                        "type": "string",
                                        "description": "Amount to be approved."
                                    },
                                    "refVersion": {
                                        "type": "integer",
                                        "description": "Revision number of object to be approved."
                                    },
                                    "validObject": {
                                        "type": "boolean",
                                        "description": "Always returns false."
                                    },
                                    "createDate": {
                                        "type": "string",
                                        "description": "Recorded start date of object to be approved. Logical value is module dependent."
                                    },
                                    "creatorName": {
                                        "type": "string",
                                        "description": "Creator name."
                                    },
                                    "uniqueName": {
                                        "type": "string",
                                        "description": "Unique name."
                                    },
                                    "emailId": {
                                        "type": "string",
                                        "description": "Unique name."
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Ok if response is OK."
                                    },
                                    "sourceLink": {
                                        "type": "string",
                                        "description": "Source link."
                                    },
                                    "others": {
                                        "type": "object",
                                        "description": "Additional data captured in SAP Fieldglass for the object. Full list of data is module and configuration-dependent and should be consumed/presented as extrinsic."
                                    }
                                }
                            },
                            "Status": {
                                "type": "string",
                                "description": "Ok if response is OK."
                            },
                            "Details": {
                                "type": "string",
                                "description": "All ok if response is OK."
                            },
                            "ActivityID": {
                                "type": "string",
                                "description": "Ok if response is OK."
                            }
                        }
                    }
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "TransactionID": {
                    "type": "string",
                    "description": "Transaction ID."
                },
                "ReturnCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Return code."
                },
                "Message": {
                    "type": "string",
                    "description": "Message."
                }
            }
        },
        "Error": {
            "type": "string"
        }
    }
}