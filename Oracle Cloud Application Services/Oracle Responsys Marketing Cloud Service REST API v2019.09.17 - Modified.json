{
    "swagger":"2.0",
    "info":{
        "title":"REST API for Oracle Responsys Marketing Cloud Service",
        "version":"2019.09.17",
        "description":"REST API for Oracle Responsys Marketing Cloud Service",
        "x-summary":"REST API for Oracle Responsys Marketing Cloud Service"
    },
    "paths":{
        "/rest/api/v1.3/clDocs":{
            "post":{
                "summary":"Create a Content Library Document",
                "operationId":"post _rest_api_v1_3_clDocs",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                ],
                "x-relation":[
                    "createDocument"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Documents"
                ],
                "x-internal-id":"rest-api-v1.3-clDocs-post",
                "x-filename-id":"rest-api-v1.3-cldocs-post"
            }
        },
        "/rest/api/v1.3/clDocs/{docPath}":{
            "post":{
                "summary":"Update Contents of a Content Library Document",
                "operationId":"post _rest_api_v1_3_clDocs_docPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"docPath",
                        "in":"path",
                        "description":"The complete path of the document starting with '/contentlibrary'.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                ],
                "x-relation":[
                    "setDocumentContent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Documents"
                ],
                "x-internal-id":"rest-api-v1.3-clDocs-{docPath}-post",
                "x-filename-id":"rest-api-v1.3-cldocs-docpath-post"
            },
            "put":{
                "summary":"Create a copy of a Content Library Document.",
                "operationId":"put _rest_api_v1_3_clDocs_docPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"docPath",
                        "in":"path",
                        "description":" Destination Document Path",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/copy-content-request"
                        }
                    }
                ],
                "x-relation":[
                    "CopyDocumentContent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Documents"
                ],
                "x-internal-id":"rest-api-v1.3-clDocs-{docPath}-put",
                "x-filename-id":"rest-api-v1.3-cldocs-docpath-put"
            },
            "delete":{
                "summary":"Delete a Content Library Document",
                "operationId":"delete _rest_api_v1_3_clDocs_docPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"docPath",
                        "in":"path",
                        "description":"The complete path of the document starting with '/contentlibrary'.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "deleteDocument"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Documents"
                ],
                "x-internal-id":"rest-api-v1.3-clDocs-{docPath}-delete",
                "x-filename-id":"rest-api-v1.3-cldocs-docpath-delete"
            },
            "get":{
                "summary":"Retrieve contents of a Content Library Document",
                "operationId":"get _rest_api_v1_3_clDocs_docPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocs"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"docPath",
                        "in":"path",
                        "description":"The complete path of the document starting with '/contentlibrary'.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "getDocumentContent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Documents"
                ],
                "x-internal-id":"rest-api-v1.3-clDocs-{docPath}-get",
                "x-filename-id":"rest-api-v1.3-cldocs-docpath-get"
            }
        },
        "/rest/api/v1.3/folders/{folderName}/suppData":{
            "post":{
                "summary":"Create supplemental table",
                "operationId":"post _rest_api_v1_3_folders_folderName_suppData",
                "responses":{
                    "default":{
                        "description":"true/false indicating success or failure.",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/supplementalTable"
                        }
                    }
                ],
                "x-relation":[
                    "createSupplementalTable"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-suppData-post",
                "x-filename-id":"rest-api-v1.3-folders-foldername-suppdata-post"
            }
        },
        "/rest/api/v1.3/clDocImages/{documentPath}":{
            "post":{
                "summary":"Update content of images in a Content Library Document",
                "operationId":"post _rest_api_v1_3_clDocImages_documentPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocImages"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"documentPath",
                        "in":"path",
                        "description":"The complete path of the document starting with '/contentlibrary'.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clDocImages"
                        }
                    }
                ],
                "x-relation":[
                    "setDocumentImages"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Document Images"
                ],
                "x-internal-id":"rest-api-v1.3-clDocImages-{documentPath}-post",
                "x-filename-id":"rest-api-v1.3-cldocimages-documentpath-post"
            },
            "get":{
                "summary":"Retrieve binary content of images in a Content Library Document",
                "operationId":"get _rest_api_v1_3_clDocImages_documentPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clDocImages"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"documentPath",
                        "in":"path",
                        "description":"The complete path of the document starting with '/contentlibrary'.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "getDocumentImages"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Document Images"
                ],
                "x-internal-id":"rest-api-v1.3-clDocImages-{documentPath}-get",
                "x-filename-id":"rest-api-v1.3-cldocimages-documentpath-get"
            }
        },
        "/rest/api/v1.3/attributes/organizations":{
            "get":{
                "summary":"Fetch all organizations",
                "description":"Fetch a list of all organizations within the account.",
                "operationId":"get _rest_api_v1_3_attributes_organizations",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/get-organizations-response"
                        }
                    }
                },
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"rest-api-v1.3-attributes-organizations-get",
                "x-filename-id":"rest-api-v1.3-attributes-organizations-get"
            }
        },
        "/rest/api/v1.3/attributes/programs/{programName}":{
            "get":{
                "summary":"Fetch a program's organization hierarchy",
                "description":"Fetch a list of organizations that can access a program.",
                "operationId":"get _rest_api_v1_3_attributes_programs_programName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/get-assigned-attributes-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"programName",
                        "in":"path",
                        "description":"The Program name",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"rest-api-v1.3-attributes-programs-{programName}-get",
                "x-filename-id":"rest-api-v1.3-attributes-programs-programname-get"
            },
            "post":{
                "summary":"Update a program's organizational access",
                "description":"Update the organizations that can access a program.",
                "operationId":"post _rest_api_v1_3_attributes_programs_programName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/get-assigned-attributes-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"programName",
                        "in":"path",
                        "description":"The Program name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/edit-access-attributes-request"
                        }
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"rest-api-v1.3-attributes-programs-{programName}-post",
                "x-filename-id":"rest-api-v1.3-attributes-programs-programname-post"
            }
        },
        "/rest/api/v1.3/attributes/campaigns/{campaignName}":{
            "get":{
                "summary":"Fetch a campaign's organization hierarchy",
                "description":"Fetch a list of organizations that can access a campaign.",
                "operationId":"get _rest_api_v1_3_attributes_campaigns_campaignName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/get-assigned-attributes-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"The Campaign name",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"rest-api-v1.3-attributes-campaigns-{campaignName}-get",
                "x-filename-id":"rest-api-v1.3-attributes-campaigns-campaignname-get"
            },
            "post":{
                "summary":"Update a campaign's organizational access",
                "description":"Update the organizations that can access a campaign.",
                "operationId":"post _rest_api_v1_3_attributes_campaigns_campaignName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/get-assigned-attributes-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"The Campaign name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/edit-access-attributes-request"
                        }
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"rest-api-v1.3-attributes-campaigns-{campaignName}-post",
                "x-filename-id":"rest-api-v1.3-attributes-campaigns-campaignname-post"
            }
        },
        "/rest/api/v1.3/events ":{
            "get":{
                "summary":"Fetch all the Custom Events",
                "operationId":"get _rest_api_v1_3_events",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/events-collection"
                        }
                    }
                },
                "parameters":[
                ],
                "x-relation":[
                    "instances"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Get all Events"
                ],
                "x-internal-id":"rest-api-v1.3-events -get",
                "x-filename-id":"rest-api-v1.3-events-get"
            }
        },
        "/rest/api/v1.3/lists/{listName}/members":{
            "post":{
                "summary":"Merge List Recipients",
                "operationId":"post _rest_api_v1_3_lists_listName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                ],
                "x-relation":[
                    "mergeListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members-post",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-post"
            },
            "get":{
                "summary":"Retrieve List Recipient using query attribute",
                "operationId":"get _rest_api_v1_3_lists_listName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"qa",
                        "in":"query",
                        "type":"string",
                        "description":"Query Attribute. Can be either <code>r</code> (RIID_), <code>e</code> (EMAIL_ADDRESS_), <code>c</code> (CUSTOMER_ID_), or <code>m</code> (MOBILE_NUMBER_), <code>e_md5</code> (EMAIL_MD5_HASH_ consisting of 32 characters), <code>e_sha256</code> (EMAIL_SHA256_HASH_ consisting of 64 characters). If an <code>e_md5</code> and <code>e_sha256</code> are both provided in the same request, the <code>e_sha256</code> is ignored."
                    },
                    {
                        "name":"fs",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of fields to retrieve or 'all'"
                    },
                    {
                        "name":"id",
                        "in":"query",
                        "type":"string",
                        "description":"ID corresponding to the query attribute"
                    }
                ],
                "x-relation":[
                    "retrieveListRecipients"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members-get",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-get"
            }
        },
        "/rest/api/v1.3/lists/{listName}/members/{riid}":{
            "get":{
                "summary":"Retrieve List Recipient using RIID",
                "operationId":"get _rest_api_v1_3_lists_listName_members_riid",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"riid",
                        "in":"path",
                        "description":"RIID",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"fs",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of fields to retrieve or 'all'"
                    }
                ],
                "x-relation":[
                    "retrieveListRecipientsRIID"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members-{riid}-get",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-riid-get"
            },
            "delete":{
                "summary":"Delete List Recipients based on RIID.",
                "operationId":"delete _rest_api_v1_3_lists_listName_members_riid",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"riid",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "mergeListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members-{riid}-delete",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-riid-delete"
            }
        },
        "/rest/api/v1.3/lists/{listName}/members ":{
            "post":{
                "summary":"Delete multiple Profile List Recipients",
                "operationId":"post _rest_api_v1_3_lists_listName_members?action=delete",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"action",
                        "in":"query",
                        "type":"string",
                        "description":"**action** should have the value **delete**(action=delete).",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/deleteListRecipientsRequest"
                        }
                    }
                ],
                "x-relation":[
                    "deleteListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members -post",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-post-2"
            }
        },
        "/rest/api/v1.3/lists/{listName}/members  ":{
            "post":{
                "summary":"Retrieve multiple Profile List Recipients",
                "operationId":"post _rest_api_v1_3_lists_listName_members?action=get",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"action",
                        "in":"query",
                        "type":"string",
                        "description":"**action** should have the value **get**(action=get).",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/retrieveListRecipientsRequest"
                        }
                    }
                ],
                "x-relation":[
                    "retrieveListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile List Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-members  -post",
                "x-filename-id":"rest-api-v1.3-lists-listname-members-post-3"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/emailAttachments":{
            "post":{
                "summary":"Merge Trigger Email With Attachments",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_emailAttachments",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerEmailWithAttachmentsResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/mergeTriggerEmailWithAttachments"
                        }
                    }
                ],
                "x-relation":[
                    "mergeTriggerEmailWithAttachments"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Merge Trigger Email With Attachments"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-emailAttachments-post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-emailattachments-post"
            }
        },
        "/rest/api/v1.3/lists":{
            "get":{
                "summary":"Fetch All Profile Lists",
                "operationId":"get _rest_api_v1_3_lists",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/lists-collection"
                        }
                    }
                },
                "parameters":[
                ],
                "x-relation":[
                    "instances"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Lists"
                ],
                "x-internal-id":"rest-api-v1.3-lists-get",
                "x-filename-id":"rest-api-v1.3-lists-get"
            }
        },
        "/rest/api/v1.3/folders/{folderName}/content":{
            "get":{
                "summary":"Retrieve Folder Content",
                "description":"Retrieves the content in a specified folder.",
                "operationId":"get _rest_api_v1_3_folders_folderName_content",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/getFolderContent-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "type":"integer",
                        "description":"Starts at 0 and indicates the record number for the response result set"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "type":"integer",
                        "description":"Number of objects to return in the response (defaults to 200 and cannot exceed 200)"
                    }
                ],
                "x-relation":[
                    "getFolderContent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Get Folder Content"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-content-get",
                "x-filename-id":"rest-api-v1.3-folders-foldername-content-get"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/email ":{
            "post":{
                "summary":"Trigger Email Message",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_email ",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerEmail-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/triggerEmailMessage"
                        }
                    }
                ],
                "x-relation":[
                    "triggerEmailMessage"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Trigger Email Message"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-email -post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-email-post"
            }
        },
        "/rest/api/v1.3/programs":{
            "get":{
                "summary":"Fetch All Programs",
                "operationId":"get _rest_api_v1_3_programs",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/programs-collection"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"offset",
                        "in":"query",
                        "type":"integer",
                        "description":"Starts at 0 and indicates the record number for the response result set"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "type":"integer",
                        "description":"Number of programs to return in the response (defaults to 200 and cannot exceed 200)"
                    },
                    {
                        "name":"status",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of status of programs to be fetched. Allowed values are NOT_RUNNING,RUNNING,RUNNING_WITH_ERRORS"
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Programs"
                ],
                "x-internal-id":"rest-api-v1.3-programs-get",
                "x-filename-id":"rest-api-v1.3-programs-get"
            }
        },
        "/rest/api/v1.3/programs/{programName}":{
            "patch":{
                "summary":"Publish or Unpublish a Program",
                "description":"Use this interface to publish a valid program or unpublish a program.",
                "operationId":"patch _rest_api_v1_3_programs_programName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/update-program-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"programName",
                        "in":"path",
                        "type":"string",
                        "description":"Name of the Program to be published or unpublished",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "$ref":"#/definitions/update-program-request"
                        }
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Programs"
                ],
                "x-internal-id":"rest-api-v1.3-programs-{programName}-patch",
                "x-filename-id":"rest-api-v1.3-programs-programname-patch"
            }
        },
        "/rest/api/v1.3/folders/{folderName}/suppData/{tableName}/members":{
            "post":{
                "summary":"Merge Supplemental Table members with PK",
                "operationId":"post _rest_api_v1_3_folders_folderName_suppData_tableName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableMemberswithpk"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"tableName",
                        "in":"path",
                        "description":"Table Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request body",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableMemberswithpk"
                        }
                    }
                ],
                "x-relation":[
                    "mergeTableMembers"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table Members"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-suppData-{tableName}-members-post",
                "x-filename-id":"rest-api-v1.3-folders-foldername-suppdata-tablename-members-post"
            },
            "get":{
                "summary":"Retrieve Supplemental Table member based on a query attribute",
                "operationId":"get _rest_api_v1_3_folders_folderName_suppData_tableName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableRecords"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"tableName",
                        "in":"path",
                        "description":"Table name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"qa",
                        "in":"query",
                        "type":"string",
                        "description":"Query attribute. All of the primary key values of the Supplemental Table must be specified by repeating this parameter."
                    },
                    {
                        "name":"fs",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of fields to retrieve or 'all'"
                    },
                    {
                        "name":"id",
                        "in":"query",
                        "type":"string",
                        "description":"IDs corresponding to the query attribute. All the primary key values of the Supplemental Table must be specified by repeating this parameter. The order of the values must match the order of the Primary Keys specified in the 'qa' parameter."
                    }
                ],
                "x-relation":[
                    "retrieveTableMembers"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table Members"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-suppData-{tableName}-members-get",
                "x-filename-id":"rest-api-v1.3-folders-foldername-suppdata-tablename-members-get"
            },
            "delete":{
                "summary":"Delete Supplemental Table member based on a query attribute",
                "operationId":"delete _rest_api_v1_3_folders_folderName_suppData_tableName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableMemberswithpk"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"tableName",
                        "in":"path",
                        "description":"Table name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"qa",
                        "in":"query",
                        "type":"string",
                        "description":"Query attribute. All of the primary key fields of the Supplemental Table must be specified by repeating this parameter. Do not include other fields."
                    },
                    {
                        "name":"id",
                        "in":"query",
                        "type":"string",
                        "description":"IDs corresponding to the query attribute. All the primary key values of the Supplemental Table must be specified by repeating this parameter. The order of the values must match the order of the primary keys specified in the 'qa' parameter."
                    }
                ],
                "x-relation":[
                    "deleteTableMembers"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table Members"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-suppData-{tableName}-members-delete",
                "x-filename-id":"rest-api-v1.3-folders-foldername-suppdata-tablename-members-delete"
            }
        },
        "/rest/api/v1.3/folders/{folderName}/suppData/{tableName}/members ":{
            "post":{
                "summary":"Merge Table Records",
                "description":"This operation is used to merge (update) Supplemental Table records.",
                "operationId":"post _rest_api_v1_3_folders_folderNam_suppData_tableName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableRecords"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"tableName",
                        "in":"path",
                        "description":"Table name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request body",
                        "schema":{
                            "$ref":"#/definitions/supplementalTableRecords"
                        }
                    }
                ],
                "x-relation":[
                    "mergeTableMembers"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table Members"
                ],
                "x-internal-id":"rest-api-v1.3-folders-{folderName}-suppData-{tableName}-members -post",
                "x-filename-id":"rest-api-v1.3-folders-foldername-suppdata-tablename-members-post-2"
            }
        },
        "/rest/api/v1.3/folder/{folderName}/suppData/{suppTableName}":{
            "get":{
                "summary":"Fetch all the fields or the primary key fields of the Supplemental Table",
                "operationId":"get _rest_api_v1_3_folder_folderName_suppData_suppTableName",
                "responses":{
                    "default":{
                        "description":"Supplemental Data Tables",
                        "schema":{
                            "$ref":"#/definitions/retrieveSuppFieldsResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Folder name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"suppTableName",
                        "in":"path",
                        "description":"Supplemental Table name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"ft",
                        "in":"query",
                        "description":"**ft=pk** returns only the primary key fields. **ft=all** returns all the fields. By default 'ft' is set to 'all'",
                        "type":"string",
                        "required":false
                    }
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Supplemental Table Members"
                ],
                "x-internal-id":"rest-api-v1.3-folder-{folderName}-suppData-{suppTableName}-get",
                "x-filename-id":"rest-api-v1.3-folder-foldername-suppdata-supptablename-get"
            }
        },
        "/rest/api/v1.3/campaigns":{
            "get":{
                "summary":"Fetch All Campaigns",
                "description":"Obtain the campaign properties for all EMD Email, Push, Message Center, SMS, or MMS campaigns.",
                "operationId":"get _rest_api_v1_3_campaigns",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/campaigns-collection"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"offset",
                        "in":"query",
                        "type":"integer",
                        "description":"Starts at 0 and indicates the record number for the response result set"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "type":"integer",
                        "description":"Number of campaigns to return in the response (defaults to 200 and cannot exceed 200)"
                    },
                    {
                        "name":"type",
                        "in":"query",
                        "type":"string",
                        "description":"The type of campaigns to return in the response (email, push, sms, mms or pushiocampaign, defaults to email)"
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Campaigns"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-get",
                "x-filename-id":"rest-api-v1.3-campaigns-get"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}":{
            "get":{
                "summary":"Fetch A Campaign",
                "description":"Use this interface to get an existing EMD Email campaign object. The response returns the campaign object, which includes the campaign ID and the campaign's other properties. The links array contains the campaign object's related API operations, specific to the campaign name where applicable.",
                "operationId":"get _rest_api_v1_3_campaigns_campaignName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/campaigns"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "required": true,
                        "in":"path",
                        "type":"string",
                        "description":"Name of the campaign to be fetched. "
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Campaigns"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-get",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-get"
            }
        },
        "/rest/api/v1.3/folders":{
            "get":{
                "summary":"Retrieve Account Folders",
                "description":"Retrieves all folders in your account.",
                "operationId":"get _rest_api_v1_3_folders",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/getFolders-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"offset",
                        "in":"query",
                        "type":"integer",
                        "description":"Starts at 0 and indicates the record number for the response result set"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "type":"integer",
                        "description":"Number of folders to return in the response (defaults to 200 and cannot exceed 200)"
                    }
                ],
                "x-relation":[
                    "getFolders"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Folders"
                ],
                "x-internal-id":"rest-api-v1.3-folders-get",
                "x-filename-id":"rest-api-v1.3-folders-get"
            }
        },
        "/rest/api/v1.3/suppData":{
            "get":{
                "summary":"Fetch All Supplemental Data Tables",
                "operationId":"get _rest_api_v1_3_suppData",
                "responses":{
                    "default":{
                        "description":"Supplemental Data Tables",
                        "schema":{
                            "$ref":"#/definitions/supp-tables"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Get All Supplemental Tables"
                ],
                "x-internal-id":"rest-api-v1.3-suppData-get",
                "x-filename-id":"rest-api-v1.3-suppdata-get"
            }
        },
        "/rest/api/v1.3/events/{eventName}":{
            "post":{
                "summary":"Trigger Custom Event",
                "operationId":"post _rest_api_v1_3_events_eventName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerEvent-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"eventName",
                        "in":"path",
                        "description":"Event Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/triggerCustomEvent"
                        }
                    }
                ],
                "x-relation":[
                    "triggerCustomEvent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Trigger Event"
                ],
                "x-internal-id":"rest-api-v1.3-events-{eventName}-post",
                "x-filename-id":"rest-api-v1.3-events-eventname-post"
            }
        },
        "/rest/api/v1.3/events/rei/{eventName}":{
            "post":{
                "summary":"Trigger REI Event",
                "operationId":"post _rest_api_v1_3_events_rei_eventName",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerEvent-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"eventName",
                        "in":"path",
                        "description":"Event Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/triggerReiEvent"
                        }
                    }
                ],
                "x-relation":[
                    "triggerReiEvent"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Trigger Event"
                ],
                "x-internal-id":"rest-api-v1.3-events-rei-{eventName}-post",
                "x-filename-id":"rest-api-v1.3-events-rei-eventname-post"
            }
        },
        "/rest/api/v1.3/clFolders":{
            "post":{
                "summary":"Create Content Library Folder",
                "operationId":"post _rest_api_v1_3_clFolders",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clFolders"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clFolders"
                        }
                    }
                ],
                "x-relation":[
                    "createContentLibraryFolder"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Folders"
                ],
                "x-internal-id":"rest-api-v1.3-clFolders-post",
                "x-filename-id":"rest-api-v1.3-clfolders-post"
            }
        },
        "/rest/api/v1.3/clFolders/{folderPath}":{
            "delete":{
                "summary":"Delete Content Library Folder",
                "operationId":"delete _rest_api_v1_3_clFolders_folderPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clFolders"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderPath",
                        "in":"path",
                        "description":"The complete path of the folder starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "deleteContentLibraryFolder"
                ],
                "tags":[
                    "Content Library Folders"
                ],
                "x-internal-id":"rest-api-v1.3-clFolders-{folderPath}-delete",
                "x-filename-id":"rest-api-v1.3-clfolders-folderpath-delete"
            },
            "get":{
                "summary":"List contents of a Content Library Folder",
                "operationId":"get _rest_api_v1_3_clFolders_folderPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/listClFoldersResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"folderPath",
                        "in":"path",
                        "description":"The complete path of the folder starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"type",
                        "in":"query",
                        "type":"string",
                        "description":"Specify what content of a folder needs to be listed. Allowed values are 'all', 'folders', 'docs' or 'items'. Defaults to 'all'"
                    }
                ],
                "x-relation":[
                    "listContentLibraryFolders"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "tags":[
                    "Content Library Folders"
                ],
                "x-internal-id":"rest-api-v1.3-clFolders-{folderPath}-get",
                "x-filename-id":"rest-api-v1.3-clfolders-folderpath-get"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/schedule":{
            "post":{
                "summary":"Create an Email or Push campaign schedule",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_schedule",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/create-retrieve-campaignSchedule-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/campaignSchedule"
                        }
                    }
                ],
                "x-relation":[
                    "createSchedule"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Email or Push Campaign Schedule"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-schedule-post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-schedule-post"
            },
            "get":{
                "summary":"Fetch All Email or Push Campaign Schedules",
                "operationId":"get _rest_api_v1_3_campaigns_campaignName_schedule",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/campaignSchedule-collection"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Email or Push Campaign Schedule"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-schedule-get",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-schedule-get"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/schedule/{scheduleId}":{
            "get":{
                "summary":"Retrieve an Email or Push campaign schedule",
                "operationId":"get _rest_api_v1_3_campaigns_campaignName_schedule_scheduleId",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/create-retrieve-campaignSchedule-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"scheduleId",
                        "in":"path",
                        "description":"Schedule Id",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "getSchedule"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Email or Push Campaign Schedule"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-schedule-{scheduleId}-get",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-schedule-scheduleid-get"
            },
            "put":{
                "summary":"Update an Email or Push campaign schedule",
                "operationId":"put _rest_api_v1_3_campaigns_campaignName_schedule_scheduleId",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/update-delete-campaignSchedule-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"scheduleId",
                        "in":"path",
                        "description":"Schedule Id",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/update-campaignSchedule-request"
                        }
                    }
                ],
                "x-relation":[
                    "updateSchedule"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Email or Push Campaign Schedule"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-schedule-{scheduleId}-put",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-schedule-scheduleid-put"
            },
            "delete":{
                "summary":"Delete an Email or Push campaign schedule",
                "operationId":"delete _rest_api_v1_3_campaigns_campaignName_schedule_scheduleId",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/update-delete-campaignSchedule-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"scheduleId",
                        "in":"path",
                        "description":"Schedule Id",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "updateSchedule"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Email or Push Campaign Schedule"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-schedule-{scheduleId}-delete",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-schedule-scheduleid-delete"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/email":{
            "post":{
                "summary":"Merge Trigger Email",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_email",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerEmailResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/mergeTriggerEmail"
                        }
                    }
                ],
                "x-relation":[
                    "mergeTriggerEmail"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Merge Trigger Email"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-email-post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-email-post-2"
            }
        },
        "/rest/api/v1.3/lists/{listName}/listExtensions":{
            "post":{
                "summary":"Create Profile Extension",
                "operationId":"post _rest_api_v1_3_lists_listName_listExtensions",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/listExtensions"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/listExtensions"
                        }
                    }
                ],
                "x-relation":[
                    "create"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "List Extensions"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-post",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-post"
            },
            "get":{
                "summary":"Fetch All Profile Extensions for a Profile List",
                "operationId":"get _rest_api_v1_3_lists_listName_listExtensions",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/listExtensions-collection"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List Name",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "instances"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "List Extensions"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-get",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-get"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/push ":{
            "post":{
                "summary":"Trigger Push Message",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_push ",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerPush-response"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/triggerPushMessage"
                        }
                    }
                ],
                "x-relation":[
                    "triggerPushMessage"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Trigger Push Message"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-push -post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-push-post"
            }
        },
        "/rest/api/v1.3/campaigns/{campaignName}/sms":{
            "post":{
                "summary":"Merge Trigger SMS",
                "operationId":"post _rest_api_v1_3_campaigns_campaignName_sms",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/triggerSmsResponse"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"campaignName",
                        "in":"path",
                        "description":"Campaign Name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/mergeTriggerSMS"
                        }
                    }
                ],
                "x-relation":[
                    "mergeTriggerSMS"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Merge Trigger SMS"
                ],
                "x-internal-id":"rest-api-v1.3-campaigns-{campaignName}-sms-post",
                "x-filename-id":"rest-api-v1.3-campaigns-campaignname-sms-post"
            }
        },
        "/rest/api/v1.3/clItems/{itemPath}":{
            "post":{
                "summary":"Update a Content Library Media File",
                "operationId":"post _rest_api_v1_3_clItems_itemPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"itemPath",
                        "in":"path",
                        "description":"The complete path of the media file starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                ],
                "x-relation":[
                    "setContentLibraryItem"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Media Items"
                ],
                "x-internal-id":"rest-api-v1.3-clItems-{itemPath}-post",
                "x-filename-id":"rest-api-v1.3-clitems-itempath-post"
            },
            "delete":{
                "summary":"Delete a Content Library Media File",
                "operationId":"delete _rest_api_v1_3_clItems_itemPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"itemPath",
                        "in":"path",
                        "description":"The complete path of the media file starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "deleteContentLibraryItem"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Media Items"
                ],
                "x-internal-id":"rest-api-v1.3-clItems-{itemPath}-delete",
                "x-filename-id":"rest-api-v1.3-clitems-itempath-delete"
            },
            "get":{
                "summary":"Retrieve contents of a Content Library Media File",
                "operationId":"get _rest_api_v1_3_clItems_itemPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"itemPath",
                        "in":"path",
                        "description":"The complete path of the media file starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "getContentLibraryItem"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Media Items"
                ],
                "x-internal-id":"rest-api-v1.3-clItems-{itemPath}-get",
                "x-filename-id":"rest-api-v1.3-clitems-itempath-get"
            }
        },
        "/rest/api/v1.3/clItems":{
            "post":{
                "summary":"Create a Content Library Media File",
                "description":"This operation is used to create a content library media file.",
                "operationId":"post _rest_api_v1_3_clItems",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                ],
                "x-relation":[
                    "setContentLibraryItem"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Media Items"
                ],
                "x-internal-id":"rest-api-v1.3-clItems-post",
                "x-filename-id":"rest-api-v1.3-clitems-post"
            }
        },
        "/rest/api/v1.3/clItems/{destinationItemPath} ":{
            "put":{
                "summary":"Create a copy of a Content Library Media file.",
                "description":"This operation is used to create a copy of a Content Library Media file.",
                "operationId":"post _rest_api_v1_3_clItems_destinationItemPath",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/clItems"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"destinationItemPath",
                        "in":"path",
                        "description":"The complete path of the media file starting with /contentlibrary.",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request Body",
                        "schema":{
                            "$ref":"#/definitions/copy-contentItem-request"
                        }
                    }
                ],
                "x-relation":[
                    "setContentLibraryItem"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Content Library Media Items"
                ],
                "x-internal-id":"rest-api-v1.3-clItems-{destinationItemPath} -put",
                "x-filename-id":"rest-api-v1.3-clitems-destinationitempath-put"
            }
        },
        "/rest/api/v1.3/lists/{listName}/listExtensions/{petName}/members":{
            "post":{
                "summary":"Merge Profile Extension Recipients",
                "description":"Merge recipient data into a Profile Extension Table (PET)",
                "operationId":"post _rest_api_v1_3_lists_listName_listExtensions_petName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"petName",
                        "in":"path",
                        "description":"Profile Extension Table (PET) name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request body",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                ],
                "x-relation":[
                    "mergeProfileExtensionRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-{petName}-members-post",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-petname-members-post"
            },
            "get":{
                "summary":"Retrieve Profile Extension Recipient using a query attribute",
                "description":"Retrieve Profile Extension Table (PET) recipient data using a query attribute",
                "operationId":"get _rest_api_v1_3_lists_listName_listExtensions_petName_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"petName",
                        "in":"path",
                        "description":"Profile Extension Table (PET) name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"qa",
                        "in":"query",
                        "type":"string",
                        "description":"Query attribute can be either 'r' (RIID_), 'e' (EMAIL_ADDRESS_), 'c' (CUSTOMER_ID_), or 'm' (MOBILE_NUMBER_). The corresponding value passed must match what is in the parent Profile List."
                    },
                    {
                        "name":"fs",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of fields to retrieve or 'all'"
                    },
                    {
                        "name":"id",
                        "in":"query",
                        "type":"string",
                        "description":"ID corresponding to the query attribute, used to locate the record to retrieve"
                    }
                ],
                "x-relation":[
                    "retrieveProfileExtensionRecipients"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-{petName}-members-get",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-petname-members-get"
            }
        },
        "/rest/api/v1.3/lists/{listName}/listExtensions/{petName}/members/{riid}":{
            "get":{
                "summary":"Retrieve Profile Extension Recipient using an RIID",
                "description":"Retrieve Profile Extension Table (PET) recipient data using the RIID of the parent Profile List record",
                "operationId":"get _rest_api_v1_3_lists_listName_listExtensions_petName_members_riid",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"petName",
                        "in":"path",
                        "description":"Profile Extension Table (PET) name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"riid",
                        "in":"path",
                        "description":"RIID of the parent Profile List record, which is used to locate the corresponding PET record",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"fs",
                        "in":"query",
                        "type":"string",
                        "description":"Comma separated list of fields to retrieve or 'all'"
                    }
                ],
                "x-relation":[
                    "retrieveProfileExtensionRecipientsRIID"
                ],
                "consumes":[
                    "application/x-www-form-urlencoded"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-{petName}-members-{riid}-get",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-petname-members-riid-get"
            },
            "delete":{
                "summary":"Delete Profile Extension Recipient using an RIID",
                "description":"Delete Profile Extension Table (PET) recipient record using the RIID of the parent Profile List record",
                "operationId":"delete _rest_api_v1_3_lists_listName_listExtensions_petName_members_riid",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"petName",
                        "in":"path",
                        "description":"Profile Extension Table (PET) name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"riid",
                        "in":"path",
                        "description":"RIID of the parent Profile List record, which is used to locate the corresponding PET record",
                        "type":"string",
                        "required":true
                    }
                ],
                "x-relation":[
                    "deleteProfileExtensionRecipientsRIID"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-{petName}-members-{riid}-delete",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-petname-members-riid-delete"
            }
        },
        "/rest/api/v1.3/lists/{listName}/orgListExtensions/members":{
            "put":{
                "summary":"Add or Update RIID to Audience Scope Code Mapping Data",
                "operationId":"put _rest_api_v1_3_lists_listName_orgListExtensions_members",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/mergeOrgListRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request body",
                        "schema":{
                            "$ref":"#/definitions/mergeOrgListRecipients"
                        }
                    }
                ],
                "x-relation":[
                    "mergeOrgListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-orgListExtensions-members-put",
                "x-filename-id":"rest-api-v1.3-lists-listname-orglistextensions-members-put"
            }
        },
        "/rest/api/v1.3/lists/{listName}/listExtensions/{petName}/members ":{
            "post":{
                "summary":"Delete multiple Profile Extension Recipients",
                "description":"Delete multiple Profile Extension Table (PET) recipient records",
                "operationId":"post _rest_api_v1_3_lists_listName_listExtensions_petName_members?action=delete",
                "responses":{
                    "default":{
                        "description":"",
                        "schema":{
                            "$ref":"#/definitions/profileExtensionRecipients"
                        }
                    }
                },
                "parameters":[
                    {
                        "name":"listName",
                        "in":"path",
                        "description":"List name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"petName",
                        "in":"path",
                        "description":"Profile Extension Table (PET) name",
                        "type":"string",
                        "required":true
                    },
                    {
                        "name":"action",
                        "in":"query",
                        "type":"string",
                        "description":"**action** must have the value **delete**(action=delete).",
                        "required":true
                    },
                    {
                        "name":"body",
                        "in":"body",
                        "description":"Request body",
                        "schema":{
                            "$ref":"#/definitions/deleteListRecipientsRequest"
                        }
                    }
                ],
                "x-relation":[
                    "deleteListRecipients"
                ],
                "produces":[
                    "application/json"
                ],
                "tags":[
                    "Profile Extension Recipients"
                ],
                "x-internal-id":"rest-api-v1.3-lists-{listName}-listExtensions-{petName}-members -post",
                "x-filename-id":"rest-api-v1.3-lists-listname-listextensions-petname-members-post-2"
            }
        }
    },
    "definitions":{
        "clDocs":{
            "title":"Content Library Documents",
            "type":"object",
            "properties":{
                "docPath":{
                    "description":"The complete path of the document starting with '/contentlibrary'.",
                    "type":"string"
                },
                "content":{
                    "description":"Document content.",
                    "type":"string"
                }
            },
            "required":[
                "docPath",
                "content"
            ]
        },
        "copy-content-request":{
            "type":"object",
            "title":"copy content document Request",
            "properties":{
                "documentPath":{
                    "description":"Path of source Document",
                    "type":"string"
                }
            }
        },
        "supplementalTable":{
            "title":"create supplemental table Request",
            "type":"object",
            "properties":{
                "table":{
                    "description":"Supplemental table name",
                    "type":"object",
                    "properties":{
                        "objectName":{
                            "type":"string",
                            "description":"Name of the supplemental table"
                        }
                    }
                },
                "records":{
                    "description":"Array of columns corresponding to the supplemental table. ",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"The supplemental table Field Name"
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"The supplemental table Field Type"
                            },
                            "dataExtractionKey":{
                                "type":"boolean",
                                "description":"Data Extraction Key column of the supplemental table"
                            }
                        }
                    }
                },
                "primaryKeys":{
                    "description":"Array of primary keys corresponding to the supplemental table.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            }
        },
        "supplementalTableResponse":{
            "title":"create supplemental table Response",
            "type":"boolean",
            "description":"true/false indicating success or failure."
        },
        "clDocImages":{
            "title":"Content Library Document Images",
            "type":"object",
            "properties":{
                "documentPath":{
                    "description":"The complete path of the document starting with '/contentlibrary'.",
                    "type":"string"
                },
                "imageData":{
                    "description":"Images in the content library document.",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "itemPath":{
                                "type":"string",
                                "description":"Name of the image in the content library document."
                            },
                            "itemData":{
                                "type":"string",
                                "format":"byte",
                                "description":"Base64 encoded binary string of the image content."
                            }
                        }
                    }
                }
            },
            "required":[
                "documentPath",
                "imageData"
            ]
        },
        "attribute":{
            "type":"object",
            "title":"attribute",
            "properties":{
                "id":{
                    "description":"ID of the attribute",
                    "type":"string"
                },
                "name":{
                    "description":"Name of the attribute",
                    "type":"string"
                },
                "lineage":{
                    "description":"Description of the attribute's heirarchy",
                    "type":"string"
                },
                "children":{
                    "description":"Children of the Attribute",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/attribute"
                    }
                }
            }
        },
        "assigned-attribute":{
            "type":"object",
            "title":"assigned attribute",
            "properties":{
                "id":{
                    "description":"ID of the attribute",
                    "type":"string"
                },
                "name":{
                    "description":"Name of the attribute",
                    "type":"string"
                },
                "lineage":{
                    "description":"Description of the attribute's heirarchy",
                    "type":"string"
                }
            }
        },
        "organizations":{
            "type":"object",
            "title":"attribute",
            "properties":{
                "attributeValues":{
                    "description":"Value of the Attribute",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/attribute"
                    }
                }
            }
        },
        "attributes":{
            "title":"Attributes",
            "type":"object",
            "properties":{
                "organizations":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/organizations"
                    }
                }
            }
        },
        "get-organizations-response":{
            "title":"Get Organizations",
            "type":"object",
            "properties":{
                "attributes":{
                    "type":"object",
                    "properties":{
                        "organizations":{
                            "type":"object",
                            "properties":{
                                "attributeValues":{
                                    "description":"Value of the Attribute",
                                    "type":"array",
                                    "items":{
                                        "$ref":"#/definitions/attribute"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "get-assigned-attributes-response":{
            "title":"Get Assigned Organizations",
            "type":"object",
            "properties":{
                "attributes":{
                    "type":"object",
                    "properties":{
                        "organizations":{
                            "type":"object",
                            "properties":{
                                "attributeValues":{
                                    "description":"Value of the Assigned Attributes",
                                    "type":"array",
                                    "items":{
                                        "$ref":"#/definitions/assigned-attribute"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "edit-access-attributes-request":{
            "title":"Edit Access Attributes Request",
            "type":"object",
            "properties":{
                "attributes":{
                    "type":"object",
                    "properties":{
                        "organizations":{
                            "type":"object",
                            "properties":{
                                "attributeValues":{
                                    "description":"List of Attributes to be assigned",
                                    "type":"array",
                                    "items":{
                                        "type":"object",
                                        "description":"Attribute name",
                                        "properties":{
                                            "name":{
                                                "type":"string",
                                                "description":"Name of the Attribute to be assigned"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "events":{
            "title":"Custom Events",
            "type":"object",
            "properties":{
                "eventName":{
                    "description":"The name of the custom event",
                    "type":"string"
                },
                "description":{
                    "description":"The description of the custom event",
                    "type":"string"
                },
                "eventType":{
                    "description":"The type of the custom event",
                    "type":"string"
                }
            },
            "required":[
                "eventName",
                "description",
                "eventType"
            ]
        },
        "events-collection":{
            "title":"Custom Events",
            "type":"array",
            "items":{
                "$ref":"#/definitions/events"
            }
        },
        "profileListRecipients":{
            "title":"Profile List Recipients",
            "type":"object",
            "properties":{
                "recordData":{
                    "description":"Record data that represents Field Names and corresponding values for the recipient.",
                    "required":[
                        "fieldNames",
                        "records"
                    ],
                    "type":"object",
                    "properties":{
                        "fieldNames":{
                            "type":"array",
                            "description":"Field Names in the Profile List",
                            "items":{
                                "type":"string"
                            }
                        },
                        "records":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"array",
                                "description":"Field Values for the recipient in the Profile List",
                                "items":{
                                    "type":"string"
                                }
                            }
                        },
                        "mapTemplateName":{
                            "type":"string",
                            "description":"The Map Template in Responsys that can be used to map Field Names of the Profile List to Column Names."
                        }
                    }
                },
                "mergeRule":{
                    "description":"Merge rule used to merge recipient records in a Profile List. Only used during the merge operation.",
                    "type":"object",
                    "properties":{
                        "rejectRecordIfChannelEmpty":{
                            "type":"string",
                            "description":"String containing comma-separated channel codes that if specified will result in record rejection when the channel address field is null. Channel codes are 'E' (Email), 'M' (Mobile), 'P' (Postal Code). For example 'E,M' would indicate that a record that has a null for Email or Mobile Number value should be rejected. This parameter can also be set to null or to an empty string, which will cause the validation to not be performed for any channel, except if the matchColumnName1 parameter is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_. When matchColumnName1 is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_, then the null or empty string setting is effectively ignored for that channel."
                        },
                        "htmlValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'H' may represent a preference for HTML formatted email."
                        },
                        "textValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'T' may represent a preference for Text formatted email."
                        },
                        "matchColumnName1":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"First match column for determining whether an insert or update should occur."
                        },
                        "insertOnNoMatch":{
                            "type":"boolean",
                            "description":"Indicates what should be done for records where a match is not found (true = insert / false = no insert)."
                        },
                        "optinValue":{
                            "type":"string",
                            "description":"Value of incoming opt-in status data that represents an opt-in status. For example, 'I' may represent an opt-in status."
                        },
                        "defaultPermissionStatus":{
                            "enum":[
                                "OPTIN",
                                "OPTOUT"
                            ],
                            "type":"string",
                            "description":"This value must be specified as either OPTIN or OPTOUT and would be applied to all of the records contained in the API call. If this value is not explicitly specified, then it is set to OPTOUT."
                        },
                        "optoutValue":{
                            "type":"string",
                            "description":"Value of incoming opt-out status data that represents an optout status. For example, '0' may represent an opt-out status."
                        },
                        "matchColumnName2":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"Second match column for determining whether an insert or update should occur. (optional)."
                        },
                        "updateOnMatch":{
                            "enum":[
                                "REPLACE_ALL",
                                "NO_UPDATE"
                            ],
                            "type":"string",
                            "description":"Controls how the existing record should be updated."
                        },
                        "matchOperator":{
                            "enum":[
                                "NONE",
                                "AND"
                            ],
                            "type":"string",
                            "description":"Operator to join match column names"
                        }
                    }
                }
            },
            "required":[
                "recordData",
                "mergeRule"
            ]
        },
        "deleteListRecipientsRequest":{
            "title":"Delete List Recipients",
            "type":"object",
            "properties":{
                "queryAttribute":{
                    "description":"Query Attribute based on which records will be deleted. Can have the values r(RIID),e(email address),m(mobile number),c(customer id)",
                    "type":"string"
                },
                "ids":{
                    "type":"array",
                    "description":"Array of values corresponding to the fieldNames.",
                    "items":{
                        "type":"array",
                        "description":"Field Values for the recipient in the Profile List",
                        "items":{
                            "type":"string"
                        }
                    }
                }
            },
            "required":[
                "queryAttribute",
                "ids"
            ]
        },
        "retrieveListRecipientsRequest":{
            "title":"Retrieve List Recipients",
            "type":"object",
            "properties":{
                "queryAttribute":{
                    "description":"Query Attribute based on which records will be retrieved. Can have the values r(RIID),e(email address),m(mobile number),c(customer id), e_md5(EMAIL_MD5_HASH_), e_sha256(EMAIL_SHA256_HASH_)",
                    "type":"string"
                },
                "fieldList":{
                    "type":"array",
                    "description":"Array of field names to be retrieved",
                    "items":{
                        "type":"array",
                        "description":"Field Name in the Profile List",
                        "items":{
                            "type":"string"
                        }
                    }
                },
                "ids":{
                    "type":"array",
                    "description":"Array of values corresponding to the fieldNames.",
                    "items":{
                        "type":"array",
                        "description":"Field Values for the recipient in the Profile List",
                        "items":{
                            "type":"string"
                        }
                    }
                }
            },
            "required":[
                "queryAttribute",
                "fieldList",
                "ids"
            ]
        },
        "mergeTriggerEmailWithAttachments":{
            "title":"Merge Trigger Email With Attachments",
            "type":"object",
            "properties":{
                "mergeTriggerRecordDataWithAttachments":{
                    "description":"Record data that represents Field Names and corresponding values for the recipient.",
                    "required":[
                        "mergeTriggerRecordsWithAttachments",
                        "fieldNames"
                    ],
                    "type":"object",
                    "properties":{
                        "mergeTriggerRecordsWithAttachments":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"object",
                                "properties":{
                                    "fieldValues":{
                                        "type":"array",
                                        "description":"Values corresponding to the fieldNames.",
                                        "items":{
                                            "type":"string"
                                        }
                                    },
                                    "optionalData":{
                                        "type":"array",
                                        "description":"Optional data containing array of name value pairs.",
                                        "items":{
                                            "type":"object",
                                            "properties":{
                                                "name":{
                                                    "type":"string"
                                                },
                                                "value":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    },
                                    "attachmentData":{
                                        "type":"array",
                                        "description":"Attachment data containing array of pairs of file name and content value.",
                                        "items":{
                                            "type":"object",
                                            "properties":{
                                                "name":{
                                                    "type":"string"
                                                },
                                                "value":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "fieldNames":{
                            "type":"array",
                            "description":"Array of profile list fields that specifies the recipient record data to be sent in the request payload. Must contain the fields specified for matchColumnName1 and, if present, matchColumnName2. May contain other profile list fields as needed.",
                            "items":{
                                "type":"string"
                            }
                        }
                    }
                },
                "mergeRule":{
                    "description":"Merge rule used to merge recipient records in a Profile List. Only used during the merge operation.",
                    "type":"object",
                    "properties":{
                        "rejectRecordIfChannelEmpty":{
                            "type":"string",
                            "description":"String containing comma-separated channel codes that if specified will result in record rejection when the channel address field is null. Channel codes are 'E' (Email), 'M' (Mobile), 'P' (Postal Code). For example 'E,M' would indicate that a record that has a null for Email or Mobile Number value should be rejected. This parameter can also be set to null or to an empty string, which will cause the validation to not be performed for any channel, except if the matchColumnName1 parameter is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_. When matchColumnName1 is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_, then the null or empty string setting is effectively ignored for that channel."
                        },
                        "htmlValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'H' may represent a preference for HTML formatted email."
                        },
                        "textValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'T' may represent a preference for Text formatted email."
                        },
                        "matchColumnName1":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"First match column for determining whether an insert or update should occur."
                        },
                        "insertOnNoMatch":{
                            "type":"boolean",
                            "description":"Indicates what should be done for records where a match is not found (true = insert / false = no insert)."
                        },
                        "optinValue":{
                            "type":"string",
                            "description":"Value of incoming opt-in status data that represents an opt-in status. For example, 'I' may represent an opt-in status."
                        },
                        "defaultPermissionStatus":{
                            "enum":[
                                "OPTIN",
                                "OPTOUT"
                            ],
                            "type":"string",
                            "description":"This value must be specified as either OPTIN or OPTOUT and would be applied to all of the records contained in the API call. If this value is not explicitly specified, then it is set to OPTOUT."
                        },
                        "optoutValue":{
                            "type":"string",
                            "description":"Value of incoming opt-out status data that represents an optout status. For example, '0' may represent an opt-out status."
                        },
                        "matchColumnName2":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"Second match column for determining whether an insert or update should occur. (optional)."
                        },
                        "updateOnMatch":{
                            "enum":[
                                "REPLACE_ALL",
                                "NO_UPDATE"
                            ],
                            "type":"string",
                            "description":"Controls how the existing record should be updated."
                        },
                        "matchOperator":{
                            "enum":[
                                "NONE",
                                "AND"
                            ],
                            "type":"string",
                            "description":"Operator to join match column names"
                        }
                    }
                }
            },
            "required":[
                "mergeTriggerRecordDataWithAttachments",
                "mergeRule"
            ]
        },
        "triggerEmailWithAttachmentsResponse":{
            "title":"Trigger Email With Attachments Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the merge or trigger operations."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "lists":{
            "title":"Profile Lists",
            "type":"object",
            "properties":{
                "name":{
                    "description":"The name of the Profile List",
                    "type":"string"
                },
                "fields":{
                    "description":"The Profile List Fields",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"The Profile List Field Name"
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"The Profile List Field Type"
                            }
                        }
                    }
                }
            },
            "required":[
                "name",
                "fields"
            ]
        },
        "lists-collection":{
            "title":"Profile Lists",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/lists"
                    }
                }
            }
        },
        "getFolderContent-response":{
            "title":"Retrieve Folder Content",
            "type":"object",
            "properties":{
                "riObjects":{
                    "description":"Array of Objects in the given folder",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "id":{
                                "type":"string",
                                "description":"ID of the Object."
                            },
                            "name":{
                                "type":"string",
                                "description":"Name of the Object."
                            },
                            "type":{
                                "type":"string",
                                "description":"Type of the Object."
                            },
                            "subType":{
                                "type":"string",
                                "description":"SubType of the Object."
                            },
                            "folderId":{
                                "type":"string",
                                "description":"Id of the Folder containing the object."
                            }
                        }
                    }
                }
            }
        },
        "triggerEmailMessage":{
            "title":"Trigger Email Message",
            "type":"object",
            "properties":{
                "recipientData":{
                    "description":"Array of Recipients with Optional Data",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "recipient":{
                                "type":"object",
                                "description":"Information about the Recipient.",
                                "properties":{
                                    "customerId":{
                                        "type":"string",
                                        "description":"Recipient's Customer ID."
                                    },
                                    "emailAddress":{
                                        "type":"string",
                                        "description":"Recipient's Email Address."
                                    },
                                    "listName":{
                                        "type":"object",
                                        "description":"Profile List to which the Recipient belongs.",
                                        "properties":{
                                            "folderName":{
                                                "type":"string",
                                                "description":"Folder Name"
                                            },
                                            "objectName":{
                                                "type":"string",
                                                "description":"Profile List Name."
                                            }
                                        }
                                    },
                                    "recipientId":{
                                        "type":"number",
                                        "description":"Recipient's RIID."
                                    },
                                    "mobileNumber":{
                                        "type":"string",
                                        "description":"Recipient's Mobile Number."
                                    },
                                    "emailFormat":{
                                        "enum":[
                                            "HTML_FORMAT",
                                            "TEXT_FORMAT"
                                        ],
                                        "type":"string",
                                        "description":"Email Format."
                                    }
                                },
                                "required":[
                                    "customerId",
                                    "emailAddress",
                                    "recipientId",
                                    "mobileNumber",
                                    "emailFormat"
                                ]
                            },
                            "optionalData":{
                                "type":"array",
                                "description":"Array of optional data containing name value pairs.",
                                "items":{
                                    "type":"object",
                                    "properties":{
                                        "name":{
                                            "type":"string"
                                        },
                                        "value":{
                                            "type":"string"
                                        }
                                    }
                                }
                            }
                        },
                        "required":[
                            "recipient",
                            "optionalData"
                        ]
                    }
                }
            },
            "required":[
                "recipientData"
            ]
        },
        "triggerEmail-response":{
            "title":"Trigger Email Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the trigger operation."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "retrieve-program-response":{
            "type":"object",
            "title":"program",
            "properties":{
                "id":{
                    "description":"ID of the program.",
                    "type":"string"
                },
                "name":{
                    "description":"Name of the program.",
                    "type":"string"
                },
                "folderName":{
                    "description":"Folder name for the program.",
                    "type":"string"
                },
                "listName":{
                    "description":"Name of the list associated with the program",
                    "type":"string"
                },
                "channels":{
                    "description":"List of channels for the program",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "createdOn":{
                    "description":"Creation date of the program",
                    "type":"string"
                },
                "createdBy":{
                    "description":"User that created the program",
                    "type":"string"
                },
                "modifiedOn":{
                    "description":"Last Modified date of the program",
                    "type":"string"
                },
                "modifiedBy":{
                    "description":"User that last modified the program",
                    "type":"string"
                },
                "publishDate":{
                    "description":"Last Publish date of the program",
                    "type":"string"
                },
                "unpublishDate":{
                    "description":"Unpublish date of the program. It is empty for a program in running state",
                    "type":"string"
                },
                "status":{
                    "description":"Status of the program",
                    "enum":[
                        "NOT_RUNNING",
                        "RUNNING",
                        "RUNNING_WITH_ERRORS"
                    ],
                    "type":"string"
                }
            }
        },
        "programs-collection":{
            "title":"Programs",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/retrieve-program-response"
                    }
                }
            }
        },
        "update-program-request":{
            "title":"update-program-request",
            "type":"object",
            "properties":{
                "action":{
                    "description":"Action to be performed on a given program",
                    "enum":[
                        "publish",
                        "unpublish"
                    ],
                    "type":"string"
                },
                "saveDraft":{
                    "description":"Indicates whether to save the draft version or published version",
                    "enum":[
                        "Y",
                        "N"
                    ],
                    "type":"string"
                }
            }
        },
        "update-program-response":{
            "title":"update-program-response",
            "type":"object",
            "properties":{
                "status":{
                    "description":"Returns SUCCESS if the publish or unpublish is successful. Returns FAILURE if action is not successful.",
                    "enum":[
                        "SUCCESS",
                        "FAILURE"
                    ],
                    "type":"string"
                },
                "errorMsg":{
                    "description":"Error messages when publish or unpublish fails",
                    "type":"string"
                }
            }
        },
        "supplementalTableRecords":{
            "title":"Supplemental Table records",
            "type":"object",
            "properties":{
                "recordData":{
                    "description":"Record data that represents field names and corresponding values for the member.",
                    "required":[
                        "fieldNames",
                        "records"
                    ],
                    "type":"object",
                    "properties":{
                        "fieldNames":{
                            "type":"array",
                            "description":"Field names in the Supplemental Table",
                            "items":{
                                "type":"string"
                            }
                        },
                        "records":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single member.",
                            "items":{
                                "type":"array",
                                "description":"Field values for the member in the Supplemental Table",
                                "items":{
                                    "type":"string"
                                }
                            }
                        },
                        "mapTemplateName":{
                            "type":"string",
                            "description":"The map template in Responsys that can be used to map field names of the Supplemental Table to column names."
                        }
                    }
                },
                "insertOnNoMatch":{
                    "description":"Specifies whether a member record should be inserted into the Supplemental Table if it does not already exist.",
                    "type":"boolean"
                },
                "updateOnMatch":{
                    "description":"Specifies whether a member record should be updated in the Supplemental Table if it already exists.",
                    "enum":[
                        "REPLACE_ALL",
                        "NO_UPDATE"
                    ],
                    "type":"string"
                },
                "matchColumnNames":{
                    "description":"The column names to be used to match the member record to the Supplemental Table records. Only used during the merge operation.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            },
            "required":[
                "recordData",
                "insertOnNoMatch",
                "updateOnMatch",
                "matchColumnNames"
            ]
        },
        "supplementalTableMemberswithpk":{
            "title":"Supplemental Table members with PK",
            "type":"object",
            "properties":{
                "recordData":{
                    "description":"Record data that represents field names and corresponding values for the member.",
                    "required":[
                        "fieldNames",
                        "records"
                    ],
                    "type":"object",
                    "properties":{
                        "fieldNames":{
                            "type":"array",
                            "description":"Field names in the Supplemental Table",
                            "items":{
                                "type":"string"
                            }
                        },
                        "records":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single member.",
                            "items":{
                                "type":"array",
                                "description":"Field values for the member in the Supplemental Table",
                                "items":{
                                    "type":"string"
                                }
                            }
                        },
                        "mapTemplateName":{
                            "type":"string",
                            "description":"The map template in Responsys that can be used to map field names of the Supplemental Table to column names."
                        }
                    }
                },
                "insertOnNoMatch":{
                    "description":"Specifies whether a member record should be inserted into the Supplemental Table if it does not already exist.",
                    "type":"boolean"
                },
                "updateOnMatch":{
                    "description":"Specifies whether a member record should be updated in the Supplemental Table if it already exists.",
                    "enum":[
                        "REPLACE_ALL",
                        "NO_UPDATE"
                    ],
                    "type":"string"
                },
                "required":{
                }
            }
        },
        "retrieveSuppFieldsResponse":{
            "title":"Supplemental Data Table fields",
            "type":"object",
            "properties":{
                "fields":{
                    "description":"The Supplemental Data Table fields",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"The supplemental data field name"
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"The supplemental data field type"
                            }
                        }
                    }
                },
                "suppData":{
                    "description":"Metadata about the Supplemental Table",
                    "type":"object",
                    "properties":{
                        "objectName":{
                            "description":"The name of the Supplemental Data Table",
                            "type":"string"
                        },
                        "folderName":{
                            "description":"The name of the folder in which the Supplemental Data Table exists",
                            "type":"string"
                        }
                    }
                }
            }
        },
        "campaigns":{
            "title":"Campaign",
            "type":"object",
            "properties":{
                "autoCloseOption":{
                    "description":"Auto close options for this campaign.",
                    "enum":[
                        "NO_AUTO_CLOSE",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAUNCH",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE",
                        "AUTO_CLOSE_ON_DATE"
                    ],
                    "type":"string"
                },
                "unsubscribeOption":{
                    "description":"The unsubscribe option for this campaign.",
                    "enum":[
                        "NO_OPTOUT_BUTTON",
                        "OPTOUT_SINGLE_CLICK",
                        "OPTOUT_FORM"
                    ],
                    "type":"string"
                },
                "bccEmail":{
                    "description":"Bcc Email Address for the campaign.",
                    "type":"string"
                },
                "linkTablePath":{
                    "description":"Link table to be included in this campaign.",
                    "type":"string"
                },
                "marketingProgram":{
                    "description":"Type of marketing program. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "segmentPaths":{
                    "description":"Segmentations are used to divide a list into segments using attributes of a profile extension table or profile list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "refiningDataSourcePath":{
                    "description":"Path of additional data sources to be used for this campaign.",
                    "type":"string"
                },
                "proofListPath":{
                    "description":"Before sending the campaign to customers, send it to proof list for testing.",
                    "type":"string"
                },
                "attachmentPaths":{
                    "description":"Attachments for the campaign.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "htmlMessagePath":{
                    "description":"HTML message folder and path for the campaign.",
                    "type":"string"
                },
                "fromEmail":{
                    "description":"From Email Address for the campaign.",
                    "type":"string"
                },
                "listName":{
                    "description":"Profile list name which contains the audience for this campaign.",
                    "type":"string"
                },
                "channelList":{
                    "description":"App channel list name which contains the audience for this campaign.",
                    "type":"string"
                },
                "useUTF8":{
                    "description":"Use UTF8 encoding for messages.",
                    "type":"boolean"
                },
                "suppressionListPaths":{
                    "description":"This is used to exclude recipients from data sources.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "replyToEmail":{
                    "description":"Reply To Email Address for the campaign.",
                    "type":"string"
                },
                "segmentTrackingColumnName":{
                    "description":"Column name for tracking segments.",
                    "type":"string"
                },
                "filterPaths":{
                    "description":"Paths of filter to be used for this campaign. This can be used to select a group of customers to receive specific messages. Either standard filter or SQL View can be specified.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "name":{
                    "description":"Name of the campaign.",
                    "type":"string"
                },
                "locale":{
                    "description":"The default recipient locale for this account.",
                    "type":"string"
                },
                "supplementarySeedDataSourcePaths":{
                    "description":"Supplementary seed data sources can be used for inclusions or exclusions from seed list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "textMessagePath":{
                    "description":"Text message folder and path for the campaign.",
                    "type":"string"
                },
                "sendTextIfHTMLUnknown":{
                    "description":"If HTML ability is unknown, this option allows sending MIME messages to ensure message text is displayed correctly.",
                    "type":"boolean"
                },
                "subject":{
                    "description":"Campaign Subject.",
                    "type":"string"
                },
                "enableExternalTracking":{
                    "description":"Enable to use third-party web analytics service that use tracking parameters appended to the URLs.",
                    "type":"boolean"
                },
                "salesForceCampaignId":{
                    "description":"Salesforce campaign id.",
                    "type":"string"
                },
                "autoCloseValue":{
                    "description":"This represents number of days if autoCloseOption is AUTO_CLOSE_X_DAYS_AFTER_LAUNCH or AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE.This represents date if autoCloseOption is AUTO_CLOSE_ON_DATE.",
                    "type":"string"
                },
                "trackConversions":{
                    "description":"This applies only when link tracking is enabled for the campaign. This option can be used to record conversion when clicking a link and following through a specific web page.",
                    "type":"boolean"
                },
                "campaignVariables":{
                    "description":"Map<String, String> of Name and value of campaign variables which are used as default values for text replacement.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "type":{
                    "description":"Type of the campaign.",
                    "enum":[
                        "EMAIL",
                        "PUSH",
                        "SMS",
                        "MMS",
                        "PUSHIOCAMPAIGN"
                    ],
                    "type":"string"
                },
                "folderName":{
                    "description":"Folder name for the campaign.",
                    "type":"string"
                },
                "marketingStrategy":{
                    "description":"Type of marketing strategy. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "externalTrackingParams":{
                    "description":"Map<String, String> of Name and value of external tracking parameters.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "externalCampaignCode":{
                    "description":"External campaign code.",
                    "type":"string"
                },
                "unsubscribeFormName":{
                    "description":"Form name to be used for unsubscribing..",
                    "type":"string"
                },
                "seedListPath":{
                    "description":"Seed lists recipients receive the campaign when it is launched but are excluded from live report.",
                    "type":"string"
                },
                "supplementaryProofDataSourcePaths":{
                    "description":"Supplementary proof data sources can be used for inclusions or exclusions from proof list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "closedCampaignURL":{
                    "description":"The URL to redirect to if a recipient clicks on a link of an already closed campaign.",
                    "type":"string"
                },
                "description":{
                    "description":"Description of the campaign.",
                    "type":"string"
                },
                "enableLinkTracking":{
                    "description":"Enable to track the links in a campaign.",
                    "type":"boolean"
                },
                "supplementaryCampaignDataSourcePaths":{
                    "description":"Supplementary data sources can be used for inclusions or exclusions of the audience.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "fromName":{
                    "description":"From Name for the campaign.",
                    "type":"string"
                },
                "purpose":{
                    "description":"Purpose of the campaign.",
                    "enum":[
                        "PROMOTIONAL",
                        "TRANSACTIONAL"
                    ],
                    "type":"string"
                },
                "trackHTMLOpens":{
                    "description":"Enable tracking when each recipient with HTML capability opened the email.",
                    "type":"boolean"
                }
            },
            "required":[
                "name",
                "folderName"
            ]
        },
        "update-campaign-request":{
            "type":"object",
            "title":"update EMD Campaign request",
            "properties":{
                "autoCloseOption":{
                    "description":"Auto close options for this campaign.",
                    "enum":[
                        "NO_AUTO_CLOSE",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAUNCH",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE",
                        "AUTO_CLOSE_ON_DATE"
                    ],
                    "type":"string"
                },
                "unsubscribeOption":{
                    "description":"The unsubscribe option for this campaign.",
                    "enum":[
                        "NO_OPTOUT_BUTTON",
                        "OPTOUT_SINGLE_CLICK",
                        "OPTOUT_FORM"
                    ],
                    "type":"string"
                },
                "bccEmail":{
                    "description":"Bcc Email Address for the campaign.",
                    "type":"string"
                },
                "linkTablePath":{
                    "description":"Link table to be included in this campaign.",
                    "type":"string"
                },
                "marketingProgram":{
                    "description":"Type of marketing program. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "segmentPaths":{
                    "description":"Segmentations are used to divide a list into segments using attributes of a profile extension table or profile list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "refiningDataSourcePath":{
                    "description":"Path of additional data sources to be used for this campaign.",
                    "type":"string"
                },
                "proofListPath":{
                    "description":"Before sending the campaign to customers, send it to proof list for testing.",
                    "type":"string"
                },
                "attachmentPaths":{
                    "description":"Attachments for the campaign.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "htmlMessagePath":{
                    "description":"HTML message folder and path for the campaign.",
                    "type":"string"
                },
                "fromEmail":{
                    "description":"From Email Address for the campaign.",
                    "type":"string"
                },
                "listName":{
                    "description":"Profile list name which contains the audience for this campaign.",
                    "type":"string"
                },
                "channelList":{
                    "description":"App channel list name which contains the audience for this campaign.",
                    "type":"string"
                },
                "useUTF8":{
                    "description":"Use UTF8 encoding for messages.",
                    "type":"boolean"
                },
                "suppressionListPaths":{
                    "description":"This is used to exclude recipients from data sources.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "replyToEmail":{
                    "description":"Reply To Email Address for the campaign.",
                    "type":"string"
                },
                "segmentTrackingColumnName":{
                    "description":"Column name for tracking segments.",
                    "type":"string"
                },
                "filterPaths":{
                    "description":"Paths of filter to be used for this campaign. This can be used to select a group of customers to receive specific messages. Either standard filter or SQL View can be specified.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "locale":{
                    "description":"The default recipient locale for this account.",
                    "type":"string"
                },
                "supplementarySeedDataSourcePaths":{
                    "description":"Supplementary seed data sources can be used for inclusions or exclusions from seed list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "textMessagePath":{
                    "description":"Text message folder and path for the campaign.",
                    "type":"string"
                },
                "sendTextIfHTMLUnknown":{
                    "description":"If HTML ability is unknown, this option allows sending MIME messages to ensure message text is displayed correctly.",
                    "type":"boolean"
                },
                "subject":{
                    "description":"Campaign Subject.",
                    "type":"string"
                },
                "enableExternalTracking":{
                    "description":"Enable to use third-party web analytics service that use tracking parameters appended to the URLs.",
                    "type":"boolean"
                },
                "salesForceCampaignId":{
                    "description":"Salesforce campaign id.",
                    "type":"string"
                },
                "autoCloseValue":{
                    "description":"This represents number of days if autoCloseOption is AUTO_CLOSE_X_DAYS_AFTER_LAUNCH or AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE.This represents date if autoCloseOption is AUTO_CLOSE_ON_DATE.",
                    "type":"string"
                },
                "trackConversions":{
                    "description":"This applies only when link tracking is enabled for the campaign. This option can be used to record conversion when clicking a link and following through a specific web page.",
                    "type":"boolean"
                },
                "campaignVariables":{
                    "description":"Map<String, String> of Name and value of campaign variables which are used as default values for text replacement.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "marketingStrategy":{
                    "description":"Type of marketing strategy. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "externalTrackingParams":{
                    "description":"Map<String, String> of Name and value of external tracking parameters.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "externalCampaignCode":{
                    "description":"External campaign code.",
                    "type":"string"
                },
                "unsubscribeFormName":{
                    "description":"Form name to be used for unsubscribing..",
                    "type":"string"
                },
                "seedListPath":{
                    "description":"Seed lists recipients receive the campaign when it is launched but are excluded from live report.",
                    "type":"string"
                },
                "supplementaryProofDataSourcePaths":{
                    "description":"Supplementary proof data sources can be used for inclusions or exclusions from proof list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "closedCampaignURL":{
                    "description":"The URL to redirect to if a recipient clicks on a link of an already closed campaign.",
                    "type":"string"
                },
                "description":{
                    "description":"Description of the campaign.",
                    "type":"string"
                },
                "enableLinkTracking":{
                    "description":"Enable to track the links in a campaign.",
                    "type":"boolean"
                },
                "supplementaryCampaignDataSourcePaths":{
                    "description":"Supplementary data sources can be used for inclusions or exclusions of the audience.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "fromName":{
                    "description":"From Name for the campaign.",
                    "type":"string"
                },
                "purpose":{
                    "description":"Purpose of the campaign.",
                    "enum":[
                        "PROMOTIONAL",
                        "TRANSACTIONAL"
                    ],
                    "type":"string"
                },
                "trackHTMLOpens":{
                    "description":"Enable tracking when each recipient with HTML capability opened the email.",
                    "type":"boolean"
                }
            }
        },
        "create-update-retrieve-campaign-response":{
            "type":"object",
            "title":"Campaign",
            "properties":{
                "autoCloseOption":{
                    "description":"Auto close options for this campaign.",
                    "enum":[
                        "NO_AUTO_CLOSE",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAUNCH",
                        "AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE",
                        "AUTO_CLOSE_ON_DATE"
                    ],
                    "type":"string"
                },
                "unsubscribeOption":{
                    "description":"The unsubscribe option for this campaign.",
                    "enum":[
                        "NO_OPTOUT_BUTTON",
                        "OPTOUT_SINGLE_CLICK",
                        "OPTOUT_FORM"
                    ],
                    "type":"string"
                },
                "bccEmail":{
                    "description":"Bcc Email Address for the campaign.",
                    "type":"string"
                },
                "linkTablePath":{
                    "description":"Link table to be included in this campaign.",
                    "type":"string"
                },
                "marketingProgram":{
                    "description":"Type of marketing program. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "segmentPaths":{
                    "description":"Segmentations are used to divide a list into segments using attributes of a profile extension table or profile list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "refiningDataSourcePath":{
                    "description":"Path of additional data sources to be used for this campaign.",
                    "type":"string"
                },
                "proofListPath":{
                    "description":"Before sending the campaign to customers, send it to proof list for testing.",
                    "type":"string"
                },
                "attachmentPaths":{
                    "description":"Attachments for the campaign.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "htmlMessagePath":{
                    "description":"HTML message folder and path for the campaign.",
                    "type":"string"
                },
                "fromEmail":{
                    "description":"From Email Address for the campaign.",
                    "type":"string"
                },
                "id":{
                    "description":"ID of the campaign.",
                    "type":"string"
                },
                "listName":{
                    "description":"Profile list name which contains the audience for this campaign.",
                    "type":"string"
                },
                "useUTF8":{
                    "description":"Use UTF8 encoding for messages.",
                    "type":"boolean"
                },
                "suppressionListPaths":{
                    "description":"This is used to exclude recipients from data sources.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "replyToEmail":{
                    "description":"Reply To Email Address for the campaign.",
                    "type":"string"
                },
                "segmentTrackingColumnName":{
                    "description":"Column name for tracking segments.",
                    "type":"string"
                },
                "filterPaths":{
                    "description":"Paths of filter to be used for this campaign. This can be used to select a group of customers to receive specific messages. Either standard filter or SQL View can be specified.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "name":{
                    "description":"Name of the campaign.",
                    "type":"string"
                },
                "locale":{
                    "description":"The default recipient locale for this account.",
                    "type":"string"
                },
                "supplementarySeedDataSourcePaths":{
                    "description":"Supplementary seed data sources can be used for inclusions or exclusions from seed list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "textMessagePath":{
                    "description":"Text message folder and path for the campaign.",
                    "type":"string"
                },
                "sendTextIfHTMLUnknown":{
                    "description":"If HTML ability is unknown, this option allows sending MIME messages to ensure message text is displayed correctly.",
                    "type":"boolean"
                },
                "subject":{
                    "description":"Campaign Subject.",
                    "type":"string"
                },
                "enableExternalTracking":{
                    "description":"Enable to use third-party web analytics service that use tracking parameters appended to the URLs.",
                    "type":"boolean"
                },
                "salesForceCampaignId":{
                    "description":"Salesforce campaign id.",
                    "type":"string"
                },
                "autoCloseValue":{
                    "description":"This represents number of days if autoCloseOption is AUTO_CLOSE_X_DAYS_AFTER_LAUNCH or AUTO_CLOSE_X_DAYS_AFTER_LAST_RESPONSE.This represents date if autoCloseOption is AUTO_CLOSE_ON_DATE.",
                    "type":"string"
                },
                "trackConversions":{
                    "description":"This applies only when link tracking is enabled for the campaign. This option can be used to record conversion when clicking a link and following through a specific web page.",
                    "type":"boolean"
                },
                "campaignVariables":{
                    "description":"Map<String, String> of Name and value of campaign variables which are used as default values for text replacement.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "type":{
                    "description":"Type of the campaign. It can be EMAIL or PUSH or SMS or MMS or PUSHIOCAMPAIGN. ",
                    "enum":[
                        "EMAIL",
                        "PUSH",
                        "SMS",
                        "MMS",
                        "PUSHIOCAMPAIGN"
                    ],
                    "type":"string"
                },
                "folderName":{
                    "description":"Folder name for the campaign.",
                    "type":"string"
                },
                "marketingStrategy":{
                    "description":"Type of marketing strategy. The values are defined by the Account Administrator.",
                    "type":"string"
                },
                "externalTrackingParams":{
                    "description":"Map<String, String> of Name and value of external tracking parameters.",
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "externalCampaignCode":{
                    "description":"External campaign code.",
                    "type":"string"
                },
                "unsubscribeFormName":{
                    "description":"Form name to be used for unsubscribing..",
                    "type":"string"
                },
                "seedListPath":{
                    "description":"Seed lists recipients receive the campaign when it is launched but are excluded from live report.",
                    "type":"string"
                },
                "supplementaryProofDataSourcePaths":{
                    "description":"Supplementary proof data sources can be used for inclusions or exclusions from proof list.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "closedCampaignURL":{
                    "description":"The URL to redirect to if a recipient clicks on a link of an already closed campaign.",
                    "type":"string"
                },
                "description":{
                    "description":"Description of the campaign.",
                    "type":"string"
                },
                "enableLinkTracking":{
                    "description":"Enable to track the links in a campaign.",
                    "type":"boolean"
                },
                "supplementaryCampaignDataSourcePaths":{
                    "description":"Supplementary data sources can be used for inclusions or exclusions of the audience.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "fromName":{
                    "description":"From Name for the campaign.",
                    "type":"string"
                },
                "purpose":{
                    "description":"Purpose of the campaign.",
                    "enum":[
                        "PROMOTIONAL",
                        "TRANSACTIONAL"
                    ],
                    "type":"string"
                },
                "trackHTMLOpens":{
                    "description":"Enable tracking when each recipient with HTML capability opened the email.",
                    "type":"boolean"
                },
                "appName":{
                    "description":"Name of the app associated with the campaign. Only applicable to Message Center campaigns",
                    "type":"string"
                },
                "destinationMessageCenter":{
                    "description":"Destination Message Center for the campaign. Only applicable to Message Center campaigns",
                    "type":"string"
                }
            }
        },
        "campaigns-collection":{
            "title":"EMD Campaigns",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/create-update-retrieve-campaign-response"
                    }
                }
            }
        },
        "getFolders-response":{
            "title":"Retrieve Folders",
            "type":"object",
            "properties":{
                "folders":{
                    "description":"Array of Folders in an Account",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "id":{
                                "type":"string",
                                "description":"ID of the Folder."
                            },
                            "name":{
                                "type":"string",
                                "description":"Name of the Folder."
                            },
                            "subType":{
                                "type":"string",
                                "description":"SubType of the Folder."
                            },
                            "objSource":{
                                "type":"string",
                                "description":"Folder Source."
                            },
                            "accountId":{
                                "type":"string",
                                "description":"Account ID of the Folder."
                            },
                            "status":{
                                "type":"string",
                                "description":"Status of the Folder(A or D)."
                            },
                            "createdBy":{
                                "type":"string",
                                "description":"Folder Created by."
                            },
                            "modifiedBy":{
                                "type":"string",
                                "description":"Last Modified by."
                            },
                            "createdDate":{
                                "type":"string",
                                "description":"Create Date of the Folder."
                            },
                            "modifiedDate":{
                                "type":"string",
                                "description":"Last Modified Date."
                            },
                            "objectType":{
                                "type":"string",
                                "description":"Type of the Object(Folder)."
                            },
                            "new":{
                                "type":"boolean",
                                "description":"Is the Folder a new Folder."
                            }
                        }
                    }
                }
            }
        },
        "sup-table":{
            "title":"Supplemental Data table",
            "type":"object",
            "properties":{
                "name":{
                    "description":"The name of the Supplemental data table",
                    "type":"string"
                },
                "folderName":{
                    "description":"The name of the folder in which the Supplemental data table exists",
                    "type":"string"
                },
                "fields":{
                    "description":"The Supplemental data table Fields",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"The Supplemental data Field Name"
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"The Supplemental data Field Type"
                            }
                        }
                    }
                }
            },
            "required":[
                "name",
                "folderName",
                "fields"
            ]
        },
        "supp-tables":{
            "title":"Supplemental Data Tables",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/sup-table"
                    }
                }
            }
        },
        "triggerCustomEvent":{
            "title":"Trigger Custom Event",
            "type":"object",
            "properties":{
                "customEvent":{
                    "description":"customEvent.",
                    "type":"object",
                    "properties":{
                        "eventNumberDataMapping":{
                            "type":"string",
                            "description":"custom eventNumberDataMapping."
                        },
                        "eventDateDataMapping":{
                            "type":"string",
                            "description":"custom eventDateDataMapping."
                        },
                        "eventStringDataMapping":{
                            "type":"string",
                            "description":"custom eventStringDataMapping."
                        }
                    }
                },
                "recipientData":{
                    "description":"Array of Recipients with Optional Data",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "recipient":{
                                "type":"object",
                                "description":"Information about the Recipient.",
                                "properties":{
                                    "customerId":{
                                        "type":"string",
                                        "description":"Recipient's Customer ID."
                                    },
                                    "emailAddress":{
                                        "type":"string",
                                        "description":"Recipient's Email Address."
                                    },
                                    "emailSHA256Hash":{
                                        "type":"string",
                                        "description":"Recipient's Email SHA256 Hash consisting of 64 characters."
                                    },
                                    "emailMD5Hash":{
                                        "type":"string",
                                        "description":"Recipient's Email MD5 Hash consisting of 32 characters."
                                    },
                                    "listName":{
                                        "type":"object",
                                        "description":"Profile List to which the Recipient belongs.",
                                        "properties":{
                                            "folderName":{
                                                "type":"string",
                                                "description":"Folder Name"
                                            },
                                            "objectName":{
                                                "type":"string",
                                                "description":"Profile List Name."
                                            }
                                        }
                                    },
                                    "recipientId":{
                                        "type":"number",
                                        "description":"Recipient's RIID."
                                    },
                                    "mobileNumber":{
                                        "type":"string",
                                        "description":"Recipient's Mobile Number."
                                    },
                                    "emailFormat":{
                                        "enum":[
                                            "HTML_FORMAT",
                                            "TEXT_FORMAT"
                                        ],
                                        "type":"string",
                                        "description":"Email Format."
                                    }
                                },
                                "required":[
                                    "customerId",
                                    "emailAddress",
                                    "listName",
                                    "recipientId",
                                    "mobileNumber",
                                    "emailFormat",
                                    "emailMD5Hash",
                                    "emailSHA256Hash"
                                ]
                            },
                            "optionalData":{
                                "type":"array",
                                "description":"Array of optional data containing name value pairs.",
                                "items":{
                                    "type":"object",
                                    "properties":{
                                        "name":{
                                            "type":"string"
                                        },
                                        "value":{
                                            "type":"string"
                                        }
                                    }
                                }
                            }
                        },
                        "required":[
                            "recipient",
                            "optionalData"
                        ]
                    }
                }
            },
            "required":[
                "customEvent",
                "recipientData"
            ]
        },
        "triggerEvent-response":{
            "title":"Trigger Custom Event Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the merge or trigger operations."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "triggerReiEvent":{
            "title":"Trigger Rei Event",
            "type":"object",
            "properties":{
                "reiEvent":{
                    "description":"reiEvent.",
                    "type":"object",
                    "properties":{
                        "eventNumberDataMapping":{
                            "type":"string",
                            "description":"rei eventNumberDataMapping."
                        },
                        "eventDateDataMapping":{
                            "type":"string",
                            "description":"rei eventDateDataMapping."
                        },
                        "eventStringDataMapping":{
                            "type":"string",
                            "description":"rei eventStringDataMapping."
                        }
                    }
                },
                "recipientData":{
                    "description":"Array of Recipients with Optional Data",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "recipient":{
                                "type":"object",
                                "description":"Information about the Recipient.",
                                "properties":{
                                    "customerId":{
                                        "type":"string",
                                        "description":"Recipient's Customer ID."
                                    },
                                    "emailAddress":{
                                        "type":"string",
                                        "description":"Recipient's Email Address."
                                    },
                                    "listName":{
                                        "type":"object",
                                        "description":"Profile List to which the Recipient belongs.",
                                        "properties":{
                                            "folderName":{
                                                "type":"string",
                                                "description":"Folder Name"
                                            },
                                            "objectName":{
                                                "type":"string",
                                                "description":"Profile List Name."
                                            }
                                        }
                                    },
                                    "recipientId":{
                                        "type":"number",
                                        "description":"Recipient's RIID."
                                    },
                                    "mobileNumber":{
                                        "type":"string",
                                        "description":"Recipient's Mobile Number."
                                    },
                                    "emailFormat":{
                                        "enum":[
                                            "HTML_FORMAT",
                                            "TEXT_FORMAT"
                                        ],
                                        "type":"string",
                                        "description":"Email Format."
                                    }
                                },
                                "required":[
                                    "customerId",
                                    "emailAddress",
                                    "listName",
                                    "recipientId",
                                    "mobileNumber",
                                    "emailFormat"
                                ]
                            },
                            "optionalData":{
                                "type":"array",
                                "description":"Array of optional data containing name value pairs.",
                                "items":{
                                    "type":"object",
                                    "properties":{
                                        "name":{
                                            "type":"string"
                                        },
                                        "value":{
                                            "type":"string"
                                        }
                                    }
                                }
                            }
                        },
                        "required":[
                            "recipient"
                        ]
                    }
                }
            },
            "required":[
                "reiEvent",
                "recipientData"
            ]
        },
        "clFolders":{
            "title":"Content Library Folders",
            "type":"object",
            "properties":{
                "folderPath":{
                    "description":"The complete path of the folder starting with /contentlibrary.",
                    "type":"string"
                }
            },
            "required":[
                "folderPath"
            ]
        },
        "listClFoldersResponse":{
            "title":"List Content Library Folders Response",
            "type":"object",
            "properties":{
                "folders":{
                    "description":"Folders within the Content Library Folder",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "folderPath":{
                                "type":"string",
                                "description":"Full path of the Content Library folder"
                            }
                        }
                    }
                },
                "documents":{
                    "description":"Content Library Documents within the Content Library Folder",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "documentPath":{
                                "type":"string",
                                "description":"Full path of the Content Library Document"
                            },
                            "content":{
                                "type":"string",
                                "description":"Document content"
                            }
                        }
                    }
                },
                "items":{
                    "description":"Media files within the Content Library Folder",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "itemPath":{
                                "type":"string",
                                "description":"Full path of the Content Library media file"
                            },
                            "itemData":{
                                "type":"string",
                                "format":"byte",
                                "description":"Base64 encoded binary string of the media file content."
                            }
                        }
                    }
                }
            }
        },
        "campaignSchedule":{
            "title":"Email or Push Campaign Schedule",
            "type":"object",
            "properties":{
                "launchOptions":{
                    "description":"Launch Options for the schedule.",
                    "type":"object",
                    "properties":{
                        "progressChunk":{
                            "enum":[
                                "CHUNK_10K",
                                "CHUNK_50K",
                                "CHUNK_100K",
                                "CHUNK_500K",
                                "CHUNK_1M"
                            ],
                            "type":"string",
                            "description":"Progress Chunk."
                        },
                        "recipientLimit":{
                            "type":"integer",
                            "description":"Recipient Limit."
                        },
                        "proofLaunchType":{
                            "enum":[
                                "LAUNCH_TO_ADDRESS",
                                "LAUNCH_TO_PROOFLIST",
                                "LAUNCH_TO_ADDRESS_USING_PROOFLIST"
                            ],
                            "type":"string",
                            "description":"Proof Launch type."
                        },
                        "progressEmailAddresses":{
                            "type":"array",
                            "description":"Email addresses to inform of progress.",
                            "items":{
                                "type":"string"
                            }
                        },
                        "samplingNthOffset":{
                            "type":"integer",
                            "description":"Sampling offset."
                        },
                        "samplingNthInterval":{
                            "type":"integer",
                            "description":"Sampling Interval."
                        },
                        "proofLaunch":{
                            "type":"boolean",
                            "description":"Should a proof launch be performed."
                        },
                        "samplingNthSelection":{
                            "type":"integer",
                            "description":"Sampling Selection."
                        },
                        "proofLaunchEmail":{
                            "type":"string",
                            "description":"Email address for the proof launch."
                        }
                    }
                },
                "scheduleType":{
                    "description":"Schedule Type.",
                    "enum":[
                        "NOW",
                        "ONCE"
                    ],
                    "type":"string"
                },
                "scheduledTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                },
                "recurringEndTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                }
            },
            "required":[
                "scheduleType",
                "scheduledTime"
            ]
        },
        "update-campaignSchedule-request":{
            "type":"object",
            "title":"Update Email or Push Campaign Schedule Request",
            "properties":{
                "scheduleType":{
                    "description":"Schedule Type.",
                    "enum":[
                        "NOW",
                        "ONCE"
                    ],
                    "type":"string"
                },
                "scheduledTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                }
            }
        },
        "update-delete-campaignSchedule-response":{
            "type":"object",
            "title":"Update Email or Push Campaign Schedule Response",
            "properties":{
                "id":{
                    "description":"ID of the schedule.",
                    "type":"string"
                },
                "scheduleType":{
                    "description":"Schedule Type.",
                    "enum":[
                        "NOW",
                        "ONCE"
                    ],
                    "type":"string"
                },
                "scheduledTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                },
                "launchOptions":{
                    "description":"Launch Options for the schedule.",
                    "type":"object",
                    "properties":{
                        "proofLaunch":{
                            "type":"boolean",
                            "description":"Should a proof launch be performed."
                        }
                    }
                }
            }
        },
        "create-retrieve-campaignSchedule-response":{
            "type":"object",
            "title":"Email or Push Campaign Schedule",
            "properties":{
                "id":{
                    "description":"ID of the schedule.",
                    "type":"string"
                },
                "launchOptions":{
                    "description":"Launch Options for the schedule.",
                    "type":"object",
                    "properties":{
                        "progressChunk":{
                            "enum":[
                                "CHUNK_10K",
                                "CHUNK_50K",
                                "CHUNK_100K",
                                "CHUNK_500K",
                                "CHUNK_1M"
                            ],
                            "type":"string",
                            "description":"Progress Chunk."
                        },
                        "recipientLimit":{
                            "type":"integer",
                            "description":"Recipient Limit."
                        },
                        "proofLaunchType":{
                            "enum":[
                                "LAUNCH_TO_ADDRESS",
                                "LAUNCH_TO_PROOFLIST",
                                "LAUNCH_TO_ADDRESS_USING_PROOFLIST"
                            ],
                            "type":"string",
                            "description":"Proof Launch type."
                        },
                        "progressEmailAddresses":{
                            "type":"array",
                            "description":"Email addresses to inform of progress.",
                            "items":{
                                "type":"string"
                            }
                        },
                        "samplingNthOffset":{
                            "type":"integer",
                            "description":"Sampling offset."
                        },
                        "samplingNthInterval":{
                            "type":"integer",
                            "description":"Sampling Interval."
                        },
                        "proofLaunch":{
                            "type":"boolean",
                            "description":"Should a proof launch be performed."
                        },
                        "samplingNthSelection":{
                            "type":"integer",
                            "description":"Sampling Selection."
                        },
                        "proofLaunchEmail":{
                            "type":"string",
                            "description":"Email address for the proof launch."
                        }
                    }
                },
                "scheduleType":{
                    "description":"Schedule Type.",
                    "enum":[
                        "NOW",
                        "ONCE"
                    ],
                    "type":"string"
                },
                "scheduledTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                },
                "recurringEndTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                }
            }
        },
        "retrieve-campaignSchedule-response":{
            "type":"object",
            "title":"Email or Push Campaign Schedule",
            "properties":{
                "id":{
                    "description":"ID of the schedule.",
                    "type":"string"
                },
                "launchOptions":{
                    "description":"Launch Options for the schedule.",
                    "type":"object",
                    "properties":{
                        "progressChunk":{
                            "enum":[
                                "CHUNK_10K",
                                "CHUNK_50K",
                                "CHUNK_100K",
                                "CHUNK_500K",
                                "CHUNK_1M"
                            ],
                            "type":"string",
                            "description":"Progress Chunk."
                        },
                        "recipientLimit":{
                            "type":"integer",
                            "description":"Recipient Limit."
                        },
                        "proofLaunchType":{
                            "enum":[
                                "LAUNCH_TO_ADDRESS",
                                "LAUNCH_TO_PROOFLIST",
                                "LAUNCH_TO_ADDRESS_USING_PROOFLIST"
                            ],
                            "type":"string",
                            "description":"Proof Launch type."
                        },
                        "progressEmailAddresses":{
                            "type":"array",
                            "description":"Email addresses to inform of progress.",
                            "items":{
                                "type":"string"
                            }
                        },
                        "samplingNthOffset":{
                            "type":"integer",
                            "description":"Sampling offset."
                        },
                        "samplingNthInterval":{
                            "type":"integer",
                            "description":"Sampling Interval."
                        },
                        "proofLaunch":{
                            "type":"boolean",
                            "description":"Should a proof launch be performed."
                        },
                        "samplingNthSelection":{
                            "type":"integer",
                            "description":"Sampling Selection."
                        },
                        "proofLaunchEmail":{
                            "type":"string",
                            "description":"Email address for the proof launch."
                        }
                    }
                },
                "scheduleType":{
                    "description":"Schedule Type.",
                    "enum":[
                        "NOW",
                        "ONCE",
                        "RECURRING"
                    ],
                    "type":"string"
                },
                "scheduledTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                },
                "recurringEndTime":{
                    "description":"Date in the format yyyy-mm-dd HH:mm",
                    "type":"string"
                }
            }
        },
        "campaignSchedule-collection":{
            "title":"Email or Push Campaign Schedules",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/retrieve-campaignSchedule-response"
                    }
                }
            }
        },
        "mergeTriggerEmail":{
            "title":"Merge Trigger Email",
            "type":"object",
            "properties":{
                "mergeTriggerRecordData":{
                    "description":"Record data that represents Field Names and corresponding values for the recipient.",
                    "required":[
                        "mergeTriggerRecords",
                        "fieldNames"
                    ],
                    "type":"object",
                    "properties":{
                        "mergeTriggerRecords":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"object",
                                "properties":{
                                    "fieldValues":{
                                        "type":"array",
                                        "description":"Values corresponding to the fieldNames.",
                                        "items":{
                                            "type":"string"
                                        }
                                    },
                                    "optionalData":{
                                        "type":"array",
                                        "description":"Optional data containing array of name value pairs.",
                                        "items":{
                                            "type":"object",
                                            "properties":{
                                                "name":{
                                                    "type":"string"
                                                },
                                                "value":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "fieldNames":{
                            "type":"array",
                            "description":"Field Names in the Profile List",
                            "items":{
                                "type":"string"
                            }
                        }
                    }
                },
                "mergeRule":{
                    "description":"Merge rule used to merge recipient records in a Profile List. Only used during the merge operation.",
                    "type":"object",
                    "properties":{
                        "rejectRecordIfChannelEmpty":{
                            "type":"string",
                            "description":"String containing comma-separated channel codes that if specified will result in record rejection when the channel address field is null. Channel codes are 'E' (Email), 'M' (Mobile), 'P' (Postal Code). For example 'E,M' would indicate that a record that has a null for Email or Mobile Number value should be rejected. This parameter can also be set to null or to an empty string, which will cause the validation to not be performed for any channel, except if the matchColumnName1 parameter is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_. When matchColumnName1 is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_, then the null or empty string setting is effectively ignored for that channel."
                        },
                        "htmlValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'H' may represent a preference for HTML formatted email."
                        },
                        "textValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'T' may represent a preference for Text formatted email."
                        },
                        "matchColumnName1":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"First match column for determining whether an insert or update should occur."
                        },
                        "insertOnNoMatch":{
                            "type":"boolean",
                            "description":"Indicates what should be done for records where a match is not found (true = insert / false = no insert)."
                        },
                        "optinValue":{
                            "type":"string",
                            "description":"Value of incoming opt-in status data that represents an opt-in status. For example, 'I' may represent an opt-in status."
                        },
                        "defaultPermissionStatus":{
                            "enum":[
                                "OPTIN",
                                "OPTOUT"
                            ],
                            "type":"string",
                            "description":"This value must be specified as either OPTIN or OPTOUT and would be applied to all of the records contained in the API call. If this value is not explicitly specified, then it is set to OPTOUT."
                        },
                        "optoutValue":{
                            "type":"string",
                            "description":"Value of incoming opt-out status data that represents an optout status. For example, '0' may represent an opt-out status."
                        },
                        "matchColumnName2":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"Second match column for determining whether an insert or update should occur. (optional)."
                        },
                        "updateOnMatch":{
                            "enum":[
                                "REPLACE_ALL",
                                "NO_UPDATE"
                            ],
                            "type":"string",
                            "description":"Controls how the existing record should be updated."
                        },
                        "matchOperator":{
                            "enum":[
                                "NONE",
                                "AND"
                            ],
                            "type":"string",
                            "description":"Operator to join match column names"
                        }
                    }
                }
            },
            "required":[
                "mergeTriggerRecordData",
                "mergeRule"
            ]
        },
        "triggerEmailResponse":{
            "title":"Trigger Email Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the merge or trigger operations."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "listExtensions":{
            "title":"Profile Extension",
            "type":"object",
            "properties":{
                "profileExtension":{
                    "description":"The Profile Extension Object",
                    "required":[
                        "objectName",
                        "folderName"
                    ],
                    "type":"object",
                    "properties":{
                        "objectName":{
                            "type":"string",
                            "description":"The name of the Profile Extension"
                        },
                        "folderName":{
                            "type":"string",
                            "description":"The name of the folder in which the Profile Extension exists"
                        }
                    }
                },
                "fields":{
                    "description":"The Profile Extension Fields",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "fieldName":{
                                "type":"string",
                                "description":"The Profile Extension Field Name"
                            },
                            "fieldType":{
                                "type":"string",
                                "description":"The Profile Extension Field Type"
                            }
                        }
                    }
                }
            },
            "required":[
                "profileExtension",
                "fields"
            ]
        },
        "listExtensions-collection":{
            "title":"List Extensions",
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/listExtensions"
                    }
                }
            }
        },
        "triggerPushMessage":{
            "title":"Trigger Push Message",
            "type":"object",
            "properties":{
                "recipientData":{
                    "description":"Array of Recipients with Optional Data",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "mobileNumber":{
                                "type":"string",
                                "description":"Recipient's Mobile Number."
                            },
                            "emailSHA256Hash":{
                                "type":"string",
                                "description":"Recipient's emailSHA256Hash."
                            },
                            "emailAddress":{
                                "type":"string",
                                "description":"Recipient's Email Address."
                            },
                            "listType":{
                                "enum":[
                                    "PUSH",
                                    "PROFILE"
                                ],
                                "description":"Email Format.",
                                "type":"string"
                            },
                            "optionalData":{
                                "type":"array",
                                "description":"Array of optional data containing name value pairs.",
                                "items":{
                                    "type":"object",
                                    "properties":{
                                        "name":{
                                            "type":"string"
                                        },
                                        "value":{
                                            "type":"string"
                                        }
                                    }
                                }
                            },
                            "customerId":{
                                "type":"string",
                                "description":"Recipient's Customer ID."
                            },
                            "apiKey":{
                                "type":"string",
                                "description":"Recipient's apiKey."
                            },
                            "emailMD5Hash":{
                                "type":"string",
                                "description":"Recipient's emailMD5Hash."
                            },
                            "deviceId":{
                                "type":"string",
                                "description":"Recipient's deviceId."
                            },
                            "recipientId":{
                                "type":"number",
                                "description":"Recipient's RIID."
                            }
                        }
                    }
                }
            },
            "required":[
                "recipientData"
            ]
        },
        "triggerPush-response":{
            "title":"Trigger Push Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the trigger operation."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "mergeTriggerSMS":{
            "title":"Merge Trigger SMS",
            "type":"object",
            "properties":{
                "mergeTriggerRecordData":{
                    "description":"Record data that represents Field Names and corresponding values for the recipient.",
                    "required":[
                        "mergeTriggerRecords",
                        "fieldNames"
                    ],
                    "type":"object",
                    "properties":{
                        "mergeTriggerRecords":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"object",
                                "properties":{
                                    "fieldValues":{
                                        "type":"array",
                                        "description":"Values corresponding to the fieldNames.",
                                        "items":{
                                            "type":"string"
                                        }
                                    },
                                    "optionalData":{
                                        "type":"array",
                                        "description":"Optional data containing array of name value pairs.",
                                        "items":{
                                            "type":"object",
                                            "properties":{
                                                "name":{
                                                    "type":"string"
                                                },
                                                "value":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "fieldNames":{
                            "type":"array",
                            "description":"Field Names in the Profile List. Note <code>MOBILE_NUMBER_</code> must be specified in the <a href='https://en.wikipedia.org/wiki/E.164'>E.164</a> format.",
                            "items":{
                                "type":"string"
                            }
                        }
                    }
                },
                "mergeRule":{
                    "description":"Merge rule used to merge recipient records in a Profile List. Only used during the merge operation.",
                    "type":"object",
                    "properties":{
                        "rejectRecordIfChannelEmpty":{
                            "type":"string",
                            "description":"String containing comma-separated channel codes that if specified will result in record rejection when the channel address field is null. Channel codes are 'E' (SMS), 'M' (Mobile), 'P' (Postal Code). For example 'E,M' would indicate that a record that has a null for SMS or Mobile Number value should be rejected. This parameter can also be set to null or to an empty string, which will cause the validation to not be performed for any channel, except if the matchColumnName1 parameter is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_. When matchColumnName1 is set to EMAIL_ADDRESS_ or MOBILE_NUMBER_, then the null or empty string setting is effectively ignored for that channel."
                        },
                        "htmlValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'H' may represent a preference for HTML formatted email."
                        },
                        "textValue":{
                            "type":"string",
                            "description":"Value of incoming preferred email format data. For example, 'T' may represent a preference for Text formatted email."
                        },
                        "matchColumnName1":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"First match column for determining whether an insert or update should occur."
                        },
                        "insertOnNoMatch":{
                            "type":"boolean",
                            "description":"Indicates what should be done for records where a match is not found (true = insert / false = no insert)."
                        },
                        "optinValue":{
                            "type":"string",
                            "description":"Value of incoming opt-in status data that represents an opt-in status. For example, 'I' may represent an opt-in status."
                        },
                        "defaultPermissionStatus":{
                            "enum":[
                                "OPTIN",
                                "OPTOUT"
                            ],
                            "type":"string",
                            "description":"This value must be specified as either OPTIN or OPTOUT and would be applied to all of the records contained in the API call. If this value is not explicitly specified, then it is set to OPTOUT."
                        },
                        "optoutValue":{
                            "type":"string",
                            "description":"Value of incoming opt-out status data that represents an optout status. For example, '0' may represent an opt-out status."
                        },
                        "matchColumnName2":{
                            "enum":[
                                "RIID_",
                                "CUSTOMER_ID_",
                                "EMAIL_ADDRESS_",
                                "MOBILE_NUMBER_",
                                "EMAIL_MD5_HASH_",
                                "EMAIL_SHA256_HASH_"
                            ],
                            "type":"string",
                            "description":"Second match column for determining whether an insert or update should occur. (optional)."
                        },
                        "updateOnMatch":{
                            "enum":[
                                "REPLACE_ALL",
                                "NO_UPDATE"
                            ],
                            "type":"string",
                            "description":"Controls how the existing record should be updated."
                        },
                        "matchOperator":{
                            "enum":[
                                "NONE",
                                "AND"
                            ],
                            "type":"string",
                            "description":"Operator to join match column names"
                        }
                    }
                }
            },
            "required":[
                "mergeTriggerRecordData",
                "mergeRule"
            ]
        },
        "triggerSmsResponse":{
            "title":"Trigger SMS Response",
            "type":"array",
            "description":"Array of Recipient Results.",
            "items":{
                "type":"object",
                "description":"Response for individual recipient.",
                "properties":{
                    "errorMessage":{
                        "type":"string",
                        "description":"Error Message, if any, that occurred during the merge or trigger operations."
                    },
                    "success":{
                        "type":"boolean",
                        "description":"Indicates success or failure."
                    },
                    "recipientId":{
                        "type":"number",
                        "description":"The Responsys ID (RIID) of the recipient."
                    }
                }
            }
        },
        "clItems":{
            "title":"Content Library Media Files",
            "type":"object",
            "properties":{
                "itemPath":{
                    "description":"The complete path of the media file starting with /contentlibrary.",
                    "type":"string"
                },
                "itemData":{
                    "description":"Base64 encoded binary string of the media file content.",
                    "type":"string"
                }
            },
            "required":[
                "itemPath",
                "itemData"
            ]
        },
        "copy-contentItem-request":{
            "type":"object",
            "title":"copy content document Request",
            "properties":{
                "itemPath":{
                    "description":"Path of source item",
                    "type":"string"
                }
            }
        },
        "profileExtensionRecipients":{
            "title":"Profile Extension Recipients",
            "type":"object",
            "properties":{
                "recordData":{
                    "description":"Record data that represents field names and corresponding values for the recipient.",
                    "required":[
                        "fieldNames",
                        "records"
                    ],
                    "type":"object",
                    "properties":{
                        "fieldNames":{
                            "type":"array",
                            "description":"Field names of the Profile List. Must contain contain at least one of the merge key fields from the Profile List.",
                            "items":{
                                "type":"string"
                            }
                        },
                        "records":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"array",
                                "description":"Field values for the recipient in the Profile List",
                                "items":{
                                    "type":"string"
                                }
                            }
                        },
                        "mapTemplateName":{
                            "type":"string",
                            "description":"The map template in Responsys that can be used to map field names of the Profile List to column names."
                        }
                    }
                },
                "insertOnNoMatch":{
                    "description":"Specifies whether a recipient record should be inserted into the Profile Extension if it does not already exist. Only used during the merge operation.",
                    "type":"boolean"
                },
                "updateOnMatch":{
                    "description":"Specifies whether a recipient record should be updated in the Profile Extension if it already exists. Only used during the merge operation.",
                    "enum":[
                        "REPLACE_ALL",
                        "NO_UPDATE"
                    ]
                },
                "matchColumn":{
                    "description":"The column name to be used to match the recipient record to the Profile Extension records. Only used during the merge operation.",
                    "enum":[
                        "RIID",
                        "CUSTOMER_ID",
                        "EMAIL_ADDRESS",
                        "MOBILE_NUMBER",
                        "EMAIL_MD5_HASH",
                        "EMAIL_SHA256_HASH"
                    ]
                }
            },
            "required":[
                "recordData",
                "insertOnNoMatch",
                "updateOnMatch",
                "matchColumn"
            ]
        },
        "mergeOrgListRecipients":{
            "title":"Merge Org List Recipients",
            "type":"object",
            "properties":{
                "recordData":{
                    "description":"Record data that represents field names and corresponding values for the recipient.",
                    "required":[
                        "fieldNames",
                        "records"
                    ],
                    "type":"object",
                    "properties":{
                        "fieldNames":{
                            "type":"array",
                            "description":"Field names in the Profile List",
                            "items":{
                                "type":"string"
                            }
                        },
                        "records":{
                            "type":"array",
                            "description":"Array of values corresponding to the fieldNames. Each element in the array represents a single recipient.",
                            "items":{
                                "type":"array",
                                "description":"Field Values for the recipient in the Profile List",
                                "items":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                },
                "matchColumnName1":{
                    "enum":[
                        "RIID_",
                        "CUSTOMER_ID_",
                        "EMAIL_ADDRESS_",
                        "MOBILE_NUMBER_",
                        "EMAIL_MD5_HASH_",
                        "EMAIL_SHA256_HASH_"
                    ],
                    "type":"string",
                    "description":"First match column for determining whether an insert or update should occur."
                },
                "insertOnNoMatch":{
                    "type":"boolean",
                    "description":"Indicates what should be done for records where a match is not found (true = insert / false = no insert)."
                },
                "updateOnMatch":{
                    "enum":[
                        "REPLACE_ALL",
                        "NO_UPDATE"
                    ],
                    "type":"string",
                    "description":"Controls how the existing record should be updated."
                }
            },
            "required":[
                "recordData",
                "matchColumnName1"
            ]
        }
    },
    "tags":[
        {
            "name":"Campaigns",
            "description":"Responsys Campaign API Endpoints"
        },
        {
            "name":"Content Library Document Images",
            "description":"Content Library Document Images"
        },
        {
            "name":"Content Library Documents",
            "description":"Documents in the Responsys Interact Suite Content Library."
        },
        {
            "name":"Content Library Folders",
            "description":"Content Library Folders in the Responsys Interact Suite Content Library."
        },
        {
            "name":"Content Library Media Items",
            "description":"Media Files in the Responsys Interact Suite Content Library."
        },
        {
            "name":"Email or Push Campaign Schedule",
            "description":"Schedule an Email or a Push Campaign"
        },
        {
            "name":"Folders",
            "description":"Responsys Account Folder API Endpoints"
        },
        {
            "name":"Get All Supplemental Tables",
            "description":"Return all the supplemental tables with column details. "
        },
        {
            "name":"Get Folder Content",
            "description":"Responsys Folder Content API Endpoints"
        },
        {
            "name":"Get all Events",
            "description":"Get all custom events for the account"
        },
        {
            "name":"List Extensions",
            "description":"Profile Extensions for a Profile List in the Responsys Interact Suite"
        },
        {
            "name":"Merge Trigger Email",
            "description":"Merge Members to a Profile List and Send Responsys Email Campaigns to them."
        },
        {
            "name":"Merge Trigger Email With Attachments",
            "description":"Merge Members to a Profile List and Send Responsys Email Campaigns with attachments to them."
        },
        {
            "name":"Merge Trigger SMS",
            "description":"Merge Members to a Profile List and Send Responsys SMS Campaigns to them"
        },
        {
            "name":"Organizations",
            "description":"Responsys Organizations"
        },
        {
            "name":"Profile Extension Recipients",
            "description":"One or more Recipients within a Profile Extension Table in the Responsys Interact Suite."
        },
        {
            "name":"Profile List Recipients",
            "description":"One or more Recipients within a Profile List in the Responsys Interact Suite."
        },
        {
            "name":"Profile Lists",
            "description":"Profile Lists in the Responsys Interact Suite"
        },
        {
            "name":"Programs",
            "description":"Responsys Program API Endpoints"
        },
        {
            "name":"Supplemental Table",
            "description":"Create new Supplemental Table"
        },
        {
            "name":"Supplemental Table Members",
            "description":"Members of a Supplemental Data Table in the Responsys Interact Suite."
        },
        {
            "name":"Trigger Email Message",
            "description":"Send Responsys Email Campaigns to existing members of a Profile List."
        },
        {
            "name":"Trigger Event",
            "description":"Raise Events for Cross-channel Marketing Programs."
        },
        {
            "name":"Trigger Push Message",
            "description":"Send Responsys Push Campaigns to existing members of a Profile List"
        }
    ]
}