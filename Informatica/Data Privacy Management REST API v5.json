{
  "swagger": "2.0",
  "info": {
    "version": "5.0",
    "title": "Data Privacy Management Internal REST Documentation",
    "description": "This document contains the details of all the APIs that are exposed to INFA services",
    "contact": {}
  },
  "host": "invr77dsg1261.informatica.com:18295",
  "basePath": "/internal",
  "securityDefinitions": {
    "infaToken": {
      "type": "apiKey",
      "description": "All requests must include the `infaToken` header containing infaToken.",
      "name": "infaToken",
      "in": "header"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/applicationGroup": {
      "get": {
        "description": "Fetches all Application Group(s) matching given filter criteria and ORDER BY clause",
        "summary": "getApplicationGroups",
        "tags": [
          "Application Group"
        ],
        "operationId": "getApplicationGroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationGroups"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataDomain": {
      "get": {
        "description": "Fetches all Data Domain(s) matching given filter criteria and order by clause",
        "summary": "getDataDomains",
        "tags": [
          "Data Domain"
        ],
        "operationId": "getDataDomains",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataDomain"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates Data Domain",
        "summary": "createDataDomain",
        "tags": [
          "Data Domain"
        ],
        "operationId": "createDataDomain",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/DataDomain"
            },
            "headers": {}
          },
          "400": {
            "description": "Data domain already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Data Domain(s) by Id or Name",
        "summary": "deleteDataDomains",
        "tags": [
          "Data Domain"
        ],
        "operationId": "deleteDataDomains",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataDomainIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          {
            "name": "dataDomainNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataDomain/{id}": {
      "get": {
        "description": "Fetches Data Domain by Id",
        "summary": "getDataDomain",
        "tags": [
          "Data Domain"
        ],
        "operationId": "getDataDomain",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DataDomain"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates Data Domain",
        "summary": "updateDataDomain",
        "tags": [
          "Data Domain"
        ],
        "operationId": "updateDataDomain",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Data Domain Object",
            "schema": {
              "$ref": "#/definitions/DataDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/DataDomain"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Data Domain by Id",
        "summary": "deleteDataDomain",
        "tags": [
          "Data Domain"
        ],
        "operationId": "deleteDataDomain",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataDomain/domainRules": {
      "post": {
        "description": "get all the rules/reference tables for a project",
        "summary": "getProjectTreeElementContent",
        "tags": [
          "Data Domain"
        ],
        "operationId": "getProjectTreeElementContent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTreeElementRM"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully created",
            "schema": {
              "$ref": "#/definitions/ProjectTreeElementsCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataDomain/domainGroups": {
      "get": {
        "description": "Fetches all Data Domain groups",
        "summary": "geAllDataDomainGroups",
        "tags": [
          "Data Domain"
        ],
        "operationId": "geAllDataDomainGroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataGovernanceProcess": {
      "get": {
        "description": "Fetches all Data Governanace Processes",
        "summary": "getAllProcess",
        "tags": [
          "Data Governance Process"
        ],
        "operationId": "getAllProcess",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DataGovernanceProcesses"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataGovernanceProcess/synchronize": {
      "get": {
        "description": "Synchronize the process detail.",
        "summary": "getBusinessProcess",
        "tags": [
          "Data Governance Process"
        ],
        "operationId": "getBusinessProcess",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Synchronize job triggered.",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dataStore/{name}": {
      "get": {
        "description": "Get Datastore by Name",
        "summary": "getDataStoreByName",
        "tags": [
          "Data Stores"
        ],
        "operationId": "getDataStoreByName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataStoreRM"
            },
            "headers": {}
          }
        }
      }
    },
    "/dataStore/dataOwners": {
      "get": {
        "description": "Fetches all Data Owner(s) matching given filter criteria and order by clause",
        "summary": "getAllDataOwners",
        "tags": [
          "Data Stores"
        ],
        "operationId": "getAllDataOwners",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IDataOwner"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/dataStore": {
      "get": {
        "description": "Fetches all Data Store(s) matching given filter criteria and order by clause",
        "summary": "getAllDataStores",
        "tags": [
          "Data Stores"
        ],
        "operationId": "getAllDataStores",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataStoreRM"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/dataStore/{repoId}/notification/scan/{action}": {
      "post": {
        "description": "DataStore Scan Notification Action",
        "summary": "importCatalog",
        "tags": [
          "Data Stores"
        ],
        "operationId": "importCatalog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Notfication action successful",
            "headers": {}
          }
        }
      }
    },
    "/dataStore/fields/info": {
      "post": {
        "description": "Fetch DataStore fields info.",
        "summary": "getDataStoreFieldsInfo",
        "tags": [
          "Data Stores"
        ],
        "operationId": "getDataStoreFieldsInfo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataStoreFieldRM"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "successful operation",
            "schema": {}
          }
        }
      }
    },
    "/dataStore/{repoId}/incrementalScan": {
      "post": {
        "description": "Incremental Scan on DataStore",
        "summary": "incrementalScan",
        "tags": [
          "Data Stores"
        ],
        "operationId": "incrementalScan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          },
          "default": {
            "description": "successful operation",
            "schema": {}
          }
        }
      }
    },
    "/dataStore/catalog/autosyncconfigs": {
      "post": {
        "description": "Auto Sync Catalog Results Configuration",
        "summary": "dataStoreAutoSyncConfig",
        "tags": [
          "Data Stores"
        ],
        "operationId": "dataStoreAutoSyncConfig",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataStoreAutoSyncRM"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auto Sync Catalog Result Configuration updated succesfully",
            "headers": {}
          }
        }
      }
    },
    "/dsar/subject/reporttemplates": {
      "get": {
        "description": "Get DSAR Report templates for a subject Registry record",
        "summary": "getDSARReportTemplates",
        "tags": [
          "DSAR"
        ],
        "operationId": "getDSARReportTemplates",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DSAReportTemplateCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dsar/subject/summary": {
      "get": {
        "description": "Get DSAR Summary for a subject Registry record",
        "summary": "getSubjectRegistryEntityDSARSummary",
        "tags": [
          "DSAR"
        ],
        "operationId": "getSubjectRegistryEntityDSARSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryDSARSummaryRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dsar/subject/download": {
      "get": {
        "description": "Get DSAR Report for a subject Registry record",
        "summary": "getDSARReportCSVForSubject",
        "tags": [
          "DSAR"
        ],
        "operationId": "getDSARReportCSVForSubject",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dsarId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "subjectName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "reportType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "reportTemplateName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryDSARSummaryRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dsar/subject/purgedsarhistory": {
      "get": {
        "description": "Purge DSAR historical reports",
        "summary": "purgeDSARReports",
        "tags": [
          "DSAR"
        ],
        "operationId": "purgeDSARReports",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/dsar/subject/dsarpurged": {
      "get": {
        "description": "Check if DSAR Report is Purged",
        "summary": "DSARReportsStatus",
        "tags": [
          "DSAR"
        ],
        "operationId": "DSARReportsStatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dsarId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "subjectId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DSARReportStatusRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/catalog/resources/list": {
      "get": {
        "description": "List Catalog Resources",
        "summary": "listCatalogResources",
        "tags": [
          "Catalog"
        ],
        "operationId": "listCatalogResources",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/CatalogResources"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/catalog/resources/type": {
      "get": {
        "description": "Get All Resource Types",
        "summary": "getCatalogResourceTypes",
        "tags": [
          "Catalog"
        ],
        "operationId": "getCatalogResourceTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/CatalogResourceTypeCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/catalog/resources/import": {
      "post": {
        "description": "Import Catalog Resources",
        "summary": "importCatalogResources",
        "tags": [
          "Catalog"
        ],
        "operationId": "importCatalogResources",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogImport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Triggered Import Jobs",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/catalog/resources/availableCount": {
      "get": {
        "description": "List Catalog Resources",
        "summary": "availableCountCatalogResources",
        "tags": [
          "Catalog"
        ],
        "operationId": "availableCountCatalogResources",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/CatalogResources"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location/browse/region": {
      "get": {
        "description": "Lists all the regions",
        "summary": "getRegions",
        "tags": [
          "Location"
        ],
        "operationId": "getRegions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Regions"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location/browse/country": {
      "get": {
        "description": "Fetches all countries in the given region",
        "summary": "getCountriesByRegion",
        "tags": [
          "Location"
        ],
        "operationId": "getCountriesByRegion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemCollectionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location/browse/state": {
      "get": {
        "description": "Fetches all states in the given country",
        "summary": "getStatesByCountry",
        "tags": [
          "Location"
        ],
        "operationId": "getStatesByCountry",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemCollectionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location/browse/city": {
      "get": {
        "description": "Fetches all cities in the given state",
        "summary": "getCitiesByState",
        "tags": [
          "Location"
        ],
        "operationId": "getCitiesByState",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stateId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemCollectionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location": {
      "post": {
        "description": "Create Locaiton",
        "summary": "createLocation",
        "tags": [
          "Location"
        ],
        "operationId": "createLocation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Location"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/location/{id}": {
      "get": {
        "description": "Fetches a Location by Id",
        "summary": "getLocation",
        "tags": [
          "Location"
        ],
        "operationId": "getLocation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Location"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/metadataAugment/updateSensitiveInfo": {
      "put": {
        "description": "Updates the sensitive information about Metadata column",
        "summary": "updateSensitiveInfo",
        "tags": [
          "Metadata"
        ],
        "operationId": "updateSensitiveInfo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SensitiveInfoUpdateRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the Given Information on selected Column(s)",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/metadataAugment/associateDataDomain": {
      "put": {
        "description": "Updates the data domain association for the column",
        "summary": "associateDataDomainAndNotesForMetadata",
        "tags": [
          "Metadata"
        ],
        "operationId": "associateDataDomainAndNotesForMetadata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetadataAugmentUpdateInfoRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the Given Information on selected Column(s)",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataDomain/{dataDomainName}": {
      "post": {
        "description": "Notifies that Data Domain has been created",
        "summary": "createDataDomain_1",
        "tags": [
          "Notification"
        ],
        "operationId": "createDataDomain_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataDomainName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Notifies that Data Domain has been updated",
        "summary": "updateDataDomain_1",
        "tags": [
          "Notification"
        ],
        "operationId": "updateDataDomain_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataDomainName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Notifies that Data Domain has been deleted",
        "summary": "deleteDataDomain_1",
        "tags": [
          "Notification"
        ],
        "operationId": "deleteDataDomain_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataDomainName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/{dataStoreName}": {
      "post": {
        "description": "Notifies that Data Store has been created",
        "summary": "createDataStore",
        "tags": [
          "Notification"
        ],
        "operationId": "createDataStore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataStoreName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Notifies that Data Store has been updated",
        "summary": "updateDataStore",
        "tags": [
          "Notification"
        ],
        "operationId": "updateDataStore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataStoreName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Notifies that Data Store has been deleted",
        "summary": "deleteDataStore",
        "tags": [
          "Notification"
        ],
        "operationId": "deleteDataStore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataStoreName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/{dataStoreName}/scan": {
      "post": {
        "description": "Notifies that Data Store has been scanned successfully",
        "summary": "scanDataStore",
        "tags": [
          "Notification"
        ],
        "operationId": "scanDataStore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataStoreName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/disablePolling": {
      "post": {
        "description": "Disables Polling Job",
        "summary": "disablePolling",
        "tags": [
          "Notification"
        ],
        "operationId": "disablePolling",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/enablePolling": {
      "post": {
        "description": "Enables Polling Job",
        "summary": "enablePolling",
        "tags": [
          "Notification"
        ],
        "operationId": "enablePolling",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/modifyUpdatePoll": {
      "post": {
        "description": "Triggers job for polling Data Store updates",
        "summary": "triggerDataStoreUpdatePoll",
        "tags": [
          "Notification"
        ],
        "operationId": "triggerDataStoreUpdatePoll",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pollingPeriod",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Polling period in mins or days"
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/notify/dataStore/modifyScanPoll": {
      "post": {
        "description": "Triggers job for polling Data Store scans",
        "summary": "triggerDataStoreScanPoll",
        "tags": [
          "Notification"
        ],
        "operationId": "triggerDataStoreScanPoll",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pollingPeriod",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Polling period in mins or days"
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simValidation": {
      "get": {
        "description": "Fetches count for the Unscanned DataStores from the list",
        "summary": "validateReposForScan",
        "tags": [
          "Simulation"
        ],
        "operationId": "validateReposForScan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched Count for Unscanned DataStores",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simRiskScore/{id}": {
      "get": {
        "description": "Fetches Simulation RiskScore",
        "summary": "getSimRiskScore",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimRiskScore",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "editFlag",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation": {
      "get": {
        "description": "Fetches all Simulation(s) matching given filter criteria and order by clause",
        "summary": "getAllSimulations",
        "tags": [
          "Simulation"
        ],
        "operationId": "getAllSimulations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Simulation(s) Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimulationRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Initiates Simulation",
        "summary": "initiateSimulation",
        "tags": [
          "Simulation"
        ],
        "operationId": "initiateSimulation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Initiated Simulation Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Simulations by Id list",
        "summary": "deleteSimulationByIds",
        "tags": [
          "Simulation"
        ],
        "operationId": "deleteSimulationByIds",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "simulationIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Simulations Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/tags": {
      "get": {
        "description": "Fetches tags for all Simulation(s)",
        "summary": "getAllSimulationTags",
        "tags": [
          "Simulation"
        ],
        "operationId": "getAllSimulationTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved Tags(s) Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/{id}": {
      "get": {
        "description": "Fetches Simulation details by Id",
        "summary": "getSimulationDetails",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimulationDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Simulation Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Saves Simulation Details",
        "summary": "saveSimulation",
        "tags": [
          "Simulation"
        ],
        "operationId": "saveSimulation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Simulation Object",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saved Simulation Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/repo/{id}": {
      "get": {
        "description": "Fetches Simulation Repo details by Id",
        "summary": "getSimulationRepoById",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimulationRepoById",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "simulationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SimulationRepoRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/repo": {
      "put": {
        "description": "Updates Simulation repo details",
        "summary": "updateSimulationRepo",
        "tags": [
          "Simulation"
        ],
        "operationId": "updateSimulationRepo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Simulation Repo Object",
            "schema": {
              "$ref": "#/definitions/SimulationRepoRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Simulation Repo Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRepoRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/repo/{simulationid}": {
      "delete": {
        "description": "Deletes Simulation Repos by Simulation Id and Repo Ids",
        "summary": "deleteSimulationRepos",
        "tags": [
          "Simulation"
        ],
        "operationId": "deleteSimulationRepos",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "simulationid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "repoIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Simulation Repos Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simrepos": {
      "post": {
        "description": "Add new datastores to existing simulation",
        "summary": "addReposToSimulation",
        "tags": [
          "Simulation"
        ],
        "operationId": "addReposToSimulation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Added Datastores to Simulation Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simrepos/{id}": {
      "get": {
        "description": "Fetches Simulation repo details by Simulation Id",
        "summary": "getSimulationRepos",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimulationRepos",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "editFlag",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simRiskCost/{id}": {
      "get": {
        "description": "Fetches Simulation RiskCost",
        "summary": "getSimRiskCost",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimRiskCost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "editFlag",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simProtectionStatus/{id}": {
      "get": {
        "description": "Fetches Simulation Protection Status",
        "summary": "getSimProtectionStatus",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimProtectionStatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "editFlag",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simrepo/refresh": {
      "post": {
        "description": "Refresh Simulation Repo with the current values",
        "summary": "refreshSimulationRepo",
        "tags": [
          "Simulation"
        ],
        "operationId": "refreshSimulationRepo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRepoRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshed Simulation Repo successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/simrepos/refresh": {
      "post": {
        "description": "Refresh multiple Simulation repos with the current values",
        "summary": "refreshSimulationRepos",
        "tags": [
          "Simulation"
        ],
        "operationId": "refreshSimulationRepos",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimulationRepoRM"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshed Simulation Repos successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/edit": {
      "post": {
        "description": "Refresh Simulation Temp tables for edit",
        "summary": "refreshSimulationTemp",
        "tags": [
          "Simulation"
        ],
        "operationId": "refreshSimulationTemp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Refreshed Temp Tables Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/copy": {
      "post": {
        "description": "Copy Simulation to Temp tables for edit",
        "summary": "copySimulationTemp",
        "tags": [
          "Simulation"
        ],
        "operationId": "copySimulationTemp",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Copied to Temp Tables Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/reset": {
      "post": {
        "description": "Reset Simulation Repo to last saved values",
        "summary": "resetSimulationRepo",
        "tags": [
          "Simulation"
        ],
        "operationId": "resetSimulationRepo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRepoRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation Repo Resetted Successfully",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/cancel": {
      "post": {
        "description": "Cancels Simulation and purges data",
        "summary": "cancelSimulation",
        "tags": [
          "Simulation"
        ],
        "operationId": "cancelSimulation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SimulationRM"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cancelled Simulation Successfully",
            "headers": {}
          },
          "400": {
            "description": "Simulation already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/count": {
      "get": {
        "description": "Gives the count of Simulations",
        "summary": "getSimulationCount",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimulationCount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Returned Simulation Count Successfully",
            "headers": {}
          },
          "400": {
            "description": "Couldn't Return Simulation Count",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/simulation/repocount/{id}": {
      "get": {
        "description": "Gives the count of Simulation Repos",
        "summary": "getSimulationRepoCount",
        "tags": [
          "Simulation"
        ],
        "operationId": "getSimulationRepoCount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "editFlag",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Returned Simulation Repos Count Successfully",
            "headers": {}
          },
          "400": {
            "description": "Couldn't Return Simulation Repo Count",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/details/groupby": {
      "post": {
        "description": "Get group wise details for the subject Registry entity at data store level",
        "summary": "getGroupBySubjectRegistryEntityDetails",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getGroupBySubjectRegistryEntityDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/details/fields": {
      "post": {
        "description": "Get field and files details for the subject Registry entity at data store level",
        "summary": "getSubjectRegistryEntityDetailFieldsFiles",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getSubjectRegistryEntityDetailFieldsFiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/updateLegalInformation": {
      "post": {
        "description": "Update Legal hold status on a Subject",
        "summary": "updateLegalHoldStatusForSubject",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "updateLegalHoldStatusForSubject",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "isLegalHoldApplied",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/entities": {
      "get": {
        "description": "Get all Subject Registry Entities and Details",
        "summary": "getAllEntitiesAndDetails",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getAllEntitiesAndDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityCollectionWithValidationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/entities/entitynames": {
      "get": {
        "description": "Get all Subject Registry Entities",
        "summary": "getAllEntities",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getAllEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityCollectionWithValidationRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/search": {
      "post": {
        "description": "Get Search Results for Preferred Records",
        "summary": "getPreferredRecordSearch",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getPreferredRecordSearch",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryMultiSearchLayoutRM"
            }
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryMultiSearchLayoutRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/search/summary": {
      "get": {
        "description": "Get Search Results Summary for Preferred Records",
        "summary": "getPreferredRecordSummary",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getPreferredRecordSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistrySummaryRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/details": {
      "post": {
        "description": "Get details for the subject Registry entity",
        "summary": "getSubjectRegistryEntityDetails",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getSubjectRegistryEntityDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityDetailsCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/summary": {
      "post": {
        "description": "Get summary details for the subject Registry entity",
        "summary": "getSubjectRegistryEntityDetailsSummary",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getSubjectRegistryEntityDetailsSummary",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryDetailsSummaryRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/attributes": {
      "post": {
        "description": "Get attributes for the subject Registry entity at data store level",
        "summary": "getSubjectRegistryEntityAttributes",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getSubjectRegistryEntityAttributes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityDetailsRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/subjectRegistry/subject/datastore/breach": {
      "post": {
        "description": "Get breach report for the subject Registry entity at data store level",
        "summary": "getSubjectRegistryBreachReport",
        "tags": [
          "Subject Registry"
        ],
        "operationId": "getSubjectRegistryBreachReport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoIds",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/SubjectRegistryEntityRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action": {
      "get": {
        "description": "Fetches all Action(s) matching given filter criteria and order by clause",
        "summary": "getAllActions",
        "tags": [
          "Action"
        ],
        "operationId": "getAllActions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates Action",
        "summary": "createAction",
        "tags": [
          "Action"
        ],
        "operationId": "createAction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Action already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Actions by Id list",
        "summary": "deleteActionByIds",
        "tags": [
          "Action"
        ],
        "operationId": "deleteActionByIds",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actionIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Actions Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/metadata/extid/{extensionId}": {
      "get": {
        "description": "Fetches runtime metadata for a plugin using extension id",
        "summary": "getExtensionPluginsById",
        "tags": [
          "Action"
        ],
        "operationId": "getExtensionPluginsById",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          },
          {
            "name": "contextType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskMetadataCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/updateSecurityPolicy": {
      "put": {
        "description": "Update security policy with runtime parameters",
        "summary": "updateSecurityPolicyWithRunTimeParams",
        "tags": [
          "Action"
        ],
        "operationId": "updateSecurityPolicyWithRunTimeParams",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskCreateRM"
              }
            }
          },
          {
            "name": "securityPolicyName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "operationMode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Security Policy Updated Successfully",
            "schema": {
              "type": "string"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/securityPolicyActions/{securityPolicyName}": {
      "get": {
        "description": "Fetches all Action(s) for a security policy",
        "summary": "getActionsForSecurityPolicy",
        "tags": [
          "Action"
        ],
        "operationId": "getActionsForSecurityPolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "securityPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskCreateRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/tags": {
      "get": {
        "description": "Fetches tags for all Action(s)",
        "summary": "getAllActionTags",
        "tags": [
          "Action"
        ],
        "operationId": "getAllActionTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved Tags(s) Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/{id}": {
      "get": {
        "description": "Fetches Action details by Id",
        "summary": "getActionDetailsById",
        "tags": [
          "Action"
        ],
        "operationId": "getActionDetailsById",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates Action",
        "summary": "updateAction",
        "tags": [
          "Action"
        ],
        "operationId": "updateAction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Action Object",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Action by Id",
        "summary": "deleteAction",
        "tags": [
          "Action"
        ],
        "operationId": "deleteAction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/name/{name}": {
      "get": {
        "description": "Fetches Action details by Name",
        "summary": "getActionDetailsByName",
        "tags": [
          "Action"
        ],
        "operationId": "getActionDetailsByName",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ActionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/action/metadata/{pluginKey}": {
      "get": {
        "description": "Fetches runtime metadata for a plugin",
        "summary": "getExtensionPlugins",
        "tags": [
          "Action"
        ],
        "operationId": "getExtensionPlugins",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pluginKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contextType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskMetadataCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/attachment": {
      "post": {
        "description": "Uploads attachment",
        "summary": "uploadAttachment",
        "tags": [
          "Attachment"
        ],
        "operationId": "uploadAttachment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded attachment successfully",
            "schema": {
              "$ref": "#/definitions/AttachmentDetailRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Could not upload attachment",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/attachment/{attachmentId}": {
      "get": {
        "description": "Downloads attachment using Id",
        "summary": "downloadAttachment",
        "tags": [
          "Attachment"
        ],
        "operationId": "downloadAttachment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Downloaded attachment successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes attachment by id",
        "summary": "deleteAttachment",
        "tags": [
          "Attachment"
        ],
        "operationId": "deleteAttachment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted attachment successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/encryptionRule/{id}": {
      "get": {
        "description": "Fetches EncryptionRule details by Id",
        "summary": "getEncryptionRule",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "getEncryptionRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/EncryptionRuleRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates EncryptionRule",
        "summary": "updateEncryptionRule",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "updateEncryptionRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "EncryptionRule Object",
            "schema": {
              "$ref": "#/definitions/EncryptionRuleRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/EncryptionRuleRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/encryptionRule": {
      "get": {
        "description": "Fetches all EncryptionRule(s) matching given filter criteria and order by clause",
        "summary": "getAllEncryptionRules",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "getAllEncryptionRules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EncryptionRuleRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates EncryptionRule",
        "summary": "createEncryptionRule",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "createEncryptionRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EncryptionRuleRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/EncryptionRuleRM"
            },
            "headers": {}
          },
          "400": {
            "description": "EncryptionRule already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes EncryptionRules by Id list",
        "summary": "deleteEncryptionRuleIds",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "deleteEncryptionRuleIds",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted EncryptionRules Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/encryptionRule/validateDelete": {
      "get": {
        "description": "Validate deletion of EncryptionRule",
        "summary": "validateDelete",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "validateDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DeleteEncryptionRuleCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/encryptionRule/dataTypes": {
      "get": {
        "description": "Data types supported by Encryption rule",
        "summary": "getSupportedDataTypes",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "getSupportedDataTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/encryptionRule/encryptionTechniques": {
      "get": {
        "description": "Encryption techniques supported by Encryption rule",
        "summary": "getSupportedEncryptionTechniques",
        "tags": [
          "Encrytpion rule"
        ],
        "operationId": "getSupportedEncryptionTechniques",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension/{id}": {
      "get": {
        "description": "Fetches Extension details by Id",
        "summary": "getExtensionDetails",
        "tags": [
          "Extension"
        ],
        "operationId": "getExtensionDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ExtensionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates Extension",
        "summary": "updateExtension",
        "tags": [
          "Extension"
        ],
        "operationId": "updateExtension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Extension Object",
            "schema": {
              "$ref": "#/definitions/ExtensionRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/ExtensionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Extension by Id",
        "summary": "deleteExtension",
        "tags": [
          "Extension"
        ],
        "operationId": "deleteExtension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension/extensions": {
      "get": {
        "description": "Fetches all Extension(s) matching given theme and filter criteria and order by clause",
        "summary": "getAllExtensionsByPluginTheme",
        "tags": [
          "Extension"
        ],
        "operationId": "getAllExtensionsByPluginTheme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pluginThemes",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension": {
      "get": {
        "description": "Fetches all Extension(s) matching given filter criteria and order by clause",
        "summary": "getAllExtensions",
        "tags": [
          "Extension"
        ],
        "operationId": "getAllExtensions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates Extension",
        "summary": "createExtension",
        "tags": [
          "Extension"
        ],
        "operationId": "createExtension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExtensionRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/ExtensionRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Extension already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Extensions by Id list",
        "summary": "deleteExtensionByIds",
        "tags": [
          "Extension"
        ],
        "operationId": "deleteExtensionByIds",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extensionIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Extensions Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension/metadata/{pluginKey}": {
      "get": {
        "description": "Fetches global metadata for plugin",
        "summary": "getGlobalMetadata",
        "tags": [
          "Extension"
        ],
        "operationId": "getGlobalMetadata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pluginKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskMetadataCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension/validateDelete": {
      "get": {
        "description": "Validate deletion of extension",
        "summary": "validateDeletionOfExtension",
        "tags": [
          "Extension"
        ],
        "operationId": "validateDeletionOfExtension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extensionIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DeleteExtensionCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/extension/plugins": {
      "get": {
        "description": "Fetches loaded plugins by category",
        "summary": "getExtensionPlugins_1",
        "tags": [
          "Extension"
        ],
        "operationId": "getExtensionPlugins_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pluginThemes",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "isConfigurable",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Extensions"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/globalList/globalListCounts": {
      "get": {
        "description": "Fetches all Whitelist/Blacklist and recommendation data counts matching given filter criteria ",
        "summary": "getAllWhiteBlackListCounts",
        "tags": [
          "GlobalList"
        ],
        "operationId": "getAllWhiteBlackListCounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/globalList": {
      "get": {
        "description": "Fetches all Whitelist/Blacklist(s) matching given filter criteria and order by clause",
        "summary": "getAllEntries",
        "tags": [
          "GlobalList"
        ],
        "operationId": "getAllEntries",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "summaryTabType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalListRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/globalList/delete": {
      "delete": {
        "description": "Deletes Whitelist Blacklist entries by Id",
        "summary": "deleteEntries",
        "tags": [
          "GlobalList"
        ],
        "operationId": "deleteEntries",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "summaryTabType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/globalList/changeScope": {
      "put": {
        "description": "Update scope of whitelist or blacklist entries",
        "summary": "updateScopeOfEntries",
        "tags": [
          "GlobalList"
        ],
        "operationId": "updateScopeOfEntries",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "summaryTabType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "DataStoreScope",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "SchemaScope",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ObjectScope",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the Given Information on selected entries",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/globalList/changeState": {
      "put": {
        "description": "Move whitelist or blacklist entries to active or inactive state",
        "summary": "changeStateOfAnEntry",
        "tags": [
          "GlobalList"
        ],
        "operationId": "changeStateOfAnEntry",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "summaryTabType",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Updated the Given Information on selected entries",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/keyManager/keyAlias": {
      "get": {
        "description": "Fetches all Keys",
        "summary": "getAllKeyAliases",
        "tags": [
          "Key Manager"
        ],
        "operationId": "getAllKeyAliases",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IKeyAlias"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/keyManager/key": {
      "post": {
        "description": "Fetches key using the alias",
        "summary": "getKeyByAlias",
        "tags": [
          "Key Manager"
        ],
        "operationId": "getKeyByAlias",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeyHandleRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "string"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/keyManager/generateKey": {
      "post": {
        "description": "Generated a new key with the alias",
        "summary": "generateKeyByAlias",
        "tags": [
          "Key Manager"
        ],
        "operationId": "generateKeyByAlias",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeyHandleRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "string"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/taskStats": {
      "get": {
        "description": "Fetches Task statistics",
        "summary": "getTaskStats",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getTaskStats",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskStatsRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/{id}": {
      "get": {
        "description": "Fetches Task details by Id",
        "summary": "getTaskDetails",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getTaskDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskDetailRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates Task",
        "summary": "updateTask",
        "tags": [
          "Orchestration"
        ],
        "operationId": "updateTask",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Extension Object",
            "schema": {
              "$ref": "#/definitions/TaskEventRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/TaskDetailRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration": {
      "get": {
        "description": "Fetches all tasks for view",
        "summary": "getAllTasks",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getAllTasks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskSummaryCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates task",
        "summary": "createTask",
        "tags": [
          "Orchestration"
        ],
        "operationId": "createTask",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaskCreateRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/TaskCreationResultRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Task creation failed",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/subject/tasks": {
      "get": {
        "description": "Fetches all tasks performed on the subject",
        "summary": "getAllTasksForSubject",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getAllTasksForSubject",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/TaskSummaryCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/{id}/attachment": {
      "post": {
        "description": "Attaches selected file to existing task",
        "summary": "uploadAttachment_1",
        "tags": [
          "Orchestration"
        ],
        "operationId": "uploadAttachment_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded attachment successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/{id}/attachment/{attachmentId}": {
      "get": {
        "description": "Downloads file by attachment id",
        "summary": "downloadAttachment_1",
        "tags": [
          "Orchestration"
        ],
        "operationId": "downloadAttachment_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Downloaded attachment successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes file by attachment id",
        "summary": "deleteAttachment_1",
        "tags": [
          "Orchestration"
        ],
        "operationId": "deleteAttachment_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Downloaded attachment successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/user": {
      "post": {
        "description": "Fetches all users",
        "summary": "getAllUsers",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getAllUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllUsersInputRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/UserCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/{taskId}/eventType": {
      "get": {
        "description": "Returns values of all types of events supported by a given task",
        "summary": "getValidEventTypes",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getValidEventTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/getValidEventTypesResponse"
              },
              "uniqueItems": true
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/event": {
      "put": {
        "description": "Handle task event",
        "summary": "handleTaskEvents",
        "tags": [
          "Orchestration"
        ],
        "operationId": "handleTaskEvents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaskEventRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully handled the event",
            "schema": {
              "$ref": "#/definitions/TaskEventHandlingResultRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/variable/validation": {
      "post": {
        "description": "Returns a list of unresolved substituion variables. If all variables are resolved and valid then the list is empty.",
        "summary": "validateSubstitutionVariables",
        "tags": [
          "Orchestration"
        ],
        "operationId": "validateSubstitutionVariables",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionParameterRM"
              }
            }
          },
          {
            "name": "pluginKey",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contextType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/context": {
      "post": {
        "description": "Fetches Original and Filtered Data Store and Data Domain Ids",
        "summary": "getContextForTask",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getContextForTask",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProtectionTaskContextRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/OriginalAndFilteredContextForTaskRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/orchestration/selectAll": {
      "post": {
        "description": "Returning a list of id and name from a task source given filters and exclude ids",
        "summary": "getAllforTaskSource",
        "tags": [
          "Orchestration"
        ],
        "operationId": "getAllforTaskSource",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SelectAllRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/validateDelete": {
      "get": {
        "description": "Validate deletion of Proxies",
        "summary": "validateDelete_1",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "validateDelete_1",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "proxyIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/DeleteProxyCollectionRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/{id}": {
      "get": {
        "description": "Fetches Proxy details by Id",
        "summary": "getProxyDetails",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "getProxyDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "put": {
        "description": "Updates ProxyDetails",
        "summary": "updateProxy",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "updateProxy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Proxy Object",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy": {
      "get": {
        "description": "Fetches all Proxy(s) matching given filter criteria and order by clause",
        "summary": "getAllProxies",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "getAllProxies",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProxyDetailsRM"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "post": {
        "description": "Creates Proxy",
        "summary": "createProxy",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "createProxy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Created",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            },
            "headers": {}
          },
          "400": {
            "description": "Proxy already exists",
            "schema": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes Proxies by Id list",
        "summary": "deleteProxyIds",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "deleteProxyIds",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "proxyIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Proxies Successfully",
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/getUsers": {
      "get": {
        "description": "get distinct existing proxies createdBy user names",
        "summary": "getProxyCreateybyUsers",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "getProxyCreateybyUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/proxyTypes": {
      "get": {
        "description": "Get valid Proxy Types",
        "summary": "getProxyTypes",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "getProxyTypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/test": {
      "post": {
        "description": "test whether proxy is up or not",
        "summary": "testProxy",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "testProxy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProxyDetailsRM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ProxyStatusRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    },
    "/v1/proxy/publish": {
      "post": {
        "description": "publish the proxy configurations",
        "summary": "publish",
        "tags": [
          "Proxy Details"
        ],
        "operationId": "publish",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ProxyStatusRM"
            },
            "headers": {}
          },
          "403": {
            "description": "Unauthorized Request",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/RestErrorDescription"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGroup": {
      "title": "ApplicationGroup",
      "type": "object",
      "properties": {
        "id": {
          "description": "Application Group ID",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Application Group Name",
          "type": "string"
        },
        "description": {
          "description": "Application Group Description",
          "type": "string"
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "parentAppGroupId": {
          "description": "Parent Application Group ID",
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "description": "Application Group Path",
          "type": "string"
        },
        "dataStoreCount": {
          "description": "Number of data stores in this application group",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "ApplicationGroups": {
      "title": "ApplicationGroups",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "items",
        "totalCount"
      ]
    },
    "RestErrorDescription": {
      "title": "RestErrorDescription",
      "type": "object",
      "properties": {
        "httpStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "statusDescription": {
          "type": "string"
        },
        "errorCode": {
          "description": "Product specific error code",
          "type": "string"
        },
        "errorMessage": {
          "description": "Product specific error description",
          "type": "string"
        }
      }
    },
    "DataDomain": {
      "title": "DataDomain",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domainTrumpRule": {
          "$ref": "#/definitions/DomainTrumpRule"
        },
        "metadataProfile": {
          "$ref": "#/definitions/MetadataProfileRM"
        },
        "dataProfile": {
          "$ref": "#/definitions/DataProfileRM"
        },
        "protectionConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDomainProtectionConfigRM"
          }
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "dataDomainGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "identity": {
          "type": "string"
        },
        "proximityRules": {
          "description": "Option for discovering data domains in proximity to this one",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProximityProfile"
          }
        },
        "isDeleteAllowed": {
          "description": "Is datadomain delete allowed",
          "type": "boolean"
        },
        "countOfPolicies": {
          "description": "No of policies referrring this data domain",
          "type": "integer",
          "format": "int32"
        },
        "isDataDomainHasRunningScan": {
          "type": "boolean"
        },
        "isEditAllowed": {
          "type": "boolean"
        },
        "countOfDataStores": {
          "type": "integer",
          "format": "int32"
        },
        "isDelinkDomainAssociationsAllowed": {
          "type": "boolean"
        }
      }
    },
    "DataDomainProtectionConfigRM": {
      "title": "DataDomainProtectionConfigRM",
      "type": "object",
      "properties": {
        "toolId": {
          "type": "integer",
          "format": "int64"
        },
        "toolName": {
          "type": "string"
        },
        "toolDescription": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "toolPluginId": {
          "type": "string"
        },
        "dataDomainId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DataProfileRM": {
      "title": "DataProfileRM",
      "type": "object",
      "properties": {
        "profileType": {
          "$ref": "#/definitions/ProfileType"
        },
        "pattern": {
          "$ref": "#/definitions/ProfilePatternRM"
        },
        "referenceTable": {
          "$ref": "#/definitions/ProfileMRSObjectRM"
        },
        "rule": {
          "$ref": "#/definitions/ProfileMRSObjectRM"
        },
        "maximumRejectScore": {
          "type": "number",
          "format": "double"
        },
        "minimumAcceptScore": {
          "type": "number",
          "format": "double"
        },
        "isValidateFieldsSensitive": {
          "type": "boolean"
        },
        "minimumConformanceRowCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MetadataProfileRM": {
      "title": "MetadataProfileRM",
      "type": "object",
      "properties": {
        "profileType": {
          "$ref": "#/definitions/ProfileType"
        },
        "pattern": {
          "$ref": "#/definitions/ProfilePatternRM"
        },
        "referenceTable": {
          "$ref": "#/definitions/ProfileMRSObjectRM"
        },
        "rule": {
          "$ref": "#/definitions/ProfileMRSObjectRM"
        }
      }
    },
    "ProfileMRSObjectRM": {
      "title": "ProfileMRSObjectRM",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ProfilePatternRM": {
      "title": "ProfilePatternRM",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "Regex pattern",
          "type": "string"
        }
      }
    },
    "ProximityProfile": {
      "title": "ProximityProfile",
      "type": "object",
      "properties": {
        "dataDomain": {
          "description": "Names of the data domain to be profiled for proximity",
          "type": "string"
        }
      }
    },
    "ProjectTreeElementRM": {
      "title": "ProjectTreeElementRM",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "childType": {
          "type": "string"
        },
        "identity": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProjectTreeElementsCollectionRM": {
      "title": "ProjectTreeElementsCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectTreeElementRM"
          }
        }
      }
    },
    "DataGovernanceProcess": {
      "title": "DataGovernanceProcess",
      "type": "object",
      "properties": {
        "processId": {
          "type": "integer",
          "format": "int32"
        },
        "processName": {
          "type": "string"
        },
        "processLink": {
          "type": "string"
        }
      }
    },
    "DataGovernanceProcesses": {
      "title": "DataGovernanceProcesses",
      "type": "object",
      "properties": {
        "processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataGovernanceProcess"
          }
        }
      }
    },
    "ConnectionDetailsRM": {
      "title": "ConnectionDetailsRM",
      "discriminator": "dataStoreType",
      "type": "object",
      "properties": {
        "dataStoreType": {
          "type": "string"
        }
      },
      "required": [
        "dataStoreType"
      ]
    },
    "DataStoreRM": {
      "title": "DataStoreRM",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "repoDbTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "dbTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataOwner": {
          "type": "string"
        },
        "applicationGroup": {
          "type": "integer",
          "format": "int32"
        },
        "assetLocation": {
          "type": "string"
        },
        "departmentName": {
          "type": "string"
        },
        "securityGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "catalogResourceId": {
          "type": "string"
        },
        "connectionDetails": {
          "$ref": "#/definitions/ConnectionDetailsRM"
        }
      }
    },
    "OracleConnectionDetailsRM": {
      "title": "OracleConnectionDetailsRM",
      "allOf": [
        {
          "$ref": "#/definitions/ConnectionDetailsRM"
        },
        {
          "type": "object",
          "properties": {
            "host": {
              "type": "string"
            },
            "port": {
              "type": "integer",
              "format": "int32"
            },
            "user": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "schema": {
              "type": "string"
            },
            "service": {
              "type": "string"
            },
            "connectString": {
              "type": "string"
            },
            "sourceConnectionName": {
              "type": "string"
            },
            "includeViews": {
              "type": "boolean"
            },
            "secureJDBCParameters": {
              "type": "string"
            },
            "profileExecutionEngine": {
              "type": "string"
            },
            "preferredDIS": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            },
            "cyberArkSafe": {
              "type": "string"
            },
            "hadoopConnectionName": {
              "type": "string"
            },
            "Import system objects": {
              "type": "string"
            },
            "Import stored procedures": {
              "type": "string"
            }
          }
        }
      ]
    },
    "IDataOwner": {
      "title": "IDataOwner",
      "type": "object",
      "properties": {
        "ldmUserId": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "systemUser": {
          "type": "boolean"
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipAddress": {
          "type": "string"
        },
        "securityDomain": {
          "type": "string"
        },
        "adminUser": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Locale": {
      "title": "Locale",
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        },
        "extensionKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "unicodeLocaleAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "unicodeLocaleKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "iso3Language": {
          "type": "string"
        },
        "iso3Country": {
          "type": "string"
        },
        "displayLanguage": {
          "type": "string"
        },
        "displayScript": {
          "type": "string"
        },
        "displayCountry": {
          "type": "string"
        },
        "displayVariant": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "DataStoreFieldRM": {
      "title": "DataStoreFieldRM",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "Resource Name",
          "type": "string"
        },
        "fields": {
          "description": "Field Ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resourceName",
        "fields"
      ]
    },
    "DataStoreAutoSyncRM": {
      "title": "DataStoreAutoSyncRM",
      "type": "object",
      "properties": {
        "dataStoreName": {
          "type": "string"
        },
        "autoSync": {
          "type": "boolean"
        }
      }
    },
    "DSAReportTemplateCollectionRM": {
      "title": "DSAReportTemplateCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "reportTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DSAReportTemplateRM"
          }
        }
      }
    },
    "DSAReportTemplateRM": {
      "title": "DSAReportTemplateRM",
      "type": "object",
      "properties": {
        "reportFileType": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        }
      }
    },
    "SubjectRegistryDSARSummaryRM": {
      "title": "SubjectRegistryDSARSummaryRM",
      "type": "object",
      "properties": {
        "dsarId": {
          "type": "string"
        },
        "subjectId": {
          "type": "string"
        },
        "requestedBy": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "processStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "processEndTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "dataLength": {
          "type": "integer",
          "format": "int64"
        },
        "errorLength": {
          "type": "integer",
          "format": "int64"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "DSARReportStatusRM": {
      "title": "DSARReportStatusRM",
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "dsarId": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "purged": {
          "type": "boolean"
        }
      }
    },
    "CatalogResourceRM": {
      "title": "CatalogResourceRM",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Resource",
          "type": "string"
        },
        "description": {
          "description": "Description of the Resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the Resource",
          "type": "string"
        },
        "numberOfDomains": {
          "description": "Number of inferred Data Domain",
          "type": "integer",
          "format": "int64"
        },
        "lastScannedTime": {
          "description": "Last Scan Time of the resource",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CatalogResources": {
      "title": "CatalogResources",
      "type": "object",
      "properties": {
        "catalogResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogResourceRM"
          }
        }
      }
    },
    "CatalogResourceTypeCollectionRM": {
      "title": "CatalogResourceTypeCollectionRM",
      "type": "object",
      "properties": {
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CatalogImport": {
      "title": "CatalogImport",
      "type": "object",
      "properties": {
        "policies": {
          "description": "List of classification policy names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "description": "Resources To Import",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogResourceRM"
          }
        },
        "rowCount": {
          "type": "boolean"
        },
        "autoSyncResults": {
          "type": "boolean"
        }
      }
    },
    "Region": {
      "title": "Region",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the region",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the region",
          "type": "string"
        },
        "latitude": {
          "description": "Latitude of the region",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "Longitude of the region",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Regions": {
      "title": "Regions",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "items",
        "totalCount"
      ]
    },
    "ItemCollectionRM": {
      "title": "ItemCollectionRM",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "items",
        "totalCount"
      ]
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "latitude": {
          "description": "Latitude of the location",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "Longitude of the location",
          "type": "number",
          "format": "double"
        },
        "utcOffset": {
          "description": "UTC offset",
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "description": "UUID",
          "type": "string"
        },
        "ipRangeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationIPRangeRM"
          }
        }
      }
    },
    "LocationIPRangeRM": {
      "title": "LocationIPRangeRM",
      "type": "object",
      "properties": {
        "ipAddressRange": {
          "type": "string"
        },
        "vpn": {
          "type": "boolean"
        }
      }
    },
    "SensitiveInfoUpdateRM": {
      "title": "SensitiveInfoUpdateRM",
      "type": "object",
      "properties": {
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "excludeFieldDomainIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeFieldDomainIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSensitive": {
          "type": "string"
        },
        "protectionStatus": {
          "type": "string"
        },
        "protectionTechniques": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filterParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "isNotesChanged": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "selectAll": {
          "type": "boolean"
        }
      }
    },
    "MetadataAugmentRM": {
      "title": "MetadataAugmentRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "metadataFieldId": {
          "type": "integer",
          "format": "int64"
        },
        "metadataObjectId": {
          "type": "integer",
          "format": "int64"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "schemaName": {
          "type": "string"
        },
        "objectId": {
          "type": "integer",
          "format": "int64"
        },
        "objectName": {
          "type": "string"
        },
        "fieldId": {
          "type": "integer",
          "format": "int64"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldDatatype": {
          "type": "string"
        },
        "fieldScale": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPrecision": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPosition": {
          "type": "integer",
          "format": "int32"
        },
        "fieldIsNullable": {
          "type": "string"
        },
        "dataDomainId": {
          "type": "integer",
          "format": "int32"
        },
        "dataDomainName": {
          "type": "string"
        },
        "fieldDomainId": {
          "type": "integer",
          "format": "int64"
        },
        "rowMatchCount": {
          "type": "integer",
          "format": "int64"
        },
        "isSensitive": {
          "type": "string"
        },
        "verified": {
          "type": "string"
        },
        "isProtected": {
          "type": "string"
        },
        "protectionStatus": {
          "type": "string"
        },
        "protectionTechnique": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repoName": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "notesChanged": {
          "type": "boolean"
        }
      }
    },
    "MetadataAugmentUpdateInfoRM": {
      "title": "MetadataAugmentUpdateInfoRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "excludeMetadataFieldIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadataFieldIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataAugmentRM"
          }
        },
        "isSensitive": {
          "type": "string"
        },
        "dataDomainId": {
          "type": "integer",
          "format": "int32"
        },
        "protectionStatus": {
          "type": "string"
        },
        "protectionTechnique": {
          "type": "string"
        },
        "filterParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dataDomainName": {
          "type": "string"
        },
        "isNotesChanged": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "selectAll": {
          "type": "boolean"
        }
      }
    },
    "SimulationRM": {
      "title": "SimulationRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "simulationId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "estResRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "estTotRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "estProtectionPercent": {
          "type": "integer",
          "format": "int64"
        },
        "estRiskScore": {
          "type": "number",
          "format": "double"
        },
        "actResRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "actTotRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "actProtectionPercent": {
          "type": "integer",
          "format": "int64"
        },
        "actRiskScore": {
          "type": "number",
          "format": "double"
        },
        "dataStoreCount": {
          "type": "integer",
          "format": "int32"
        },
        "dataDomainCount": {
          "type": "integer",
          "format": "int32"
        },
        "policyCount": {
          "type": "integer",
          "format": "int32"
        },
        "updateFlag": {
          "type": "string"
        },
        "updateString": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simTagList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimulationTagRM"
          }
        },
        "simRepoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimulationRepoRM"
          }
        },
        "protectionCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SimulationRepoDomainRM": {
      "title": "SimulationRepoDomainRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "simulationRepoDomainId": {
          "type": "integer",
          "format": "int64"
        },
        "simulationId": {
          "type": "integer",
          "format": "int64"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "domainId": {
          "type": "integer",
          "format": "int64"
        },
        "domainName": {
          "type": "string"
        }
      }
    },
    "SimulationRepoProtectionRM": {
      "title": "SimulationRepoProtectionRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "simRepoProtectionId": {
          "type": "integer",
          "format": "int64"
        },
        "simulationId": {
          "type": "integer",
          "format": "int64"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "protectionToolId": {
          "type": "integer",
          "format": "int64"
        },
        "protectionStatus": {
          "type": "string"
        },
        "protectionTechnique": {
          "type": "string"
        }
      }
    },
    "SimulationRepoRM": {
      "title": "SimulationRepoRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "simulationId": {
          "type": "integer",
          "format": "int64"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "repoName": {
          "type": "string"
        },
        "estResRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "estTotRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "estProtectionPercent": {
          "type": "integer",
          "format": "int64"
        },
        "estRiskScore": {
          "type": "number",
          "format": "double"
        },
        "actResRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "actTotRiskCost": {
          "type": "integer",
          "format": "int64"
        },
        "actProtectionPercent": {
          "type": "integer",
          "format": "int64"
        },
        "actRiskScore": {
          "type": "number",
          "format": "double"
        },
        "updateFlag": {
          "type": "string"
        },
        "updateString": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simRepoDomainList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimulationRepoDomainRM"
          }
        },
        "simRepoProtectionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimulationRepoProtectionRM"
          }
        },
        "protectionTechnique": {
          "type": "string"
        },
        "domainCnt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SimulationTagRM": {
      "title": "SimulationTagRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "simulationId": {
          "type": "integer",
          "format": "int64"
        },
        "tagId": {
          "type": "integer",
          "format": "int64"
        },
        "tagType": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        }
      }
    },
    "TagRM": {
      "title": "TagRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "tagId": {
          "type": "integer",
          "format": "int32"
        },
        "tagName": {
          "type": "string"
        }
      }
    },
    "SubjectRegistryEntityDefRM": {
      "title": "SubjectRegistryEntityDefRM",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "columnLength": {
          "type": "integer",
          "format": "int32"
        },
        "displayCode": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SubjectRegistryEntityRM": {
      "title": "SubjectRegistryEntityRM",
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "pzMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectRegistryEntityDefRM"
          }
        },
        "entityMultiSearchLayout": {
          "$ref": "#/definitions/SubjectRegistryMultiSearchLayoutRM"
        }
      }
    },
    "SubjectRegistryMultiSearchLayoutRM": {
      "title": "SubjectRegistryMultiSearchLayoutRM",
      "type": "object",
      "properties": {
        "sortField": {
          "type": "string"
        },
        "sortType": {
          "type": "string"
        },
        "searchType": {
          "type": "string"
        },
        "resultlimit": {
          "type": "integer",
          "format": "int32"
        },
        "scoreThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreMatch": {
          "type": "string"
        },
        "searchInput": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "searchlayout": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "searchResults": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchToken": {
          "type": "integer",
          "format": "int32"
        },
        "pageLimit": {
          "type": "integer",
          "format": "int32"
        },
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "debug": {
          "type": "string"
        },
        "resultCount": {
          "type": "integer",
          "format": "int32"
        },
        "prSearchType": {
          "type": "string"
        },
        "messages": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SubjectRegistryEntityCollectionRM": {
      "title": "SubjectRegistryEntityCollectionRM",
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectRegistryEntityRM"
          }
        },
        "recordCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SubjectRegistryEntityCollectionWithValidationRM": {
      "title": "SubjectRegistryEntityCollectionWithValidationRM",
      "type": "object",
      "properties": {
        "entities": {
          "$ref": "#/definitions/SubjectRegistryEntityCollectionRM"
        },
        "entityConfigErrors": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "srConfigErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubjectRegistrySummaryRM": {
      "title": "SubjectRegistrySummaryRM",
      "type": "object",
      "properties": {
        "subjectCount": {
          "type": "integer",
          "format": "int64"
        },
        "dataStoreCount": {
          "type": "integer",
          "format": "int64"
        },
        "dataDomainCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SubjectRegistryEntityDetailsCollectionRM": {
      "title": "SubjectRegistryEntityDetailsCollectionRM",
      "type": "object",
      "properties": {
        "entityDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectRegistryEntityDetailsRM"
          }
        },
        "recordCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SubjectRegistryEntityDetailsRM": {
      "title": "SubjectRegistryEntityDetailsRM",
      "type": "object",
      "properties": {
        "repoName": {
          "type": "string"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "repoType": {
          "type": "string"
        },
        "attributeCount": {
          "type": "integer",
          "format": "int32"
        },
        "fieldCount": {
          "type": "integer",
          "format": "int32"
        },
        "fieldDomainCount": {
          "type": "integer",
          "format": "int32"
        },
        "dataOwner": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isThirdPartyShared": {
          "type": "boolean"
        },
        "thirdPartyNames": {
          "type": "string"
        }
      }
    },
    "SubjectRegistryDetailsSummaryRM": {
      "title": "SubjectRegistryDetailsSummaryRM",
      "type": "object",
      "properties": {
        "dataStoreCount": {
          "type": "integer",
          "format": "int64"
        },
        "dataDomainCount": {
          "type": "integer",
          "format": "int64"
        },
        "fieldFileCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ActionParameterRM": {
      "title": "ActionParameterRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "modified": {
          "type": "boolean"
        },
        "sensitive": {
          "type": "boolean"
        }
      }
    },
    "ActionRM": {
      "title": "ActionRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "actionId": {
          "type": "integer",
          "format": "int64"
        },
        "actionName": {
          "type": "string"
        },
        "actionCategory": {
          "type": "string"
        },
        "actionCategoryLabel": {
          "type": "string"
        },
        "actionDescription": {
          "type": "string"
        },
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "extensionName": {
          "type": "string"
        },
        "pluginKey": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "reusable": {
          "type": "integer",
          "format": "int64"
        },
        "actionGroupName": {
          "type": "string"
        },
        "securityPolicyId": {
          "type": "integer",
          "format": "int64"
        },
        "actionRuntimeParamJson": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionParameterRM"
          }
        },
        "canBeDeleted": {
          "description": "If action can be deleted",
          "type": "boolean"
        }
      }
    },
    "FieldDependencyRM": {
      "title": "FieldDependencyRM",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "action": {
          "$ref": "#/definitions/Action"
        }
      }
    },
    "LoaderRM": {
      "title": "LoaderRM",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "dataKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "labelKey": {
          "type": "string"
        },
        "fn": {
          "type": "string"
        }
      }
    },
    "TaskMetadataCollectionRM": {
      "title": "TaskMetadataCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskMetadataPropertyRM"
          }
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskMetadataSectionRM"
          }
        }
      }
    },
    "TaskMetadataPropertyRM": {
      "title": "TaskMetadataPropertyRM",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultValue": {
          "type": "object"
        },
        "customMessage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependentOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDependencyRM"
          }
        },
        "staticValues": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "datatype": {
          "type": "string"
        },
        "alternateMandatoryFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationMsg": {
          "type": "string"
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationRM"
          }
        },
        "loader": {
          "$ref": "#/definitions/LoaderRM"
        },
        "substitutionVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskProperty": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "supportAdd": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        },
        "multivalued": {
          "type": "boolean"
        }
      }
    },
    "TaskMetadataSectionRM": {
      "title": "TaskMetadataSectionRM",
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskMetadataPropertyRM"
          }
        },
        "collapsible": {
          "type": "boolean"
        },
        "initiallyCollapsed": {
          "type": "boolean"
        }
      }
    },
    "ValidationRM": {
      "title": "ValidationRM",
      "type": "object",
      "properties": {
        "regex": {
          "type": "string"
        },
        "min": {
          "type": "object"
        },
        "max": {
          "type": "object"
        },
        "errorMsg": {
          "type": "string"
        }
      }
    },
    "ActionContextParameterRM": {
      "title": "ActionContextParameterRM",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AttachmentDetailRM": {
      "title": "AttachmentDetailRM",
      "type": "object",
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "attachmentName": {
          "type": "string"
        },
        "contextRelated": {
          "type": "boolean"
        }
      }
    },
    "TaskContextRM": {
      "title": "TaskContextRM",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/Source"
        },
        "filterParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "idsOfSelectedItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TaskCreateRM": {
      "title": "TaskCreateRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "actionParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionParameterRM"
          }
        },
        "description": {
          "type": "string"
        },
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "assignee": {
          "$ref": "#/definitions/UserRM"
        },
        "dataStoreIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "dataDomainIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalContext": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionContextParameterRM"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentDetailRM"
          }
        },
        "saveAndExecute": {
          "type": "boolean"
        },
        "orchestrationType": {
          "$ref": "#/definitions/OrchestrationType"
        },
        "context": {
          "$ref": "#/definitions/TaskContextRM"
        },
        "pluginKey": {
          "type": "string"
        }
      }
    },
    "UserRM": {
      "title": "UserRM",
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "securityDomain": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    },
    "FormDataContentDisposition": {
      "title": "FormDataContentDisposition",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fileName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "modificationDate": {
          "type": "string",
          "format": "date-time"
        },
        "readDate": {
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EncryptionRuleRM": {
      "title": "EncryptionRuleRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "ruleId": {
          "type": "integer",
          "format": "int64"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleDescription": {
          "type": "string"
        },
        "dataType": {
          "$ref": "#/definitions/DataType"
        },
        "encryptionType": {
          "$ref": "#/definitions/EncryptionType"
        },
        "encryptionTechnique": {
          "$ref": "#/definitions/EncryptionTechnique"
        },
        "dataTypeLabel": {
          "type": "string"
        },
        "encryptionTypeLabel": {
          "type": "string"
        },
        "encryptionTechniqueLabel": {
          "type": "string"
        },
        "excluedCharList": {
          "type": "string"
        }
      }
    },
    "DeleteEncryptionRuleCollectionRM": {
      "title": "DeleteEncryptionRuleCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "encryptionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteEncryptionRuleRM"
          }
        }
      }
    },
    "DeleteEncryptionRuleRM": {
      "title": "DeleteEncryptionRuleRM",
      "type": "object",
      "properties": {
        "encryptionRuleId": {
          "type": "integer",
          "format": "int64"
        },
        "canDelete": {
          "type": "boolean"
        }
      }
    },
    "ExtensionPropertyRM": {
      "title": "ExtensionPropertyRM",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "modified": {
          "type": "boolean"
        },
        "sensitive": {
          "type": "boolean"
        }
      }
    },
    "ExtensionRM": {
      "title": "ExtensionRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "extensionName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "categoryShortDesc": {
          "type": "string"
        },
        "pluginKey": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "pluginName": {
          "description": "Displayed plugin name",
          "type": "string"
        },
        "extensionProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPropertyRM"
          }
        },
        "canBeDeleted": {
          "description": "If extension can be deleted",
          "type": "boolean"
        }
      }
    },
    "DeleteExtensionCollectionRM": {
      "title": "DeleteExtensionCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteExtensionRM"
          }
        }
      }
    },
    "DeleteExtensionRM": {
      "title": "DeleteExtensionRM",
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "extensionName": {
          "type": "string"
        },
        "canDelete": {
          "type": "boolean"
        }
      }
    },
    "ExtensionCategoryRM": {
      "title": "ExtensionCategoryRM",
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "categoryShortDesc": {
          "type": "string"
        },
        "plugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPluginRM"
          }
        }
      }
    },
    "ExtensionPluginRM": {
      "title": "ExtensionPluginRM",
      "type": "object",
      "properties": {
        "pluginKey": {
          "type": "string"
        },
        "pluginName": {
          "type": "string"
        },
        "pluginClassName": {
          "type": "string"
        },
        "pluginThemes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginTheme"
          }
        },
        "configurable": {
          "type": "boolean"
        }
      }
    },
    "Extensions": {
      "title": "Extensions",
      "type": "object",
      "properties": {
        "extensionPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionCategoryRM"
          }
        }
      }
    },
    "GlobalListRM": {
      "title": "GlobalListRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "mapId": {
          "type": "integer",
          "format": "int64"
        },
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "repoName": {
          "type": "string"
        },
        "schemaName": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "domainName": {
          "type": "string"
        },
        "domainId": {
          "type": "integer",
          "format": "int32"
        },
        "whiteListOption": {
          "type": "string"
        },
        "originatingRepoId": {
          "type": "integer",
          "format": "int64"
        },
        "repoType": {
          "type": "string"
        }
      }
    },
    "IKeyAlias": {
      "title": "IKeyAlias",
      "type": "object",
      "properties": {
        "keyAliasName": {
          "type": "string"
        }
      }
    },
    "KeyHandleRM": {
      "title": "KeyHandleRM",
      "type": "object",
      "properties": {
        "keyLabel": {
          "type": "string"
        }
      }
    },
    "TaskStatsRM": {
      "title": "TaskStatsRM",
      "type": "object",
      "properties": {
        "myTasks": {
          "type": "integer",
          "format": "int32"
        },
        "allTasks": {
          "type": "integer",
          "format": "int32"
        },
        "rejectedTasks": {
          "type": "integer",
          "format": "int32"
        },
        "completedTasks": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExecutionOutputRM": {
      "title": "ExecutionOutputRM",
      "type": "object",
      "properties": {
        "outputKey": {
          "type": "string"
        },
        "outputValue": {
          "type": "string"
        },
        "outputType": {
          "$ref": "#/definitions/OutputType"
        },
        "dataStores": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdAndNameRM": {
      "title": "IdAndNameRM",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NoteHistoryRM": {
      "title": "NoteHistoryRM",
      "type": "object",
      "properties": {
        "note": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserRM"
        },
        "creationTimeInMilli": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PrivacyContextRM": {
      "title": "PrivacyContextRM",
      "type": "object",
      "properties": {
        "subjectId": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "subjectDescription": {
          "type": "string"
        }
      }
    },
    "RepoSummaryRM": {
      "title": "RepoSummaryRM",
      "type": "object",
      "properties": {
        "repoId": {
          "type": "integer",
          "format": "int64"
        },
        "repoName": {
          "type": "string"
        },
        "repoDbTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryType": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "TaskDetailRM": {
      "title": "TaskDetailRM",
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "pluginKey": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "extensionName": {
          "type": "string"
        },
        "extensionCategory": {
          "type": "string"
        },
        "extensionCategoryId": {
          "type": "string"
        },
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "runtimeSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dataStoreIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueItems": true
        },
        "dataDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdAndNameRM"
          }
        },
        "dataStores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepoSummaryRM"
          }
        },
        "addtionalContext": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionContextParameterRM"
          }
        },
        "taskExecutionOutput": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionOutputRM"
          }
        },
        "assignee": {
          "$ref": "#/definitions/UserRM"
        },
        "assigner": {
          "$ref": "#/definitions/UserRM"
        },
        "uploadEvidence": {
          "type": "boolean"
        },
        "noteHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteHistoryRM"
          }
        },
        "regularAttachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contextAttachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentDetailRM"
          }
        },
        "allJobIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueItems": true
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "createdBy": {
          "$ref": "#/definitions/UserRM"
        },
        "closedBy": {
          "$ref": "#/definitions/UserRM"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/UserRM"
        },
        "creationTimeInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedTimeInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "dueDateInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "notifyAssigneeViaEmail": {
          "type": "boolean"
        },
        "taskSource": {
          "$ref": "#/definitions/TaskSource"
        },
        "subject": {
          "$ref": "#/definitions/PrivacyContextRM"
        },
        "purgeDateinMillis": {
          "type": "integer",
          "format": "int64"
        },
        "purged": {
          "type": "boolean"
        }
      }
    },
    "TaskSummaryCollectionRM": {
      "title": "TaskSummaryCollectionRM",
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSummaryRM"
          }
        },
        "recordCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskSummaryRM": {
      "title": "TaskSummaryRM",
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "taskCreatedBy": {
          "$ref": "#/definitions/UserRM"
        },
        "completedDateInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "taskName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lastUpdatedTimeInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/UserRM"
        },
        "status": {
          "type": "string"
        },
        "completedWithErrors": {
          "type": "boolean"
        },
        "dueDateInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "currentAssignee": {
          "$ref": "#/definitions/UserRM"
        },
        "repoCount": {
          "type": "integer",
          "format": "int32"
        },
        "extensionName": {
          "type": "string"
        },
        "extensionCategory": {
          "type": "string"
        },
        "purgeDateInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "validEventTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidEventType"
          }
        },
        "purged": {
          "type": "boolean"
        }
      }
    },
    "UserCollectionRM": {
      "title": "UserCollectionRM",
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRM"
          }
        },
        "recordCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetAllUsersInputRM": {
      "title": "GetAllUsersInputRM",
      "type": "object",
      "properties": {
        "repoList": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "taskList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TaskCreationResultRM": {
      "title": "TaskCreationResultRM",
      "type": "object",
      "properties": {
        "generatedTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalUnsuccessful": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskEventRM": {
      "title": "TaskEventRM",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskId": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "dueDateInMilli": {
          "type": "integer",
          "format": "int64"
        },
        "notifyAssigneeViaEmail": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionParameterRM"
          }
        },
        "jobId": {
          "type": "integer",
          "format": "int32"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "nextAssignee": {
          "$ref": "#/definitions/UserRM"
        },
        "reason": {
          "type": "string"
        },
        "scheduleParam": {
          "type": "string"
        },
        "executeParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "extensionId": {
          "type": "integer",
          "format": "int64"
        },
        "dataDomainIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "dataStoreIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "executionMode": {
          "type": "string"
        }
      }
    },
    "TaskEventHandlingResultRM": {
      "title": "TaskEventHandlingResultRM",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "totalSuccessful": {
          "type": "integer",
          "format": "int32"
        },
        "totalUnSuccessful": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataStoreAndDomainContextForTaskRM": {
      "title": "DataStoreAndDomainContextForTaskRM",
      "type": "object",
      "properties": {
        "dataStoreList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdAndNameRM"
          }
        },
        "dataDomainList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdAndNameRM"
          }
        }
      }
    },
    "OriginalAndFilteredContextForTaskRM": {
      "title": "OriginalAndFilteredContextForTaskRM",
      "type": "object",
      "properties": {
        "originalContext": {
          "$ref": "#/definitions/DataStoreAndDomainContextForTaskRM"
        },
        "filteredContext": {
          "$ref": "#/definitions/DataStoreAndDomainContextForTaskRM"
        }
      }
    },
    "CreateProtectionTaskContextRM": {
      "title": "CreateProtectionTaskContextRM",
      "type": "object",
      "properties": {
        "taskSource": {
          "$ref": "#/definitions/TaskSource"
        },
        "primaryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filterParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SelectAllRM": {
      "title": "SelectAllRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "taskSource": {
          "$ref": "#/definitions/TaskSource"
        },
        "excludedIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filterParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "queryParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DeleteProxyCollectionRM": {
      "title": "DeleteProxyCollectionRM",
      "type": "object",
      "properties": {
        "recordCount": {
          "type": "integer",
          "format": "int32"
        },
        "proxyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeleteProxyRM"
          }
        }
      }
    },
    "DeleteProxyRM": {
      "title": "DeleteProxyRM",
      "type": "object",
      "properties": {
        "proxyId": {
          "type": "integer",
          "format": "int64"
        },
        "canDelete": {
          "type": "boolean"
        }
      }
    },
    "ProxyDetailsRM": {
      "title": "ProxyDetailsRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "proxyId": {
          "type": "integer",
          "format": "int64"
        },
        "proxyName": {
          "type": "string"
        },
        "proxyDescription": {
          "type": "string"
        },
        "proxyHostName": {
          "type": "string"
        },
        "proxyPort": {
          "type": "integer",
          "format": "int32"
        },
        "associatedDataStores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxyServiceDetailsRM"
          }
        },
        "proxyType": {
          "type": "string"
        }
      }
    },
    "ProxyServiceDetailsRM": {
      "title": "ProxyServiceDetailsRM",
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "proxyServiceId": {
          "type": "integer",
          "format": "int32"
        },
        "proxyId": {
          "type": "integer",
          "format": "int32"
        },
        "repoId": {
          "type": "integer",
          "format": "int32"
        },
        "servicePort": {
          "type": "integer",
          "format": "int32"
        },
        "repoName": {
          "type": "string"
        }
      }
    },
    "ProxyStatusRM": {
      "title": "ProxyStatusRM",
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Action": {
      "title": "Action",
      "type": "string",
      "enum": [
        "SHOW_HIDE",
        "RELOAD",
        "ENABLE",
        "DISABLE"
      ]
    },
    "DataType": {
      "title": "DataType",
      "type": "string",
      "enum": [
        "STRING"
      ]
    },
    "DomainTrumpRule": {
      "title": "DomainTrumpRule",
      "type": "string",
      "enum": [
        "DATA_OVERRIDES_METADATA",
        "METADATA_OVERRIDES_DATA",
        "METADATA_AND_DATA"
      ]
    },
    "EncryptionTechnique": {
      "title": "EncryptionTechnique",
      "type": "string",
      "enum": [
        "PRESERVE_METADATA",
        "PRESERVE_FORMAT_AND_METADATA",
        "CHANGE_METADATA"
      ]
    },
    "EncryptionType": {
      "title": "EncryptionType",
      "type": "string",
      "enum": [
        "FPE"
      ]
    },
    "getValidEventTypesResponse": {
      "title": "getValidEventTypesResponse",
      "type": "string",
      "enum": [
        "EDIT",
        "PARTIAL_EDIT",
        "COMPLETE_CONFIGURATION",
        "RECONFIGURE",
        "REJECT",
        "CONFIGURE_PROTECTION_RULE",
        "SCHEDULE_JOB",
        "JOB_SCHEDULED",
        "JOB_IN_PROGRESS",
        "JOB_SUCCESSFUL",
        "JOB_FAILED",
        "JOB_PAUSED",
        "JOB_RESUMED",
        "JOB_STOPPED",
        "JOB_DELETED",
        "JOB_TERMINATED",
        "COMPLETE",
        "UPLOAD_ATTACHMENT",
        "DELETE_ATTACHMENT",
        "REASSIGN",
        "CLOSE",
        "DELETE",
        "ROLLBACK",
        "UNKNOWN",
        "EXECUTE",
        "EXECUTE_WITHOUT_JOB",
        "EXECUTION_COMPLETE"
      ]
    },
    "OrchestrationType": {
      "title": "OrchestrationType",
      "type": "string",
      "enum": [
        "SYSTEM_TASK",
        "PROTECTION_TASK",
        "DSAR_TASK",
        "DSR_TASK",
        "NONE"
      ]
    },
    "OutputType": {
      "title": "OutputType",
      "type": "string",
      "enum": [
        "TEXT",
        "LINK",
        "INFO",
        "ATTACHMENT",
        "FILE",
        "INTERNAL"
      ]
    },
    "PluginTheme": {
      "title": "PluginTheme",
      "type": "string",
      "enum": [
        "PRIVACY",
        "DISCOVERY"
      ]
    },
    "ProfileType": {
      "title": "ProfileType",
      "description": "Type of profiling",
      "type": "string",
      "enum": [
        "PATTERN",
        "REFERENCE_TABLE",
        "RULE"
      ]
    },
    "Source": {
      "title": "Source",
      "type": "string",
      "enum": [
        "DATASTORE",
        "DATADOMAIN",
        "ANOMALY",
        "VIOLATION",
        "SENSITIVE_FIELD",
        "USER",
        "PROLIFERATION",
        "SECURITY_POLICY_DATASTORE",
        "SECURITY_POLICY_USER_ACTIVITY",
        "SECURITY_POLICY_ANOMALY",
        "DATA_IN_USE_POLICY",
        "SUBJECT_DETAILS"
      ]
    },
    "Status": {
      "title": "Status",
      "type": "string",
      "enum": [
        "VALID",
        "INVALID"
      ]
    },
    "TaskSource": {
      "title": "TaskSource",
      "type": "string",
      "enum": [
        "DATASTORE",
        "DATADOMAIN",
        "ANOMALY",
        "VIOLATION",
        "SENSITIVE_FIELD",
        "USER",
        "PROLIFERATION",
        "SECURITY_POLICY_DATASTORE",
        "SECURITY_POLICY_USER_ACTIVITY",
        "SECURITY_POLICY_ANOMALY",
        "DATA_IN_USE_POLICY",
        "SUBJECT_DETAILS"
      ]
    },
    "ValidEventType": {
      "title": "ValidEventType",
      "type": "string",
      "enum": [
        "EDIT",
        "PARTIAL_EDIT",
        "COMPLETE_CONFIGURATION",
        "RECONFIGURE",
        "REJECT",
        "CONFIGURE_PROTECTION_RULE",
        "SCHEDULE_JOB",
        "JOB_SCHEDULED",
        "JOB_IN_PROGRESS",
        "JOB_SUCCESSFUL",
        "JOB_FAILED",
        "JOB_PAUSED",
        "JOB_RESUMED",
        "JOB_STOPPED",
        "JOB_DELETED",
        "JOB_TERMINATED",
        "COMPLETE",
        "UPLOAD_ATTACHMENT",
        "DELETE_ATTACHMENT",
        "REASSIGN",
        "CLOSE",
        "DELETE",
        "ROLLBACK",
        "UNKNOWN",
        "EXECUTE",
        "EXECUTE_WITHOUT_JOB",
        "EXECUTION_COMPLETE"
      ]
    }
  },
  "security": [
    {
      "infaToken": []
    }
  ],
  "tags": [
    {
      "name": "Application Group"
    },
    {
      "name": "Data Domain"
    },
    {
      "name": "Data Governance Process"
    },
    {
      "name": "Data Stores"
    },
    {
      "name": "DSAR"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "Location"
    },
    {
      "name": "Metadata"
    },
    {
      "name": "Notification"
    },
    {
      "name": "Simulation"
    },
    {
      "name": "Subject Registry"
    },
    {
      "name": "Action"
    },
    {
      "name": "Attachment"
    },
    {
      "name": "Encrytpion rule"
    },
    {
      "name": "Extension"
    },
    {
      "name": "GlobalList"
    },
    {
      "name": "Key Manager"
    },
    {
      "name": "Orchestration"
    },
    {
      "name": "Proxy Details"
    }
  ]
}