{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Groups (Okta API)",
    "description": "The [Okta Groups API](/docs/reference/api/groups/) provides operations to manage your organization groups and their user members.",
    "contact": {}
  },
  "host": "example.com",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/groups": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Add Group",
        "tags": [
          "Group Operations"
        ],
        "operationId": "AddGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Groups",
        "tags": [
          "Group Operations"
        ],
        "operationId": "ListGroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/{groupId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get  Group",
        "tags": [
          "Group Operations"
        ],
        "operationId": "GetGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "description": "TODO: Add Description",
        "summary": "Update Group",
        "tags": [
          "Group Operations"
        ],
        "operationId": "UpdateGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateGroupRequest"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Remove Group",
        "tags": [
          "Group Operations"
        ],
        "operationId": "RemoveGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/{groupId}/users": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Group Members (Users)",
        "tags": [
          "Group Member Operations"
        ],
        "operationId": "ListGroupMembers(Users)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/{groupId}/users/{userId}": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Add User to Group",
        "tags": [
          "Group Member Operations"
        ],
        "operationId": "AddUsertoGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Remove User from Group",
        "tags": [
          "Group Member Operations"
        ],
        "operationId": "RemoveUserfromGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/{groupId}/apps": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Assigned Applications",
        "tags": [
          "Related Resources"
        ],
        "operationId": "ListAssignedApplications",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/rules": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List rules with after",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Listruleswithafter",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "Create rule using Okta Expression Language",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "CreateruleusingOktaExpressionLanguage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateruleusingOktaExpressionLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/rules/{id}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get rule",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Getrule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "description": "TODO: Add Description",
        "summary": "Update rule using basic condition",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Updateruleusingbasiccondition",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateruleusingbasicconditionRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete rule and remove users from the group",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Deleteruleandremoveusersfromthegroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "removeUsers",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/rules/{id}/lifecycle/deactivate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Deactivate rule",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Deactivaterule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/groups/rules/{id}/lifecycle/activate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Activate rule",
        "tags": [
          "Group Rule Operations"
        ],
        "operationId": "Activaterule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "AddGroupRequest": {
      "title": "AddGroupRequest",
      "example": {
        "profile": {
          "name": "West Coast Users",
          "description": "West Coast Users"
        }
      },
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/Profile"
        }
      },
      "required": [
        "profile"
      ]
    },
    "Profile": {
      "title": "Profile",
      "example": {
        "name": "West Coast Users",
        "description": "West Coast Users"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "UpdateGroupRequest": {
      "title": "UpdateGroupRequest",
      "example": {
        "profile": {
          "name": "Squabble of Users",
          "description": "Keep Calm and Single Sign On"
        }
      },
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/Profile"
        }
      },
      "required": [
        "profile"
      ]
    },
    "CreateruleusingOktaExpressionLanguageRequest": {
      "title": "CreateruleusingOktaExpressionLanguageRequest",
      "example": {
        "type": "group_rule",
        "name": "{{ruleName}}",
        "conditions": {
          "expression": {
            "type": "urn:okta:expression:1.0",
            "value": "user.lastName eq \"Thomas\""
          }
        },
        "actions": {
          "assignUserToGroups": {
            "groupIds": [
              "{{groupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Conditions": {
      "title": "Conditions",
      "example": {
        "expression": {
          "type": "urn:okta:expression:1.0",
          "value": "user.lastName eq \"Thomas\""
        }
      },
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [
        "expression"
      ]
    },
    "Expression": {
      "title": "Expression",
      "example": {
        "type": "urn:okta:expression:1.0",
        "value": "user.lastName eq \"Thomas\""
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "Actions": {
      "title": "Actions",
      "example": {
        "assignUserToGroups": {
          "groupIds": [
            "{{groupId}}"
          ]
        }
      },
      "type": "object",
      "properties": {
        "assignUserToGroups": {
          "$ref": "#/definitions/AssignUserToGroups"
        }
      },
      "required": [
        "assignUserToGroups"
      ]
    },
    "AssignUserToGroups": {
      "title": "AssignUserToGroups",
      "example": {
        "groupIds": [
          "{{groupId}}"
        ]
      },
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "groupIds"
      ]
    },
    "CreateruleusingbasicconditionRequest": {
      "title": "CreateruleusingbasicconditionRequest",
      "example": {
        "type": "group_rule",
        "name": "{{ruleName}}",
        "conditions": {
          "expression": {
            "type": "urn:okta:expression:1.0",
            "value": "user.firstName==\"Thomas\""
          }
        },
        "actions": {
          "assignUserToGroups": {
            "groupIds": [
              "{{groupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "CreateruleandexcludeusersRequest": {
      "title": "CreateruleandexcludeusersRequest",
      "example": {
        "type": "group_rule",
        "name": "{{ruleName}}",
        "conditions": {
          "expression": {
            "type": "urn:okta:expression:1.0",
            "value": "user.lastName==\"Thomas\""
          },
          "people": {
            "users": {
              "exclude": [
                "{{excludedUserId}}"
              ]
            }
          }
        },
        "actions": {
          "assignUserToGroups": {
            "groupIds": [
              "{{groupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Conditions2": {
      "title": "Conditions2",
      "example": {
        "expression": {
          "type": "urn:okta:expression:1.0",
          "value": "user.lastName==\"Thomas\""
        },
        "people": {
          "users": {
            "exclude": [
              "{{excludedUserId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "people": {
          "$ref": "#/definitions/People"
        }
      },
      "required": [
        "expression",
        "people"
      ]
    },
    "People": {
      "title": "People",
      "example": {
        "users": {
          "exclude": [
            "{{excludedUserId}}"
          ]
        }
      },
      "type": "object",
      "properties": {
        "users": {
          "$ref": "#/definitions/Users"
        }
      },
      "required": [
        "users"
      ]
    },
    "Users": {
      "title": "Users",
      "example": {
        "exclude": [
          "{{excludedUserId}}"
        ]
      },
      "type": "object",
      "properties": {
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "exclude"
      ]
    },
    "UpdateruleusingbasicconditionRequest": {
      "title": "UpdateruleusingbasicconditionRequest",
      "example": {
        "type": "group_rule",
        "name": "{{ruleName}}",
        "conditions": {
          "expression": {
            "type": "urn:okta:expression:1.0",
            "value": "user.lastName==\"Thomas\""
          },
          "people": {
            "users": {
              "exclude": [
                "{{excludedUserId}}"
              ]
            }
          }
        },
        "actions": {
          "assignUserToGroups": {
            "groupIds": [
              "{{existingGroupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "UpdateruleusingOktaExpressionLanguageRequest": {
      "title": "UpdateruleusingOktaExpressionLanguageRequest",
      "example": {
        "type": "group_rule",
        "name": "{{ruleName}}",
        "conditions": {
          "expression": {
            "type": "urn:okta:expression:1.0",
            "value": "user.lastName eq \"Thomas\""
          },
          "people": {
            "users": {
              "exclude": [
                "{{excludedUserId}}"
              ]
            }
          }
        },
        "actions": {
          "assignUserToGroups": {
            "groupIds": [
              "{{existingGroupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    }
  },
  "tags": [
    {
      "name": "Group Operations"
    },
    {
      "name": "Group Member Operations"
    },
    {
      "name": "Related Resources"
    },
    {
      "name": "Group Rule Operations"
    }
  ]
}