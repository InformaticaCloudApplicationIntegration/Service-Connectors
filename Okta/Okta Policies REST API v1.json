{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Policies (Okta API)",
    "description": "TODO: Add Description",
    "contact": {}
  },
  "host": "example.com",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/policies/{policyId}/rules/{ruleId}": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Update MFA Enroll Rule",
        "tags": [
          "MFA Enroll"
        ],
        "operationId": "UpdateMFAEnrollRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateMFAEnrollRuleRequest"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Rule",
        "tags": [
          "Misc"
        ],
        "operationId": "GetRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete Rule",
        "tags": [
          "Misc"
        ],
        "operationId": "DeleteRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}/rules": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Create Enroll Rule",
        "tags": [
          "MFA Enroll"
        ],
        "operationId": "CreateEnrollRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateEnrollRuleRequest"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Rules",
        "tags": [
          "Misc"
        ],
        "operationId": "GetRules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Update MFA Enroll Policy",
        "tags": [
          "MFA Enroll"
        ],
        "operationId": "UpdateMFAEnrollPolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateMFAEnrollPolicyRequest"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Policy",
        "tags": [
          "Misc"
        ],
        "operationId": "GetPolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete Policy",
        "tags": [
          "Misc"
        ],
        "operationId": "DeletePolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get MFA Enroll Policies",
        "tags": [
          "MFA Enroll"
        ],
        "operationId": "GetMFAEnrollPolicies",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "Create MFA Enroll Policy",
        "tags": [
          "MFA Enroll"
        ],
        "operationId": "CreateMFAEnrollPolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateMFAEnrollPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}/rules/{ruleId}/lifecycle/activate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Activate Rule",
        "tags": [
          "Misc"
        ],
        "operationId": "ActivateRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}/lifecycle/deactivate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Deactivate Policy",
        "tags": [
          "Misc"
        ],
        "operationId": "DeactivatePolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Deactivate Rule",
        "tags": [
          "Misc"
        ],
        "operationId": "DeactivateRule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/policies/{policyId}/lifecycle/activate": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Activate Policy",
        "tags": [
          "Misc"
        ],
        "operationId": "ActivatePolicy",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "definitions": {
    "UpdateMFAEnrollRuleRequest": {
      "title": "UpdateMFAEnrollRuleRequest",
      "example": {
        "type": "MFA_ENROLL",
        "id": "{{ruleId}}",
        "status": "ACTIVE",
        "name": "Updated Challenge Rule",
        "priority": 1,
        "system": false,
        "conditions": {
          "people": {
            "users": {
              "exclude": []
            }
          },
          "network": {
            "connection": "ANYWHERE"
          }
        },
        "actions": {
          "enroll": {
            "self": "CHALLENGE"
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "system": {
          "type": "boolean"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "id",
        "status",
        "name",
        "priority",
        "system",
        "conditions",
        "actions"
      ]
    },
    "Conditions": {
      "title": "Conditions",
      "example": {
        "people": {
          "users": {
            "exclude": []
          }
        },
        "network": {
          "connection": "ANYWHERE"
        }
      },
      "type": "object",
      "properties": {
        "people": {
          "$ref": "#/definitions/People"
        },
        "network": {
          "$ref": "#/definitions/Network"
        }
      },
      "required": [
        "people",
        "network"
      ]
    },
    "People": {
      "title": "People",
      "example": {
        "users": {
          "exclude": []
        }
      },
      "type": "object",
      "properties": {
        "users": {
          "$ref": "#/definitions/Users"
        }
      },
      "required": [
        "users"
      ]
    },
    "Users": {
      "title": "Users",
      "example": {
        "exclude": []
      },
      "type": "object",
      "properties": {
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "exclude"
      ]
    },
    "Network": {
      "title": "Network",
      "example": {
        "connection": "ANYWHERE"
      },
      "type": "object",
      "properties": {
        "connection": {
          "type": "string"
        }
      },
      "required": [
        "connection"
      ]
    },
    "Actions": {
      "title": "Actions",
      "example": {
        "enroll": {
          "self": "CHALLENGE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        }
      },
      "required": [
        "enroll"
      ]
    },
    "Enroll": {
      "title": "Enroll",
      "example": {
        "self": "CHALLENGE"
      },
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        }
      },
      "required": [
        "self"
      ]
    },
    "CreateEnrollRuleRequest": {
      "title": "CreateEnrollRuleRequest",
      "example": {
        "type": "MFA_ENROLL",
        "status": "ACTIVE",
        "name": "Challenge Rule",
        "system": false,
        "conditions": {
          "people": {
            "users": {
              "exclude": []
            }
          },
          "network": {
            "connection": "ANYWHERE"
          }
        },
        "actions": {
          "enroll": {
            "self": "CHALLENGE"
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "required": [
        "type",
        "status",
        "name",
        "system",
        "conditions",
        "actions"
      ]
    },
    "UpdateMFAEnrollPolicyRequest": {
      "title": "UpdateMFAEnrollPolicyRequest",
      "example": {
        "type": "MFA_ENROLL",
        "id": "{{policyId}}",
        "status": "ACTIVE",
        "name": "Updated MFA Policy",
        "priority": 1,
        "system": false,
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "{{groupId}}"
              ]
            }
          }
        },
        "settings": {
          "factors": {
            "rsa_token": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "symantec_vip": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "yubikey_token": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "google_otp": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "duo": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_question": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_otp": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_sms": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_push": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "system": {
          "type": "boolean"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        }
      },
      "required": [
        "type",
        "id",
        "status",
        "name",
        "priority",
        "system",
        "conditions",
        "settings"
      ]
    },
    "Conditions2": {
      "title": "Conditions2",
      "example": {
        "people": {
          "groups": {
            "include": [
              "{{groupId}}"
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "people": {
          "$ref": "#/definitions/People2"
        }
      },
      "required": [
        "people"
      ]
    },
    "People2": {
      "title": "People2",
      "example": {
        "groups": {
          "include": [
            "{{groupId}}"
          ]
        }
      },
      "type": "object",
      "properties": {
        "groups": {
          "$ref": "#/definitions/Groups"
        }
      },
      "required": [
        "groups"
      ]
    },
    "Groups": {
      "title": "Groups",
      "example": {
        "include": [
          "{{groupId}}"
        ]
      },
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "include"
      ]
    },
    "Settings": {
      "title": "Settings",
      "example": {
        "factors": {
          "rsa_token": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "symantec_vip": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "yubikey_token": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "google_otp": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "duo": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "okta_question": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "okta_otp": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "okta_sms": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          },
          "okta_push": {
            "enroll": {
              "self": "OPTIONAL"
            },
            "consent": {
              "type": "NONE"
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "factors": {
          "$ref": "#/definitions/Factors"
        }
      },
      "required": [
        "factors"
      ]
    },
    "Factors": {
      "title": "Factors",
      "example": {
        "rsa_token": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "symantec_vip": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "yubikey_token": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "google_otp": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "duo": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "okta_question": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "okta_otp": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "okta_sms": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        },
        "okta_push": {
          "enroll": {
            "self": "OPTIONAL"
          },
          "consent": {
            "type": "NONE"
          }
        }
      },
      "type": "object",
      "properties": {
        "rsa_token": {
          "$ref": "#/definitions/RsaToken"
        },
        "symantec_vip": {
          "$ref": "#/definitions/SymantecVip"
        },
        "yubikey_token": {
          "$ref": "#/definitions/YubikeyToken"
        },
        "google_otp": {
          "$ref": "#/definitions/GoogleOtp"
        },
        "duo": {
          "$ref": "#/definitions/Duo"
        },
        "okta_question": {
          "$ref": "#/definitions/OktaQuestion"
        },
        "okta_otp": {
          "$ref": "#/definitions/OktaOtp"
        },
        "okta_sms": {
          "$ref": "#/definitions/OktaSms"
        },
        "okta_push": {
          "$ref": "#/definitions/OktaPush"
        }
      },
      "required": [
        "rsa_token",
        "symantec_vip",
        "yubikey_token",
        "google_otp",
        "duo",
        "okta_question",
        "okta_otp",
        "okta_sms",
        "okta_push"
      ]
    },
    "RsaToken": {
      "title": "RsaToken",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "Consent": {
      "title": "Consent",
      "example": {
        "type": "NONE"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "SymantecVip": {
      "title": "SymantecVip",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "YubikeyToken": {
      "title": "YubikeyToken",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "GoogleOtp": {
      "title": "GoogleOtp",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "Duo": {
      "title": "Duo",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "OktaQuestion": {
      "title": "OktaQuestion",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "OktaOtp": {
      "title": "OktaOtp",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "OktaSms": {
      "title": "OktaSms",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "OktaPush": {
      "title": "OktaPush",
      "example": {
        "enroll": {
          "self": "OPTIONAL"
        },
        "consent": {
          "type": "NONE"
        }
      },
      "type": "object",
      "properties": {
        "enroll": {
          "$ref": "#/definitions/Enroll"
        },
        "consent": {
          "$ref": "#/definitions/Consent"
        }
      },
      "required": [
        "enroll",
        "consent"
      ]
    },
    "CreateMFAEnrollPolicyRequest": {
      "title": "CreateMFAEnrollPolicyRequest",
      "example": {
        "type": "MFA_ENROLL",
        "name": "Test MFA Policy",
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "{{groupId}}"
              ]
            }
          }
        },
        "settings": {
          "factors": {
            "rsa_token": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "symantec_vip": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "yubikey_token": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "google_otp": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "duo": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_question": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_otp": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_sms": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            },
            "okta_push": {
              "enroll": {
                "self": "OPTIONAL"
              },
              "consent": {
                "type": "NONE"
              }
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "settings"
      ]
    },
    "CreateOktaSignOnPolicyRequest": {
      "title": "CreateOktaSignOnPolicyRequest",
      "example": {
        "type": "OKTA_SIGN_ON",
        "name": "Okta Corp Policy",
        "description": "Standard policy for every employee",
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "{{groupId}}"
              ]
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        }
      },
      "required": [
        "type",
        "name",
        "description",
        "conditions"
      ]
    },
    "CreateOn-PremRuleRequest": {
      "title": "CreateOn-PremRuleRequest",
      "example": {
        "type": "SIGN_ON",
        "status": "ACTIVE",
        "name": "Skip Factor Challenge when On-Prem",
        "conditions": {
          "network": {
            "connection": "ON_NETWORK"
          },
          "authContext": {
            "authType": "ANY"
          }
        },
        "actions": {
          "signon": {
            "access": "ALLOW",
            "requireFactor": false,
            "rememberDeviceByDefault": false,
            "session": {
              "usePersistentCookie": false,
              "maxSessionIdleMinutes": 720,
              "maxSessionLifetimeMinutes": 0
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions5"
        },
        "actions": {
          "$ref": "#/definitions/Actions2"
        }
      },
      "required": [
        "type",
        "status",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Conditions5": {
      "title": "Conditions5",
      "example": {
        "network": {
          "connection": "ON_NETWORK"
        },
        "authContext": {
          "authType": "ANY"
        }
      },
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "authContext": {
          "$ref": "#/definitions/AuthContext"
        }
      },
      "required": [
        "network",
        "authContext"
      ]
    },
    "AuthContext": {
      "title": "AuthContext",
      "example": {
        "authType": "ANY"
      },
      "type": "object",
      "properties": {
        "authType": {
          "type": "string"
        }
      },
      "required": [
        "authType"
      ]
    },
    "Actions2": {
      "title": "Actions2",
      "example": {
        "signon": {
          "access": "ALLOW",
          "requireFactor": false,
          "rememberDeviceByDefault": false,
          "session": {
            "usePersistentCookie": false,
            "maxSessionIdleMinutes": 720,
            "maxSessionLifetimeMinutes": 0
          }
        }
      },
      "type": "object",
      "properties": {
        "signon": {
          "$ref": "#/definitions/Signon"
        }
      },
      "required": [
        "signon"
      ]
    },
    "Signon": {
      "title": "Signon",
      "example": {
        "access": "ALLOW",
        "requireFactor": false,
        "rememberDeviceByDefault": false,
        "session": {
          "usePersistentCookie": false,
          "maxSessionIdleMinutes": 720,
          "maxSessionLifetimeMinutes": 0
        }
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "requireFactor": {
          "type": "boolean"
        },
        "rememberDeviceByDefault": {
          "type": "boolean"
        },
        "session": {
          "$ref": "#/definitions/Session"
        }
      },
      "required": [
        "access",
        "requireFactor",
        "rememberDeviceByDefault",
        "session"
      ]
    },
    "Session": {
      "title": "Session",
      "example": {
        "usePersistentCookie": false,
        "maxSessionIdleMinutes": 720,
        "maxSessionLifetimeMinutes": 0
      },
      "type": "object",
      "properties": {
        "usePersistentCookie": {
          "type": "boolean"
        },
        "maxSessionIdleMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "maxSessionLifetimeMinutes": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "usePersistentCookie",
        "maxSessionIdleMinutes",
        "maxSessionLifetimeMinutes"
      ]
    },
    "CreateRADIUSRuleRequest": {
      "title": "CreateRADIUSRuleRequest",
      "example": {
        "type": "SIGN_ON",
        "status": "ACTIVE",
        "name": "Challenge VPN Users",
        "conditions": {
          "network": {
            "connection": "ANYWHERE"
          },
          "authContext": {
            "authType": "RADIUS"
          }
        },
        "actions": {
          "signon": {
            "access": "ALLOW",
            "requireFactor": true,
            "factorPromptMode": "ALWAYS",
            "rememberDeviceByDefault": false,
            "session": {
              "usePersistentCookie": false,
              "maxSessionIdleMinutes": 720,
              "maxSessionLifetimeMinutes": 0
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions5"
        },
        "actions": {
          "$ref": "#/definitions/Actions3"
        }
      },
      "required": [
        "type",
        "status",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Actions3": {
      "title": "Actions3",
      "example": {
        "signon": {
          "access": "ALLOW",
          "requireFactor": true,
          "factorPromptMode": "ALWAYS",
          "rememberDeviceByDefault": false,
          "session": {
            "usePersistentCookie": false,
            "maxSessionIdleMinutes": 720,
            "maxSessionLifetimeMinutes": 0
          }
        }
      },
      "type": "object",
      "properties": {
        "signon": {
          "$ref": "#/definitions/Signon1"
        }
      },
      "required": [
        "signon"
      ]
    },
    "Signon1": {
      "title": "Signon1",
      "example": {
        "access": "ALLOW",
        "requireFactor": true,
        "factorPromptMode": "ALWAYS",
        "rememberDeviceByDefault": false,
        "session": {
          "usePersistentCookie": false,
          "maxSessionIdleMinutes": 720,
          "maxSessionLifetimeMinutes": 0
        }
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "requireFactor": {
          "type": "boolean"
        },
        "factorPromptMode": {
          "type": "string"
        },
        "rememberDeviceByDefault": {
          "type": "boolean"
        },
        "session": {
          "$ref": "#/definitions/Session"
        }
      },
      "required": [
        "access",
        "requireFactor",
        "factorPromptMode",
        "rememberDeviceByDefault",
        "session"
      ]
    },
    "CreateCloudRuleRequest": {
      "title": "CreateCloudRuleRequest",
      "example": {
        "type": "SIGN_ON",
        "name": "Challenge Cloud Users",
        "conditions": {
          "people": {
            "users": {
              "include": [],
              "exclude": []
            },
            "groups": {
              "include": [],
              "exclude": []
            }
          },
          "network": {
            "connection": "OFF_NETWORK"
          },
          "authContext": {
            "authType": "ANY"
          }
        },
        "actions": {
          "signon": {
            "access": "ALLOW",
            "requireFactor": true,
            "factorPromptMode": "ALWAYS",
            "rememberDeviceByDefault": false,
            "session": {
              "usePersistentCookie": false,
              "maxSessionIdleMinutes": 720,
              "maxSessionLifetimeMinutes": 0
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions7"
        },
        "actions": {
          "$ref": "#/definitions/Actions3"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Conditions7": {
      "title": "Conditions7",
      "example": {
        "people": {
          "users": {
            "include": [],
            "exclude": []
          },
          "groups": {
            "include": [],
            "exclude": []
          }
        },
        "network": {
          "connection": "OFF_NETWORK"
        },
        "authContext": {
          "authType": "ANY"
        }
      },
      "type": "object",
      "properties": {
        "people": {
          "$ref": "#/definitions/People5"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "authContext": {
          "$ref": "#/definitions/AuthContext"
        }
      },
      "required": [
        "people",
        "network",
        "authContext"
      ]
    },
    "People5": {
      "title": "People5",
      "example": {
        "users": {
          "include": [],
          "exclude": []
        },
        "groups": {
          "include": [],
          "exclude": []
        }
      },
      "type": "object",
      "properties": {
        "users": {
          "$ref": "#/definitions/Users2"
        },
        "groups": {
          "$ref": "#/definitions/Groups3"
        }
      },
      "required": [
        "users",
        "groups"
      ]
    },
    "Users2": {
      "title": "Users2",
      "example": {
        "include": [],
        "exclude": []
      },
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "include",
        "exclude"
      ]
    },
    "Groups3": {
      "title": "Groups3",
      "example": {
        "include": [],
        "exclude": []
      },
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "include",
        "exclude"
      ]
    },
    "UpdateOktaSignOnPolicyRequest": {
      "title": "UpdateOktaSignOnPolicyRequest",
      "example": {
        "name": "My Updated Policy",
        "description": "This is my policy",
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "00gpcqYQRBCMFWXDMVWO"
              ]
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions2"
        }
      },
      "required": [
        "name",
        "description",
        "conditions"
      ]
    },
    "UpdateSignOnRuleRequest": {
      "title": "UpdateSignOnRuleRequest",
      "example": {
        "name": "My Updated Policy Rule",
        "conditions": {
          "people": {
            "users": {
              "exclude": []
            }
          },
          "network": {
            "connection": "ON_NETWORK"
          },
          "authContext": {
            "authType": "ANY"
          }
        },
        "actions": {
          "signon": {
            "access": "DENY"
          }
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions9"
        },
        "actions": {
          "$ref": "#/definitions/Actions5"
        }
      },
      "required": [
        "name",
        "conditions",
        "actions"
      ]
    },
    "Conditions9": {
      "title": "Conditions9",
      "example": {
        "people": {
          "users": {
            "exclude": []
          }
        },
        "network": {
          "connection": "ON_NETWORK"
        },
        "authContext": {
          "authType": "ANY"
        }
      },
      "type": "object",
      "properties": {
        "people": {
          "$ref": "#/definitions/People"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "authContext": {
          "$ref": "#/definitions/AuthContext"
        }
      },
      "required": [
        "people",
        "network",
        "authContext"
      ]
    },
    "Actions5": {
      "title": "Actions5",
      "example": {
        "signon": {
          "access": "DENY"
        }
      },
      "type": "object",
      "properties": {
        "signon": {
          "$ref": "#/definitions/Signon3"
        }
      },
      "required": [
        "signon"
      ]
    },
    "Signon3": {
      "title": "Signon3",
      "example": {
        "access": "DENY"
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        }
      },
      "required": [
        "access"
      ]
    },
    "CreateDenyRuleRequest": {
      "title": "CreateDenyRuleRequest",
      "example": {
        "type": "SIGN_ON",
        "name": "Deny",
        "conditions": {
          "network": {
            "connection": "ANYWHERE"
          },
          "authContext": {
            "authType": "ANY"
          }
        },
        "actions": {
          "signon": {
            "access": "DENY",
            "requireFactor": false
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions5"
        },
        "actions": {
          "$ref": "#/definitions/Actions6"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Actions6": {
      "title": "Actions6",
      "example": {
        "signon": {
          "access": "DENY",
          "requireFactor": false
        }
      },
      "type": "object",
      "properties": {
        "signon": {
          "$ref": "#/definitions/Signon4"
        }
      },
      "required": [
        "signon"
      ]
    },
    "Signon4": {
      "title": "Signon4",
      "example": {
        "access": "DENY",
        "requireFactor": false
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "requireFactor": {
          "type": "boolean"
        }
      },
      "required": [
        "access",
        "requireFactor"
      ]
    },
    "CreatePasswordPolicyRequest": {
      "title": "CreatePasswordPolicyRequest",
      "example": {
        "type": "PASSWORD",
        "name": "Password Policy",
        "description": "The test policy applies to users with Okta managed passwords.",
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "{{groupId}}"
              ]
            }
          },
          "authProvider": {
            "provider": "OKTA"
          }
        },
        "settings": {
          "password": {
            "complexity": {
              "minLength": 8,
              "minLowerCase": 1,
              "minUpperCase": 1,
              "minNumber": 1,
              "minSymbol": 0,
              "excludeUsername": true
            },
            "age": {
              "maxAgeDays": 90,
              "expireWarnDays": 5,
              "minAgeMinutes": 0,
              "historyCount": 10
            },
            "lockout": {
              "maxAttempts": 10,
              "autoUnlockMinutes": 60,
              "showLockoutFailures": true
            }
          },
          "recovery": {
            "factors": {
              "recovery_question": {
                "status": "ACTIVE",
                "properties": {
                  "complexity": {
                    "minLength": 4
                  }
                }
              },
              "okta_email": {
                "status": "ACTIVE",
                "properties": {
                  "recoveryToken": {
                    "tokenLifetimeMinutes": 60
                  }
                }
              },
              "okta_sms": {
                "status": "INACTIVE"
              },
              "okta_call": {
                "status": "INACTIVE"
              }
            }
          },
          "delegation": {
            "options": {
              "skipUnlock": false
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions11"
        },
        "settings": {
          "$ref": "#/definitions/Settings2"
        }
      },
      "required": [
        "type",
        "name",
        "description",
        "conditions",
        "settings"
      ]
    },
    "Conditions11": {
      "title": "Conditions11",
      "example": {
        "people": {
          "groups": {
            "include": [
              "{{groupId}}"
            ]
          }
        },
        "authProvider": {
          "provider": "OKTA"
        }
      },
      "type": "object",
      "properties": {
        "people": {
          "$ref": "#/definitions/People2"
        },
        "authProvider": {
          "$ref": "#/definitions/AuthProvider"
        }
      },
      "required": [
        "people",
        "authProvider"
      ]
    },
    "AuthProvider": {
      "title": "AuthProvider",
      "example": {
        "provider": "OKTA"
      },
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        }
      },
      "required": [
        "provider"
      ]
    },
    "Settings2": {
      "title": "Settings2",
      "example": {
        "password": {
          "complexity": {
            "minLength": 8,
            "minLowerCase": 1,
            "minUpperCase": 1,
            "minNumber": 1,
            "minSymbol": 0,
            "excludeUsername": true
          },
          "age": {
            "maxAgeDays": 90,
            "expireWarnDays": 5,
            "minAgeMinutes": 0,
            "historyCount": 10
          },
          "lockout": {
            "maxAttempts": 10,
            "autoUnlockMinutes": 60,
            "showLockoutFailures": true
          }
        },
        "recovery": {
          "factors": {
            "recovery_question": {
              "status": "ACTIVE",
              "properties": {
                "complexity": {
                  "minLength": 4
                }
              }
            },
            "okta_email": {
              "status": "ACTIVE",
              "properties": {
                "recoveryToken": {
                  "tokenLifetimeMinutes": 60
                }
              }
            },
            "okta_sms": {
              "status": "INACTIVE"
            },
            "okta_call": {
              "status": "INACTIVE"
            }
          }
        },
        "delegation": {
          "options": {
            "skipUnlock": false
          }
        }
      },
      "type": "object",
      "properties": {
        "password": {
          "$ref": "#/definitions/Password"
        },
        "recovery": {
          "$ref": "#/definitions/Recovery"
        },
        "delegation": {
          "$ref": "#/definitions/Delegation"
        }
      },
      "required": [
        "password",
        "recovery",
        "delegation"
      ]
    },
    "Password": {
      "title": "Password",
      "example": {
        "complexity": {
          "minLength": 8,
          "minLowerCase": 1,
          "minUpperCase": 1,
          "minNumber": 1,
          "minSymbol": 0,
          "excludeUsername": true
        },
        "age": {
          "maxAgeDays": 90,
          "expireWarnDays": 5,
          "minAgeMinutes": 0,
          "historyCount": 10
        },
        "lockout": {
          "maxAttempts": 10,
          "autoUnlockMinutes": 60,
          "showLockoutFailures": true
        }
      },
      "type": "object",
      "properties": {
        "complexity": {
          "$ref": "#/definitions/Complexity"
        },
        "age": {
          "$ref": "#/definitions/Age"
        },
        "lockout": {
          "$ref": "#/definitions/Lockout"
        }
      },
      "required": [
        "complexity",
        "age",
        "lockout"
      ]
    },
    "Complexity": {
      "title": "Complexity",
      "example": {
        "minLength": 8,
        "minLowerCase": 1,
        "minUpperCase": 1,
        "minNumber": 1,
        "minSymbol": 0,
        "excludeUsername": true
      },
      "type": "object",
      "properties": {
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "minLowerCase": {
          "type": "integer",
          "format": "int32"
        },
        "minUpperCase": {
          "type": "integer",
          "format": "int32"
        },
        "minNumber": {
          "type": "integer",
          "format": "int32"
        },
        "minSymbol": {
          "type": "integer",
          "format": "int32"
        },
        "excludeUsername": {
          "type": "boolean"
        }
      },
      "required": [
        "minLength",
        "minLowerCase",
        "minUpperCase",
        "minNumber",
        "minSymbol",
        "excludeUsername"
      ]
    },
    "Age": {
      "title": "Age",
      "example": {
        "maxAgeDays": 90,
        "expireWarnDays": 5,
        "minAgeMinutes": 0,
        "historyCount": 10
      },
      "type": "object",
      "properties": {
        "maxAgeDays": {
          "type": "integer",
          "format": "int32"
        },
        "expireWarnDays": {
          "type": "integer",
          "format": "int32"
        },
        "minAgeMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "historyCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "maxAgeDays",
        "expireWarnDays",
        "minAgeMinutes",
        "historyCount"
      ]
    },
    "Lockout": {
      "title": "Lockout",
      "example": {
        "maxAttempts": 10,
        "autoUnlockMinutes": 60,
        "showLockoutFailures": true
      },
      "type": "object",
      "properties": {
        "maxAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "autoUnlockMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "showLockoutFailures": {
          "type": "boolean"
        }
      },
      "required": [
        "maxAttempts",
        "autoUnlockMinutes",
        "showLockoutFailures"
      ]
    },
    "Recovery": {
      "title": "Recovery",
      "example": {
        "factors": {
          "recovery_question": {
            "status": "ACTIVE",
            "properties": {
              "complexity": {
                "minLength": 4
              }
            }
          },
          "okta_email": {
            "status": "ACTIVE",
            "properties": {
              "recoveryToken": {
                "tokenLifetimeMinutes": 60
              }
            }
          },
          "okta_sms": {
            "status": "INACTIVE"
          },
          "okta_call": {
            "status": "INACTIVE"
          }
        }
      },
      "type": "object",
      "properties": {
        "factors": {
          "$ref": "#/definitions/Factors2"
        }
      },
      "required": [
        "factors"
      ]
    },
    "Factors2": {
      "title": "Factors2",
      "example": {
        "recovery_question": {
          "status": "ACTIVE",
          "properties": {
            "complexity": {
              "minLength": 4
            }
          }
        },
        "okta_email": {
          "status": "ACTIVE",
          "properties": {
            "recoveryToken": {
              "tokenLifetimeMinutes": 60
            }
          }
        },
        "okta_sms": {
          "status": "INACTIVE"
        },
        "okta_call": {
          "status": "INACTIVE"
        }
      },
      "type": "object",
      "properties": {
        "recovery_question": {
          "$ref": "#/definitions/RecoveryQuestion"
        },
        "okta_email": {
          "$ref": "#/definitions/OktaEmail"
        },
        "okta_sms": {
          "$ref": "#/definitions/OktaSms2"
        },
        "okta_call": {
          "$ref": "#/definitions/OktaCall"
        }
      },
      "required": [
        "recovery_question",
        "okta_email",
        "okta_sms",
        "okta_call"
      ]
    },
    "RecoveryQuestion": {
      "title": "RecoveryQuestion",
      "example": {
        "status": "ACTIVE",
        "properties": {
          "complexity": {
            "minLength": 4
          }
        }
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        }
      },
      "required": [
        "status",
        "properties"
      ]
    },
    "Properties": {
      "title": "Properties",
      "example": {
        "complexity": {
          "minLength": 4
        }
      },
      "type": "object",
      "properties": {
        "complexity": {
          "$ref": "#/definitions/Complexity1"
        }
      },
      "required": [
        "complexity"
      ]
    },
    "Complexity1": {
      "title": "Complexity1",
      "example": {
        "minLength": 4
      },
      "type": "object",
      "properties": {
        "minLength": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "minLength"
      ]
    },
    "OktaEmail": {
      "title": "OktaEmail",
      "example": {
        "status": "ACTIVE",
        "properties": {
          "recoveryToken": {
            "tokenLifetimeMinutes": 60
          }
        }
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties1"
        }
      },
      "required": [
        "status",
        "properties"
      ]
    },
    "Properties1": {
      "title": "Properties1",
      "example": {
        "recoveryToken": {
          "tokenLifetimeMinutes": 60
        }
      },
      "type": "object",
      "properties": {
        "recoveryToken": {
          "$ref": "#/definitions/RecoveryToken"
        }
      },
      "required": [
        "recoveryToken"
      ]
    },
    "RecoveryToken": {
      "title": "RecoveryToken",
      "example": {
        "tokenLifetimeMinutes": 60
      },
      "type": "object",
      "properties": {
        "tokenLifetimeMinutes": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "tokenLifetimeMinutes"
      ]
    },
    "OktaSms2": {
      "title": "OktaSms2",
      "example": {
        "status": "INACTIVE"
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "OktaCall": {
      "title": "OktaCall",
      "example": {
        "status": "INACTIVE"
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "Delegation": {
      "title": "Delegation",
      "example": {
        "options": {
          "skipUnlock": false
        }
      },
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/Options"
        }
      },
      "required": [
        "options"
      ]
    },
    "Options": {
      "title": "Options",
      "example": {
        "skipUnlock": false
      },
      "type": "object",
      "properties": {
        "skipUnlock": {
          "type": "boolean"
        }
      },
      "required": [
        "skipUnlock"
      ]
    },
    "CreatePasswordRuleRequest": {
      "title": "CreatePasswordRuleRequest",
      "example": {
        "type": "PASSWORD",
        "name": "Allow All Rule",
        "conditions": {
          "people": {
            "users": {
              "exclude": []
            }
          },
          "network": {
            "connection": "ANYWHERE"
          }
        },
        "actions": {
          "passwordChange": {
            "access": "ALLOW"
          },
          "selfServicePasswordReset": {
            "access": "ALLOW"
          },
          "selfServiceUnlock": {
            "access": "ALLOW"
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions7"
        }
      },
      "required": [
        "type",
        "name",
        "conditions",
        "actions"
      ]
    },
    "Actions7": {
      "title": "Actions7",
      "example": {
        "passwordChange": {
          "access": "ALLOW"
        },
        "selfServicePasswordReset": {
          "access": "ALLOW"
        },
        "selfServiceUnlock": {
          "access": "ALLOW"
        }
      },
      "type": "object",
      "properties": {
        "passwordChange": {
          "$ref": "#/definitions/PasswordChange"
        },
        "selfServicePasswordReset": {
          "$ref": "#/definitions/SelfServicePasswordReset"
        },
        "selfServiceUnlock": {
          "$ref": "#/definitions/SelfServiceUnlock"
        }
      },
      "required": [
        "passwordChange",
        "selfServicePasswordReset",
        "selfServiceUnlock"
      ]
    },
    "PasswordChange": {
      "title": "PasswordChange",
      "example": {
        "access": "ALLOW"
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        }
      },
      "required": [
        "access"
      ]
    },
    "SelfServicePasswordReset": {
      "title": "SelfServicePasswordReset",
      "example": {
        "access": "ALLOW"
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        }
      },
      "required": [
        "access"
      ]
    },
    "SelfServiceUnlock": {
      "title": "SelfServiceUnlock",
      "example": {
        "access": "ALLOW"
      },
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        }
      },
      "required": [
        "access"
      ]
    },
    "UpdatePasswordPolicyRequest": {
      "title": "UpdatePasswordPolicyRequest",
      "example": {
        "type": "PASSWORD",
        "id": "{{policyId}}",
        "status": "ACTIVE",
        "name": "Updated Test Policy",
        "description": "The test policy applies to users with Okta managed passwords.",
        "priority": 1,
        "system": false,
        "conditions": {
          "people": {
            "groups": {
              "include": [
                "00gak46y5hydV6NdM0g4"
              ]
            }
          },
          "authProvider": {
            "provider": "OKTA"
          }
        },
        "settings": {
          "password": {
            "complexity": {
              "minLength": 8,
              "minLowerCase": 1,
              "minUpperCase": 1,
              "minNumber": 1,
              "minSymbol": 0,
              "excludeUsername": true
            },
            "age": {
              "maxAgeDays": 90,
              "expireWarnDays": 5,
              "minAgeMinutes": 0,
              "historyCount": 10
            },
            "lockout": {
              "maxAttempts": 10,
              "autoUnlockMinutes": 60,
              "showLockoutFailures": true
            }
          },
          "recovery": {
            "credentials": {
              "recoveryToken": {
                "tokenLifetimeMinutes": 60
              },
              "securityAnswer": {
                "complexity": {
                  "minLength": 4
                }
              },
              "sms": {
                "selfService": true
              }
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "system": {
          "type": "boolean"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions11"
        },
        "settings": {
          "$ref": "#/definitions/Settings3"
        }
      },
      "required": [
        "type",
        "id",
        "status",
        "name",
        "description",
        "priority",
        "system",
        "conditions",
        "settings"
      ]
    },
    "Settings3": {
      "title": "Settings3",
      "example": {
        "password": {
          "complexity": {
            "minLength": 8,
            "minLowerCase": 1,
            "minUpperCase": 1,
            "minNumber": 1,
            "minSymbol": 0,
            "excludeUsername": true
          },
          "age": {
            "maxAgeDays": 90,
            "expireWarnDays": 5,
            "minAgeMinutes": 0,
            "historyCount": 10
          },
          "lockout": {
            "maxAttempts": 10,
            "autoUnlockMinutes": 60,
            "showLockoutFailures": true
          }
        },
        "recovery": {
          "credentials": {
            "recoveryToken": {
              "tokenLifetimeMinutes": 60
            },
            "securityAnswer": {
              "complexity": {
                "minLength": 4
              }
            },
            "sms": {
              "selfService": true
            }
          }
        }
      },
      "type": "object",
      "properties": {
        "password": {
          "$ref": "#/definitions/Password"
        },
        "recovery": {
          "$ref": "#/definitions/Recovery1"
        }
      },
      "required": [
        "password",
        "recovery"
      ]
    },
    "Recovery1": {
      "title": "Recovery1",
      "example": {
        "credentials": {
          "recoveryToken": {
            "tokenLifetimeMinutes": 60
          },
          "securityAnswer": {
            "complexity": {
              "minLength": 4
            }
          },
          "sms": {
            "selfService": true
          }
        }
      },
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/Credentials"
        }
      },
      "required": [
        "credentials"
      ]
    },
    "Credentials": {
      "title": "Credentials",
      "example": {
        "recoveryToken": {
          "tokenLifetimeMinutes": 60
        },
        "securityAnswer": {
          "complexity": {
            "minLength": 4
          }
        },
        "sms": {
          "selfService": true
        }
      },
      "type": "object",
      "properties": {
        "recoveryToken": {
          "$ref": "#/definitions/RecoveryToken"
        },
        "securityAnswer": {
          "$ref": "#/definitions/SecurityAnswer"
        },
        "sms": {
          "$ref": "#/definitions/Sms"
        }
      },
      "required": [
        "recoveryToken",
        "securityAnswer",
        "sms"
      ]
    },
    "SecurityAnswer": {
      "title": "SecurityAnswer",
      "example": {
        "complexity": {
          "minLength": 4
        }
      },
      "type": "object",
      "properties": {
        "complexity": {
          "$ref": "#/definitions/Complexity1"
        }
      },
      "required": [
        "complexity"
      ]
    },
    "Sms": {
      "title": "Sms",
      "example": {
        "selfService": true
      },
      "type": "object",
      "properties": {
        "selfService": {
          "type": "boolean"
        }
      },
      "required": [
        "selfService"
      ]
    },
    "UpdatePasswordRuleRequest": {
      "title": "UpdatePasswordRuleRequest",
      "example": {
        "type": "PASSWORD",
        "id": "{{ruleId}}",
        "status": "ACTIVE",
        "name": "Updated Rule",
        "priority": 1,
        "system": false,
        "conditions": {
          "people": {
            "users": {
              "exclude": []
            }
          },
          "network": {
            "connection": "ANYWHERE"
          }
        },
        "actions": {
          "passwordChange": {
            "access": "ALLOW"
          },
          "selfServicePasswordReset": {
            "access": "ALLOW"
          },
          "selfServiceUnlock": {
            "access": "ALLOW"
          }
        }
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "system": {
          "type": "boolean"
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        },
        "actions": {
          "$ref": "#/definitions/Actions7"
        }
      },
      "required": [
        "type",
        "id",
        "status",
        "name",
        "priority",
        "system",
        "conditions",
        "actions"
      ]
    }
  },
  "tags": [
    {
      "name": "MFA Enroll"
    },
    {
      "name": "Okta Sign On"
    },
    {
      "name": "Password"
    },
    {
      "name": "Misc",
      "description": ""
    }
  ]
}