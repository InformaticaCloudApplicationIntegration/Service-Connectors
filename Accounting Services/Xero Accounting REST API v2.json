{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Accounting API",
    "contact": {
      "email": "api@xero.com",
      "name": "Xero Platform Team",
      "url": "https://developer.xero.com"
    }
  },
  "host": "api.xero.com",
  "basePath": "/api.xro/2.0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Accounts": {
      "get": {
        "description": "Allows you to retrieve the full chart of accounts",
        "summary": "getAccounts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "createAccount",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Accounts/{AccountID}": {
      "get": {
        "description": "Allows you to retrieve the full chart of accounts",
        "summary": "getAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccount",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateAccount",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteAccount",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteAccount",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Accounts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Accounts/{AccountID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments for accounts",
        "summary": "getAccountAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Accounts/{AccountID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on Account",
        "summary": "getAccountAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a binary string (ByteArray)",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateAccountAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateAccountAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Accounts/{AccountID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on Account by Filename",
        "summary": "getAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateAccountAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateAccountAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "AccountID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BatchPayments": {
      "get": {
        "description": "Retrieve either one or many BatchPayments for invoices",
        "summary": "getBatchPayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBatchPayments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Batch payments allow you to bundle multiple bills or invoices into one payment transaction. This means a single payment in Xero can be reconciled with a single transaction on the bank statement making for a much simpler bank reconciliation experience.",
        "summary": "createBatchPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBatchPayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BatchPayments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BatchPayments/{BatchPaymentID}/History": {
      "get": {
        "description": "Allows you to retrieve history from a Batch Payment",
        "summary": "getBatchPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBatchPaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BatchPaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBatchPaymentHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBatchPaymentHistoryRecord",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BatchPaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions": {
      "get": {
        "description": "Allows you to retrieve any spend or receive money transactions",
        "summary": "getBankTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactions",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 bank transactions will be returned in a single API call with line items shown for each bank transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SummarizeErrors",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "response format that shows validation errors for each bank transaction"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions/{BankTransactionID}": {
      "get": {
        "description": "Allows you to retrieve any spend or receive money transactions",
        "summary": "getBankTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateBankTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BankTransactions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve any attachments to bank transactions",
        "summary": "getBankTransactionAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on BankTransaction",
        "summary": "getBankTransactionAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateBankTransactionAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransactionAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on BankTransaction by Filename",
        "summary": "getBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateBankTransactionAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransactionAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransactions/{BankTransactionID}/History": {
      "get": {
        "description": "Allows you to retrieve history from a bank transfers",
        "summary": "getBankTransactionsHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransactionsHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransactionHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransactionHistoryRecord",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BankTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers": {
      "get": {
        "description": "Allows you to retrieve any bank transfers",
        "summary": "getBankTransfers",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransfers",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransfer",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransfer",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers/{BankTransferID}": {
      "get": {
        "description": "Allows you to retrieve any bank transfers",
        "summary": "getBankTransfer",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransfer",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BankTransfers"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments from  bank transfers",
        "summary": "getBankTransferAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on BankTransfer",
        "summary": "getBankTransferAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateBankTransferAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransferAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers/{BankTransferID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on BankTransfer by file name",
        "summary": "getBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateBankTransferAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransferAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BankTransfers/{BankTransferID}/History": {
      "get": {
        "description": "Allows you to retrieve history from a bank transfers",
        "summary": "getBankTransferHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBankTransferHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createBankTransferHistoryRecord",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferHistoryRecord",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BankTransferID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/BrandingThemes": {
      "get": {
        "description": "GET a BrandingTheme",
        "summary": "getBrandingThemes",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingThemes",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/BrandingThemes"
            },
            "headers": {}
          }
        }
      }
    },
    "/BrandingThemes/{BrandingThemeID}": {
      "get": {
        "description": "GET a BrandingTheme",
        "summary": "getBrandingTheme",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingTheme",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/BrandingThemes"
            },
            "headers": {}
          }
        }
      }
    },
    "/BrandingThemes/{BrandingThemeID}/PaymentServices": {
      "get": {
        "description": "GET a BrandingTheme Payment services",
        "summary": "getBrandingThemePaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getBrandingThemePaymentServices",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "createBrandingThemePaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "createBrandingThemePaymentServices",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "text/xml"
        ],
        "parameters": [
          {
            "name": "BrandingThemeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts": {
      "get": {
        "description": "Allows you to retrieve, add and update contacts in a Xero organisation",
        "summary": "getContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "IDs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call."
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContact",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}": {
      "get": {
        "description": "Allows you to retrieve, add and update contacts in a Xero organisation",
        "summary": "getContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContact",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContact",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve, add and update contacts in a Xero organisation",
        "summary": "getContactAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on Contacts",
        "summary": "getContactAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateContactAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on Contacts by file name",
        "summary": "getContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateContactAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}/CISSettings": {
      "get": {
        "description": "Allows you to retrieve CISSettings for a contact in a Xero organisation",
        "summary": "getContactCISSettings",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactCISSettings",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/CISSettings"
            },
            "headers": {}
          }
        }
      }
    },
    "/Contacts/{ContactID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an Contact",
        "summary": "getContactHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an Contact",
        "summary": "createContactHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ContactGroups": {
      "get": {
        "description": "Allows you to retrieve the ContactID and Name of all the contacts in a contact group",
        "summary": "getContactGroups",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactGroups",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactGroup",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ContactGroups/{ContactGroupID}": {
      "get": {
        "description": "Allows you to retrieve the ContactID and Name of all the contacts in a contact group",
        "summary": "getContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "getContactGroup",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateContactGroup",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactGroup",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ContactGroups"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ContactGroups/{ContactGroupID}/Contacts": {
      "put": {
        "description": "",
        "summary": "createContactGroupContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactGroupContacts",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Contacts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteContactGroupContacts",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteContactGroupContacts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Response204"
            },
            "headers": {}
          }
        }
      }
    },
    "/ContactGroups/{ContactGroupID}/Contacts/{ContactID}": {
      "delete": {
        "description": "",
        "summary": "deleteContactGroupContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteContactGroupContact",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ContactGroupID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "ContactID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Response204"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes": {
      "get": {
        "description": "Allows you to retrieve any credit notes",
        "summary": "getCreditNotes",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNotes",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 credit notes will be returned in a single API call with line items shown for each credit note"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createCreditNote",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNote",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SummarizeErrors",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "shows validation errors for each credit note"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}": {
      "get": {
        "description": "Allows you to retrieve any credit notes",
        "summary": "getCreditNote",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNote",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateCreditNote",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateCreditNote",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/CreditNotes"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments for credit notes",
        "summary": "getCreditNoteAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on CreditNote",
        "summary": "getCreditNoteAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateCreditNoteAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateCreditNoteAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on CreditNote by file name",
        "summary": "getCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateCreditNoteAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateCreditNoteAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/pdf": {
      "get": {
        "description": "Allows you to retrieve Credit Note as PDF files",
        "summary": "getCreditNoteAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteAsPdf",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/Allocations": {
      "put": {
        "description": "",
        "summary": "createCreditNoteAllocation",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteAllocation",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditNotes/{CreditNoteID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an CreditNote",
        "summary": "getCreditNoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCreditNoteHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an CreditNote",
        "summary": "createCreditNoteHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCreditNoteHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditNoteID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Currencies": {
      "get": {
        "description": "Allows you to retrieve currencies for your organisation",
        "summary": "getCurrencies",
        "tags": [
          "Accounting"
        ],
        "operationId": "getCurrencies",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Currencies"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createCurrency",
        "tags": [
          "Accounting"
        ],
        "operationId": "createCurrency",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Currencies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Currencies"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Employees": {
      "get": {
        "description": "Allows you to retrieve, add and update employees used in Xero payrun functionality",
        "summary": "getEmployees",
        "tags": [
          "Accounting"
        ],
        "operationId": "getEmployees",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createEmployee",
        "tags": [
          "Accounting"
        ],
        "operationId": "createEmployee",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Employees/{EmployeeID}": {
      "get": {
        "description": "Allows you to retrieve employees to see their status",
        "summary": "getEmployee",
        "tags": [
          "Accounting"
        ],
        "operationId": "getEmployee",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateEmployee",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateEmployee",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Employees"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ExpenseClaims": {
      "get": {
        "description": "Allows you to retrieve expense claims to see their status",
        "summary": "getExpenseClaims",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaims",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createExpenseClaim",
        "tags": [
          "Accounting"
        ],
        "operationId": "createExpenseClaim",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SummarizeErrors",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "shows validation errors for each expense claim"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ExpenseClaims/{ExpenseClaimID}": {
      "get": {
        "description": "Allows you to retrieve expense claims to see their status",
        "summary": "getExpenseClaim",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaim",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateExpenseClaim",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateExpenseClaim",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ExpenseClaims"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ExpenseClaims/{ExpenseClaimID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an ExpenseClaim",
        "summary": "getExpenseClaimHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getExpenseClaimHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an ExpenseClaim",
        "summary": "createExpenseClaimHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createExpenseClaimHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices": {
      "get": {
        "description": "Allows you to retrieve any sales invoices or purchase bills",
        "summary": "getInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoices",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "IDs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by a comma-separated list of InvoicesIDs. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
          },
          {
            "name": "InvoiceNumbers",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by a comma-separated list of InvoiceNumbers. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
          },
          {
            "name": "ContactIDs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by a comma-separated list of ContactIDs. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
          },
          {
            "name": "Statuses",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
          },
          {
            "name": "createdByMyApp",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true you'll only retrieve Invoices created by your app"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SummarizeErrors",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "shows validation errors for each invoice"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}": {
      "get": {
        "description": "Allows you to retrieve any sales invoices or purchase bills",
        "summary": "getInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Invoices"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/pdf": {
      "get": {
        "description": "Allows you to retrieve invoices or purchase bills as PDF files",
        "summary": "getInvoiceAsPdf",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAsPdf",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments on invoices or purchase bills",
        "summary": "getInvoiceAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on invoices or purchase bills",
        "summary": "getInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on invoices or purchase bills",
        "summary": "getInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/OnlineInvoice": {
      "get": {
        "description": "Allows you to retrieve a URL to an online invoice",
        "summary": "getOnlineInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOnlineInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/OnlineInvoices"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/Email": {
      "post": {
        "description": "Allows you to email a copy of invoice to related Contact",
        "summary": "emailInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "emailInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RequestEmpty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Response204"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Invoices/{InvoiceID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an invoice",
        "summary": "getInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an invoice",
        "summary": "createInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createInvoiceHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "InvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/InvoiceReminders/Settings": {
      "get": {
        "description": "Allows you to retrieve invoice reminder settings",
        "summary": "getInvoiceReminders",
        "tags": [
          "Accounting"
        ],
        "operationId": "getInvoiceReminders",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/InvoiceReminders"
            },
            "headers": {}
          }
        }
      }
    },
    "/Items": {
      "get": {
        "description": "Allows you to retrieve any items",
        "summary": "getItems",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItems",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "createItem",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Items/{ItemID}": {
      "get": {
        "description": "Allows you to retrieve any items",
        "summary": "getItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItem",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateItem",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Items"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteItem",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteItem",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Response204"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Items/{ItemID}/History": {
      "get": {
        "description": "Allows you to retrieve history for items",
        "summary": "getItemHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getItemHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createItemHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createItemHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ItemID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Journals": {
      "get": {
        "description": "Allows you to retrieve any journals.",
        "summary": "getJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "getJournals",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Journals"
            },
            "headers": {}
          }
        }
      }
    },
    "/Journals/{JournalID}": {
      "get": {
        "description": "Allows you to retrieve any journals.",
        "summary": "getJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "getJournal",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "JournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Journals"
            },
            "headers": {}
          }
        }
      }
    },
    "/LinkedTransactions": {
      "get": {
        "description": "Retrieve linked transactions (billable expenses)",
        "summary": "getLinkedTransactions",
        "tags": [
          "Accounting"
        ],
        "operationId": "getLinkedTransactions",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Up to 100 linked transactions will be returned in a single API call. Use the page parameter to specify the page to be returned e.g. page=1."
          },
          {
            "name": "LinkedTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Xero identifier for an Linked Transaction"
          },
          {
            "name": "SourceTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice"
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer."
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED."
          },
          {
            "name": "TargetTransactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "createLinkedTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/LinkedTransactions/{LinkedTransactionID}": {
      "get": {
        "description": "Retrieve linked transactions (billable expenses)",
        "summary": "getLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "getLinkedTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateLinkedTransaction",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/LinkedTransactions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteLinkedTransaction",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteLinkedTransaction",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Response204"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ManualJournals": {
      "get": {
        "description": "Allows you to retrieve any manual journals",
        "summary": "getManualJournals",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournals",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 manual journals will be returned in a single API call with line items shown for each overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createManualJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "createManualJournal",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ManualJournals/{ManualJournalID}": {
      "get": {
        "description": "Allows you to retrieve any manual journals",
        "summary": "getManualJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournal",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateManualJournal",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateManualJournal",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ManualJournals"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachment for manual journals",
        "summary": "getManualJournalAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on ManualJournals",
        "summary": "getManualJournalAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateManualJournalAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateManualJournalAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on ManualJournal on file name",
        "summary": "getManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateManualJournalAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateManualJournalAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ManualJournalID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Organisation": {
      "get": {
        "description": "GET a Organisation",
        "summary": "getOrganisations",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOrganisations",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Organisations"
            },
            "headers": {}
          }
        }
      }
    },
    "/Organisation/{ShortCode}": {
      "get": {
        "description": "GET a Organisation",
        "summary": "getOrganisationByShortCode",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOrganisationByShortCode",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ShortCode",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Organisations"
            },
            "headers": {}
          }
        }
      }
    },
    "/Overpayments": {
      "get": {
        "description": "Allows you to retrieve overpayments",
        "summary": "getOverpayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpayments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 overpayments will be returned in a single API call with line items shown for each overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Overpayments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Overpayments/{OverpaymentID}": {
      "get": {
        "description": "Allows you to retrieve overpayments",
        "summary": "getOverpayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Overpayments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Overpayments/{OverpaymentID}/Allocations": {
      "put": {
        "description": "",
        "summary": "createOverpaymentAllocation",
        "tags": [
          "Accounting"
        ],
        "operationId": "createOverpaymentAllocation",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Overpayments/{OverpaymentID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an Overpayment",
        "summary": "getOverpaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getOverpaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an Overpayment",
        "summary": "createOverpaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createOverpaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "OverpaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Payments": {
      "get": {
        "description": "Retrieve either one or many payments for invoices and credit notes",
        "summary": "getPayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPayments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Payments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Payments/{PaymentID}": {
      "get": {
        "description": "Retrieve either one or many payments for invoices and credit notes",
        "summary": "getPayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updatePayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "updatePayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Payments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Payments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Payments/{PaymentID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an invoice",
        "summary": "getPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an invoice",
        "summary": "createPaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/PaymentServices": {
      "get": {
        "description": "Retrieve either one or many payment services",
        "summary": "getPaymentServices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPaymentServices",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createPaymentService",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPaymentService",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PaymentServices"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Prepayments": {
      "get": {
        "description": "Allows you to retrieve prepayments",
        "summary": "getPrepayments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepayments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createPrepayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPrepayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Prepayments/{PrepaymentID}": {
      "get": {
        "description": "Allows you to retrieve prepayments",
        "summary": "getPrepayment",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepayment",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Prepayments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Prepayments/{PrepaymentID}/Allocations": {
      "put": {
        "description": "",
        "summary": "createPrepaymentAllocation",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPrepaymentAllocation",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Allocations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Allocations"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Prepayments/{PrepaymentID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an Prepayment",
        "summary": "getPrepaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPrepaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an Overpayment",
        "summary": "createPrepaymentHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPrepaymentHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PrepaymentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/PurchaseOrders": {
      "get": {
        "description": "Allows you to retrieve purchase orders",
        "summary": "getPurchaseOrders",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrders",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order status"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "To specify a page, append the page parameter to the URL e.g. ?page=1. If there are 100 records in the response you will need to check if there is any more data by fetching the next page e.g ?page=2 and continuing this process until no more results are returned."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createPurchaseOrder",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPurchaseOrder",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SummarizeErrors",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "shows validation errors for each purchase order."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}": {
      "get": {
        "description": "Allows you to retrieve purchase orders",
        "summary": "getPurchaseOrder",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrder",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updatePurchaseOrder",
        "tags": [
          "Accounting"
        ],
        "operationId": "updatePurchaseOrder",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/PurchaseOrders"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/PurchaseOrders/{PurchaseOrderID}/History": {
      "get": {
        "description": "Allows you to retrieve history for PurchaseOrder",
        "summary": "getPurchaseOrderHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getPurchaseOrderHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createPurchaseOrderHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createPurchaseOrderHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts": {
      "get": {
        "description": "Allows you to retrieve draft expense claim receipts for any user",
        "summary": "getReceipts",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceipts",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceipt",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Receipts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts/{ReceiptID}": {
      "get": {
        "description": "Allows you to retrieve draft expense claim receipts for any user",
        "summary": "getReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceipt",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateReceipt",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateReceipt",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Receipts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Receipts"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts/{ReceiptID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments for expense claim receipts for any user",
        "summary": "getReceiptAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts/{ReceiptID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on Receipts",
        "summary": "getReceiptAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateReceiptAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateReceiptAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts/{ReceiptID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on invoices or purchase bills",
        "summary": "getReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateReceiptAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateReceiptAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Receipts/{ReceiptID}/History": {
      "get": {
        "description": "Allows you to retrieve a history records of an Receipt",
        "summary": "getReceiptHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReceiptHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Allows you to retrieve a history records of an Receipt",
        "summary": "createReceiptHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createReceiptHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReceiptID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices": {
      "get": {
        "description": "Allows you to retrieve any repeating invoice templates",
        "summary": "getRepeatingInvoices",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoices",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/RepeatingInvoices"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}": {
      "get": {
        "description": "Allows you to retrieve any repeating invoice templates",
        "summary": "getRepeatingInvoice",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoice",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/RepeatingInvoices"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments": {
      "get": {
        "description": "Allows you to retrieve Attachments on repeating invoice templates",
        "summary": "getRepeatingInvoiceAttachments",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachments",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "description": "Allows you to retrieve Attachments on RepeatingInvoices",
        "summary": "getRepeatingInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateRepeatingInvoiceAttachmentById",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateRepeatingInvoiceAttachmentById",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}": {
      "get": {
        "description": "Allows you to retrieve Attachments on invoices or purchase bills",
        "summary": "getRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "contentType",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "createRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateRepeatingInvoiceAttachmentByFileName",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateRepeatingInvoiceAttachmentByFileName",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "FileName",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Attachments"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/History": {
      "get": {
        "description": "Allows you to retrieve history for RepeatingInvoice",
        "summary": "getRepeatingInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getRepeatingInvoiceHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createRepeatingInvoiceHistory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createRepeatingInvoiceHistory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/HistoryRecords"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/TenNinetyNine": {
      "get": {
        "description": "Allows you to retrieve report for TenNinetyNine",
        "summary": "getReportTenNinetyNine",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportTenNinetyNine",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "reportYear",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Reports"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/AgedPayablesByContact": {
      "get": {
        "description": "Allows you to retrieve report for AgedPayablesByContact",
        "summary": "getReportAgedPayablesByContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportAgedPayablesByContact",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": ""
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": ""
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/AgedReceivablesByContact": {
      "get": {
        "description": "Allows you to retrieve report for AgedReceivablesByContact",
        "summary": "getReportAgedReceivablesByContact",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportAgedReceivablesByContact",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/BalanceSheet": {
      "get": {
        "description": "Allows you to retrieve report for BalanceSheet",
        "summary": "getReportBalanceSheet",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBalanceSheet",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "periods",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "enum": [
              "MONTH",
              "QUARTER",
              "YEAR"
            ],
            "type": "string",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
          },
          {
            "name": "trackingOptionID1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "standardLayout",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/BankSummary": {
      "get": {
        "description": "Allows you to retrieve report for BankSummary",
        "summary": "getReportBankSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBankSummary",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "e.g. 2018-03-31"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods to compare (integer between 1 and 12)"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The period size to compare to (1=month, 3=quarter, 12=year)"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports": {
      "get": {
        "description": "Allows you to retrieve report for BAS only valid for AU orgs",
        "summary": "getReportBASorGSTList",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBASorGSTList",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/{ReportID}": {
      "get": {
        "description": "Allows you to retrieve report for BAS only valid for AU orgs",
        "summary": "getReportBASorGST",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBASorGST",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReportID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/BudgetSummary": {
      "get": {
        "description": "Allows you to retrieve report for Budget Summary",
        "summary": "getReportBudgetSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportBudgetSummary",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "e.g. 2018-03-31"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods to compare (integer between 1 and 12)"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The period size to compare to (1=month, 3=quarter, 12=year)"
          }
        ],
        "responses": {
          "200": {
            "description": "success- return a Report with Rows object",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/ExecutiveSummary": {
      "get": {
        "description": "Allows you to retrieve report for ExecutiveSummary",
        "summary": "getReportExecutiveSummary",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportExecutiveSummary",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "e.g. 2018-03-31"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/ProfitAndLoss": {
      "get": {
        "description": "Allows you to retrieve report for ProfitAndLoss",
        "summary": "getReportProfitAndLoss",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportProfitAndLoss",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "periods",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of periods to compare (integer between 1 and 12)"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": false,
            "enum": [
              "MONTH",
              "QUARTER",
              "YEAR"
            ],
            "type": "string",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)"
          },
          {
            "name": "trackingCategoryID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "trackingCategoryID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "trackingOptionID",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "standardLayout",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/Reports/TrialBalance": {
      "get": {
        "description": "Allows you to retrieve report for TrialBalance",
        "summary": "getReportTrialBalance",
        "tags": [
          "Accounting"
        ],
        "operationId": "getReportTrialBalance",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/ReportWithRows"
            },
            "headers": {}
          }
        }
      }
    },
    "/TaxRates": {
      "get": {
        "description": "GET a TaxRate",
        "summary": "getTaxRates",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTaxRates",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "TaxType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by tax type"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createTaxRate",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTaxRate",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateTaxRate",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateTaxRate",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TaxRates"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/TrackingCategories": {
      "get": {
        "description": "Retrieve tracking categories and options for a Xero organisation",
        "summary": "getTrackingCategories",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTrackingCategories",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "e.g. includeArchived=true - Categories and options with a status of ARCHIVED will be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "createTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTrackingCategory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackingCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/TrackingCategories/{TrackingCategoryID}": {
      "get": {
        "description": "Retrieve tracking categories and options for a Xero organisation",
        "summary": "getTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "getTrackingCategory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "updateTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "updateTrackingCategory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackingCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteTrackingCategory",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteTrackingCategory",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingCategories"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/TrackingCategories/{TrackingCategoryID}/Options": {
      "put": {
        "description": "",
        "summary": "createTrackingOptions",
        "tags": [
          "Accounting"
        ],
        "operationId": "createTrackingOptions",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackingOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingOptions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}": {
      "delete": {
        "description": "",
        "summary": "deleteTrackingOptions",
        "tags": [
          "Accounting"
        ],
        "operationId": "deleteTrackingOptions",
        "deprecated": false,
        "produces": [
          "application/json",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          },
          {
            "name": "TrackingOptionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/TrackingOptions"
            },
            "headers": {}
          },
          "400": {
            "description": "A failed request due to validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {}
          }
        }
      }
    },
    "/Users": {
      "get": {
        "description": "GET a User",
        "summary": "getUsers",
        "tags": [
          "Accounting"
        ],
        "operationId": "getUsers",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Only records created or modified since this timestamp will be returned"
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by an any element"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order by an any element"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {}
          }
        }
      }
    },
    "/Users/{UserID}": {
      "get": {
        "description": "GET a User",
        "summary": "getUser",
        "tags": [
          "Accounting"
        ],
        "operationId": "getUser",
        "deprecated": false,
        "produces": [
          "text/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "UserID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "title": "Address",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/types"
      },
      "type": "object",
      "properties": {
        "AddressType": {
          "$ref": "#/definitions/AddressType"
        },
        "AddressLine1": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine2": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine3": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "AddressLine4": {
          "description": "max length = 500",
          "type": "string",
          "maxLength": 500
        },
        "City": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "Region": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        },
        "PostalCode": {
          "description": "max length = 50",
          "type": "string",
          "maxLength": 50
        },
        "Country": {
          "description": "max length = 50, [A-Z], [a-z] only",
          "type": "string",
          "maxLength": 50
        },
        "AttentionTo": {
          "description": "max length = 255",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Phone": {
      "title": "Phone",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/types"
      },
      "type": "object",
      "properties": {
        "PhoneType": {
          "$ref": "#/definitions/PhoneType"
        },
        "PhoneNumber": {
          "description": "max length = 50",
          "type": "string",
          "maxLength": 50
        },
        "PhoneAreaCode": {
          "description": "max length = 10",
          "type": "string",
          "maxLength": 10
        },
        "PhoneCountryCode": {
          "description": "max length = 20",
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "Accounts": {
      "title": "Accounts",
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "Account": {
      "title": "Account",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/accounts/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "description": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
          "type": "string",
          "maxLength": 10
        },
        "Name": {
          "description": "Name of account (max length = 150)",
          "type": "string",
          "maxLength": 150
        },
        "AccountID": {
          "description": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Type": {
          "$ref": "#/definitions/AccountType"
        },
        "BankAccountNumber": {
          "description": "For bank accounts only (Account Type BANK)",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "Description": {
          "description": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)",
          "type": "string"
        },
        "BankAccountType": {
          "$ref": "#/definitions/BankAccountType"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "TaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "EnablePaymentsToAccount": {
          "description": "Boolean – describes whether account can have payments applied to it",
          "type": "boolean"
        },
        "ShowInExpenseClaims": {
          "description": "Boolean – describes whether account code is available for use with expense claims",
          "type": "boolean"
        },
        "Class": {
          "$ref": "#/definitions/Class"
        },
        "SystemAccount": {
          "$ref": "#/definitions/SystemAccount"
        },
        "ReportingCode": {
          "description": "Shown if set",
          "type": "string"
        },
        "ReportingCodeName": {
          "description": "Shown if set",
          "type": "string"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an account has an attachment (read only)",
          "type": "boolean"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccountType": {
      "title": "AccountType",
      "description": "See Account Types",
      "type": "string",
      "enum": [
        "BANK",
        "CURRENT",
        "CURRLIAB",
        "DEPRECIATN",
        "DIRECTCOSTS",
        "EQUITY",
        "EXPENSE",
        "FIXED",
        "INVENTORY",
        "LIABILITY",
        "NONCURRENT",
        "OTHERINCOME",
        "OVERHEADS",
        "PREPAYMENT",
        "REVENUE",
        "SALES",
        "TERMLIAB",
        "PAYGLIABILITY",
        "PAYG",
        "SUPERANNUATIONEXPENSE",
        "SUPERANNUATIONLIABILITY",
        "WAGESEXPENSE"
      ]
    },
    "Attachments": {
      "title": "Attachments",
      "type": "object",
      "properties": {
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "Attachment": {
      "title": "Attachment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/attachments/"
      },
      "type": "object",
      "properties": {
        "AttachmentID": {
          "description": "Unique ID for the file",
          "type": "string",
          "format": "uuid"
        },
        "FileName": {
          "description": "Name of the file",
          "type": "string"
        },
        "Url": {
          "description": "URL to the file on xero.com",
          "type": "string"
        },
        "MimeType": {
          "description": "Type of file",
          "type": "string"
        },
        "ContentLength": {
          "description": "Length of the file content",
          "type": "number",
          "format": "double"
        },
        "IncludeOnline": {
          "description": "Include the file with the online invoice",
          "type": "boolean"
        }
      }
    },
    "BankTransactions": {
      "title": "BankTransactions",
      "type": "object",
      "properties": {
        "BankTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankTransaction"
          }
        }
      }
    },
    "BankTransaction": {
      "title": "BankTransaction",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/banktransactions/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Lineitems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "BankAccount": {
          "$ref": "#/definitions/Account"
        },
        "IsReconciled": {
          "description": "Boolean to show if transaction is reconciled",
          "type": "boolean"
        },
        "Date": {
          "description": "Date of transaction – YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "Reference": {
          "description": "Reference for the transaction. Only supported for SPEND and RECEIVE transactions.",
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CurrencyRate": {
          "description": "Exchange rate to base currency when money is spent or received. e.g.0.7500 Only used for bank transactions in non base currency. If this isn’t specified for non base currency accounts then either the user-defined rate (preference) or the XE.com day rate will be used. Setting currency is only supported on overpayments.",
          "type": "number",
          "format": "double"
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to App Name”",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status4"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "SubTotal": {
          "description": "Total of bank transaction excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on bank transaction",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of bank transaction tax inclusive",
          "type": "number",
          "format": "double"
        },
        "BankTransactionID": {
          "description": "Xero generated unique identifier for bank transaction",
          "type": "string",
          "format": "uuid"
        },
        "PrepaymentID": {
          "description": "Xero generated unique identifier for a Prepayment. This will be returned on BankTransactions with a Type of SPEND-PREPAYMENT or RECEIVE-PREPAYMENT",
          "type": "string",
          "format": "uuid"
        },
        "OverpaymentID": {
          "description": "Xero generated unique identifier for an Overpayment. This will be returned on BankTransactions with a Type of SPEND-OVERPAYMENT or RECEIVE-OVERPAYMENT",
          "type": "string",
          "format": "uuid"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a bank transaction has an attachment",
          "type": "boolean"
        }
      },
      "required": [
        "Type",
        "Contact",
        "Lineitems",
        "BankAccount"
      ]
    },
    "LineAmountTypes": {
      "title": "LineAmountTypes",
      "description": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
      "type": "string",
      "enum": [
        "Exclusive",
        "Inclusive",
        "NoTax"
      ]
    },
    "LineItem": {
      "title": "LineItem",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/invoices#post"
      },
      "type": "object",
      "properties": {
        "LineItemID": {
          "description": "LineItem unique ID",
          "type": "string",
          "format": "uuid"
        },
        "Description": {
          "description": "Description needs to be at least 1 char long. A line item with just a description (i.e no unit amount or quantity) can be created by specifying just a <Description> element that contains at least 1 character",
          "type": "string"
        },
        "Quantity": {
          "description": "LineItem Quantity",
          "type": "number",
          "format": "double"
        },
        "UnitAmount": {
          "description": "LineItem Unit Amount",
          "type": "number",
          "format": "double"
        },
        "ItemCode": {
          "description": "See Items",
          "type": "string"
        },
        "AccountCode": {
          "description": "See Accounts",
          "type": "string"
        },
        "TaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "TaxAmount": {
          "description": "The tax amount is auto calculated as a percentage of the line amount (see below) based on the tax rate. This value can be overriden if the calculated <TaxAmount> is not correct.",
          "type": "number",
          "format": "double"
        },
        "LineAmount": {
          "description": "If you wish to omit either of the <Quantity> or <UnitAmount> you can provide a LineAmount and Xero will calculate the missing amount for you. The line amount reflects the discounted price if a DiscountRate has been used . i.e LineAmount = Quantity * Unit Amount * ((100 – DiscountRate)/100)",
          "type": "number",
          "format": "double"
        },
        "Tracking": {
          "description": "Optional Tracking Category – see Tracking.  Any LineItem can have a  maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemTracking"
          }
        },
        "DiscountRate": {
          "description": "Percentage discount being applied to a line item (only supported on  ACCREC invoices – ACC PAY invoices and credit notes in Xero do not support discounts",
          "type": "string"
        },
        "RepeatingInvoiceID": {
          "description": "The Xero identifier for a Repeating Invoicee.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "LineItemTracking": {
      "title": "LineItemTracking",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/invoices#post"
      },
      "type": "object",
      "properties": {
        "TrackingCategoryID": {
          "description": "The Xero identifier for a tracking category",
          "example": "297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking category",
          "example": "Region",
          "type": "string",
          "maxLength": 100
        },
        "Option": {
          "description": "See Tracking Options",
          "example": "North",
          "type": "string"
        }
      }
    },
    "BankTransfers": {
      "title": "BankTransfers",
      "type": "object",
      "properties": {
        "BankTransfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankTransfer"
          }
        }
      }
    },
    "BankTransfer": {
      "title": "BankTransfer",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/bank-transfers/"
      },
      "type": "object",
      "properties": {
        "FromBankAccount": {
          "$ref": "#/definitions/Account"
        },
        "ToBankAccount": {
          "$ref": "#/definitions/Account"
        },
        "Amount": {
          "description": "amount of the transaction",
          "type": "string"
        },
        "Date": {
          "description": "The date of the Transfer YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "BankTransferID": {
          "description": "The identifier of the Bank Transfer",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate",
          "type": "number",
          "format": "double"
        },
        "FromBankTransactionID": {
          "description": "The Bank Transaction ID for the source account",
          "type": "string",
          "format": "uuid"
        },
        "ToBankTransactionID": {
          "description": "The Bank Transaction ID for the destination account",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a Bank Transfer has an attachment",
          "type": "boolean"
        },
        "CreatedDateUTC": {
          "description": "UTC timestamp of creation date of bank transfer",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "FromBankAccount",
        "ToBankAccount",
        "Amount"
      ]
    },
    "BatchPayments": {
      "title": "BatchPayments",
      "type": "object",
      "properties": {
        "BatchPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchPayment"
          }
        }
      }
    },
    "BatchPayment": {
      "title": "BatchPayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/BatchPayments/"
      },
      "type": "object",
      "properties": {
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "Reference": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 12
        },
        "Particulars": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 12
        },
        "Code": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "type": "string",
          "maxLength": 12
        },
        "Details": {
          "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18",
          "type": "string",
          "maxLength": 18
        },
        "Narrative": {
          "description": "(UK Only) Only shows on the statement line in Xero. Max length =18",
          "type": "string",
          "maxLength": 18
        },
        "BatchPaymentID": {
          "description": "The Xero generated unique identifier for the bank transaction (read-only)",
          "type": "string",
          "format": "uuid"
        },
        "DateString": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string"
        },
        "Date": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string",
          "format": "date"
        },
        "Amount": {
          "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
          "type": "number",
          "format": "double"
        },
        "Payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "Type": {
          "description": "PAYBATCH for bill payments or RECBATCH for sales invoice payments (read-only)",
          "type": "string"
        },
        "Status": {
          "description": "AUTHORISED or DELETED (read-only). New batch payments will have a status of AUTHORISED. It is not possible to delete batch payments via the API.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "The total of the payments that make up the batch (read-only)",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the payment",
          "type": "string",
          "format": "date-time"
        },
        "IsReconciled": {
          "description": "Booelan that tells you if the batch payment has been reconciled (read-only)",
          "type": "string"
        }
      }
    },
    "BatchPaymentDetails": {
      "title": "BatchPaymentDetails",
      "description": "Bank details for use on a batch payment stored with each contact",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/Contact/"
      },
      "type": "object",
      "properties": {
        "BankAccountNumber": {
          "description": "Bank account number for use with Batch Payments",
          "example": "123-456-1111111",
          "type": "string"
        },
        "BankAccountName": {
          "description": "Name of bank for use with Batch Payments",
          "example": "ACME Bank",
          "type": "string"
        },
        "Details": {
          "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18",
          "example": "Hello World",
          "type": "string",
          "maxLength": 18
        },
        "Code": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "example": "ABC",
          "type": "string",
          "maxLength": 12
        },
        "Reference": {
          "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
          "example": "Foobar",
          "type": "string",
          "maxLength": 12
        }
      }
    },
    "BrandingThemes": {
      "title": "BrandingThemes",
      "type": "object",
      "properties": {
        "BrandingThemes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandingTheme"
          }
        }
      }
    },
    "BrandingTheme": {
      "title": "BrandingTheme",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/branding-themes/"
      },
      "type": "object",
      "properties": {
        "BrandingThemeID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "Name of branding theme",
          "type": "string"
        },
        "SortOrder": {
          "description": "Integer – ranked order of branding theme. The default branding theme has a value of 0",
          "type": "integer",
          "format": "int32"
        },
        "CreatedDateUTC": {
          "description": "UTC timestamp of creation date of branding theme",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaymentServices": {
      "title": "PaymentServices",
      "type": "object",
      "properties": {
        "PaymentServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentService"
          }
        }
      }
    },
    "PaymentService": {
      "title": "PaymentService",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/branding-themes/"
      },
      "type": "object",
      "properties": {
        "PaymentServiceID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "PaymentServiceName": {
          "description": "Name of payment service",
          "type": "string"
        },
        "PaymentServiceUrl": {
          "description": "The custom payment URL",
          "type": "string"
        },
        "PayNowText": {
          "description": "The text displayed on the Pay Now button in Xero Online Invoicing. If this is not set it will default to Pay by credit card",
          "type": "string"
        },
        "PaymentServiceType": {
          "description": "This will always be CUSTOM for payment services created via the API.",
          "type": "string"
        }
      }
    },
    "Contacts": {
      "title": "Contacts",
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "Contact": {
      "title": "Contact",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "ContactID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "ContactNumber": {
          "description": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero.",
          "type": "string",
          "maxLength": 50
        },
        "AccountNumber": {
          "description": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "ContactStatus": {
          "$ref": "#/definitions/ContactStatus"
        },
        "Name": {
          "description": "Full name of contact/organisation (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "FirstName": {
          "description": "First name of contact person (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "LastName": {
          "description": "Last name of contact person (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "EmailAddress": {
          "description": "Email address of contact person (umlauts not supported) (max length  = 255)",
          "type": "string",
          "maxLength": 255
        },
        "SkypeUserName": {
          "description": "Skype user name of contact",
          "type": "string"
        },
        "ContactPersons": {
          "description": "See contact persons",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPerson"
          }
        },
        "BankAccountDetails": {
          "description": "Bank account number of contact",
          "type": "string"
        },
        "TaxNumber": {
          "description": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "AccountsReceivableTaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "AccountsPayableTaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "Addresses": {
          "description": "Store certain address types for a contact – see address types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "Phones": {
          "description": "Store certain phone types for a contact – see phone types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Phone"
          }
        },
        "IsSupplier": {
          "description": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact.",
          "type": "boolean"
        },
        "IsCustomer": {
          "description": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact.",
          "type": "boolean"
        },
        "DefaultCurrency": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "XeroNetworkKey": {
          "description": "Store XeroNetworkKey for contacts.",
          "type": "string"
        },
        "SalesDefaultAccountCode": {
          "description": "The default sales account code for contacts",
          "type": "string"
        },
        "PurchasesDefaultAccountCode": {
          "description": "The default purchases account code for contacts",
          "type": "string"
        },
        "SalesTrackingCategories": {
          "description": "The default sales tracking categories for contacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        },
        "PurchasesTrackingCategories": {
          "description": "The default purchases tracking categories for contacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        },
        "TrackingCategoryName": {
          "description": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories",
          "type": "string"
        },
        "TrackingCategoryOption": {
          "description": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories",
          "type": "string"
        },
        "PaymentTerms": {
          "$ref": "#/definitions/PaymentTerm"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to contact",
          "type": "string",
          "format": "date-time"
        },
        "ContactGroups": {
          "description": "Displays which contact groups a contact is included in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroup"
          }
        },
        "Website": {
          "description": "Website address for contact (read only)",
          "type": "string"
        },
        "BrandingTheme": {
          "$ref": "#/definitions/BrandingTheme"
        },
        "BatchPayments": {
          "$ref": "#/definitions/BatchPaymentDetails"
        },
        "Discount": {
          "description": "The default discount rate for the contact (read only)",
          "type": "number",
          "format": "double"
        },
        "Balances": {
          "$ref": "#/definitions/Balances"
        },
        "HasAttachments": {
          "description": "A boolean to indicate if a contact has an attachment",
          "type": "boolean"
        },
        "ValidationErrors": {
          "description": "Displays validation errors returned from the API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "Balances": {
      "title": "Balances",
      "description": "The raw AccountsReceivable(sales invoices) and AccountsPayable(bills) outstanding and overdue amounts, not converted to base currency (read only)",
      "type": "object",
      "properties": {
        "AccountsReceivable": {
          "$ref": "#/definitions/AccountsReceivable"
        },
        "AccountsPayable": {
          "$ref": "#/definitions/AccountsPayable"
        }
      }
    },
    "AccountsReceivable": {
      "title": "AccountsReceivable",
      "type": "object",
      "properties": {
        "Outstanding": {
          "type": "string"
        },
        "Overdue": {
          "type": "string"
        }
      }
    },
    "AccountsPayable": {
      "title": "AccountsPayable",
      "type": "object",
      "properties": {
        "Outstanding": {
          "type": "string"
        },
        "Overdue": {
          "type": "string"
        }
      }
    },
    "CISSettings": {
      "title": "CISSettings",
      "type": "object",
      "properties": {
        "CISSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CISSetting"
          }
        }
      }
    },
    "CISSetting": {
      "title": "CISSetting",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "CISEnabled": {
          "description": "Boolean that describes if the contact is a CIS Subcontractor",
          "type": "boolean"
        },
        "Rate": {
          "description": "CIS Deduction rate for the contact if he is a subcontractor. If the contact is not CISEnabled, then the rate is not returned",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContactPerson": {
      "title": "ContactPerson",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contacts/"
      },
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "First name of person",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of person",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Email address of person",
          "type": "string"
        },
        "IncludeInEmails": {
          "description": "boolean to indicate whether contact should be included on emails with invoices etc.",
          "type": "boolean"
        }
      }
    },
    "ContactGroups": {
      "title": "ContactGroups",
      "type": "object",
      "properties": {
        "ContactGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroup"
          }
        }
      }
    },
    "ContactGroup": {
      "title": "ContactGroup",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contactgroups/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "The Name of the contact group. Required when creating a new contact  group",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status3"
        },
        "ContactGroupID": {
          "description": "The Xero identifier for an contact group – specified as a string following the endpoint name. e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Contacts": {
          "description": "The ContactID and Name of Contacts in a contact group. Returned on GETs when the ContactGroupID is supplied in the URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    },
    "Response204": {
      "title": "Response204",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/contact-group/"
      },
      "type": "object",
      "properties": {
        "Status": {
          "description": "Status response for 204 no content",
          "type": "string"
        }
      }
    },
    "RequestEmpty": {
      "title": "RequestEmpty",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoice/"
      },
      "type": "object",
      "properties": {
        "Status": {
          "description": "Need at least one field to create an empty JSON payload",
          "type": "string"
        }
      }
    },
    "CreditNotes": {
      "title": "CreditNotes",
      "type": "object",
      "properties": {
        "CreditNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditNote"
          }
        }
      }
    },
    "CreditNote": {
      "title": "CreditNote",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/credit-notes/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type4"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the credit note is issued YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
          "type": "string",
          "format": "date"
        },
        "Status": {
          "$ref": "#/definitions/Status8"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Invoice Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the credit note excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the credit note",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the Credit Note(subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the credit note",
          "type": "string",
          "format": "date-time"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "FullyPaidOnDate": {
          "description": "Date when credit note was fully paid(UTC format)",
          "type": "string",
          "format": "date"
        },
        "CreditNoteID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CreditNoteNumber": {
          "description": "ACCRECCREDIT – Unique alpha numeric code identifying credit note (when missing will auto-generate from your Organisation Invoice Settings)",
          "type": "string"
        },
        "Reference": {
          "description": "ACCRECCREDIT only – additional reference number",
          "type": "string"
        },
        "SentToContact": {
          "description": "boolean to indicate if a credit note has been sent to a contact via  the Xero app (currently read only)",
          "type": "boolean"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the Credit Note",
          "type": "number",
          "format": "double"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a credit note has an attachment",
          "type": "boolean"
        }
      }
    },
    "Allocations": {
      "title": "Allocations",
      "type": "object",
      "properties": {
        "Allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        }
      }
    },
    "Allocation": {
      "title": "Allocation",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/prepayments/"
      },
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/Invoice"
        },
        "Amount": {
          "description": "the amount being applied to the invoice",
          "type": "number",
          "format": "double"
        },
        "Date": {
          "description": "the date the allocation is applied YYYY-MM-DD.",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "Invoice",
        "Amount",
        "Date"
      ]
    },
    "Currencies": {
      "title": "Currencies",
      "type": "object",
      "properties": {
        "Currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          }
        }
      }
    },
    "Currency": {
      "title": "Currency",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/currencies/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Description": {
          "description": "Name of Currency",
          "type": "string"
        }
      }
    },
    "CurrencyCode": {
      "title": "CurrencyCode",
      "description": "3 letter alpha code for the currency – see list of currency codes",
      "type": "string",
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYN",
        "BZD",
        "CAD",
        "CDF",
        "CHF",
        "CLP",
        "CNY",
        "COP",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GGP",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "IMP",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JEP",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRU",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SPL",
        "SRD",
        "STN",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TVD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XCD",
        "XDR",
        "XOF",
        "XPF",
        "YER",
        "ZAR",
        "ZMW",
        "ZWD"
      ]
    },
    "Employees": {
      "title": "Employees",
      "type": "object",
      "properties": {
        "Employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        }
      }
    },
    "Employee": {
      "title": "Employee",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/employees/"
      },
      "type": "object",
      "properties": {
        "EmployeeID": {
          "description": "The Xero identifier for an employee e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status10"
        },
        "FirstName": {
          "description": "First name of an employee (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "LastName": {
          "description": "Last name of an employee (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "ExternalLink": {
          "$ref": "#/definitions/ExternalLink"
        },
        "UpdatedDateUTC": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExpenseClaims": {
      "title": "ExpenseClaims",
      "type": "object",
      "properties": {
        "ExpenseClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpenseClaim"
          }
        }
      }
    },
    "ExpenseClaim": {
      "title": "ExpenseClaim",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/expense-claims/"
      },
      "type": "object",
      "properties": {
        "ExpenseClaimID": {
          "description": "Xero generated unique identifier for an expense claim",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status11"
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "Receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receipt"
          }
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "Total": {
          "description": "The total of an expense claim being paid",
          "type": "number",
          "format": "double"
        },
        "AmountDue": {
          "description": "The amount due to be paid for an expense claim",
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "description": "The amount still to pay for an expense claim",
          "type": "number",
          "format": "double"
        },
        "PaymentDueDate": {
          "description": "The date when the expense claim is due to be paid YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "ReportingDate": {
          "description": "The date the expense claim will be reported in Xero YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "ReceiptID": {
          "description": "The Xero identifier for the Receipt e.g.  e59a2c7f-1306-4078-a0f3-73537afcbba9",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "HistoryRecords": {
      "title": "HistoryRecords",
      "type": "object",
      "properties": {
        "HistoryRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryRecord"
          }
        }
      }
    },
    "HistoryRecord": {
      "title": "HistoryRecord",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/history-and-notes"
      },
      "type": "object",
      "properties": {
        "Details": {
          "description": "details",
          "type": "string"
        },
        "Changes": {
          "description": "Name of branding theme",
          "type": "string"
        },
        "User": {
          "description": "has a value of 0",
          "type": "string"
        },
        "DateUTC": {
          "description": "UTC timestamp of creation date of branding theme",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Invoices": {
      "title": "Invoices",
      "type": "object",
      "properties": {
        "Invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        }
      }
    },
    "Invoice": {
      "title": "Invoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoices/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type1"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "Date": {
          "description": "Date invoice was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation",
          "type": "string",
          "format": "date"
        },
        "DueDate": {
          "description": "Date invoice is due – YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "InvoiceNumber": {
          "description": "ACCREC – Unique alpha numeric code identifying invoice (when missing will auto-generate from your Organisation Invoice Settings) (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "Reference": {
          "description": "ACCREC only – additional reference number (max length = 255)",
          "type": "string",
          "maxLength": 255
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app",
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used. (max length = [18].[6])",
          "type": "number",
          "format": "double"
        },
        "Status": {
          "$ref": "#/definitions/Status5"
        },
        "SentToContact": {
          "description": "Boolean to set whether the invoice in the Xero app should be marked as “sent”. This can be set only on invoices that have been approved",
          "type": "boolean"
        },
        "ExpectedPaymentDate": {
          "description": "Shown on sales invoices (Accounts Receivable) when this has been set",
          "type": "string",
          "format": "date"
        },
        "PlannedPaymentDate": {
          "description": "Shown on bills (Accounts Payable) when this has been set",
          "type": "string",
          "format": "date"
        },
        "SubTotal": {
          "description": "Total of invoice excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on invoice",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts",
          "type": "number",
          "format": "double"
        },
        "TotalDiscount": {
          "description": "Total of discounts applied on the invoice line items",
          "type": "number",
          "format": "double"
        },
        "InvoiceID": {
          "description": "Xero generated unique identifier for invoice",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an invoice has an attachment",
          "type": "boolean"
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "Prepayments": {
          "description": "See Prepayments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prepayment"
          }
        },
        "Overpayments": {
          "description": "See Overpayments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Overpayment"
          }
        },
        "AmountDue": {
          "description": "Amount remaining to be paid on invoice",
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "description": "Sum of payments received for invoice",
          "type": "number",
          "format": "double"
        },
        "FullyPaidOnDate": {
          "description": "The date the invoice was fully paid. Only returned on fully paid invoices",
          "type": "string",
          "format": "date"
        },
        "AmountCredited": {
          "description": "Sum of all credit notes, over-payments and pre-payments applied to invoice",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "CreditNotes": {
          "description": "Details of credit notes that have been applied to an invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditNote"
          }
        }
      },
      "required": [
        "Type",
        "Contact",
        "LineItems"
      ]
    },
    "OnlineInvoices": {
      "title": "OnlineInvoices",
      "type": "object",
      "properties": {
        "OnlineInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineInvoice"
          }
        }
      }
    },
    "OnlineInvoice": {
      "title": "OnlineInvoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoices/"
      },
      "type": "object",
      "properties": {
        "OnlineInvoiceUrl": {
          "description": "the URL to an online invoice",
          "type": "string"
        }
      }
    },
    "InvoiceReminders": {
      "title": "InvoiceReminders",
      "type": "object",
      "properties": {
        "InvoiceReminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceReminder"
          }
        }
      }
    },
    "InvoiceReminder": {
      "title": "InvoiceReminder",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/invoice-reminders/"
      },
      "type": "object",
      "properties": {
        "Enabled": {
          "description": "setting for on or off",
          "type": "boolean"
        }
      }
    },
    "Items": {
      "title": "Items",
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "Item": {
      "title": "Item",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/items/"
      },
      "type": "object",
      "properties": {
        "Code": {
          "description": "User defined item code (max length = 30)",
          "type": "string",
          "maxLength": 30
        },
        "InventoryAssetAccountCode": {
          "description": "The inventory asset account for the item. The account must be of type INVENTORY. The  COGSAccountCode in PurchaseDetails is also required to create a tracked item",
          "type": "string"
        },
        "Name": {
          "description": "The name of the item (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "IsSold": {
          "description": "Boolean value, defaults to true. When IsSold is true the item will be available on sales transactions in the Xero UI. If IsSold is updated to false then Description and SalesDetails values will be nulled.",
          "type": "boolean"
        },
        "IsPurchased": {
          "description": "Boolean value, defaults to true. When IsPurchased is true the item is available for purchase transactions in the Xero UI. If IsPurchased is updated to false then PurchaseDescription and PurchaseDetails values will be nulled.",
          "type": "boolean"
        },
        "Description": {
          "description": "The sales description of the item (max length = 4000)",
          "type": "string",
          "maxLength": 4000
        },
        "PurchaseDescription": {
          "description": "The purchase description of the item (max length = 4000)",
          "type": "string",
          "maxLength": 4000
        },
        "PurchaseDetails": {
          "$ref": "#/definitions/Purchase"
        },
        "SalesDetails": {
          "$ref": "#/definitions/Purchase"
        },
        "IsTrackedAsInventory": {
          "description": "True for items that are tracked as inventory. An item will be tracked as inventory if the InventoryAssetAccountCode and COGSAccountCode are set.",
          "type": "boolean"
        },
        "TotalCostPool": {
          "description": "The value of the item on hand. Calculated using average cost accounting.",
          "type": "number",
          "format": "double"
        },
        "QuantityOnHand": {
          "description": "The quantity of the item on hand",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date in UTC format",
          "type": "string",
          "format": "date-time"
        },
        "ItemID": {
          "description": "The Xero identifier for an Item",
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "Code",
        "InventoryAssetAccountCode"
      ]
    },
    "Purchase": {
      "title": "Purchase",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/items/"
      },
      "type": "object",
      "properties": {
        "UnitPrice": {
          "description": "Unit Price of the item. By default UnitPrice is rounded to two decimal places. You can use 4 decimal places by adding the unitdp=4 querystring parameter to your request.",
          "type": "number",
          "format": "double"
        },
        "AccountCode": {
          "description": "Default account code to be used for purchased/sale. Not applicable to the purchase details of tracked items",
          "type": "string"
        },
        "COGSAccountCode": {
          "description": "Cost of goods sold account. Only applicable to the purchase details of tracked items.",
          "type": "string"
        },
        "TaxType": {
          "$ref": "#/definitions/TaxType"
        }
      }
    },
    "Journals": {
      "title": "Journals",
      "type": "object",
      "properties": {
        "Journals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Journal"
          }
        }
      }
    },
    "Journal": {
      "title": "Journal",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/journals/"
      },
      "type": "object",
      "properties": {
        "JournalID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "JournalDate": {
          "description": "Date the journal was posted",
          "type": "string",
          "format": "date"
        },
        "JournalNumber": {
          "description": "Xero generated journal number",
          "type": "string"
        },
        "CreatedDateUTC": {
          "description": "Created date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "Reference": {
          "description": "reference field for additional indetifying information",
          "type": "string"
        },
        "SourceID": {
          "description": "The identifier for the source transaction (e.g. InvoiceID)",
          "type": "string",
          "format": "uuid"
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType"
        },
        "JournalLines": {
          "description": "See JournalLines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalLine"
          }
        }
      }
    },
    "JournalLine": {
      "title": "JournalLine",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/journals#JournalLines"
      },
      "type": "object",
      "properties": {
        "JournalLineID": {
          "description": "Xero identifier for Journal",
          "example": "7be9db36-3598-4755-ba5c-c2dbc8c4a7a2",
          "type": "string",
          "format": "uuid"
        },
        "AccountID": {
          "description": "See Accounts",
          "example": "ceef66a5-a545-413b-9312-78a53caadbc4",
          "type": "string",
          "format": "uuid"
        },
        "AccountCode": {
          "description": "See Accounts",
          "example": "90",
          "type": "string"
        },
        "AccountType": {
          "$ref": "#/definitions/AccountType"
        },
        "AccountName": {
          "description": "See AccountCodes",
          "example": "Checking Account",
          "type": "string"
        },
        "Description": {
          "description": "The description from the source transaction line item. Only returned if populated.",
          "example": "My business checking account",
          "type": "string"
        },
        "NetAmount": {
          "description": "Net amount of journal line. This will be a positive value for a debit and negative for a credit",
          "example": 4130.98,
          "type": "number",
          "format": "double"
        },
        "GrossAmount": {
          "description": "Gross amount of journal line (NetAmount + TaxAmount).",
          "example": 4130.98,
          "type": "number",
          "format": "double"
        },
        "TaxAmount": {
          "description": "Total tax on a journal line",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "TaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "TaxName": {
          "description": "see TaxRates",
          "example": "Tax Exempt",
          "type": "string"
        },
        "TrackingCategories": {
          "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        }
      }
    },
    "LinkedTransactions": {
      "title": "LinkedTransactions",
      "type": "object",
      "properties": {
        "LinkedTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedTransaction"
          }
        }
      }
    },
    "LinkedTransaction": {
      "title": "LinkedTransaction",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/linked-transactions/"
      },
      "type": "object",
      "properties": {
        "SourceTransactionID": {
          "description": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice",
          "type": "string",
          "format": "uuid"
        },
        "SourceLineItemID": {
          "description": "The line item identifier from the source transaction.",
          "type": "string",
          "format": "uuid"
        },
        "ContactID": {
          "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
          "type": "string",
          "format": "uuid"
        },
        "TargetTransactionID": {
          "description": "Filter by the TargetTransactionID. Get all the linked transactions  allocated to a particular ACCREC invoice",
          "type": "string",
          "format": "uuid"
        },
        "TargetLineItemID": {
          "description": "The line item identifier from the target transaction. It is possible  to link multiple billable expenses to the same TargetLineItemID.",
          "type": "string",
          "format": "uuid"
        },
        "LinkedTransactionID": {
          "description": "The Xero identifier for an Linked Transaction e.g. /LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status13"
        },
        "Type": {
          "$ref": "#/definitions/Type5"
        },
        "UpdatedDateUTC": {
          "description": "The last modified date in UTC format",
          "type": "string",
          "format": "date-time"
        },
        "SourceTransactionTypeCode": {
          "$ref": "#/definitions/SourceTransactionTypeCode"
        }
      },
      "required": [
        "SourceLineItemID"
      ]
    },
    "ManualJournals": {
      "title": "ManualJournals",
      "type": "object",
      "properties": {
        "ManualJournals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManualJournal"
          }
        }
      }
    },
    "ManualJournal": {
      "title": "ManualJournal",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/manual-journals/"
      },
      "type": "object",
      "properties": {
        "Narration": {
          "description": "Description of journal being posted",
          "type": "string"
        },
        "JournalLines": {
          "description": "See JournalLines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManualJournalLine"
          }
        },
        "Date": {
          "description": "Date journal was posted – YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "Status": {
          "$ref": "#/definitions/Status14"
        },
        "Url": {
          "description": "Url link to a source document – shown as “Go to [appName]” in the Xero app",
          "type": "string"
        },
        "ShowOnCashBasisReports": {
          "description": "Boolean – default is true if not specified",
          "type": "boolean"
        },
        "HasAttachments": {
          "description": "Boolean to indicate if a manual journal has an attachment",
          "type": "boolean"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "ManualJournalID": {
          "description": "The Xero identifier for a Manual Journal",
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "Narration",
        "JournalLines"
      ]
    },
    "ManualJournalLine": {
      "title": "ManualJournalLine",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/manual-journals/"
      },
      "type": "object",
      "properties": {
        "LineAmount": {
          "description": "total for line. Debits are positive, credits are negative value",
          "example": -2569,
          "type": "number",
          "format": "double"
        },
        "AccountCode": {
          "description": "See Accounts",
          "example": "720",
          "type": "string"
        },
        "Description": {
          "description": "Description for journal line",
          "example": "Coded incorrectly Office Equipment should be Computer Equipment",
          "type": "string"
        },
        "TaxType": {
          "$ref": "#/definitions/TaxType"
        },
        "Tracking": {
          "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        },
        "TaxAmount": {
          "description": "The calculated tax amount based on the TaxType and LineAmount",
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "IsBlank": {
          "description": "is the line blank",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Organisations": {
      "title": "Organisations",
      "type": "object",
      "properties": {
        "Organisations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Organisation"
          }
        }
      }
    },
    "Organisation": {
      "title": "Organisation",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "OrganisationID": {
          "description": "Unique Xero identifier",
          "example": "8be9db36-3598-4755-ba5c-c2dbc8c4a7a2",
          "type": "string",
          "format": "uuid"
        },
        "APIKey": {
          "description": "Display a unique key used for Xero-to-Xero transactions",
          "type": "string"
        },
        "Name": {
          "description": "Display name of organisation shown in Xero",
          "type": "string"
        },
        "LegalName": {
          "description": "Organisation name shown on Reports",
          "type": "string"
        },
        "PaysTax": {
          "description": "Boolean to describe if organisation is registered with a local tax authority i.e. true, false",
          "type": "boolean"
        },
        "Version": {
          "$ref": "#/definitions/Version"
        },
        "OrganisationType": {
          "$ref": "#/definitions/OrganisationType"
        },
        "BaseCurrency": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CountryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "IsDemoCompany": {
          "description": "Boolean to describe if organisation is a demo company.",
          "type": "boolean"
        },
        "OrganisationStatus": {
          "description": "Will be set to ACTIVE if you can connect to organisation via the Xero API",
          "type": "string"
        },
        "RegistrationNumber": {
          "description": "Shows for New Zealand, Australian and UK organisations",
          "type": "string"
        },
        "TaxNumber": {
          "description": "Shown if set. Displays in the Xero UI as Tax File Number (AU), GST Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).",
          "type": "string"
        },
        "FinancialYearEndDay": {
          "description": "Calendar day e.g. 0-31",
          "type": "integer",
          "format": "int32"
        },
        "FinancialYearEndMonth": {
          "description": "Calendar Month e.g. 1-12",
          "type": "integer",
          "format": "int32"
        },
        "SalesTaxBasis": {
          "$ref": "#/definitions/SalesTaxBasis"
        },
        "SalesTaxPeriod": {
          "$ref": "#/definitions/SalesTaxPeriod"
        },
        "DefaultSalesTax": {
          "description": "The default for LineAmountTypes on sales transactions",
          "type": "string"
        },
        "DefaultPurchasesTax": {
          "description": "The default for LineAmountTypes on purchase transactions",
          "type": "string"
        },
        "PeriodLockDate": {
          "description": "Shown if set. See lock dates",
          "type": "string",
          "format": "date"
        },
        "EndOfYearLockDate": {
          "description": "Shown if set. See lock dates",
          "type": "string",
          "format": "date"
        },
        "CreatedDateUTC": {
          "description": "Timestamp when the organisation was created in Xero",
          "type": "string",
          "format": "date-time"
        },
        "Timezone": {
          "$ref": "#/definitions/TimeZone"
        },
        "OrganisationEntityType": {
          "$ref": "#/definitions/OrganisationEntityType"
        },
        "ShortCode": {
          "description": "A unique identifier for the organisation. Potential uses.",
          "type": "string"
        },
        "Class": {
          "$ref": "#/definitions/Class1"
        },
        "LineOfBusiness": {
          "description": "Description of business type as defined in Organisation settings",
          "type": "string"
        },
        "Addresses": {
          "description": "Address details for organisation – see Addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "Phones": {
          "description": "Phones details for organisation – see Phones",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Phone"
          }
        },
        "ExternalLinks": {
          "description": "Organisation profile links for popular services such as Facebook,Twitter, GooglePlus and LinkedIn. You can also add link to your website here. Shown if Organisation settings  is updated in Xero. See ExternalLinks below",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalLink"
          }
        },
        "PaymentTerms": {
          "$ref": "#/definitions/PaymentTerm"
        }
      }
    },
    "CountryCode": {
      "title": "CountryCode",
      "type": "string",
      "enum": [
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AN",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BR",
        "BS",
        "BT",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GQ",
        "GR",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NG",
        "NI",
        "NL",
        "false",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "XK",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ]
    },
    "TimeZone": {
      "title": "TimeZone",
      "description": "Timezone specifications",
      "type": "string",
      "enum": [
        "MOROCCOSTANDARDTIME",
        "UTC",
        "GMTSTANDARDTIME",
        "GREENWICHSTANDARDTIME",
        "WEUROPESTANDARDTIME",
        "CENTRALEUROPESTANDARDTIME",
        "ROMANCESTANDARDTIME",
        "CENTRALEUROPEANSTANDARDTIME",
        "WCENTRALAFRICASTANDARDTIME",
        "NAMIBIASTANDARDTIME",
        "JORDANSTANDARDTIME",
        "GTBSTANDARDTIME",
        "MIDDLEEASTSTANDARDTIME",
        "EGYPTSTANDARDTIME",
        "SYRIASTANDARDTIME",
        "EEUROPESTANDARDTIME",
        "SOUTHAFRICASTANDARDTIME",
        "FLESTANDARDTIME",
        "TURKEYSTANDARDTIME",
        "ISRAELSTANDARDTIME",
        "KALININGRADSTANDARDTIME",
        "LIBYASTANDARDTIME",
        "ARABICSTANDARDTIME",
        "ARABSTANDARDTIME",
        "BELARUSSTANDARDTIME",
        "RUSSIANSTANDARDTIME",
        "EAFRICASTANDARDTIME",
        "IRANSTANDARDTIME",
        "ARABIANSTANDARDTIME",
        "AZERBAIJANSTANDARDTIME",
        "RUSSIATIMEZONE3",
        "MAURITIUSSTANDARDTIME",
        "GEORGIANSTANDARDTIME",
        "CAUCASUSSTANDARDTIME",
        "AFGHANISTANSTANDARDTIME",
        "WESTASIASTANDARDTIME",
        "EKATERINBURGSTANDARDTIME",
        "PAKISTANSTANDARDTIME",
        "INDIASTANDARDTIME",
        "SRILANKASTANDARDTIME",
        "NEPALSTANDARDTIME",
        "CENTRALASIASTANDARDTIME",
        "BANGLADESHSTANDARDTIME",
        "NCENTRALASIASTANDARDTIME",
        "MYANMARSTANDARDTIME",
        "SEASIASTANDARDTIME",
        "NORTHASIASTANDARDTIME",
        "CHINASTANDARDTIME",
        "NORTHASIAEASTSTANDARDTIME",
        "SINGAPORESTANDARDTIME",
        "WAUSTRALIASTANDARDTIME",
        "TAIPEISTANDARDTIME",
        "ULAANBAATARSTANDARDTIME",
        "TOKYOSTANDARDTIME",
        "KOREASTANDARDTIME",
        "YAKUTSKSTANDARDTIME",
        "CENAUSTRALIASTANDARDTIME",
        "AUSCENTRALSTANDARDTIME",
        "EAUSTRALIASTANDARDTIME",
        "AUSEASTERNSTANDARDTIME",
        "WESTPACIFICSTANDARDTIME",
        "TASMANIASTANDARDTIME",
        "MAGADANSTANDARDTIME",
        "VLADIVOSTOKSTANDARDTIME",
        "RUSSIATIMEZONE10",
        "CENTRALPACIFICSTANDARDTIME",
        "RUSSIATIMEZONE11",
        "NEWZEALANDSTANDARDTIME",
        "UTC+12",
        "FIJISTANDARDTIME",
        "KAMCHATKASTANDARDTIME",
        "TONGASTANDARDTIME",
        "SAMOASTANDARDTIME",
        "LINEISLANDSSTANDARDTIME",
        "AZORESSTANDARDTIME",
        "CAPEVERDESTANDARDTIME",
        "UTC02",
        "MIDATLANTICSTANDARDTIME",
        "ESOUTHAMERICASTANDARDTIME",
        "ARGENTINASTANDARDTIME",
        "SAEASTERNSTANDARDTIME",
        "GREENLANDSTANDARDTIME",
        "MONTEVIDEOSTANDARDTIME",
        "BAHIASTANDARDTIME",
        "NEWFOUNDLANDSTANDARDTIME",
        "PARAGUAYSTANDARDTIME",
        "ATLANTICSTANDARDTIME",
        "CENTRALBRAZILIANSTANDARDTIME",
        "SAWESTERNSTANDARDTIME",
        "PACIFICSASTANDARDTIME",
        "VENEZUELASTANDARDTIME",
        "SAPACIFICSTANDARDTIME",
        "EASTERNSTANDARDTIME",
        "USEASTERNSTANDARDTIME",
        "CENTRALAMERICASTANDARDTIME",
        "CENTRALSTANDARDTIME",
        "CENTRALSTANDARDTIME(MEXICO)",
        "CANADACENTRALSTANDARDTIME",
        "USMOUNTAINSTANDARDTIME",
        "MOUNTAINSTANDARDTIME(MEXICO)",
        "MOUNTAINSTANDARDTIME",
        "PACIFICSTANDARDTIME(MEXICO)",
        "PACIFICSTANDARDTIME",
        "ALASKANSTANDARDTIME",
        "HAWAIIANSTANDARDTIME",
        "UTC11",
        "DATELINESTANDARDTIME"
      ]
    },
    "PaymentTerm": {
      "title": "PaymentTerm",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "Bills": {
          "$ref": "#/definitions/Bill"
        },
        "Sales": {
          "$ref": "#/definitions/Bill"
        }
      }
    },
    "PaymentTermType": {
      "title": "PaymentTermType",
      "type": "string",
      "enum": [
        "DAYSAFTERBILLDATE",
        "DAYSAFTERBILLMONTH",
        "OFCURRENTMONTH",
        "OFFOLLOWINGMONTH"
      ]
    },
    "ExternalLink": {
      "title": "ExternalLink",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "LinkType": {
          "$ref": "#/definitions/LinkType"
        },
        "Url": {
          "description": "URL for service e.g. http://twitter.com/xeroapi",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Bill": {
      "title": "Bill",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/organisation/"
      },
      "type": "object",
      "properties": {
        "Day": {
          "description": "Day of Month (0-31)",
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "$ref": "#/definitions/PaymentTermType"
        }
      }
    },
    "Overpayments": {
      "title": "Overpayments",
      "type": "object",
      "properties": {
        "Overpayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Overpayment"
          }
        }
      }
    },
    "Overpayment": {
      "title": "Overpayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/overpayments/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type3"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the overpayment is created YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "Status": {
          "$ref": "#/definitions/Status7"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Overpayment Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the overpayment excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the overpayment",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the overpayment (subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the overpayment",
          "type": "string",
          "format": "date-time"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "OverpaymentID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency overpayment. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the overpayment",
          "type": "string"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "Payments": {
          "description": "See Payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "HasAttachments": {
          "description": "boolean to indicate if a overpayment has an attachment",
          "type": "boolean"
        }
      }
    },
    "Payments": {
      "title": "Payments",
      "type": "object",
      "properties": {
        "Payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        }
      }
    },
    "Payment": {
      "title": "Payment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/payments/"
      },
      "type": "object",
      "properties": {
        "Invoice": {
          "$ref": "#/definitions/Invoice"
        },
        "CreditNote": {
          "$ref": "#/definitions/CreditNote"
        },
        "Prepayment": {
          "$ref": "#/definitions/Prepayment"
        },
        "Overpayment": {
          "$ref": "#/definitions/Overpayment"
        },
        "InvoiceNumber": {
          "description": "Number of invoice or credit note you are applying payment to e.g.INV-4003",
          "type": "string"
        },
        "CreditNoteNumber": {
          "description": "Number of invoice or credit note you are applying payment to e.g. INV-4003",
          "type": "string"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "Code": {
          "description": "Code of account you are using to make the payment e.g. 001 (note- not all accounts have a code value)",
          "type": "string"
        },
        "Date": {
          "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
          "type": "string",
          "format": "date"
        },
        "CurrencyRate": {
          "description": "Exchange rate when payment is received. Only used for non base currency invoices and credit notes e.g. 0.7500",
          "type": "number",
          "format": "double"
        },
        "Amount": {
          "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
          "type": "number",
          "format": "double"
        },
        "Reference": {
          "description": "An optional description for the payment e.g. Direct Debit",
          "type": "string"
        },
        "IsReconciled": {
          "description": "An optional parameter for the payment. A boolean indicating whether you would like the payment to be created as reconciled when using PUT, or whether a payment has been reconciled when using GET",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/Status9"
        },
        "PaymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the payment",
          "type": "string",
          "format": "date-time"
        },
        "PaymentID": {
          "description": "The Xero identifier for an Payment e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "BankAccountNumber": {
          "description": "The suppliers bank account number the payment is being made to",
          "type": "string"
        },
        "Particulars": {
          "description": "The suppliers bank account number the payment is being made to",
          "type": "string"
        },
        "Details": {
          "description": "The information to appear on the supplier's bank account",
          "type": "string"
        }
      }
    },
    "Prepayments": {
      "title": "Prepayments",
      "type": "object",
      "properties": {
        "Prepayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prepayment"
          }
        }
      }
    },
    "Prepayment": {
      "title": "Prepayment",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/prepayments/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type2"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Date": {
          "description": "The date the prepayment is created YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "Status": {
          "$ref": "#/definitions/Status6"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "LineItems": {
          "description": "See Prepayment Line Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "SubTotal": {
          "description": "The subtotal of the prepayment excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "The total tax on the prepayment",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "The total of the prepayment(subtotal + total tax)",
          "type": "number",
          "format": "double"
        },
        "UpdatedDateUTC": {
          "description": "UTC timestamp of last update to the prepayment",
          "type": "string",
          "format": "date-time"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "PrepaymentID": {
          "description": "Xero generated unique identifier",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency prepayment. If no rate is specified, the XE.com day rate is used",
          "type": "number",
          "format": "double"
        },
        "RemainingCredit": {
          "description": "The remaining credit balance on the prepayment",
          "type": "number",
          "format": "double"
        },
        "Allocations": {
          "description": "See Allocations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "HasAttachments": {
          "description": "boolean to indicate if a prepayment has an attachment",
          "type": "boolean"
        }
      }
    },
    "PurchaseOrders": {
      "title": "PurchaseOrders",
      "type": "object",
      "properties": {
        "PurchaseOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchaseOrder"
          }
        }
      }
    },
    "PurchaseOrder": {
      "title": "PurchaseOrder",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/purchase-orders/"
      },
      "type": "object",
      "properties": {
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "Date": {
          "description": "Date purchase order was issued – YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
          "type": "string",
          "format": "date"
        },
        "DeliveryDate": {
          "description": "Date the goods are to be delivered – YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "PurchaseOrderNumber": {
          "description": "Unique alpha numeric code identifying purchase order (when missing will auto-generate from your Organisation Invoice Settings)",
          "type": "string"
        },
        "Reference": {
          "description": "Additional reference number",
          "type": "string"
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Status": {
          "$ref": "#/definitions/Status15"
        },
        "SentToContact": {
          "description": "Boolean to set whether the purchase order should be marked as “sent”. This can be set only on purchase orders that have been approved or billed",
          "type": "boolean"
        },
        "DeliveryAddress": {
          "description": "The address the goods are to be delivered to",
          "type": "string"
        },
        "AttentionTo": {
          "description": "The person that the delivery is going to",
          "type": "string"
        },
        "Telephone": {
          "description": "The phone number for the person accepting the delivery",
          "type": "string"
        },
        "DeliveryInstructions": {
          "description": "A free text feild for instructions (500 characters max)",
          "type": "string"
        },
        "ExpectedArrivalDate": {
          "description": "The date the goods are expected to arrive.",
          "type": "string",
          "format": "date"
        },
        "PurchaseOrderID": {
          "description": "Xero generated unique identifier for purchase order",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyRate": {
          "description": "The currency rate for a multicurrency purchase order. As no rate can  be specified, the XE.com day rate is used.",
          "type": "number",
          "format": "double"
        },
        "SubTotal": {
          "description": "Total of purchase order excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on purchase order",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)",
          "type": "number",
          "format": "double"
        },
        "TotalDiscount": {
          "description": "Total of discounts applied on the purchase order line items",
          "type": "number",
          "format": "double"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a purchase order has an attachment",
          "type": "boolean"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "Contact",
        "LineItems"
      ]
    },
    "Receipts": {
      "title": "Receipts",
      "type": "object",
      "properties": {
        "Receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receipt"
          }
        }
      }
    },
    "Receipt": {
      "title": "Receipt",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/receipts/"
      },
      "type": "object",
      "properties": {
        "Date": {
          "description": "Date of receipt – YYYY-MM-DD",
          "type": "string",
          "format": "date"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Lineitems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "Reference": {
          "description": "Additional reference number",
          "type": "string"
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "SubTotal": {
          "description": "Total of receipt excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on receipt",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of receipt tax inclusive (i.e. SubTotal + TotalTax)",
          "type": "number",
          "format": "double"
        },
        "ReceiptID": {
          "description": "Xero generated unique identifier for receipt",
          "type": "string",
          "format": "uuid"
        },
        "Status": {
          "$ref": "#/definitions/Status12"
        },
        "ReceiptNumber": {
          "description": "Xero generated sequence number for receipt in current claim for a given user",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Last modified date UTC format",
          "type": "string",
          "format": "date-time"
        },
        "HasAttachments": {
          "description": "boolean to indicate if a receipt has an attachment",
          "type": "boolean"
        },
        "Url": {
          "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app",
          "type": "string"
        }
      },
      "required": [
        "Date",
        "Contact",
        "Lineitems",
        "User"
      ]
    },
    "RepeatingInvoices": {
      "title": "RepeatingInvoices",
      "type": "object",
      "properties": {
        "RepeatingInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepeatingInvoice"
          }
        }
      }
    },
    "RepeatingInvoice": {
      "title": "RepeatingInvoice",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
      },
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Type1"
        },
        "Contact": {
          "$ref": "#/definitions/Contact"
        },
        "Schedule": {
          "$ref": "#/definitions/Schedule"
        },
        "LineItems": {
          "description": "See LineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "LineAmountTypes": {
          "$ref": "#/definitions/LineAmountTypes"
        },
        "Reference": {
          "description": "ACCREC only – additional reference number",
          "type": "string"
        },
        "BrandingThemeID": {
          "description": "See BrandingThemes",
          "type": "string",
          "format": "uuid"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "Status": {
          "$ref": "#/definitions/Status16"
        },
        "SubTotal": {
          "description": "Total of invoice excluding taxes",
          "type": "number",
          "format": "double"
        },
        "TotalTax": {
          "description": "Total tax on invoice",
          "type": "number",
          "format": "double"
        },
        "Total": {
          "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)",
          "type": "number",
          "format": "double"
        },
        "RepeatingInvoiceID": {
          "description": "Xero generated unique identifier for repeating invoice template",
          "type": "string",
          "format": "uuid"
        },
        "ID": {
          "description": "Xero generated unique identifier for repeating invoice template",
          "type": "string",
          "format": "uuid"
        },
        "HasAttachments": {
          "description": "boolean to indicate if an invoice has an attachment",
          "type": "boolean"
        }
      }
    },
    "ReportWithRows": {
      "title": "ReportWithRows",
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportWithRow"
          }
        }
      }
    },
    "ReportWithRow": {
      "title": "ReportWithRow",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "ReportID": {
          "description": "Report id",
          "type": "string",
          "format": "uuid"
        },
        "ReportName": {
          "description": "Name of the report",
          "type": "string"
        },
        "ReportTitle": {
          "description": "Title of the report",
          "type": "string"
        },
        "ReportType": {
          "description": "The type of report (BalanceSheet,ProfitLoss, etc)",
          "type": "string"
        },
        "ReportTitles": {
          "description": "Report titles array (3 to 4 strings with the report name, orgnisation name and time frame of report)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReportDate": {
          "description": "Date of report",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Updated Date",
          "type": "string",
          "format": "date-time"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRows"
          }
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportFields"
          }
        }
      }
    },
    "ReportRows": {
      "title": "ReportRows",
      "type": "object",
      "properties": {
        "RowType": {
          "$ref": "#/definitions/RowType"
        },
        "Title": {
          "type": "string"
        },
        "Cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCell"
          }
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRow"
          }
        }
      }
    },
    "RowType": {
      "title": "RowType",
      "type": "string",
      "enum": [
        "Header",
        "Section",
        "Row",
        "SummaryRow"
      ]
    },
    "ReportRow": {
      "title": "ReportRow",
      "type": "object",
      "properties": {
        "RowType": {
          "$ref": "#/definitions/RowType"
        },
        "Title": {
          "type": "string"
        },
        "Cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportCell"
          }
        }
      }
    },
    "ReportCell": {
      "title": "ReportCell",
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        },
        "Attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportAttribute"
          }
        }
      }
    },
    "ReportAttribute": {
      "title": "ReportAttribute",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "ReportFields": {
      "title": "ReportFields",
      "type": "object",
      "properties": {
        "FieldID": {
          "type": "string",
          "format": "uuid"
        },
        "Description": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "Reports": {
      "title": "Reports",
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report"
          }
        }
      }
    },
    "Report": {
      "title": "Report",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/reports/"
      },
      "type": "object",
      "properties": {
        "ReportID": {
          "description": "See Prepayment Types",
          "type": "string",
          "format": "uuid"
        },
        "ReportName": {
          "description": "See Prepayment Types",
          "type": "string"
        },
        "ReportType": {
          "$ref": "#/definitions/ReportType"
        },
        "ReportTitle": {
          "description": "See Prepayment Types",
          "type": "string"
        },
        "ReportDate": {
          "description": "Date of report",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Updated Date",
          "type": "string",
          "format": "date-time"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenNinteyNineContact"
          }
        }
      }
    },
    "TenNinteyNineContact": {
      "title": "TenNinteyNineContact",
      "type": "object",
      "properties": {
        "Box1": {
          "description": "Box 1 on 1099 Form",
          "type": "string"
        },
        "Box2": {
          "description": "Box 2 on 1099 Form",
          "type": "string"
        },
        "Box3": {
          "description": "Box 3 on 1099 Form",
          "type": "string"
        },
        "Box4": {
          "description": "Box 4 on 1099 Form",
          "type": "string"
        },
        "Box5": {
          "description": "Box 5 on 1099 Form",
          "type": "string"
        },
        "Box6": {
          "description": "Box 6 on 1099 Form",
          "type": "string"
        },
        "Box7": {
          "description": "Box 7 on 1099 Form",
          "type": "string"
        },
        "Box8": {
          "description": "Box 8 on 1099 Form",
          "type": "string"
        },
        "Box9": {
          "description": "Box 9 on 1099 Form",
          "type": "string"
        },
        "Box10": {
          "description": "Box 10 on 1099 Form",
          "type": "string"
        },
        "Box11": {
          "description": "Box 11 on 1099 Form",
          "type": "string"
        },
        "Box13": {
          "description": "Box 13 on 1099 Form",
          "type": "string"
        },
        "Box14": {
          "description": "Box 14 on 1099 Form",
          "type": "string"
        },
        "Name": {
          "description": "Contact name on 1099 Form",
          "type": "string"
        },
        "FederalTaxIDType": {
          "description": "Contact Fed Tax ID type",
          "type": "string"
        },
        "City": {
          "description": "Contact city on 1099 Form",
          "type": "string"
        },
        "Zip": {
          "description": "Contact zip on 1099 Form",
          "type": "string"
        },
        "State": {
          "description": "Contact State on 1099 Form",
          "type": "string"
        },
        "Email": {
          "description": "Contact email on 1099 Form",
          "type": "string"
        },
        "StreetAddress": {
          "description": "Contact address on 1099 Form",
          "type": "string"
        },
        "TaxID": {
          "description": "Contact tax id on 1099 Form",
          "type": "string"
        },
        "ContactId": {
          "description": "Contact contact id",
          "type": "string"
        }
      }
    },
    "Schedule": {
      "title": "Schedule",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
      },
      "type": "object",
      "properties": {
        "Period": {
          "description": "Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)",
          "type": "integer",
          "format": "int32"
        },
        "Unit": {
          "$ref": "#/definitions/Unit"
        },
        "DueDate": {
          "description": "Integer used with due date type e.g 20 (of following month), 31 (of current month)",
          "type": "integer",
          "format": "int32"
        },
        "DueDateType": {
          "$ref": "#/definitions/DueDateType"
        },
        "StartDate": {
          "description": "Date the first invoice of the current version of the repeating schedule was generated (changes when repeating invoice is edited)",
          "type": "string",
          "format": "date"
        },
        "NextScheduledDate": {
          "description": "The calendar date of the next invoice in the schedule to be generated",
          "type": "string",
          "format": "date"
        },
        "EndDate": {
          "description": "Invoice end date – only returned if the template has an end date set",
          "type": "string",
          "format": "date"
        }
      }
    },
    "TaxRates": {
      "title": "TaxRates",
      "type": "object",
      "properties": {
        "TaxRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRate"
          }
        }
      }
    },
    "TaxType": {
      "title": "TaxType",
      "description": "See Tax Types – can only be used on update calls",
      "type": "string",
      "enum": [
        "OUTPUT",
        "INPUT",
        "CAPEXINPUT",
        "EXEMPTEXPORT",
        "EXEMPTEXPENSES",
        "EXEMPTCAPITAL",
        "EXEMPTOUTPUT",
        "INPUTTAXED",
        "BASEXCLUDED",
        "GSTONCAPIMPORTS",
        "GSTONIMPORTS",
        "NONE",
        "INPUT2",
        "ZERORATED",
        "OUTPUT2",
        "CAPEXINPUT2",
        "CAPEXOUTPUT",
        "CAPEXOUTPUT2",
        "CAPEXSRINPUT",
        "CAPEXSROUTPUT",
        "ECACQUISITIONS",
        "ECZRINPUT",
        "ECZROUTPUT",
        "ECZROUTPUTSERVICES",
        "EXEMPTINPUT",
        "REVERSECHARGES",
        "RRINPUT",
        "RROUTPUT",
        "SRINPUT",
        "SROUTPUT",
        "ZERORATEDINPUT",
        "ZERORATEDOUTPUT",
        "BLINPUT",
        "DSOUTPUT",
        "EPINPUT",
        "ES33OUTPUT",
        "ESN33OUTPUT",
        "IGDSINPUT2",
        "IMINPUT2",
        "MEINPUT",
        "NRINPUT",
        "OPINPUT",
        "OSOUTPUT",
        "TXESSINPUT",
        "TXN33INPUT",
        "TXPETINPUT",
        "TXREINPUT",
        "INPUT3",
        "INPUT4",
        "OUTPUT3",
        "OUTPUT4",
        "SROUTPUT2"
      ]
    },
    "TaxRate": {
      "title": "TaxRate",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tax-rates/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of tax rate",
          "type": "string"
        },
        "TaxType": {
          "description": "The tax type",
          "type": "string"
        },
        "TaxComponents": {
          "description": "See TaxComponents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxComponent"
          }
        },
        "Status": {
          "$ref": "#/definitions/Status17"
        },
        "ReportTaxType": {
          "$ref": "#/definitions/ReportTaxType"
        },
        "CanApplyToAssets": {
          "description": "Boolean to describe if tax rate can be used for asset accounts i.e.  true,false",
          "type": "boolean"
        },
        "CanApplyToEquity": {
          "description": "Boolean to describe if tax rate can be used for equity accounts i.e true,false",
          "type": "boolean"
        },
        "CanApplyToExpenses": {
          "description": "Boolean to describe if tax rate can be used for expense accounts  i.e. true,false",
          "type": "boolean"
        },
        "CanApplyToLiabilities": {
          "description": "Boolean to describe if tax rate can be used for liability accounts  i.e. true,false",
          "type": "boolean"
        },
        "CanApplyToRevenue": {
          "description": "Boolean to describe if tax rate can be used for revenue accounts i.e. true,false",
          "type": "boolean"
        },
        "DisplayTaxRate": {
          "description": "Tax Rate (decimal to 4dp) e.g 12.5000",
          "type": "number",
          "format": "double"
        },
        "EffectiveRate": {
          "description": "Effective Tax Rate (decimal to 4dp) e.g 12.5000",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "ReportTaxType"
      ]
    },
    "TaxComponent": {
      "title": "TaxComponent",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tax-rates/"
      },
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of Tax Component",
          "type": "string"
        },
        "Rate": {
          "description": "Tax Rate (up to 4dp)",
          "type": "number",
          "format": "double"
        },
        "IsCompound": {
          "description": "Boolean to describe if Tax rate is compounded.",
          "type": "boolean"
        },
        "IsNonRecoverable": {
          "description": "Boolean to describe if tax rate is non-recoverable. Non-recoverable rates are only applicable to Canadian organisations",
          "type": "boolean"
        }
      }
    },
    "TrackingCategories": {
      "title": "TrackingCategories",
      "type": "object",
      "properties": {
        "TrackingCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingCategory"
          }
        }
      }
    },
    "TrackingCategory": {
      "title": "TrackingCategory",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tracking-categories/"
      },
      "type": "object",
      "properties": {
        "TrackingCategoryID": {
          "description": "The Xero identifier for a tracking categorye.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking category e.g. Department, Region (max length = 100)",
          "type": "string",
          "maxLength": 100
        },
        "Status": {
          "$ref": "#/definitions/Status1"
        },
        "Options": {
          "description": "See Tracking Options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingOption"
          }
        }
      }
    },
    "TrackingOptions": {
      "title": "TrackingOptions",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingOption"
          }
        }
      }
    },
    "TrackingOption": {
      "title": "TrackingOption",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/tracking-categories/"
      },
      "type": "object",
      "properties": {
        "TrackingOptionID": {
          "description": "The Xero identifier for a tracking optione.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a",
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "description": "The name of the tracking option e.g. Marketing, East (max length = 50)",
          "type": "string",
          "maxLength": 50
        },
        "Status": {
          "$ref": "#/definitions/Status2"
        },
        "TrackingCategoryID": {
          "description": "Filter by a tracking categorye.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Users": {
      "title": "Users",
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "User": {
      "title": "User",
      "externalDocs": {
        "url": "http://developer.xero.com/documentation/api/users/"
      },
      "type": "object",
      "properties": {
        "UserID": {
          "description": "Xero identifier",
          "type": "string",
          "format": "uuid"
        },
        "EmailAddress": {
          "description": "Email address of user",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of user",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of user",
          "type": "string"
        },
        "UpdatedDateUTC": {
          "description": "Timestamp of last change to user",
          "type": "string",
          "format": "date-time"
        },
        "IsSubscriber": {
          "description": "Boolean to indicate if user is the subscriber",
          "type": "boolean"
        },
        "OrganisationRole": {
          "$ref": "#/definitions/OrganisationRole"
        }
      }
    },
    "Error": {
      "title": "Error",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "ErrorNumber": {
          "description": "Exception number",
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "description": "Exception type",
          "type": "string"
        },
        "Message": {
          "description": "Exception message",
          "type": "string"
        },
        "Elements": {
          "description": "Arry of Elements of validation Errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Element"
          }
        }
      }
    },
    "Element": {
      "title": "Element",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "ValidationErrors": {
          "description": "Array of Validation Error message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ValidationError": {
      "title": "ValidationError",
      "externalDocs": {
        "url": "https://developer.xero.com/documentation/api/http-response-codes"
      },
      "type": "object",
      "properties": {
        "Message": {
          "description": "Validation error message",
          "type": "string"
        }
      }
    },
    "AddressType": {
      "title": "AddressType",
      "description": "define the type of address",
      "type": "string",
      "enum": [
        "POBOX",
        "STREET",
        "DELIVERY"
      ]
    },
    "BankAccountType": {
      "title": "BankAccountType",
      "description": "For bank accounts only. See Bank Account types",
      "type": "string",
      "enum": [
        "BANK",
        "CREDITCARD",
        "PAYPAL"
      ]
    },
    "Class": {
      "title": "Class",
      "description": "See Account Class Types",
      "type": "string",
      "enum": [
        "ASSET",
        "EQUITY",
        "EXPENSE",
        "LIABILITY",
        "REVENUE"
      ]
    },
    "Class1": {
      "title": "Class1",
      "description": "Organisation Classes describe which plan the Xero organisation is on (e.g. DEMO, TRIAL, PREMIUM)",
      "type": "string",
      "enum": [
        "DEMO",
        "TRIAL",
        "STARTER",
        "STANDARD",
        "PREMIUM",
        "PREMIUM_20",
        "PREMIUM_50",
        "PREMIUM_100",
        "LEDGER",
        "GST_CASHBOOK",
        "NON_GST_CASHBOOK"
      ]
    },
    "ContactStatus": {
      "title": "ContactStatus",
      "description": "Current status of a contact – see contact status types",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "GDPRREQUEST"
      ]
    },
    "DueDateType": {
      "title": "DueDateType",
      "description": "the payment terms",
      "type": "string",
      "enum": [
        "DAYSAFTERBILLDATE",
        "DAYSAFTERBILLMONTH",
        "OFCURRENTMONTH",
        "OFFOLLOWINGMONTH"
      ]
    },
    "LinkType": {
      "title": "LinkType",
      "description": "See External link types",
      "type": "string",
      "enum": [
        "Facebook",
        "GooglePlus",
        "LinkedIn",
        "Twitter",
        "Website"
      ]
    },
    "OrganisationEntityType": {
      "title": "OrganisationEntityType",
      "description": "Organisation Type",
      "type": "string",
      "enum": [
        "COMPANY",
        "CHARITY",
        "CLUBSOCIETY",
        "PARTNERSHIP",
        "PRACTICE",
        "PERSON",
        "SOLETRADER",
        "TRUST"
      ]
    },
    "OrganisationRole": {
      "title": "OrganisationRole",
      "description": "User role (see Types)",
      "type": "string",
      "enum": [
        "READONLY",
        "INVOICEONLY",
        "STANDARD",
        "FINANCIALADVISER",
        "MANAGEDCLIENT",
        "CASHBOOKCLIENT"
      ]
    },
    "OrganisationType": {
      "title": "OrganisationType",
      "description": "Organisation Type",
      "type": "string",
      "enum": [
        "COMPANY",
        "CHARITY",
        "CLUBSOCIETY",
        "PARTNERSHIP",
        "PRACTICE",
        "PERSON",
        "SOLETRADER",
        "TRUST"
      ]
    },
    "PaymentType": {
      "title": "PaymentType",
      "description": "See Payment Types.",
      "type": "string",
      "enum": [
        "ACCRECPAYMENT",
        "ACCPAYPAYMENT",
        "ARCREDITPAYMENT",
        "APCREDITPAYMENT",
        "AROVERPAYMENTPAYMENT",
        "ARPREPAYMENTPAYMENT",
        "APPREPAYMENTPAYMENT",
        "APOVERPAYMENTPAYMENT"
      ]
    },
    "PhoneType": {
      "title": "PhoneType",
      "type": "string",
      "enum": [
        "DEFAULT",
        "DDI",
        "MOBILE",
        "FAX",
        "OFFICE"
      ]
    },
    "ReportTaxType": {
      "title": "ReportTaxType",
      "description": "See ReportTaxTypes",
      "type": "string",
      "enum": [
        "OUTPUT",
        "INPUT",
        "EXEMPTOUTPUT",
        "INPUTTAXED",
        "BASEXCLUDED",
        "EXEMPTEXPENSES",
        "EXEMPTINPUT",
        "ECOUTPUT",
        "ECOUTPUTSERVICES",
        "ECINPUT",
        "ECACQUISITIONS",
        "CAPITALSALESOUTPUT",
        "CAPITALEXPENSESINPUT",
        "MOSSSALES",
        "NONE",
        "GSTONIMPORTS"
      ]
    },
    "ReportType": {
      "title": "ReportType",
      "description": "See Prepayment Types",
      "type": "string",
      "enum": [
        "AgedPayablesByContact"
      ]
    },
    "SalesTaxBasis": {
      "title": "SalesTaxBasis",
      "description": "The accounting basis used for tax returns. See Sales Tax Basis",
      "type": "string",
      "enum": [
        "PAYMENTS",
        "INVOICE",
        "NONE",
        "CASH",
        "ACCRUAL",
        "FLATRATECASH",
        "FLATRATEACCRUAL",
        "ACCRUALS"
      ]
    },
    "SalesTaxPeriod": {
      "title": "SalesTaxPeriod",
      "description": "The frequency with which tax returns are processed. See Sales Tax Period",
      "type": "string",
      "enum": [
        "MONTHLY",
        "QUARTERLY1",
        "QUARTERLY2",
        "QUARTERLY3",
        "ANNUALLY",
        "ONEMONTHS",
        "TWOMONTHS",
        "SIXMONTHS",
        "1MONTHLY",
        "2MONTHLY",
        "3MONTHLY",
        "6MONTHLY",
        "QUARTERLY",
        "YEARLY"
      ]
    },
    "SourceTransactionTypeCode": {
      "title": "SourceTransactionTypeCode",
      "description": "The Type of the source tranasction. This will be ACCPAY if the linked transaction was created from an invoice and SPEND if it was created from a bank transaction.",
      "type": "string",
      "enum": [
        "ACCPAY",
        "SPEND"
      ]
    },
    "SourceType": {
      "title": "SourceType",
      "description": "The journal source type. The type of transaction that created the journal",
      "type": "string",
      "enum": [
        "ACCREC",
        "ACCPAY",
        "ACCRECCREDIT",
        "ACCPAYCREDIT",
        "ACCRECPAYMENT",
        "ACCPAYPAYMENT",
        "ARCREDITPAYMENT",
        "APCREDITPAYMENT",
        "CASHREC",
        "CASHPAID",
        "TRANSFER",
        "ARPREPAYMENT",
        "APPREPAYMENT",
        "AROVERPAYMENT",
        "APOVERPAYMENT",
        "EXPCLAIM",
        "EXPPAYMENT",
        "MANJOURNAL",
        "PAYSLIP",
        "WAGEPAYABLE",
        "INTEGRATEDPAYROLLPE",
        "INTEGRATEDPAYROLLPT",
        "EXTERNALSPENDMONEY",
        "INTEGRATEDPAYROLLPTPAYMENT",
        "INTEGRATEDPAYROLLCN"
      ]
    },
    "Status": {
      "title": "Status",
      "description": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "DELETED"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "The status of a tracking category",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED"
      ]
    },
    "Status2": {
      "title": "Status2",
      "description": "The status of a tracking option",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED"
      ]
    },
    "Status3": {
      "title": "Status3",
      "description": "The Status of a contact group. To delete a contact group update the status to DELETED. Only contact groups with a status of ACTIVE are returned on GETs.",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETED"
      ]
    },
    "Status4": {
      "title": "Status4",
      "description": "See Bank Transaction Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "DELETED"
      ]
    },
    "Status5": {
      "title": "Status5",
      "description": "See Invoice Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "DELETED",
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status6": {
      "title": "Status6",
      "description": "See Prepayment Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status7": {
      "title": "Status7",
      "description": "See Overpayment Status Codes",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status8": {
      "title": "Status8",
      "description": "See Credit Note Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "DELETED",
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status9": {
      "title": "Status9",
      "description": "The status of the payment.",
      "type": "string",
      "enum": [
        "AUTHORISED",
        "DELETED"
      ]
    },
    "Status10": {
      "title": "Status10",
      "description": "Current status of an employee – see contact status types",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ARCHIVED",
        "GDPRREQUEST"
      ]
    },
    "Status11": {
      "title": "Status11",
      "description": "Current status of an expense claim – see status types",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "AUTHORISED",
        "PAID",
        "VOIDED"
      ]
    },
    "Status12": {
      "title": "Status12",
      "description": "Current status of receipt – see status types",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "AUTHORIZED",
        "DECLINED"
      ]
    },
    "Status13": {
      "title": "Status13",
      "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
      "type": "string",
      "enum": [
        "APPROVED",
        "DRAFT",
        "ONDRAFT",
        "BILLED",
        "VOIDED"
      ]
    },
    "Status14": {
      "title": "Status14",
      "description": "See Manual Journal Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "POSTED",
        "DELETED",
        "VOIDED"
      ]
    },
    "Status15": {
      "title": "Status15",
      "description": "See Purchase Order Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "AUTHORISED",
        "BILLED",
        "DELETED"
      ]
    },
    "Status16": {
      "title": "Status16",
      "description": "One of the following - DRAFT or AUTHORISED – See Invoice Status Codes",
      "type": "string",
      "enum": [
        "DRAFT",
        "AUTHORISED"
      ]
    },
    "Status17": {
      "title": "Status17",
      "description": "See Status Codes",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETED",
        "ARCHIVED"
      ]
    },
    "SystemAccount": {
      "title": "SystemAccount",
      "description": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
      "type": "string",
      "enum": [
        "DEBTORS",
        "CREDITORS",
        "BANKCURRENCYGAIN",
        "GST",
        "GSTONIMPORTS",
        "HISTORICAL",
        "REALISEDCURRENCYGAIN",
        "RETAINEDEARNINGS",
        "ROUNDING",
        "TRACKINGTRANSFERS",
        "UNPAIDEXPCLM",
        "UNREALISEDCURRENCYGAIN",
        "WAGEPAYABLES"
      ]
    },
    "timeframe": {
      "title": "timeframe",
      "type": "string",
      "enum": [
        "MONTH",
        "QUARTER",
        "YEAR"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "See Bank Transaction Types",
      "type": "string",
      "enum": [
        "RECEIVE",
        "RECEIVE-OVERPAYMENT",
        "RECEIVE-PREPAYMENT",
        "SPEND",
        "SPEND-OVERPAYMENT",
        "SPEND-PREPAYMENT",
        "RECEIVE-TRANSFER",
        "SPEND-TRANSFER"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "See Invoice Types",
      "type": "string",
      "enum": [
        "ACCREC",
        "ACCPAY"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "See Prepayment Types",
      "type": "string",
      "enum": [
        "RECEIVE-PREPAYMENT",
        "SPEND-PREPAYMENT"
      ]
    },
    "Type3": {
      "title": "Type3",
      "description": "See Overpayment Types",
      "type": "string",
      "enum": [
        "RECEIVE-OVERPAYMENT",
        "SPEND-OVERPAYMENT"
      ]
    },
    "Type4": {
      "title": "Type4",
      "description": "See Credit Note Types",
      "type": "string",
      "enum": [
        "ACCPAYCREDIT",
        "ACCRECCREDIT"
      ]
    },
    "Type5": {
      "title": "Type5",
      "description": "This will always be BILLABLEEXPENSE. More types may be added in future.",
      "type": "string",
      "enum": [
        "BILLABLEEXPENSE"
      ]
    },
    "Unit": {
      "title": "Unit",
      "description": "One of the following - WEEKLY or MONTHLY",
      "type": "string",
      "enum": [
        "WEEKLY",
        "MONTHLY"
      ]
    },
    "Version": {
      "title": "Version",
      "description": "See Version Types",
      "type": "string",
      "enum": [
        "AU",
        "NZ",
        "GLOBAL",
        "UK",
        "US",
        "AUONRAMP",
        "NZONRAMP",
        "GLOBALONRAMP",
        "UKONRAMP",
        "USONRAMP"
      ]
    }
  },
  "tags": [
    {
      "name": "Accounting",
      "description": ""
    }
  ]
}