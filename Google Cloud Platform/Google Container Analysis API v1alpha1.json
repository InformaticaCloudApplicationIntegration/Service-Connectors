{
  "swagger": "2.0",
  "info": {
    "version": "v1alpha1",
    "title": "Container Analysis API",
    "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
    "contact": {}
  },
  "host": "containeranalysis.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://containeranalysis.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha1/{+name}": {
      "patch": {
        "description": "Updates an existing operation returns an error if operation\n does not exist. The only valid operations are to update mark the done bit\nchange the result.",
        "summary": "PatchV1alpha1ByName",
        "tags": [
          "operations"
        ],
        "operationId": "V1alpha1ByNamePatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOperationRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes the given `Occurrence` from the system. Use this when\nan `Occurrence` is no longer applicable for the given resource.",
        "summary": "DeleteV1alpha1ByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "get": {
        "description": "Returns the requested `Occurrence`.",
        "summary": "GetV1alpha1ByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+parent}/operations": {
      "post": {
        "description": "Creates a new `Operation`.",
        "summary": "CreateV1alpha1OperationsByParent",
        "tags": [
          "operations"
        ],
        "operationId": "V1alpha1OperationsByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateOperationRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+name}/notes": {
      "get": {
        "description": "Gets the `Note` attached to the given `Occurrence`.",
        "summary": "GetNotesV1alpha1NotesByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1NotesByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a new `Note`.",
        "summary": "CreateV1alpha1NotesByName",
        "tags": [
          "notes"
        ],
        "operationId": "V1alpha1NotesByNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field contains the project Id for example:\n\"projects/{project_id}"
          },
          {
            "name": "noteId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ID to use for this note."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+parent}/occurrences": {
      "get": {
        "description": "Lists active `Occurrences` for a given project matching the filters.",
        "summary": "ListV1alpha1OccurrencesByParent",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1OccurrencesByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "default": "KIND_UNSPECIFIED",
            "type": "string",
            "description": "The kind of occurrences to filter on. (Acceptable values are: \"KIND_UNSPECIFIED\", \"PACKAGE_VULNERABILITY\", \"BUILD_DETAILS\", \"IMAGE_BASIS\", \"PACKAGE_MANAGER\", \"DEPLOYABLE\", \"DISCOVERY\", \"ATTESTATION_AUTHORITY\")"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of occurrences to return in the list."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name field contains the project Id. For example:\n\"projects/{project_id}\n@Deprecated"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListOccurrencesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a new `Occurrence`. Use this method to create `Occurrences`\nfor a resource.",
        "summary": "CreateV1alpha1OccurrencesByParent",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1OccurrencesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name of the project.  Should be of the form \"projects/{project_id}\".\n@Deprecated"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+resource}:setIamPolicy": {
      "post": {
        "description": "Sets the access control policy on the specified `Note` or `Occurrence`.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na `Note` or an `Occurrence`, respectively.\nAttempting to call this method without these permissions will result in a `\n`PERMISSION_DENIED` error.\nAttempting to call this method on a non-existent resource will result in a\n`NOT_FOUND` error if the user has `containeranalysis.notes.list` permission\non a `Note` or `containeranalysis.occurrences.list` on an `Occurrence`, or\na `PERMISSION_DENIED` error otherwise. The resource takes the following\nformats: `projects/{projectid}/occurrences/{occurrenceid}` for occurrences\nand projects/{projectid}/notes/{noteid} for notes",
        "summary": "SetIamPolicyV1alpha1SetIamPolicyByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1SetIamPolicyByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetIamPolicyRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Policy"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+resource}:getIamPolicy": {
      "post": {
        "description": "Gets the access control policy for a note or an `Occurrence` resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\nAttempting to call this method on a resource without the required\npermission will result in a `PERMISSION_DENIED` error. Attempting to call\nthis method on a non-existent resource will result in a `NOT_FOUND` error\nif the user has list permission on the project, or a `PERMISSION_DENIED`\nerror otherwise. The resource takes the following formats:\n`projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for occurrences and\nprojects/{PROJECT_ID}/notes/{NOTE_ID} for notes",
        "summary": "GetIamPolicyV1alpha1GetIamPolicyByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1GetIamPolicyByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Policy"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+parent}/occurrences:vulnerabilitySummary": {
      "get": {
        "description": "Gets a summary of the number and severity of occurrences.",
        "summary": "GetVulnerabilitySummaryV1alpha1OccurrencesVulnerabilitySummary",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1OccurrencesVulnerabilitySummaryByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetVulnzOccurrencesSummaryResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+resource}:testIamPermissions": {
      "post": {
        "description": "Returns the permissions that a caller has on the specified note or\noccurrence resource. Requires list permission on the project (for example,\n\"storage.objects.list\" on the containing bucket for testing permission of\nan object). Attempting to call this method on a non-existent resource will\nresult in a `NOT_FOUND` error if the user has list permission on the\nproject, or a `PERMISSION_DENIED` error otherwise. The resource takes the\nfollowing formats: `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for\n`Occurrences` and `projects/{PROJECT_ID}/notes/{NOTE_ID}` for `Notes`",
        "summary": "TestIamPermissionsV1alpha1TestIamPermissionsByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1TestIamPermissionsByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestIamPermissionsRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestIamPermissionsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+name}/occurrences": {
      "get": {
        "description": "Lists `Occurrences` referencing the specified `Note`. Use this method to\nget all occurrences referencing your `Note` across all your customer\nprojects.",
        "summary": "ListV1alpha1OccurrencesByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1alpha1OccurrencesByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of notes to return in the list."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListNoteOccurrencesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+parent}/notes": {
      "post": {
        "description": "Creates a new `Note`.",
        "summary": "CreateV1alpha1NotesByParent",
        "tags": [
          "notes"
        ],
        "operationId": "V1alpha1NotesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "noteId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ID to use for this note."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name of the project.\nShould be of the form \"providers/{provider_id}\".\n@Deprecated"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "get": {
        "description": "Lists all `Notes` for a given project.",
        "summary": "ListV1alpha1NotesByParent",
        "tags": [
          "notes"
        ],
        "operationId": "V1alpha1NotesByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name field will contain the project Id for example:\n\"providers/{provider_id}\n@Deprecated"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of notes to return in the list."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListNotesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1alpha1/{+parent}/scanConfigs": {
      "get": {
        "description": "Lists scan configurations for a project.",
        "summary": "ListV1alpha1ScanConfigsByParent",
        "tags": [
          "scanConfigs"
        ],
        "operationId": "V1alpha1ScanConfigsByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The page token to use for the next request."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of items to return."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListScanConfigsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Status": {
      "title": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Binding": {
      "title": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      }
    },
    "ListNotesResponse": {
      "title": "ListNotesResponse",
      "description": "Response including listed notes.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\npage_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "notes": {
          "description": "The occurrences requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    },
    "Layer": {
      "title": "Layer",
      "description": "Layer holds metadata specific to a layer of a Docker image.",
      "type": "object",
      "properties": {
        "directive": {
          "$ref": "#/definitions/Directive"
        },
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        }
      }
    },
    "RelatedUrl": {
      "title": "RelatedUrl",
      "description": "Metadata for any related URL information",
      "type": "object",
      "properties": {
        "url": {
          "description": "Specific URL to associate with the note",
          "type": "string"
        },
        "label": {
          "description": "Label to describe usage of the URL",
          "type": "string"
        }
      }
    },
    "BuildType": {
      "title": "BuildType",
      "description": "Note holding the version of the provider's builder and the signature of\nthe provenance message in linked BuildDetails.",
      "type": "object",
      "properties": {
        "signature": {
          "$ref": "#/definitions/BuildSignature"
        },
        "builderVersion": {
          "description": "Version of the builder which produced this Note.",
          "type": "string"
        }
      }
    },
    "Installation": {
      "title": "Installation",
      "description": "This represents how a particular software package may be installed on\na system.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the installed package.",
          "type": "string"
        },
        "location": {
          "description": "All of the places within the filesystem versions of this package\nhave been found.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      }
    },
    "GetVulnzOccurrencesSummaryResponse": {
      "title": "GetVulnzOccurrencesSummaryResponse",
      "description": "A summary of how many vulnz occurrences there are per severity type.\ncounts by groups, or if we should have different summary messages\nlike this.",
      "type": "object",
      "properties": {
        "counts": {
          "description": "A map of how many occurrences were found for each severity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeverityCount"
          }
        }
      }
    },
    "UpdateOperationRequest": {
      "title": "UpdateOperationRequest",
      "description": "Request for updating an existing operation",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "The fields to update.",
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/Operation"
        }
      }
    },
    "Distribution": {
      "title": "Distribution",
      "description": "This represents a particular channel of distribution for a given package.\ne.g. Debian's jessie-backports dpkg mirror",
      "type": "object",
      "properties": {
        "maintainer": {
          "description": "A freeform string denoting the maintainer of this package.",
          "type": "string"
        },
        "latestVersion": {
          "$ref": "#/definitions/Version"
        },
        "description": {
          "description": "The distribution channel-specific description of this package.",
          "type": "string"
        },
        "cpeUri": {
          "description": "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "url": {
          "description": "The distribution channel-specific homepage for this package.",
          "type": "string"
        },
        "architecture": {
          "$ref": "#/definitions/Architecture"
        }
      }
    },
    "ScanConfig": {
      "title": "ScanConfig",
      "description": "Indicates various scans and whether they are turned on or off.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the ScanConfig in the form\n“projects/{project_id}/scanConfigs/{scan_config_id}\".",
          "type": "string"
        },
        "description": {
          "description": "Output only. A human-readable description of what the `ScanConfig` does.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether the Scan is enabled.",
          "type": "boolean"
        },
        "createTime": {
          "description": "Output only. The time this scan config was created.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this scan config was last updated.",
          "type": "string"
        }
      }
    },
    "ListOccurrencesResponse": {
      "title": "ListOccurrencesResponse",
      "description": "Response including listed active occurrences.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        },
        "occurrences": {
          "description": "The occurrences requested.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId",
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "repoName": {
          "description": "The name of the repo. Leave empty for the default repo.",
          "type": "string"
        }
      }
    },
    "StorageSource": {
      "title": "StorageSource",
      "description": "StorageSource describes the location of the source in an archive file in\nGoogle Cloud Storage.",
      "type": "object",
      "properties": {
        "generation": {
          "description": "Google Cloud Storage generation for the object.",
          "type": "string"
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing source (see [Bucket Name\nRequirements]\n(https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        },
        "object": {
          "description": "Google Cloud Storage object containing source.",
          "type": "string"
        }
      }
    },
    "BuildDetails": {
      "title": "BuildDetails",
      "description": "Message encapsulating build provenance details.",
      "type": "object",
      "properties": {
        "provenanceBytes": {
          "description": "Serialized JSON representation of the provenance, used in generating the\n`BuildSignature` in the corresponding Result. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
          "type": "string"
        },
        "provenance": {
          "$ref": "#/definitions/BuildProvenance"
        }
      }
    },
    "Hash": {
      "title": "Hash",
      "description": "Container message for hash values.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type"
        },
        "value": {
          "description": "The hash value.",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "title": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string"
        }
      }
    },
    "VulnerabilityLocation": {
      "title": "VulnerabilityLocation",
      "description": "The location of the vulnerability",
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/Version"
        },
        "cpeUri": {
          "description": "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.\nThis field can be used as a filter in list requests.",
          "type": "string"
        },
        "package": {
          "description": "The package being described.",
          "type": "string"
        }
      }
    },
    "Command": {
      "title": "Command",
      "description": "Command describes a step performed as part of the build pipeline.",
      "type": "object",
      "properties": {
        "waitFor": {
          "description": "The ID(s) of the Command(s) that this Command depends on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Environment variables set before running this Command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Command-line arguments used when executing this Command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the command, as presented on the command line, or if the command is\npackaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "id": {
          "description": "Optional unique identifier for this Command, used in wait_for to reference\nthis Command as a dependency.",
          "type": "string"
        },
        "dir": {
          "description": "Working directory (relative to project source root) used when running\nthis Command.",
          "type": "string"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext",
      "description": "A SourceContext referring to a Gerrit project.",
      "type": "object",
      "properties": {
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "revisionId": {
          "description": "A revision (commit) ID.",
          "type": "string"
        },
        "gerritProject": {
          "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is\nthe hostURI/project.",
          "type": "string"
        },
        "aliasContext": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1AliasContext"
        }
      }
    },
    "Attestation": {
      "title": "Attestation",
      "description": "Occurrence that represents a single \"attestation\".  The authenticity of an\nAttestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust.  In this circumstance, the\nAttestationAuthority to which this Attestation is attached is primarily\nuseful for look-up (how to find this Attestation if you already know the\nAuthority and artifact to be verified) and intent (which authority was this\nattestation intended to sign for).",
      "type": "object",
      "properties": {
        "pgpSignedAttestation": {
          "$ref": "#/definitions/PgpSignedAttestation"
        }
      }
    },
    "Location": {
      "title": "Location",
      "description": "An occurrence of a particular package installation found within a\nsystem's filesystem.\ne.g. glibc was found in /var/lib/dpkg/status",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "version": {
          "description": "The version installed at this location.",
          "type": "object"
        },
        "path": {
          "description": "The path from which we gathered that this package/version is installed.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "title": "Resource",
      "description": "Resource is an entity that can have metadata. E.g., a Docker image.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource. E.g., the name of a Docker image - \"Debian\".",
          "type": "string"
        },
        "contentHash": {
          "$ref": "#/definitions/Hash"
        },
        "uri": {
          "description": "The unique URI of the resource. E.g.,\n\"https://gcr.io/project/image@sha256:foo\" for a Docker image.",
          "type": "string"
        }
      }
    },
    "Artifact": {
      "title": "Artifact",
      "description": "Artifact describes a build product.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike gcr.io/projectID/imagename@sha256:123456",
          "type": "string"
        },
        "names": {
          "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the artifact. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`.\n\nThis field is deprecated in favor of the plural `names` field; it continues\nto exist here to allow existing BuildProvenance serialized to json in\ngoogle.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to\ndeserialize back into proto.",
          "type": "string"
        },
        "checksum": {
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "title": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Deployable": {
      "title": "Deployable",
      "description": "An artifact that can be deployed in some runtime.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "description": "Resource URI for the artifact being deployed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Package": {
      "title": "Package",
      "description": "This represents a particular package that is distributed over\nvarious channels.\ne.g. glibc (aka libc6) is distributed by many, at various versions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the package.",
          "type": "string"
        },
        "distribution": {
          "description": "The various channels by which a package is distributed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Distribution"
          }
        }
      }
    },
    "Version": {
      "title": "Version",
      "description": "The latest available version of this package in\nthis distribution channel.",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The iteration of the package build from the above version.",
          "type": "string"
        },
        "name": {
          "description": "The main part of the version name.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/Kind1"
        },
        "epoch": {
          "description": "Used to correct mistakes in the version numbering scheme.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "description": "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time this operation was created.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time that this operation was marked completed or failed.",
          "type": "string"
        }
      }
    },
    "Fingerprint": {
      "title": "Fingerprint",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "type": "object",
      "properties": {
        "v1Name": {
          "description": "The layer-id of the final layer in the Docker image's v1\nrepresentation.\nThis field can be used as a filter in list requests.",
          "type": "string"
        },
        "v2Name": {
          "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.\nThis field can be used as a filter in list requests.",
          "type": "string"
        },
        "v2Blob": {
          "description": "The ordered list of v2 blobs that represent a given image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuditConfig": {
      "title": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        }
      }
    },
    "Discovery": {
      "title": "Discovery",
      "description": "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis. The occurrence's operation will\nindicate the status of the analysis. Absence of an occurrence linked to this\nnote for a resource indicates that analysis hasn't started.",
      "type": "object",
      "properties": {
        "analysisKind": {
          "$ref": "#/definitions/AnalysisKind"
        }
      }
    },
    "RepoSource": {
      "title": "RepoSource",
      "description": "RepoSource describes the location of the source in a Google Cloud Source\nRepository.",
      "type": "object",
      "properties": {
        "tagName": {
          "description": "Name of the tag to build.",
          "type": "string"
        },
        "commitSha": {
          "description": "Explicit commit SHA to build.",
          "type": "string"
        },
        "projectId": {
          "description": "ID of the project that owns the repo.",
          "type": "string"
        },
        "repoName": {
          "description": "Name of the repo.",
          "type": "string"
        },
        "branchName": {
          "description": "Name of the branch to build.",
          "type": "string"
        }
      }
    },
    "BuildSignature": {
      "title": "BuildSignature",
      "description": "Signature of the build in Occurrences pointing to the Note containing this\n`BuilderDetails`.",
      "type": "object",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType"
        },
        "signature": {
          "description": "Signature of the related `BuildProvenance`, encoded in a base64 string.",
          "type": "string"
        },
        "publicKey": {
          "description": "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
          "type": "string"
        },
        "keyId": {
          "description": "An Id for the key used to sign. This could be either an Id for the key\nstored in `public_key` (such as the Id or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).",
          "type": "string"
        }
      }
    },
    "CreateOperationRequest": {
      "title": "CreateOperationRequest",
      "description": "Request for creating an operation",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The ID to use for this operation.",
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/Operation"
        }
      }
    },
    "Discovered": {
      "title": "Discovered",
      "description": "Provides information about the scan status of a discovered resource.",
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/Operation"
        },
        "analysisStatus": {
          "$ref": "#/definitions/AnalysisStatus"
        },
        "continuousAnalysis": {
          "$ref": "#/definitions/ContinuousAnalysis"
        },
        "analysisStatusError": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1SourceContext": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1SourceContext",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Labels with user defined metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "git": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext"
        },
        "gerrit": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext"
        },
        "cloudRepo": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1AliasContext": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1AliasContext",
      "description": "An alias, which may be a branch or tag.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The alias name.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/Kind3"
        }
      }
    },
    "Expr": {
      "title": "Expr",
      "description": "Unimplemented. The condition that is associated with this binding.\nNOTE: an unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
      "type": "object",
      "properties": {
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        }
      }
    },
    "PackageIssue": {
      "title": "PackageIssue",
      "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
      "type": "object",
      "properties": {
        "fixedLocation": {
          "$ref": "#/definitions/VulnerabilityLocation"
        },
        "severityName": {
          "description": "The severity (eg: distro assigned severity) for this vulnerability.",
          "type": "string"
        },
        "affectedLocation": {
          "$ref": "#/definitions/VulnerabilityLocation"
        }
      }
    },
    "Deployment": {
      "title": "Deployment",
      "description": "The period during which some deployable was active in a runtime.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "description": "Output only. Resource URI for the artifact being deployed taken from the\ndeployable field with the same name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmail": {
          "description": "Identity of the user that triggered this deployment.",
          "type": "string"
        },
        "config": {
          "description": "Configuration used to create this deployment.",
          "type": "string"
        },
        "undeployTime": {
          "description": "End of the lifetime of this deployment.",
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/Platform"
        },
        "deployTime": {
          "description": "Beginning of the lifetime of this deployment.",
          "type": "string"
        },
        "address": {
          "description": "Address of the runtime element hosting this deployment.",
          "type": "string"
        }
      }
    },
    "Detail": {
      "title": "Detail",
      "description": "Identifies all occurrences of this vulnerability in the package for a\nspecific distro/location\nFor example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2",
      "type": "object",
      "properties": {
        "isObsolete": {
          "description": "Whether this Detail is obsolete. Occurrences are expected not to point to\nobsolete details.",
          "type": "boolean"
        },
        "packageType": {
          "description": "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)",
          "type": "string"
        },
        "fixedLocation": {
          "$ref": "#/definitions/VulnerabilityLocation"
        },
        "description": {
          "description": "A vendor-specific description of this note.",
          "type": "string"
        },
        "cpeUri": {
          "description": "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in\nwhich the vulnerability manifests.  Examples include distro or storage\nlocation for vulnerable jar.\nThis field can be used as a filter in list requests.",
          "type": "string"
        },
        "severityName": {
          "description": "The severity (eg: distro assigned severity) for this vulnerability.",
          "type": "string"
        },
        "minAffectedVersion": {
          "$ref": "#/definitions/Version"
        },
        "maxAffectedVersion": {
          "$ref": "#/definitions/Version"
        },
        "package": {
          "description": "The name of the package where the vulnerability was found.\nThis field can be used as a filter in list requests.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "title": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Basis": {
      "title": "Basis",
      "description": "Basis describes the base image portion (Note) of the DockerImage\nrelationship.  Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url.",
      "type": "object",
      "properties": {
        "fingerprint": {
          "$ref": "#/definitions/Fingerprint"
        },
        "resourceUrl": {
          "description": "The resource_url for the resource representing the basis of\nassociated occurrence images.",
          "type": "string"
        }
      }
    },
    "VulnerabilityType": {
      "title": "VulnerabilityType",
      "description": "VulnerabilityType provides metadata about a security vulnerability.",
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/Severity1"
        },
        "details": {
          "description": "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the\npackage vulnerability has manifested in.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Detail"
          }
        },
        "cvssScore": {
          "description": "The CVSS score for this Vulnerability.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1RepoId": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1RepoId",
      "description": "A unique identifier for a Cloud Repo.",
      "type": "object",
      "properties": {
        "uid": {
          "description": "A server-assigned, globally unique identifier.",
          "type": "string"
        },
        "projectRepoId": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId"
        }
      }
    },
    "ListScanConfigsResponse": {
      "title": "ListScanConfigsResponse",
      "description": "A list of scan configs for the project.",
      "type": "object",
      "properties": {
        "scanConfigs": {
          "description": "The set of scan configs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanConfig"
          }
        },
        "nextPageToken": {
          "description": "A page token to pass in order to get more scan configs.",
          "type": "string"
        }
      }
    },
    "Occurrence": {
      "title": "Occurrence",
      "description": "`Occurrence` includes information about analysis occurrences for an image.",
      "type": "object",
      "properties": {
        "vulnerabilityDetails": {
          "description": "Details of a security vulnerability note.",
          "type": "object"
        },
        "createTime": {
          "description": "Output only. The time this `Occurrence` was created.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this `Occurrence` was last updated.",
          "type": "string"
        },
        "remediation": {
          "description": "A description of actions that can be taken to remedy the `Note`",
          "type": "string"
        },
        "derivedImage": {
          "description": "Describes how this resource derives from the basis\nin the associated note.",
          "type": "object"
        },
        "buildDetails": {
          "description": "Build details for a verifiable build.",
          "type": "object"
        },
        "kind": {
          "$ref": "#/definitions/Kind2"
        },
        "resource": {
          "description": "The resource for which the `Occurrence` applies.",
          "type": "object"
        },
        "resourceUrl": {
          "description": "The unique URL of the image or the container for which the `Occurrence`\napplies. For example, https://gcr.io/project/image@sha256:foo This field\ncan be used as a filter in list requests.",
          "type": "string"
        },
        "attestation": {
          "description": "Describes an attestation of an artifact.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The name of the `Occurrence` in the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"",
          "type": "string"
        },
        "installation": {
          "description": "Describes the installation of a package on the linked resource.",
          "type": "object"
        },
        "discovered": {
          "description": "Describes the initial scan status for this resource.",
          "type": "object"
        },
        "deployment": {
          "description": "Describes the deployment of an artifact on a runtime.",
          "type": "object"
        },
        "noteName": {
          "description": "An analysis note associated with this image, in the form\n\"providers/{provider_id}/notes/{NOTE_ID}\"\nThis field can be used as a filter in list requests.",
          "type": "string"
        }
      }
    },
    "Note": {
      "title": "Note",
      "description": "Provides a detailed description of a `Note`.",
      "type": "object",
      "properties": {
        "package": {
          "description": "A note describing a package hosted by various package managers.",
          "type": "object"
        },
        "createTime": {
          "description": "Output only. The time this note was created. This field can be used as a\nfilter in list requests.",
          "type": "string"
        },
        "discovery": {
          "description": "A note describing a provider/analysis type.",
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. The time this note was last updated. This field can be used as\na filter in list requests.",
          "type": "string"
        },
        "relatedUrl": {
          "description": "URLs associated with this note",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "expirationTime": {
          "description": "Time of expiration for this note, null if note does not expire.",
          "type": "string"
        },
        "baseImage": {
          "description": "A note describing a base image.",
          "type": "object"
        },
        "kind": {
          "$ref": "#/definitions/Kind"
        },
        "longDescription": {
          "description": "A detailed description of this `Note`.",
          "type": "string"
        },
        "buildType": {
          "description": "Build provenance type for a verifiable build.",
          "type": "object"
        },
        "deployable": {
          "description": "A note describing something that can be deployed.",
          "type": "object"
        },
        "shortDescription": {
          "description": "A one sentence description of this `Note`.",
          "type": "string"
        },
        "attestationAuthority": {
          "description": "A note describing an attestation role.",
          "type": "object"
        },
        "name": {
          "description": "The name of the note in the form\n\"providers/{provider_id}/notes/{NOTE_ID}\"",
          "type": "string"
        },
        "vulnerabilityType": {
          "description": "A package vulnerability type of note.",
          "type": "object"
        }
      }
    },
    "SeverityCount": {
      "title": "SeverityCount",
      "description": "The number of occurrences created for a specific severity.",
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/Severity"
        },
        "count": {
          "description": "The number of occurrences with the severity.",
          "type": "string"
        }
      }
    },
    "AuditLogConfig": {
      "title": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "$ref": "#/definitions/LogType"
        }
      }
    },
    "Derived": {
      "title": "Derived",
      "description": "Derived describes the derived image portion (Occurrence) of the\nDockerImage relationship.  This image would be produced from a Dockerfile\nwith FROM <DockerImage.Basis in attached Note>.",
      "type": "object",
      "properties": {
        "fingerprint": {
          "$ref": "#/definitions/Fingerprint"
        },
        "layerInfo": {
          "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Layer"
          }
        },
        "distance": {
          "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
          "type": "integer",
          "format": "int32"
        },
        "baseResourceUrl": {
          "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
          "type": "string"
        }
      }
    },
    "Source": {
      "title": "Source",
      "description": "Source describes the location of the source used for the build.",
      "type": "object",
      "properties": {
        "additionalContexts": {
          "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1SourceContext"
          }
        },
        "context": {
          "$ref": "#/definitions/GoogleDevtoolsContaineranalysisV1alpha1SourceContext"
        },
        "repoSource": {
          "$ref": "#/definitions/RepoSource"
        },
        "storageSource": {
          "$ref": "#/definitions/StorageSource"
        },
        "fileHashes": {
          "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FileHashes"
          }
        },
        "artifactStorageSource": {
          "$ref": "#/definitions/StorageSource"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext",
      "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
      "type": "object",
      "properties": {
        "revisionId": {
          "description": "Required.\nGit commit hash.",
          "type": "string"
        },
        "url": {
          "description": "Git repository URL.",
          "type": "string"
        }
      }
    },
    "BuildProvenance": {
      "title": "BuildProvenance",
      "description": "The actual provenance",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "ID of the project.",
          "type": "string"
        },
        "finishTime": {
          "description": "Time at which execution of the build was finished.",
          "type": "string"
        },
        "creator": {
          "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
          "type": "string"
        },
        "logsBucket": {
          "description": "Google Cloud Storage bucket where logs were written.",
          "type": "string"
        },
        "builderVersion": {
          "description": "Version string of the builder at the time this build was executed.",
          "type": "string"
        },
        "commands": {
          "description": "Commands requested by the build.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "builtArtifacts": {
          "description": "Output of the build.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "description": "Unique identifier of the build.",
          "type": "string"
        },
        "buildOptions": {
          "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTime": {
          "description": "Time at which execution of the build was started.",
          "type": "string"
        },
        "triggerId": {
          "description": "Trigger identifier if the build was triggered automatically; empty if not.",
          "type": "string"
        },
        "sourceProvenance": {
          "description": "Details of the Source input to the build.",
          "type": "object"
        },
        "createTime": {
          "description": "Time at which the build was created.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "title": "Policy",
      "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "type": "string"
        },
        "version": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ListNoteOccurrencesResponse": {
      "title": "ListNoteOccurrencesResponse",
      "description": "Response including listed occurrences for a note.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences attached to the specified note.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "nextPageToken": {
          "description": "Token to receive the next page of notes.",
          "type": "string"
        }
      }
    },
    "VulnerabilityDetails": {
      "title": "VulnerabilityDetails",
      "description": "Used by Occurrence to point to where the vulnerability exists and how\nto fix it.",
      "type": "object",
      "properties": {
        "packageIssue": {
          "description": "The set of affected locations and their fixes (if available) within\nthe associated resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageIssue"
          }
        },
        "severity": {
          "$ref": "#/definitions/Severity2"
        },
        "cvssScore": {
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
          "type": "number",
          "format": "double"
        },
        "type": {
          "description": "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)",
          "type": "string"
        }
      }
    },
    "AttestationAuthority": {
      "title": "AttestationAuthority",
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\".  For\nexample, an organization might have one `AttestationAuthority` for \"QA\" and\none for \"build\".  This Note is intended to act strictly as a grouping\nmechanism for the attached Occurrences (Attestations).  This grouping\nmechanism also provides a security boundary, since IAM ACLs gate the ability\nfor a principle to attach an Occurrence to a given Note.  It also provides a\nsingle point of lookup to find all attached Attestation Occurrences, even if\nthey don't all live in the same project.",
      "type": "object",
      "properties": {
        "hint": {
          "$ref": "#/definitions/AttestationAuthorityHint"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext",
      "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
      "type": "object",
      "properties": {
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        },
        "repoId": {
          "description": "The ID of the repo.",
          "type": "object"
        },
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "type": "object"
        }
      }
    },
    "Operation": {
      "title": "Operation",
      "description": "The operation to create.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FileHashes": {
      "title": "FileHashes",
      "description": "Container message for hashes of byte content of files, used in Source\nmessages to verify integrity of source input to the build.",
      "type": "object",
      "properties": {
        "fileHash": {
          "description": "Collection of file hashes.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "AttestationAuthorityHint": {
      "title": "AttestationAuthorityHint",
      "description": "This submessage provides human-readable hints about the purpose of the\nAttestationAuthority.  Because the name of a Note acts as its resource\nreference, it is important to disambiguate the canonical name of the Note\n(which might be a UUID for security purposes) from \"readable\" names more\nsuitable for debug output.  Note that these hints should NOT be used to\nlook up AttestationAuthorities in security sensitive contexts, such as when\nlooking up Attestations to verify.",
      "type": "object",
      "properties": {
        "humanReadableName": {
          "description": "The human readable name of this Attestation Authority, for example \"qa\".",
          "type": "string"
        }
      }
    },
    "PgpSignedAttestation": {
      "title": "PgpSignedAttestation",
      "description": "An attestation wrapper with a PGP-compatible signature.\nThis message only supports `ATTACHED` signatures, where the payload that is\nsigned is included alongside the signature itself in the same file.",
      "type": "object",
      "properties": {
        "signature": {
          "description": "The raw content of the signature, as output by GNU Privacy Guard (GPG) or\nequivalent.  Since this message only supports attached signatures, the\npayload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
          "type": "string"
        },
        "pgpKeyId": {
          "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexadecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
          "type": "string"
        },
        "contentType": {
          "$ref": "#/definitions/ContentType"
        }
      }
    },
    "AnalysisKind": {
      "title": "AnalysisKind",
      "description": "The kind of analysis that is handled by this discovery.",
      "example": "KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "PACKAGE_VULNERABILITY",
        "BUILD_DETAILS",
        "IMAGE_BASIS",
        "PACKAGE_MANAGER",
        "DEPLOYABLE",
        "DISCOVERY",
        "ATTESTATION_AUTHORITY"
      ]
    },
    "AnalysisStatus": {
      "title": "AnalysisStatus",
      "description": "The status of discovery for the resource.",
      "example": "ANALYSIS_STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ANALYSIS_STATUS_UNSPECIFIED",
        "PENDING",
        "SCANNING",
        "FINISHED_SUCCESS",
        "FINISHED_FAILED",
        "FINISHED_UNSUPPORTED"
      ]
    },
    "Architecture": {
      "title": "Architecture",
      "description": "The CPU architecture for which packages in this distribution\nchannel were built",
      "example": "ARCHITECTURE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ARCHITECTURE_UNSPECIFIED",
        "X86",
        "X64"
      ]
    },
    "ContentType": {
      "title": "ContentType",
      "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
      "example": "CONTENT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CONTENT_TYPE_UNSPECIFIED",
        "SIMPLE_SIGNING_JSON"
      ]
    },
    "ContinuousAnalysis": {
      "title": "ContinuousAnalysis",
      "description": "Whether the resource is continuously analyzed.",
      "example": "CONTINUOUS_ANALYSIS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CONTINUOUS_ANALYSIS_UNSPECIFIED",
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "Directive": {
      "title": "Directive",
      "description": "The recovered Dockerfile directive used to construct this layer.",
      "example": "DIRECTIVE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DIRECTIVE_UNSPECIFIED",
        "MAINTAINER",
        "RUN",
        "CMD",
        "LABEL",
        "EXPOSE",
        "ENV",
        "ADD",
        "COPY",
        "ENTRYPOINT",
        "VOLUME",
        "USER",
        "WORKDIR",
        "ARG",
        "ONBUILD",
        "STOPSIGNAL",
        "HEALTHCHECK",
        "SHELL"
      ]
    },
    "KeyType": {
      "title": "KeyType",
      "description": "The type of the key, either stored in `public_key` or referenced in\n`key_id`",
      "example": "KEY_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KEY_TYPE_UNSPECIFIED",
        "PGP_ASCII_ARMORED",
        "PKIX_PEM"
      ]
    },
    "Kind": {
      "title": "Kind",
      "description": "Output only. This explicitly denotes which kind of note is specified. This\nfield can be used as a filter in list requests.",
      "example": "KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "PACKAGE_VULNERABILITY",
        "BUILD_DETAILS",
        "IMAGE_BASIS",
        "PACKAGE_MANAGER",
        "DEPLOYABLE",
        "DISCOVERY",
        "ATTESTATION_AUTHORITY"
      ]
    },
    "Kind1": {
      "title": "Kind1",
      "description": "Distinguish between sentinel MIN/MAX versions and normal versions.\nIf kind is not NORMAL, then the other fields are ignored.",
      "example": "NORMAL",
      "type": "string",
      "enum": [
        "NORMAL",
        "MINIMUM",
        "MAXIMUM"
      ]
    },
    "Kind2": {
      "title": "Kind2",
      "description": "Output only. This explicitly denotes which of the `Occurrence` details are\nspecified. This field can be used as a filter in list requests.",
      "example": "KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "PACKAGE_VULNERABILITY",
        "BUILD_DETAILS",
        "IMAGE_BASIS",
        "PACKAGE_MANAGER",
        "DEPLOYABLE",
        "DISCOVERY",
        "ATTESTATION_AUTHORITY"
      ]
    },
    "Kind3": {
      "title": "Kind3",
      "description": "The alias kind.",
      "example": "KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "FIXED",
        "MOVABLE",
        "OTHER"
      ]
    },
    "LogType": {
      "title": "LogType",
      "description": "The log type that this config enables.",
      "example": "LOG_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "LOG_TYPE_UNSPECIFIED",
        "ADMIN_READ",
        "DATA_WRITE",
        "DATA_READ"
      ]
    },
    "Platform": {
      "title": "Platform",
      "description": "Platform hosting this deployment.",
      "example": "PLATFORM_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PLATFORM_UNSPECIFIED",
        "GKE",
        "FLEX",
        "CUSTOM"
      ]
    },
    "Severity": {
      "title": "Severity",
      "description": "The severity of the occurrences.",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Severity1": {
      "title": "Severity1",
      "description": "Note provider assigned impact of the vulnerability",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Severity2": {
      "title": "Severity2",
      "description": "Output only. The note provider assigned Severity of the vulnerability.",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "The type of hash that was performed.",
      "example": "NONE",
      "type": "string",
      "enum": [
        "NONE",
        "SHA256"
      ]
    }
  },
  "tags": [
    {
      "name": "operations",
      "description": ""
    },
    {
      "name": "occurrences",
      "description": ""
    },
    {
      "name": "notes",
      "description": ""
    },
    {
      "name": "scanConfigs",
      "description": ""
    }
  ]
}