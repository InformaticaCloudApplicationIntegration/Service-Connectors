{
  "swagger": "2.0",
  "info": {
    "version": "v2alpha1",
    "title": "Genomics API",
    "description": "Uploads, processes, queries, and searches Genomics data in the cloud.",
    "contact": {}
  },
  "host": "genomics.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://genomics.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/genomics": "View and manage Genomics data",
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2alpha1/pipelines:run": {
      "post": {
        "description": "Runs a pipeline.\n\n**Note:** Before you can use this method, the Genomics Service Agent\nmust have access to your project. This is done automatically when the\nCloud Genomics API is first enabled, but if you delete this permission,\nor if you enabled the Cloud Genomics API before the v2alpha1 API\nlaunch, you must disable and re-enable the API to grant the Genomics\nService Agent the required permissions.\nAuthorization requires the following [Google\nIAM](https://cloud.google.com/iam/) permission:\n\n* `genomics.operations.create`\n\n[1]: /genomics/gsa",
        "summary": "RunV2alpha1PipelinesRun",
        "tags": [
          "pipelines"
        ],
        "operationId": "V2alpha1PipelinesRunPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunPipelineRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ]
      }
    },
    "/v2alpha1/workers/{id}:checkIn": {
      "post": {
        "description": "The worker uses this method to retrieve the assigned operation and\nprovide periodic status updates.",
        "summary": "CheckInV2alpha1WorkersCheckInById",
        "tags": [
          "workers"
        ],
        "operationId": "V2alpha1WorkersCheckInByIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The worker id, assigned when it was created."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckInRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckInResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ]
      }
    },
    "/v2alpha1/{+name}": {
      "get": {
        "description": "Lists operations that match the specified filter in the request.\nAuthorization requires the following [Google IAM](https://cloud.google.com/iam) permission&#58;\n\n* `genomics.operations.list`",
        "summary": "ListV2alpha1ByName",
        "tags": [
          "operations"
        ],
        "operationId": "V2alpha1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The standard list page token."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of results to return. If unspecified, defaults to\n256. The maximum value is 2048."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A string for filtering Operations.\nIn v2alpha1, the following filter fields are supported&#58;\n\n* createTime&#58; The time this job was created\n* events&#58; The set of event (names) that have occurred while running\n  the pipeline.  The &#58; operator can be used to determine if a\n  particular event has occurred.\n* error&#58; If the pipeline is running, this value is NULL.  Once the\n  pipeline finishes, the value is the standard Google error code.\n* labels.key or labels.\"key with space\" where key is a label key.\n* done&#58; If the pipeline is running, this value is false. Once the\n  pipeline finishes, the value is true.\n\nIn v1 and v1alpha2, the following filter fields are supported&#58;\n\n* projectId&#58; Required. Corresponds to\n  OperationMetadata.projectId.\n* createTime&#58; The time this job was created, in seconds from the\n  [epoch](http://en.wikipedia.org/wiki/Unix_time). Can use `>=` and/or `<=`\n  operators.\n* status&#58; Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only\n  one status may be specified.\n* labels.key where key is a label key.\n\nExamples&#58;\n\n* `projectId = my-project AND createTime >= 1432140000`\n* `projectId = my-project AND createTime >= 1432140000 AND createTime <= 1432150000 AND status = RUNNING`\n* `projectId = my-project AND labels.color = *`\n* `projectId = my-project AND labels.color = red`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListOperationsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ]
      }
    },
    "/v2alpha1/{+name}:cancel": {
      "post": {
        "description": "Starts asynchronous cancellation on a long-running operation.\nThe server makes a best effort to cancel the operation, but success is not\nguaranteed. Clients may use Operations.GetOperation\nor Operations.ListOperations\nto check whether the cancellation succeeded or the operation completed\ndespite cancellation.\nAuthorization requires the following [Google IAM](https://cloud.google.com/iam) permission&#58;\n\n* `genomics.operations.cancel`",
        "summary": "CancelV2alpha1CancelByName",
        "tags": [
          "operations"
        ],
        "operationId": "V2alpha1CancelByNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Pipeline": {
      "title": "Pipeline",
      "description": "Specifies a series of actions to execute, expressed as Docker containers.",
      "type": "object",
      "properties": {
        "environment": {
          "description": "The environment to pass into every action. Each action can also specify\nadditional environment variables but cannot delete an entry from this map\n(though they can overwrite it with a different value).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timeout": {
          "description": "The maximum amount of time to give the pipeline to complete.  This includes\nthe time spent waiting for a worker to be allocated.  If the pipeline fails\nto complete before the timeout, it will be cancelled and the error code\nwill be set to DEADLINE_EXCEEDED.\n\nIf unspecified, it will default to 7 days.",
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/Resources"
        },
        "actions": {
          "description": "The list of actions to execute, in the order they are specified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      }
    },
    "Accelerator": {
      "title": "Accelerator",
      "description": "Carries information about an accelerator that can be attached to a VM.",
      "type": "object",
      "properties": {
        "count": {
          "description": "How many accelerators of this type to attach.",
          "type": "string"
        },
        "type": {
          "description": "The accelerator type string (for example, \"nvidia-tesla-k80\").\n\nOnly NVIDIA GPU accelerators are currently supported. If an NVIDIA GPU is\nattached, the required runtime libraries will be made available to all\ncontainers under `/usr/local/nvidia`. The driver version to install must\nbe specified using the NVIDIA driver version parameter on the virtual\nmachine specification. Note that attaching a GPU increases the worker VM\nstartup time by a few minutes.",
          "type": "string"
        }
      }
    },
    "OperationEvent": {
      "title": "OperationEvent",
      "description": "An event that occurred during an Operation.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Optional time of when event started.",
          "type": "string"
        },
        "description": {
          "description": "Required description of event.",
          "type": "string"
        },
        "endTime": {
          "description": "Optional time of when event finished. An event can have a start time and no\nfinish time. If an event has a finish time, there must be a start time.",
          "type": "string"
        }
      }
    },
    "Resources": {
      "title": "Resources",
      "description": "The resources required for execution.",
      "type": "object",
      "properties": {
        "virtualMachine": {
          "description": "The virtual machine specification.",
          "type": "object"
        },
        "projectId": {
          "description": "The project ID to allocate resources in.",
          "type": "string"
        },
        "regions": {
          "description": "The list of regions allowed for VM allocation. If set, the `zones` field\nmust not be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zones": {
          "description": "The list of zones allowed for VM allocation. If set, the `regions` field\nmust not be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CheckInResponse": {
      "title": "CheckInResponse",
      "description": "The response to the CheckIn method.",
      "type": "object",
      "properties": {
        "deadline": {
          "description": "The deadline by which the worker must request an extension.  The backend\nwill allow for network transmission time and other delays, but the worker\nmust attempt to transmit the extension request no later than the deadline.",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata that describes the operation assigned to the worker.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "VirtualMachine": {
      "title": "VirtualMachine",
      "description": "Carries information about a Compute Engine VM resource.",
      "type": "object",
      "properties": {
        "nvidiaDriverVersion": {
          "description": "The NVIDIA driver version to use when attaching an NVIDIA GPU accelerator.\nThe version specified here must be compatible with the GPU libraries\ncontained in the container being executed, and must be one of the drivers\nhosted in the `nvidia-drivers-us-public` bucket on Google Cloud Storage.",
          "type": "string"
        },
        "preemptible": {
          "description": "If true, allocate a preemptible VM.",
          "type": "boolean"
        },
        "labels": {
          "description": "Optional set of labels to apply to the VM and any attached disk resources.\nThese labels must adhere to the name and value restrictions on VM labels\nimposed by Compute Engine.\n\nLabels applied at creation time to the VM. Applied on a best-effort basis\nto attached disk resources shortly after VM creation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cpuPlatform": {
          "description": "The CPU platform to request. An instance based on a newer platform can be\nallocated, but never one with fewer capabilities. The value of this\nparameter must be a valid Compute Engine CPU platform name (such as \"Intel\nSkylake\"). This parameter is only useful for carefully optimized work\nloads where the CPU platform has a significant impact.\n\nFor more information about the effect of this parameter, see\nhttps://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.",
          "type": "string"
        },
        "disks": {
          "description": "The list of disks to create and attach to the VM.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        },
        "bootImage": {
          "description": "The host operating system image to use.\n\nCurrently, only Container-Optimized OS images can be used.\n\nThe default value is `projects/cos-cloud/global/images/family/cos-stable`,\nwhich selects the latest stable release of Container-Optimized OS.\n\nThis option is provided to allow testing against the beta release of the\noperating system to ensure that the new version does not interact\nnegatively with production pipelines.\n\nTo test a pipeline against the beta release of Container-Optimized OS,\nuse the value `projects/cos-cloud/global/images/family/cos-beta`.",
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/ServiceAccount"
        },
        "accelerators": {
          "description": "The list of accelerators to attach to the VM.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accelerator"
          }
        },
        "machineType": {
          "description": "The machine type of the virtual machine to create. Must be the short name\nof a standard machine type (such as \"n1-standard-1\") or a custom machine\ntype (such as \"custom-1-4096\", where \"1\" indicates the number of vCPUs and\n\"4096\" indicates the memory in MB). See\n[Creating an instance with a custom machine\ntype](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create)\nfor more specifications on creating a custom machine type.",
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "bootDiskSizeGb": {
          "description": "The size of the boot disk, in GB. The boot disk must be large\nenough to accommodate all of the Docker images from each action in the\npipeline at the same time. If not specified, a small but reasonable\ndefault value is used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListOperationsResponse": {
      "title": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "title": "OperationMetadata",
      "description": "Metadata describing an Operation.",
      "type": "object",
      "properties": {
        "runtimeMetadata": {
          "description": "Runtime metadata on this Operation.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "createTime": {
          "description": "The time at which the job was submitted to the Genomics service.",
          "type": "string"
        },
        "labels": {
          "description": "Optionally provided by the caller when submitting the request that creates\nthe operation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "projectId": {
          "description": "The Google Cloud Project in which the job is scoped.",
          "type": "string"
        },
        "clientId": {
          "description": "This field is deprecated. Use `labels` instead. Optionally provided by the\ncaller when submitting the request that creates the operation.",
          "type": "string"
        },
        "events": {
          "description": "Optional event messages that were generated during the job's execution.\nThis also contains any warnings that were generated during import\nor export.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationEvent"
          }
        },
        "endTime": {
          "description": "The time at which the job stopped running.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which the job began to run.",
          "type": "string"
        },
        "request": {
          "description": "The original request that started the operation. Note that this will be in\ncurrent version of the API. If the operation was started with v1beta2 API\nand a GetOperation is performed on v1 API, a v1 request will be returned.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ContainerStartedEvent": {
      "title": "ContainerStartedEvent",
      "description": "An event generated when a container starts.",
      "type": "object",
      "properties": {
        "actionId": {
          "description": "The numeric ID of the action that started this container.",
          "type": "integer",
          "format": "int32"
        },
        "ipAddress": {
          "description": "The public IP address that can be used to connect to the container. This\nfield is only populated when at least one port mapping is present. If the\ninstance was created with a private address, this field will be empty even\nif port mappings exist.",
          "type": "string"
        },
        "portMappings": {
          "description": "The container-to-host port mappings installed for this container. This\nset will contain any ports exposed using the `PUBLISH_EXPOSED_PORTS` flag\nas well as any specified in the `Action` definition.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "Mount": {
      "title": "Mount",
      "description": "Carries information about a particular disk mount inside a container.",
      "type": "object",
      "properties": {
        "disk": {
          "description": "The name of the disk to mount, as specified in the resources section.",
          "type": "string"
        },
        "readOnly": {
          "description": "If true, the disk is mounted read-only inside the container.",
          "type": "boolean"
        },
        "path": {
          "description": "The path to mount the disk inside the container.",
          "type": "string"
        }
      }
    },
    "CheckInRequest": {
      "title": "CheckInRequest",
      "description": "The parameters to the CheckIn method.",
      "type": "object",
      "properties": {
        "event": {
          "description": "A workflow specific event occurred.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "result": {
          "$ref": "#/definitions/Status"
        },
        "deadlineExpired": {
          "description": "The deadline has expired and the worker needs more time.",
          "type": "object"
        },
        "workerStatus": {
          "$ref": "#/definitions/WorkerStatus"
        }
      }
    },
    "ImportVariantsResponse": {
      "title": "ImportVariantsResponse",
      "description": "The variant data import response.",
      "type": "object",
      "properties": {
        "callSetIds": {
          "description": "IDs of the call sets created during the import.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ComputeEngine": {
      "title": "ComputeEngine",
      "description": "Describes a Compute Engine resource that is being managed by a running\npipeline.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "The machine type of the instance.",
          "type": "string"
        },
        "diskNames": {
          "description": "The names of the disks that were created for this pipeline.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instanceName": {
          "description": "The instance on which the operation is running.",
          "type": "string"
        },
        "zone": {
          "description": "The availability zone in which the instance resides.",
          "type": "string"
        }
      }
    },
    "WorkerStatus": {
      "title": "WorkerStatus",
      "description": "Data about the status of the worker VM.",
      "type": "object",
      "properties": {
        "attachedDisks": {
          "description": "Status of attached disks.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "totalRamBytes": {
          "description": "Total RAM.",
          "type": "string"
        },
        "uptimeSeconds": {
          "description": "System uptime.",
          "type": "string"
        },
        "freeRamBytes": {
          "description": "Free RAM.",
          "type": "string"
        },
        "bootDisk": {
          "description": "Status of the boot disk.",
          "type": "object"
        }
      }
    },
    "WorkerAssignedEvent": {
      "title": "WorkerAssignedEvent",
      "description": "An event generated after a worker VM has been assigned to run the\npipeline.",
      "type": "object",
      "properties": {
        "zone": {
          "description": "The zone the worker is running in.",
          "type": "string"
        },
        "instance": {
          "description": "The worker's instance name.",
          "type": "string"
        }
      }
    },
    "Network": {
      "title": "Network",
      "description": "The VM network configuration.",
      "type": "object",
      "properties": {
        "usePrivateAddress": {
          "description": "If set to true, do not attach a public IP address to the VM. Note that\nwithout a public IP address, additional configuration is required to\nallow the VM to access Google services.\n\nSee https://cloud.google.com/vpc/docs/configure-private-google-access\nfor more information.",
          "type": "boolean"
        },
        "subnetwork": {
          "description": "If the specified network is configured for custom subnet creation, the\nname of the subnetwork to attach the instance to must be specified here.\n\nThe value is prefixed with `regions/*/subnetworks/` unless it contains a\n`/`, in which case it is assumed to be a fully specified subnetwork\nresource URL.\n\nIf the `*` character appears in the value, it is replaced with the region\nthat the virtual machine has been allocated in.",
          "type": "string"
        },
        "name": {
          "description": "The network name to attach the VM's network interface to. The value will\nbe prefixed with `global/networks/` unless it contains a `/`, in which\ncase it is assumed to be a fully specified network resource URL.\n\nIf unspecified, the global default network is used.",
          "type": "string"
        }
      }
    },
    "Secret": {
      "title": "Secret",
      "description": "Holds encrypted information that is only decrypted and stored in RAM\nby the worker VM when running the pipeline.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the Cloud KMS key that will be used to decrypt the secret\nvalue. The VM service account must have the required permissions and\nauthentication scopes to invoke the `decrypt` method on the specified key.",
          "type": "string"
        },
        "cipherText": {
          "description": "The value of the cipherText response from the `encrypt` method. This field\nis intentionally unaudited.",
          "type": "string"
        }
      }
    },
    "DelayedEvent": {
      "title": "DelayedEvent",
      "description": "An event generated whenever a resource limitation or transient error\ndelays execution of a pipeline that was otherwise ready to run.",
      "type": "object",
      "properties": {
        "metrics": {
          "description": "If the delay was caused by a resource shortage, this field lists the\nCompute Engine metrics that are preventing this operation from running\n(for example, `CPUS` or `INSTANCES`). If the particular metric is not\nknown, a single `UNKNOWN` metric will be present.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cause": {
          "description": "A textual description of the cause of the delay. The string can change\nwithout notice because it is often generated by another service (such as\nCompute Engine).",
          "type": "string"
        }
      }
    },
    "Disk": {
      "title": "Disk",
      "description": "Carries information about a disk that can be attached to a VM.\n\nSee https://cloud.google.com/compute/docs/disks/performance for more\ninformation about disk type, size, and performance considerations.",
      "type": "object",
      "properties": {
        "sourceImage": {
          "description": "An optional image to put on the disk before attaching it to the VM.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The size, in GB, of the disk to attach. If the size is not\nspecified, a default is chosen to ensure reasonable I/O performance.\n\nIf the disk type is specified as `local-ssd`, multiple local drives are\nautomatically combined to provide the requested size. Note, however, that\neach physical SSD is 375GB in size, and no more than 8 drives can be\nattached to a single instance.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "A user-supplied name for the disk. Used when mounting the disk into\nactions. The name must contain only upper and lowercase alphanumeric\ncharacters and hypens and cannot start with a hypen.",
          "type": "string"
        },
        "type": {
          "description": "The Compute Engine disk type. If unspecified, `pd-standard` is used.",
          "type": "string"
        }
      }
    },
    "WorkerReleasedEvent": {
      "title": "WorkerReleasedEvent",
      "description": "An event generated when the worker VM that was assigned to the pipeline\nhas been released (deleted).",
      "type": "object",
      "properties": {
        "zone": {
          "description": "The zone the worker was running in.",
          "type": "string"
        },
        "instance": {
          "description": "The worker's instance name.",
          "type": "string"
        }
      }
    },
    "Action": {
      "title": "Action",
      "description": "Specifies a single action that runs a Docker container.",
      "type": "object",
      "properties": {
        "environment": {
          "description": "The environment to pass into the container. This environment is merged\nwith any values specified in the `Pipeline` message. These values\noverwrite any in the `Pipeline` message.\n\nIn addition to the values passed here, a few other values are\nautomatically injected into the environment. These cannot be hidden or\noverwritten.\n\n`GOOGLE_PIPELINE_FAILED` will be set to \"1\" if the pipeline failed\nbecause an action has exited with a non-zero status (and did not have the\n`IGNORE_EXIT_STATUS` flag set). This can be used to determine if additional\ndebug or logging actions should execute.\n\n`GOOGLE_LAST_EXIT_STATUS` will be set to the exit status of the last\nnon-background action that executed. This can be used by workflow engine\nauthors to determine whether an individual action has succeeded or failed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "portMappings": {
          "description": "A map of containers to host port mappings for this container. If the\ncontainer already specifies exposed ports, use the\n`PUBLISH_EXPOSED_PORTS` flag instead.\n\nThe host port number must be less than 65536. If it is zero, an unused\nrandom port is assigned. To determine the resulting port number, consult\nthe `ContainerStartedEvent` in the operation metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "labels": {
          "description": "Labels to associate with the action. This field is provided to assist\nworkflow engine authors in identifying actions (for example, to indicate\nwhat sort of action they perform, such as localization or debugging).\nThey are returned in the operation metadata, but are otherwise ignored.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entrypoint": {
          "description": "If specified, overrides the `ENTRYPOINT` specified in the container.",
          "type": "string"
        },
        "pidNamespace": {
          "description": "The PID namespace to run the action inside. If unspecified, a separate\nisolated namespace is used.",
          "type": "string"
        },
        "mounts": {
          "description": "A list of mounts to make available to the action.\n\nIn addition to the values specified here, every action has a special\nvirtual disk mounted under `/google` that contains log files and other\noperational components.\n\n<ul>\n  <li><code>/google/logs</code> All logs written during the pipeline\n  execution.</li>\n  <li><code>/google/logs/output</code> The combined standard output and\n  standard error of all actions run as part of the pipeline\n  execution.</li>\n  <li><code>/google/logs/action/*/stdout</code> The complete contents of\n  each individual action's standard output.</li>\n  <li><code>/google/logs/action/*/stderr</code> The complete contents of\n  each individual action's standard error output.</li>\n</ul>",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "timeout": {
          "description": "The maximum amount of time to give the action to complete. If the action\nfails to complete before the timeout, it will be terminated and the exit\nstatus will be non-zero. The pipeline will continue or terminate based\non the rules defined by the `ALWAYS_RUN` and `IGNORE_EXIT_STATUS` flags.",
          "type": "string"
        },
        "credentials": {
          "description": "If the specified image is hosted on a private registry other than Google\nContainer Registry, the credentials required to pull the image must be\nspecified here as an encrypted secret.\n\nThe secret must decrypt to a JSON-encoded dictionary containing both\n`username` and `password` keys.",
          "type": "object"
        },
        "name": {
          "description": "An optional name for the container. The container hostname will be set to\nthis name, making it useful for inter-container communication. The name\nmust contain only upper and lowercase alphanumeric characters and hypens\nand cannot start with a hypen.",
          "type": "string"
        },
        "commands": {
          "description": "If specified, overrides the `CMD` specified in the container. If the\ncontainer also has an `ENTRYPOINT` the values are used as entrypoint\narguments. Otherwise, they are used as a command and arguments to run\ninside the container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageUri": {
          "description": "The URI to pull the container image from. Note that all images referenced\nby actions in the pipeline are pulled before the first action runs. If\nmultiple actions reference the same image, it is only pulled once,\nensuring that the same image is used for all actions in a single pipeline.",
          "type": "string"
        },
        "flags": {
          "description": "The set of flags to apply to this action.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flag"
          }
        }
      }
    },
    "FailedEvent": {
      "title": "FailedEvent",
      "description": "An event generated when the execution of a pipeline has failed. Note\nthat other events can continue to occur after this event.",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/Code"
        },
        "cause": {
          "description": "The human-readable description of the cause of the failure.",
          "type": "string"
        }
      }
    },
    "ContainerKilledEvent": {
      "title": "ContainerKilledEvent",
      "description": "An event generated when a container is forcibly terminated by the\nworker. Currently, this only occurs when the container outlives the\ntimeout specified by the user.",
      "type": "object",
      "properties": {
        "actionId": {
          "description": "The numeric ID of the action that started the container.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContainerStoppedEvent": {
      "title": "ContainerStoppedEvent",
      "description": "An event generated when a container exits.",
      "type": "object",
      "properties": {
        "stderr": {
          "description": "The tail end of any content written to standard error by the container.\nIf the content emits large amounts of debugging noise or contains\nsensitive information, you can prevent the content from being printed by\nsetting the `DISABLE_STANDARD_ERROR_CAPTURE` flag.\n\nNote that only a small amount of the end of the stream is captured here.\nThe entire stream is stored in the `/google/logs` directory mounted into\neach action, and can be copied off the machine as described elsewhere.",
          "type": "string"
        },
        "exitStatus": {
          "description": "The exit status of the container.",
          "type": "integer",
          "format": "int32"
        },
        "actionId": {
          "description": "The numeric ID of the action that started this container.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DiskStatus": {
      "title": "DiskStatus",
      "description": "The status of a disk on a VM.",
      "type": "object",
      "properties": {
        "freeSpaceBytes": {
          "description": "Free disk space.",
          "type": "string"
        },
        "totalSpaceBytes": {
          "description": "Total disk space.",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "title": "Metadata",
      "description": "Carries information about the pipeline execution that is returned\nin the long running operation's metadata field.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time at which execution was completed and resources were cleaned up.",
          "type": "string"
        },
        "events": {
          "description": "The list of events that have happened so far during the execution of this\noperation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "startTime": {
          "description": "The first time at which resources were allocated to execute the pipeline.",
          "type": "string"
        },
        "createTime": {
          "description": "The time at which the operation was created by the API.",
          "type": "string"
        },
        "labels": {
          "description": "The user-defined labels associated with this operation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PullStartedEvent": {
      "title": "PullStartedEvent",
      "description": "An event generated when the worker starts pulling an image.",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "The URI of the image that was pulled.",
          "type": "string"
        }
      }
    },
    "UnexpectedExitStatusEvent": {
      "title": "UnexpectedExitStatusEvent",
      "description": "An event generated when the execution of a container results in a\nnon-zero exit status that was not otherwise ignored. Execution will\ncontinue, but only actions that are flagged as `ALWAYS_RUN` will be\nexecuted. Other actions will be skipped.",
      "type": "object",
      "properties": {
        "exitStatus": {
          "description": "The exit status of the container.",
          "type": "integer",
          "format": "int32"
        },
        "actionId": {
          "description": "The numeric ID of the action that started the container.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RunPipelineRequest": {
      "title": "RunPipelineRequest",
      "description": "The arguments to the `RunPipeline` method. The requesting user must have\nthe `iam.serviceAccounts.actAs` permission for the Cloud Genomics service\naccount or the request will fail.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "User-defined labels to associate with the returned operation. These\nlabels are not propagated to any Google Cloud Platform resources used by\nthe operation, and can be modified at any time.\n\nTo associate labels with resources created while executing the operation,\nsee the appropriate resource message (for example, `VirtualMachine`).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        }
      }
    },
    "PullStoppedEvent": {
      "title": "PullStoppedEvent",
      "description": "An event generated when the worker stops pulling an image.",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "The URI of the image that was pulled.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "title": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For pipelines and exports, an Empty response is returned.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. For example&#58; `operations/CJHU7Oi_ChDrveSpBRjfuL-qzoWAgEw`",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "type": "object"
        },
        "metadata": {
          "description": "An OperationMetadata or Metadata object. This will always be returned with the Operation.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RuntimeMetadata": {
      "title": "RuntimeMetadata",
      "description": "Runtime metadata that will be populated in the\nruntimeMetadata\nfield of the Operation associated with a RunPipeline execution.",
      "type": "object",
      "properties": {
        "computeEngine": {
          "$ref": "#/definitions/ComputeEngine"
        }
      }
    },
    "ImportReadGroupSetsResponse": {
      "title": "ImportReadGroupSetsResponse",
      "description": "The read group set import response.",
      "type": "object",
      "properties": {
        "readGroupSetIds": {
          "description": "IDs of the read group sets that were created.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The operation has finished with the given result.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "Carries information about events that occur during pipeline execution.",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "The time at which the event occurred.",
          "type": "string"
        },
        "details": {
          "description": "Machine-readable details about the event.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "description": {
          "description": "A human-readable description of the event. Note that these strings can\nchange at any time without notice. Any application logic must use the\ninformation in the `details` field.",
          "type": "string"
        }
      }
    },
    "ServiceAccount": {
      "title": "ServiceAccount",
      "description": "The service account to install on the VM. This account does not need\nany permissions other than those required by the pipeline.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address of the service account. If not specified, the default\nCompute Engine service account for the project will be used.",
          "type": "string"
        },
        "scopes": {
          "description": "List of scopes to be enabled for this service account on the VM, in\naddition to the Cloud Genomics API scope.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Code": {
      "title": "Code",
      "description": "The Google standard error code that best describes this failure.",
      "example": "OK",
      "type": "string",
      "enum": [
        "OK",
        "CANCELLED",
        "UNKNOWN",
        "INVALID_ARGUMENT",
        "DEADLINE_EXCEEDED",
        "NOT_FOUND",
        "ALREADY_EXISTS",
        "PERMISSION_DENIED",
        "UNAUTHENTICATED",
        "RESOURCE_EXHAUSTED",
        "FAILED_PRECONDITION",
        "ABORTED",
        "OUT_OF_RANGE",
        "UNIMPLEMENTED",
        "INTERNAL",
        "UNAVAILABLE",
        "DATA_LOSS"
      ]
    },
    "Flag": {
      "title": "Flag",
      "example": "FLAG_UNSPECIFIED",
      "type": "string",
      "enum": [
        "FLAG_UNSPECIFIED",
        "IGNORE_EXIT_STATUS",
        "RUN_IN_BACKGROUND",
        "ALWAYS_RUN",
        "ENABLE_FUSE",
        "PUBLISH_EXPOSED_PORTS",
        "DISABLE_IMAGE_PREFETCH",
        "DISABLE_STANDARD_ERROR_CAPTURE"
      ]
    }
  },
  "tags": [
    {
      "name": "pipelines",
      "description": ""
    },
    {
      "name": "workers",
      "description": ""
    },
    {
      "name": "operations",
      "description": ""
    }
  ]
}