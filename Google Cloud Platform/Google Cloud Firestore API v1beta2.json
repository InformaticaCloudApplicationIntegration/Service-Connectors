{
  "swagger": "2.0",
  "info": {
    "version": "v1beta2",
    "title": "Cloud Firestore API",
    "description": "Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development.\n",
    "contact": {}
  },
  "host": "firestore.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://firestore.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/datastore": "View and manage your Google Cloud Datastore data",
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta2/{+name}": {
      "get": {
        "description": "Gets the metadata and configuration for a Field.",
        "summary": "GetV1beta2ByName",
        "tags": [
          "fields"
        ],
        "operationId": "V1beta2ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Field"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      },
      "patch": {
        "description": "Updates a field configuration. Currently, field updates apply only to\nsingle field index configuration. However, calls to\nFirestoreAdmin.UpdateField should provide a field mask to avoid\nchanging any configuration that the caller isn't aware of. The field mask\nshould be specified as: `{ paths: \"index_config\" }`.\n\nThis call returns a google.longrunning.Operation which may be used to\ntrack the status of the field update. The metadata for\nthe operation will be the type FieldOperationMetadata.\n\nTo configure the default field settings for the database, use\nthe special `Field` with resource name:\n`projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.",
        "summary": "PatchV1beta2ByName",
        "tags": [
          "fields"
        ],
        "operationId": "V1beta2ByNamePatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Field"
            }
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "updateMask",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A mask, relative to the field. If specified, only configuration specified\nby this field_mask will be updated in the field."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes a composite index.",
        "summary": "DeleteV1beta2ByName",
        "tags": [
          "indexes"
        ],
        "operationId": "V1beta2ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1beta2/{+parent}/fields": {
      "get": {
        "description": "Lists the field configuration and metadata for this database.\n\nCurrently, FirestoreAdmin.ListFields only supports listing fields\nthat have been explicitly overridden. To issue this query, call\nFirestoreAdmin.ListFields with the filter set to\n`indexConfig.usesAncestorConfig:false`.",
        "summary": "ListV1beta2FieldsByParent",
        "tags": [
          "fields"
        ],
        "operationId": "V1beta2FieldsByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply to list results. Currently,\nFirestoreAdmin.ListFields only supports listing fields\nthat have been explicitly overridden. To issue this query, call\nFirestoreAdmin.ListFields with the filter set to\n`indexConfig.usesAncestorConfig:false`."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A page token, returned from a previous call to\nFirestoreAdmin.ListFields, that may be used to get the next\npage of results."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2ListFieldsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1beta2/{+parent}/indexes": {
      "get": {
        "description": "Lists composite indexes.",
        "summary": "ListV1beta2IndexesByParent",
        "tags": [
          "indexes"
        ],
        "operationId": "V1beta2IndexesByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to return."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply to list results."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A page token, returned from a previous call to\nFirestoreAdmin.ListIndexes, that may be used to get the next\npage of results."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2ListIndexesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a composite index. This returns a google.longrunning.Operation\nwhich may be used to track the status of the creation. The metadata for\nthe operation will be the type IndexOperationMetadata.",
        "summary": "CreateV1beta2IndexesByParent",
        "tags": [
          "indexes"
        ],
        "operationId": "V1beta2IndexesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Index"
            }
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1beta2/{+name}:importDocuments": {
      "post": {
        "description": "Imports documents into Google Cloud Firestore. Existing documents with the\nsame name are overwritten. The import occurs in the background and its\nprogress can be monitored and managed via the Operation resource that is\ncreated. If an ImportDocuments operation is cancelled, it is possible\nthat a subset of the data has already been imported to Cloud Firestore.",
        "summary": "ImportDocumentsV1beta2ImportDocumentsByName",
        "tags": [
          "databases"
        ],
        "operationId": "V1beta2ImportDocumentsByNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2ImportDocumentsRequest"
            }
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1beta2/{+name}:exportDocuments": {
      "post": {
        "description": "Exports a copy of all or a subset of documents from Google Cloud Firestore\nto another storage system, such as Google Cloud Storage. Recent updates to\ndocuments may not be reflected in the export. The export occurs in the\nbackground and its progress can be monitored and managed via the\nOperation resource that is created. The output of an export may only be\nused once the associated operation is done. If an export operation is\ncancelled before completion it may leave partial data behind in Google\nCloud Storage.",
        "summary": "ExportDocumentsV1beta2ExportDocumentsByName",
        "tags": [
          "databases"
        ],
        "operationId": "V1beta2ExportDocumentsByNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleFirestoreAdminV1beta2ExportDocumentsRequest"
            }
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "GoogleFirestoreAdminV1beta2ExportDocumentsMetadata": {
      "title": "GoogleFirestoreAdminV1beta2ExportDocumentsMetadata",
      "description": "Metadata for google.longrunning.Operation results from\nFirestoreAdmin.ExportDocuments.",
      "type": "object",
      "properties": {
        "progressDocuments": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "outputUriPrefix": {
          "description": "Where the entities are being exported to.",
          "type": "string"
        },
        "endTime": {
          "description": "The time this operation completed. Will be unset if operation still in\nprogress.",
          "type": "string"
        },
        "startTime": {
          "description": "The time this operation started.",
          "type": "string"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "collectionIds": {
          "description": "Which collection ids are being exported.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationState": {
          "$ref": "#/definitions/OperationState"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2FieldOperationMetadata": {
      "title": "GoogleFirestoreAdminV1beta2FieldOperationMetadata",
      "description": "Metadata for google.longrunning.Operation results from\nFirestoreAdmin.UpdateField.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "The time this operation started.",
          "type": "string"
        },
        "indexConfigDeltas": {
          "description": "A list of IndexConfigDelta, which describe the intent of this\noperation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleFirestoreAdminV1beta2IndexConfigDelta"
          }
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "documentProgress": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "field": {
          "description": "The field resource that this operation is acting on. For example:\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`",
          "type": "string"
        },
        "bytesProgress": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "endTime": {
          "description": "The time this operation completed. Will be unset if operation still in\nprogress.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "title": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "GoogleFirestoreAdminV1beta2IndexOperationMetadata": {
      "title": "GoogleFirestoreAdminV1beta2IndexOperationMetadata",
      "description": "Metadata for google.longrunning.Operation results from\nFirestoreAdmin.CreateIndex.",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/State"
        },
        "progressDocuments": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "endTime": {
          "description": "The time this operation completed. Will be unset if operation still in\nprogress.",
          "type": "string"
        },
        "index": {
          "description": "The index resource that this operation is acting on. For example:\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`",
          "type": "string"
        },
        "startTime": {
          "description": "The time this operation started.",
          "type": "string"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ListFieldsResponse": {
      "title": "GoogleFirestoreAdminV1beta2ListFieldsResponse",
      "description": "The response for FirestoreAdmin.ListFields.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "The requested fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Field"
          }
        },
        "nextPageToken": {
          "description": "A page token that may be used to request another page of results. If blank,\nthis is the last page.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2IndexField": {
      "title": "GoogleFirestoreAdminV1beta2IndexField",
      "description": "A field in an index.\nThe field_path describes which field is indexed, the value_mode describes\nhow the field value is indexed.",
      "type": "object",
      "properties": {
        "arrayConfig": {
          "$ref": "#/definitions/ArrayConfig"
        },
        "fieldPath": {
          "description": "Can be __name__.\nFor single field indexes, this must match the name of the field or may\nbe omitted.",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/Order"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ExportDocumentsRequest": {
      "title": "GoogleFirestoreAdminV1beta2ExportDocumentsRequest",
      "description": "The request for FirestoreAdmin.ExportDocuments.",
      "type": "object",
      "properties": {
        "collectionIds": {
          "description": "Which collection ids to export. Unspecified means all collections.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputUriPrefix": {
          "description": "The output URI. Currently only supports Google Cloud Storage URIs of the\nform: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name\nof the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional\nGoogle Cloud Storage namespace path. When\nchoosing a name, be sure to consider Google Cloud Storage naming\nguidelines: https://cloud.google.com/storage/docs/naming.\nIf the URI is a bucket (without a namespace path), a prefix will be\ngenerated based on the start time.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2Progress": {
      "title": "GoogleFirestoreAdminV1beta2Progress",
      "description": "The progress, in documents, of this operation.",
      "type": "object",
      "properties": {
        "completedWork": {
          "description": "The amount of work completed.",
          "type": "string"
        },
        "estimatedWork": {
          "description": "The amount of work estimated.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ImportDocumentsMetadata": {
      "title": "GoogleFirestoreAdminV1beta2ImportDocumentsMetadata",
      "description": "Metadata for google.longrunning.Operation results from\nFirestoreAdmin.ImportDocuments.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The time this operation completed. Will be unset if operation still in\nprogress.",
          "type": "string"
        },
        "startTime": {
          "description": "The time this operation started.",
          "type": "string"
        },
        "inputUriPrefix": {
          "description": "The location of the documents being imported.",
          "type": "string"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        },
        "collectionIds": {
          "description": "Which collection ids are being imported.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationState": {
          "$ref": "#/definitions/OperationState1"
        },
        "progressDocuments": {
          "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Progress"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ImportDocumentsRequest": {
      "title": "GoogleFirestoreAdminV1beta2ImportDocumentsRequest",
      "description": "The request for FirestoreAdmin.ImportDocuments.",
      "type": "object",
      "properties": {
        "collectionIds": {
          "description": "Which collection ids to import. Unspecified means all collections included\nin the import.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputUriPrefix": {
          "description": "Location of the exported files.\nThis must match the output_uri_prefix of an ExportDocumentsResponse from\nan export that has completed successfully.\nSee:\ngoogle.firestore.admin.v1beta2.ExportDocumentsResponse.output_uri_prefix.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ListIndexesResponse": {
      "title": "GoogleFirestoreAdminV1beta2ListIndexesResponse",
      "description": "The response for FirestoreAdmin.ListIndexes.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A page token that may be used to request another page of results. If blank,\nthis is the last page.",
          "type": "string"
        },
        "indexes": {
          "description": "The requested indexes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Index"
          }
        }
      }
    },
    "GoogleFirestoreAdminV1beta2IndexConfig": {
      "title": "GoogleFirestoreAdminV1beta2IndexConfig",
      "description": "The index configuration for this field.",
      "type": "object",
      "properties": {
        "indexes": {
          "description": "The indexes supported for this field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleFirestoreAdminV1beta2Index"
          }
        },
        "usesAncestorConfig": {
          "description": "Output only.\nWhen true, the `Field`'s index configuration is set from the\nconfiguration specified by the `ancestor_field`.\nWhen false, the `Field`'s index configuration is defined explicitly.",
          "type": "boolean"
        },
        "reverting": {
          "description": "Output only\nWhen true, the `Field`'s index configuration is in the process of being\nreverted. Once complete, the index config will transition to the same\nstate as the field specified by `ancestor_field`, at which point\n`uses_ancestor_config` will be `true` and `reverting` will be `false`.",
          "type": "boolean"
        },
        "ancestorField": {
          "description": "Output only.\nSpecifies the resource name of the `Field` from which this field's\nindex configuration is set (when `uses_ancestor_config` is true),\nor from which it *would* be set if this field had no index configuration\n(when `uses_ancestor_config` is false).",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2Field": {
      "title": "GoogleFirestoreAdminV1beta2Field",
      "description": "Represents a single field in the database.\n\nFields are grouped by their \"Collection Group\", which represent all\ncollections in the database with the same id.",
      "type": "object",
      "properties": {
        "indexConfig": {
          "description": "The index configuration for this field. If unset, field indexing will\nrevert to the configuration defined by the `ancestor_field`. To\nexplicitly remove all indexes for this field, specify an index config\nwith an empty list of indexes.",
          "type": "object"
        },
        "name": {
          "description": "A field name of the form\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`\n\nA field path may be a simple field name, e.g. `address` or a path to fields\nwithin map_value , e.g. `address.city`,\nor a special field path. The only valid special field is `*`, which\nrepresents any field.\n\nField paths may be quoted using ` (backtick). The only character that needs\nto be escaped within a quoted field path is the backtick character itself,\nescaped using a backslash. Special characters in field paths that\nmust be quoted include: `*`, `.`,\n``` (backtick), `[`, `]`, as well as any ascii symbolic characters.\n\nExamples:\n(Note: Comments here are written in markdown syntax, so there is an\n additional layer of backticks to represent a code block)\n`\\`address.city\\`` represents a field named `address.city`, not the map key\n`city` in the field `address`.\n`\\`*\\`` represents a field named `*`, not any field.\n\nA special `Field` contains the default indexing settings for all fields.\nThis field's resource name is:\n`projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`\nIndexes defined on this `Field` will be applied to all fields which do not\nhave their own `Field` index configuration.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2Index": {
      "title": "GoogleFirestoreAdminV1beta2Index",
      "description": "Cloud Firestore indexes enable simple and complex queries against\ndocuments in a database.",
      "type": "object",
      "properties": {
        "queryScope": {
          "$ref": "#/definitions/QueryScope"
        },
        "fields": {
          "description": "The fields supported by this index.\n\nFor composite indexes, this is always 2 or more fields.\nThe last field entry is always for the field path `__name__`. If, on\ncreation, `__name__` was not specified as the last field, it will be added\nautomatically with the same direction as that of the last field defined. If\nthe final field in a composite index is not directional, the `__name__`\nwill be ordered ASCENDING (unless explicitly specified).\n\nFor single field indexes, this will always be exactly one entry with a\nfield path equal to the field path of the associated field.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "state": {
          "$ref": "#/definitions/State2"
        },
        "name": {
          "description": "Output only.\nA server defined name for this index.\nThe form of this name for composite indexes will be:\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`\nFor single field indexes, this field will be empty.",
          "type": "string"
        }
      }
    },
    "GoogleFirestoreAdminV1beta2IndexConfigDelta": {
      "title": "GoogleFirestoreAdminV1beta2IndexConfigDelta",
      "description": "Information about an index configuration change.",
      "type": "object",
      "properties": {
        "changeType": {
          "$ref": "#/definitions/ChangeType"
        },
        "index": {
          "description": "The index being changed.",
          "type": "object"
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The error result of the operation in case of failure or cancellation.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "GoogleFirestoreAdminV1beta2ExportDocumentsResponse": {
      "title": "GoogleFirestoreAdminV1beta2ExportDocumentsResponse",
      "description": "Returned in the google.longrunning.Operation response field.",
      "type": "object",
      "properties": {
        "outputUriPrefix": {
          "description": "Location of the output files. This can be used to begin an import\ninto Cloud Firestore (this project or another project) after the operation\ncompletes successfully.",
          "type": "string"
        }
      }
    },
    "ArrayConfig": {
      "title": "ArrayConfig",
      "description": "Indicates that this field supports operations on `array_value`s.",
      "example": "ARRAY_CONFIG_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ARRAY_CONFIG_UNSPECIFIED",
        "CONTAINS"
      ]
    },
    "ChangeType": {
      "title": "ChangeType",
      "description": "Specifies how the index is changing.",
      "example": "CHANGE_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CHANGE_TYPE_UNSPECIFIED",
        "ADD",
        "REMOVE"
      ]
    },
    "OperationState": {
      "title": "OperationState",
      "description": "The state of the export operation.",
      "example": "OPERATION_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATION_STATE_UNSPECIFIED",
        "INITIALIZING",
        "PROCESSING",
        "CANCELLING",
        "FINALIZING",
        "SUCCESSFUL",
        "FAILED",
        "CANCELLED"
      ]
    },
    "OperationState1": {
      "title": "OperationState1",
      "description": "The state of the import operation.",
      "example": "OPERATION_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATION_STATE_UNSPECIFIED",
        "INITIALIZING",
        "PROCESSING",
        "CANCELLING",
        "FINALIZING",
        "SUCCESSFUL",
        "FAILED",
        "CANCELLED"
      ]
    },
    "Order": {
      "title": "Order",
      "description": "Indicates that this field supports ordering by the specified order or\ncomparing using =, <, <=, >, >=.",
      "example": "ORDER_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ORDER_UNSPECIFIED",
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "QueryScope": {
      "title": "QueryScope",
      "description": "Indexes with a collection query scope specified allow queries\nagainst a collection that is the child of a specific document, specified at\nquery time, and that has the same collection id.\n\nIndexes with a collection group query scope specified allow queries against\nall collections descended from a specific document, specified at query\ntime, and that have the same collection id as this index.",
      "example": "QUERY_SCOPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "QUERY_SCOPE_UNSPECIFIED",
        "COLLECTION"
      ]
    },
    "State": {
      "title": "State",
      "description": "The state of the operation.",
      "example": "OPERATION_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATION_STATE_UNSPECIFIED",
        "INITIALIZING",
        "PROCESSING",
        "CANCELLING",
        "FINALIZING",
        "SUCCESSFUL",
        "FAILED",
        "CANCELLED"
      ]
    },
    "State2": {
      "title": "State2",
      "description": "Output only.\nThe serving state of the index.",
      "example": "STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "CREATING",
        "READY",
        "NEEDS_REPAIR"
      ]
    }
  },
  "tags": [
    {
      "name": "fields",
      "description": ""
    },
    {
      "name": "indexes",
      "description": ""
    },
    {
      "name": "databases",
      "description": ""
    }
  ]
}