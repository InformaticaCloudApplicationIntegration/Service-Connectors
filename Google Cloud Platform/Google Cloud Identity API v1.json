{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Cloud Identity API",
    "description": "API for provisioning and managing identity resources.",
    "contact": {}
  },
  "host": "cloudidentity.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{+name}": {
      "delete": {
        "description": "Deletes a Membership.",
        "summary": "DeleteV1ByName",
        "tags": [
          "memberships"
        ],
        "operationId": "V1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Retrieves a Membership.",
        "summary": "GetV1ByName",
        "tags": [
          "memberships"
        ],
        "operationId": "V1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Membership"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates a Group.",
        "summary": "PatchV1ByName",
        "tags": [
          "groups"
        ],
        "operationId": "V1ByNamePatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "updateMask",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Editable fields: `display_name`, `description`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+parent}/memberships": {
      "get": {
        "description": "List Memberships within a Group.",
        "summary": "ListV1MembershipsByParent",
        "tags": [
          "memberships"
        ],
        "operationId": "V1MembershipsByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The next_page_token value returned from a previous list request, if any."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of Memberships to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "default": "VIEW_UNSPECIFIED",
            "type": "string",
            "description": "Membership resource view to be returned. Defaults to View.BASIC. (Acceptable values are: \"VIEW_UNSPECIFIED\", \"BASIC\", \"FULL\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListMembershipsResponse"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Creates a Membership.",
        "summary": "CreateV1MembershipsByParent",
        "tags": [
          "memberships"
        ],
        "operationId": "V1MembershipsByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Membership"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+parent}/memberships:lookup": {
      "get": {
        "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Membership\nwithin a Group by member's EntityKey.",
        "summary": "LookupV1MembershipsLookupByParent",
        "tags": [
          "memberships"
        ],
        "operationId": "V1MembershipsLookupByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "memberKey.id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace."
          },
          {
            "name": "memberKey.namespace",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LookupMembershipNameResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/groups": {
      "get": {
        "description": "List groups within a customer or a domain.",
        "summary": "ListV1Groups",
        "tags": [
          "groups"
        ],
        "operationId": "V1GroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The next_page_token value returned from a previous list request, if any."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of Groups to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "default": "VIEW_UNSPECIFIED",
            "type": "string",
            "description": "Group resource view to be returned. Defaults to [View.BASIC](). (Acceptable values are: \"VIEW_UNSPECIFIED\", \"BASIC\", \"FULL\")"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "`Required`. May be made Optional in the future.\nCustomer ID to list all groups from."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListGroupsResponse"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Creates a Group.",
        "summary": "CreateV1Groups",
        "tags": [
          "groups"
        ],
        "operationId": "V1GroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/groups:lookup": {
      "get": {
        "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Group by\nits EntityKey.",
        "summary": "LookupV1GroupsLookup",
        "tags": [
          "groups"
        ],
        "operationId": "V1GroupsLookupGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "groupKey.id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace."
          },
          {
            "name": "groupKey.namespace",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LookupGroupNameResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/groups:search": {
      "get": {
        "description": "Searches for Groups.",
        "summary": "SearchV1GroupsSearch",
        "tags": [
          "groups"
        ],
        "operationId": "V1GroupsSearchGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The next_page_token value returned from a previous search request, if any."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of Groups to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "`Required`. Query string for performing search on groups. Users can search\non parent and label attributes of groups.\nEXACT match ('==') is supported on parent, and CONTAINS match ('in') is\nsupported on labels."
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "default": "VIEW_UNSPECIFIED",
            "type": "string",
            "description": "Group resource view to be returned. Defaults to [View.BASIC](). (Acceptable values are: \"VIEW_UNSPECIFIED\", \"BASIC\", \"FULL\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchGroupsResponse"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "ListGroupsResponse": {
      "title": "ListGroupsResponse",
      "description": "Response message for ListGroups operation.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.",
          "type": "string"
        },
        "groups": {
          "description": "Groups returned in response to list request.\nThe results are not sorted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      }
    },
    "Group": {
      "title": "Group",
      "description": "Resource representing a Group.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "The time when the Group was last updated.\nOutput only.",
          "type": "string"
        },
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique ID\nassigned to the Group.\n\nMust be left blank while creating a Group.",
          "type": "string"
        },
        "groupKey": {
          "description": "EntityKey of the Group.\n\nMust be set when creating a Group, read-only afterwards.",
          "type": "object"
        },
        "displayName": {
          "description": "The Group's display name.",
          "type": "string"
        },
        "description": {
          "description": "An extended description to help users determine the purpose of a Group. For\nexample, you can include information about who should join the Group, the\ntypes of messages to send to the Group, links to FAQs about the Group, or\nrelated Groups. Maximum length is 4,096 characters.",
          "type": "string"
        },
        "parent": {
          "description": "The entity under which this Group resides in Cloud Identity resource\nhierarchy. Must be set when creating a Group, read-only afterwards.\n\nCurrently allowed types: `identitysources`.",
          "type": "string"
        },
        "labels": {
          "description": "`Required`. Labels for Group resource.\nFor creating Groups under a namespace, set label key to\n'labels/system/groups/external' and label value as empty.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "The time when the Group was created.\nOutput only.",
          "type": "string"
        }
      }
    },
    "Membership": {
      "title": "Membership",
      "description": "Resource representing a Membership within a Group",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Last updated timestamp of the Membership. Output only.",
          "type": "string"
        },
        "roles": {
          "description": "Roles for a member within the Group.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MembershipRole"
          }
        },
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership in the format: `groups/{group_id}/memberships/{member_id}`, where\ngroup_id is the unique ID assigned to the Group to which Membership belongs\nto, and member_id is the unique ID assigned to the member\n\nMust be left blank while creating a Membership.",
          "type": "string"
        },
        "preferredMemberKey": {
          "$ref": "#/definitions/EntityKey"
        },
        "createTime": {
          "description": "Creation timestamp of the Membership. Output only.",
          "type": "string"
        }
      }
    },
    "MembershipRole": {
      "title": "MembershipRole",
      "description": "Resource representing a role within a Membership.",
      "type": "object",
      "properties": {
        "name": {
          "description": "MembershipRole in string format.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`.",
          "type": "string"
        }
      }
    },
    "EntityKey": {
      "title": "EntityKey",
      "description": "EntityKey of the entity to be added as the member. Must be set while\ncreating a Membership, read-only afterwards.\n\nCurrently allowed entity types: `Users`, `Groups`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "title": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The error result of the operation in case of failure or cancellation.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "LookupMembershipNameResponse": {
      "title": "LookupMembershipNameResponse",
      "type": "object",
      "properties": {
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership being looked up.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique ID assigned to the Group to which Membership belongs to, and\n`member_id` is the unique ID assigned to the member.",
          "type": "string"
        }
      }
    },
    "SearchGroupsResponse": {
      "title": "SearchGroupsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for specified query.",
          "type": "string"
        },
        "groups": {
          "description": "List of Groups satisfying the search query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      }
    },
    "LookupGroupNameResponse": {
      "title": "LookupGroupNameResponse",
      "type": "object",
      "properties": {
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.",
          "type": "string"
        }
      }
    },
    "ListMembershipsResponse": {
      "title": "ListMembershipsResponse",
      "type": "object",
      "properties": {
        "memberships": {
          "description": "List of Memberships.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Membership"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "memberships",
      "description": ""
    },
    {
      "name": "groups",
      "description": ""
    }
  ]
}