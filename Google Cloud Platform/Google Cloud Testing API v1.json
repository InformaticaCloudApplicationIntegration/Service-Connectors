{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Cloud Testing API",
    "description": "Allows developers to run automated tests for their mobile applications on Google infrastructure.",
    "contact": {}
  },
  "host": "testing.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://testing.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": "View your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/projects/{projectId}/testMatrices/{testMatrixId}:cancel": {
      "post": {
        "description": "Cancels unfinished test executions in a test matrix.\nThis call returns immediately and cancellation proceeds asychronously.\nIf the matrix is already final, this operation will have no effect.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Test Matrix does not exist",
        "summary": "CancelV1ProjectsTestMatricesCancelByProjectId",
        "tags": [
          "testMatrices"
        ],
        "operationId": "V1ProjectsTestMatricesCancelByProjectIdAndTestMatrixIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cloud project that owns the test."
          },
          {
            "name": "testMatrixId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Test matrix that will be canceled."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CancelTestMatrixResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}/testMatrices/{testMatrixId}": {
      "get": {
        "description": "Checks the status of a test matrix.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Test Matrix does not exist",
        "summary": "GetV1ProjectsTestMatricesByProjectId",
        "tags": [
          "testMatrices"
        ],
        "operationId": "V1ProjectsTestMatricesByProjectIdAndTestMatrixIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cloud project that owns the test matrix."
          },
          {
            "name": "testMatrixId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique test matrix id which was assigned by the service."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestMatrix"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}/testMatrices": {
      "post": {
        "description": "Creates and runs a matrix of tests according to the given specifications.\nUnsupported environments will be returned in the state UNSUPPORTED.\nMatrices are limited to at most 200 supported executions.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed or if the matrix expands\n                     to more than 200 supported executions",
        "summary": "CreateV1ProjectsTestMatricesByProjectId",
        "tags": [
          "testMatrices"
        ],
        "operationId": "V1ProjectsTestMatricesByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The GCE project under which this job will run."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestMatrix"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "requestId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A string id used to detect duplicated requests.\nIds are automatically scoped to a project, so\nusers should ensure the ID is unique per-project.\nA UUID is recommended.\n\nOptional, but strongly recommended."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestMatrix"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1/testEnvironmentCatalog/{environmentType}": {
      "get": {
        "description": "Gets the catalog of supported test environments.\n\nMay return any of the following canonical error codes:\n\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the environment type does not exist\n- INTERNAL - if an internal error occurred",
        "summary": "GetV1TestEnvironmentCatalog",
        "tags": [
          "testEnvironmentCatalog"
        ],
        "operationId": "V1TestEnvironmentCatalogByEnvironmentTypeGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "environmentType",
            "in": "path",
            "required": true,
            "default": "ENVIRONMENT_TYPE_UNSPECIFIED",
            "type": "string",
            "description": "Required. The type of environment that should be listed. (Acceptable values are: \"ENVIRONMENT_TYPE_UNSPECIFIED\", \"ANDROID\", \"IOS\", \"NETWORK_CONFIGURATION\", \"PROVIDED_SOFTWARE\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "For authorization, the cloud project requesting the TestEnvironmentCatalog."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestEnvironmentCatalog"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ]
          }
        ]
      }
    },
    "/v1/applicationDetailService/getApkDetails": {
      "post": {
        "description": "Gets the details of an Android application APK.",
        "summary": "GetApkDetailsV1ApplicationDetailServiceGetApkDetails",
        "tags": [
          "applicationDetailService"
        ],
        "operationId": "V1ApplicationDetailServiceGetApkDetailsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileReference"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetApkDetailsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AndroidMatrix": {
      "title": "AndroidMatrix",
      "description": "A set of Android device configuration permutations is defined by the\nthe cross-product of the given axes. Internally, the given AndroidMatrix\nwill be expanded into a set of AndroidDevices.\n\nOnly supported permutations will be instantiated.  Invalid permutations\n(e.g., incompatible models/versions) are ignored.",
      "type": "object",
      "properties": {
        "androidVersionIds": {
          "description": "Required. The ids of the set of Android OS version to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locales": {
          "description": "Required. The set of locales the test device will enable for testing.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "androidModelIds": {
          "description": "Required. The ids of the set of Android device to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orientations": {
          "description": "Required. The set of orientations to test with.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestSpecification": {
      "title": "TestSpecification",
      "description": "A description of how to run the test.",
      "type": "object",
      "properties": {
        "iosXcTest": {
          "$ref": "#/definitions/IosXcTest"
        },
        "testTimeout": {
          "description": "Max time a test execution is allowed to run before it is\nautomatically cancelled.\nThe default value is 5 min.",
          "type": "string"
        },
        "autoGoogleLogin": {
          "description": "Enables automatic Google account login.\nIf set, the service will automatically generate a Google test account and\nadd it to the device, before executing the test. Note that test accounts\nmight be reused.\nMany applications show their full set of functionalities when an account is\npresent on the device. Logging into the device with these generated\naccounts allows testing more functionalities.\nDefault is false.",
          "type": "boolean"
        },
        "iosTestSetup": {
          "$ref": "#/definitions/IosTestSetup"
        },
        "androidRoboTest": {
          "$ref": "#/definitions/AndroidRoboTest"
        },
        "testSetup": {
          "$ref": "#/definitions/TestSetup"
        },
        "androidTestLoop": {
          "$ref": "#/definitions/AndroidTestLoop"
        },
        "androidInstrumentationTest": {
          "$ref": "#/definitions/AndroidInstrumentationTest"
        },
        "disablePerformanceMetrics": {
          "description": "Disables performance metrics recording; may reduce test latency.",
          "type": "boolean"
        },
        "disableVideoRecording": {
          "description": "Disables video recording; may reduce test latency.",
          "type": "boolean"
        }
      }
    },
    "TestMatrix": {
      "title": "TestMatrix",
      "description": "A group of one or more TestExecutions, built by taking a\nproduct of values over a pre-defined set of axes.",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/State"
        },
        "projectId": {
          "description": "The cloud project that owns the test matrix.",
          "type": "string"
        },
        "testSpecification": {
          "$ref": "#/definitions/TestSpecification"
        },
        "clientInfo": {
          "$ref": "#/definitions/ClientInfo"
        },
        "testExecutions": {
          "description": "Output only. The list of test executions that the service creates for\nthis matrix.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestExecution"
          }
        },
        "timestamp": {
          "description": "Output only. The time this test matrix was initially created.",
          "type": "string"
        },
        "environmentMatrix": {
          "$ref": "#/definitions/EnvironmentMatrix"
        },
        "testMatrixId": {
          "description": "Output only. Unique id set by the service.",
          "type": "string"
        },
        "resultStorage": {
          "$ref": "#/definitions/ResultStorage"
        },
        "invalidMatrixDetails": {
          "$ref": "#/definitions/InvalidMatrixDetails"
        },
        "flakyTestAttempts": {
          "description": "The number of times a TestExecution should be re-attempted if one or more\nof its test cases fail for any reason.\nThe maximum number of reruns allowed is 10.\n\nDefault is 0, which implies no reruns.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FileReference": {
      "title": "FileReference",
      "description": "A reference to a file, used for user inputs.",
      "type": "object",
      "properties": {
        "gcsPath": {
          "description": "A path to a file in Google Cloud Storage.\nExample: gs://build-app-1414623860166/app-debug-unaligned.apk",
          "type": "string"
        }
      }
    },
    "ToolResultsExecution": {
      "title": "ToolResultsExecution",
      "description": "Represents a tool results execution resource.\n\nThis has the results of a TestMatrix.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Output only. The cloud project that owns the tool results execution.",
          "type": "string"
        },
        "historyId": {
          "description": "Output only. A tool results history ID.",
          "type": "string"
        },
        "executionId": {
          "description": "Output only. A tool results execution ID.",
          "type": "string"
        }
      }
    },
    "ToolResultsHistory": {
      "title": "ToolResultsHistory",
      "description": "Represents a tool results history resource.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required. The cloud project that owns the tool results history.",
          "type": "string"
        },
        "historyId": {
          "description": "Required. A tool results history ID.",
          "type": "string"
        }
      }
    },
    "AndroidRoboTest": {
      "title": "AndroidRoboTest",
      "description": "An Android robo test.",
      "type": "object",
      "properties": {
        "maxDepth": {
          "description": "The max depth of the traversal stack Robo can explore. Needs to be at least\n2 to make Robo explore the app beyond the first activity.\nDefault is 50.",
          "type": "integer",
          "format": "int32"
        },
        "appApk": {
          "description": "The APK for the application under test.",
          "type": "object"
        },
        "appPackageId": {
          "description": "The java package for the application under test.\nThe default value is determined by examining the application's manifest.",
          "type": "string"
        },
        "startingIntents": {
          "description": "The intents used to launch the app for the crawl.\nIf none are provided, then the main launcher activity is launched.\nIf some are provided, then only those provided are launched (the main\nlauncher activity must be provided explicitly).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "appInitialActivity": {
          "description": "The initial activity that should be used to start the app.",
          "type": "string"
        },
        "maxSteps": {
          "description": "The max number of steps Robo can execute.\nDefault is no limit.",
          "type": "integer",
          "format": "int32"
        },
        "appBundle": {
          "description": "A multi-apk app bundle for the application under test.",
          "type": "object"
        },
        "roboDirectives": {
          "description": "A set of directives Robo should apply during the crawl.\nThis allows users to customize the crawl. For example, the username and\npassword for a test account can be provided.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "roboScript": {
          "description": "A JSON file with a sequence of actions Robo should perform as a prologue\nfor the crawl.",
          "type": "object"
        }
      }
    },
    "ApkManifest": {
      "title": "ApkManifest",
      "description": "An Android app manifest. See\nhttp://developer.android.com/guide/topics/manifest/manifest-intro.html",
      "type": "object",
      "properties": {
        "minSdkVersion": {
          "description": "Minimum API level required for the application to run.",
          "type": "integer",
          "format": "int32"
        },
        "packageName": {
          "description": "Full Java-style package name for this application, e.g.\n\"com.example.foo\".",
          "type": "string"
        },
        "maxSdkVersion": {
          "description": "Maximum API level on which the application is designed to run.",
          "type": "integer",
          "format": "int32"
        },
        "intentFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentFilter"
          }
        },
        "applicationLabel": {
          "description": "User-readable name for the application.",
          "type": "string"
        }
      }
    },
    "IosDeviceList": {
      "title": "IosDeviceList",
      "description": "A list of iOS device configurations in which the test is to be executed.",
      "type": "object",
      "properties": {
        "iosDevices": {
          "description": "Required. A list of iOS devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IosDevice"
          }
        }
      }
    },
    "AndroidTestLoop": {
      "title": "AndroidTestLoop",
      "description": "An Android Application with a Test Loop.",
      "type": "object",
      "properties": {
        "appBundle": {
          "description": "A multi-apk app bundle for the application under test.",
          "type": "object"
        },
        "scenarios": {
          "description": "The list of scenarios that should be run during the test.\nThe default is all test loops, derived from the application's\nmanifest.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "scenarioLabels": {
          "description": "The list of scenario labels that should be run during the test.\nThe scenario labels should map to labels defined in the application's\nmanifest. For example, player_experience and\ncom.google.test.loops.player_experience add all of the loops labeled in the\nmanifest with the com.google.test.loops.player_experience name to the\nexecution.\nScenarios can also be specified in the scenarios field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appApk": {
          "description": "The APK for the application under test.",
          "type": "object"
        },
        "appPackageId": {
          "description": "The java package for the application under test.\nThe default is determined by examining the application's manifest.",
          "type": "string"
        }
      }
    },
    "NetworkConfigurationCatalog": {
      "title": "NetworkConfigurationCatalog",
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkConfiguration"
          }
        }
      }
    },
    "AndroidDeviceCatalog": {
      "title": "AndroidDeviceCatalog",
      "description": "The currently supported Android devices.",
      "type": "object",
      "properties": {
        "models": {
          "description": "The set of supported Android device models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidModel"
          }
        },
        "versions": {
          "description": "The set of supported Android OS versions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidVersion"
          }
        },
        "runtimeConfiguration": {
          "$ref": "#/definitions/AndroidRuntimeConfiguration"
        }
      }
    },
    "ApkDetail": {
      "title": "ApkDetail",
      "description": "Android application details based on application manifest and apk archive\ncontents.",
      "type": "object",
      "properties": {
        "apkManifest": {
          "$ref": "#/definitions/ApkManifest"
        }
      }
    },
    "ClientInfo": {
      "title": "ClientInfo",
      "description": "Information about the client which invoked the test.",
      "type": "object",
      "properties": {
        "clientInfoDetails": {
          "description": "The list of detailed information about client.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "name": {
          "description": "Required. Client name, such as gcloud.",
          "type": "string"
        }
      }
    },
    "EnvironmentMatrix": {
      "title": "EnvironmentMatrix",
      "description": "Required. How the host machine(s) are configured.",
      "type": "object",
      "properties": {
        "androidDeviceList": {
          "description": "A list of Android devices; the test will be run only on the specified\ndevices.",
          "type": "object"
        },
        "androidMatrix": {
          "description": "A matrix of Android devices.",
          "type": "object"
        },
        "iosDeviceList": {
          "description": "A list of iOS devices.",
          "type": "object"
        }
      }
    },
    "CancelTestMatrixResponse": {
      "title": "CancelTestMatrixResponse",
      "description": "Response containing the current state of the specified test matrix.",
      "type": "object",
      "properties": {
        "testState": {
          "$ref": "#/definitions/TestState"
        }
      }
    },
    "Date": {
      "title": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RoboStartingIntent": {
      "title": "RoboStartingIntent",
      "description": "Message for specifying the start activities to crawl.",
      "type": "object",
      "properties": {
        "startActivity": {
          "$ref": "#/definitions/StartActivityIntent"
        },
        "launcherActivity": {
          "description": "Specifies an intent that starts the main launcher activity.",
          "type": "object"
        }
      }
    },
    "Locale": {
      "title": "Locale",
      "description": "A location/region designation for language.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id for this locale.\nExample: \"en_US\".",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this dimension.\nExample: \"default\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "description": "A human-friendly string representing the region for this\nlocale. Example: \"United States\". Not present for every locale.",
          "type": "string"
        },
        "name": {
          "description": "A human-friendly name for this language/locale.\nExample: \"English\".",
          "type": "string"
        }
      }
    },
    "Account": {
      "title": "Account",
      "description": "Identifies an account and how to log into it.",
      "type": "object",
      "properties": {
        "googleAuto": {
          "description": "An automatic google login account.",
          "type": "object"
        }
      }
    },
    "AppBundle": {
      "title": "AppBundle",
      "description": "An Android App Bundle file format, containing a BundleConfig.pb file,\na base module directory, zero or more dynamic feature module directories.\n<p>See https://developer.android.com/guide/app-bundle/build for guidance on\nbuilding App Bundles.",
      "type": "object",
      "properties": {
        "bundleLocation": {
          "$ref": "#/definitions/FileReference"
        }
      }
    },
    "AndroidDevice": {
      "title": "AndroidDevice",
      "description": "A single Android device.",
      "type": "object",
      "properties": {
        "androidModelId": {
          "description": "Required. The id of the Android device to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "androidVersionId": {
          "description": "Required. The id of the Android OS version to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "orientation": {
          "description": "Required. How the device is oriented during the test.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "locale": {
          "description": "Required. The locale the test device used for testing.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        }
      }
    },
    "NetworkConfiguration": {
      "title": "NetworkConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique opaque id for this network traffic configuration.",
          "type": "string"
        },
        "upRule": {
          "description": "The emulation rule applying to the upload traffic.",
          "type": "object"
        },
        "downRule": {
          "description": "The emulation rule applying to the download traffic.",
          "type": "object"
        }
      }
    },
    "TrafficRule": {
      "title": "TrafficRule",
      "description": "Network emulation parameters.",
      "type": "object",
      "properties": {
        "packetDuplicationRatio": {
          "description": "Packet duplication ratio (0.0 - 1.0).",
          "type": "number",
          "format": "double"
        },
        "delay": {
          "description": "Packet delay, must be >= 0.",
          "type": "string"
        },
        "packetLossRatio": {
          "description": "Packet loss ratio (0.0 - 1.0).",
          "type": "number",
          "format": "double"
        },
        "burst": {
          "description": "Burst size in kbits.",
          "type": "number",
          "format": "double"
        },
        "bandwidth": {
          "description": "Bandwidth in kbits/second.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "IosDevice": {
      "title": "IosDevice",
      "description": "A single iOS device.",
      "type": "object",
      "properties": {
        "iosModelId": {
          "description": "Required. The id of the iOS device to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "orientation": {
          "description": "Required. How the device is oriented during the test.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "iosVersionId": {
          "description": "Required. The id of the iOS major software version to be used.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        },
        "locale": {
          "description": "Required. The locale the test device used for testing.\nUse the EnvironmentDiscoveryService to get supported options.",
          "type": "string"
        }
      }
    },
    "IntentFilter": {
      "title": "IntentFilter",
      "description": "The <intent-filter> section of an <activity> tag.\nhttps://developer.android.com/guide/topics/manifest/intent-filter-element.html",
      "type": "object",
      "properties": {
        "mimeType": {
          "description": "The android:mimeType value of the <data> tag.",
          "type": "string"
        },
        "actionNames": {
          "description": "The android:name value of the <action> tag.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categoryNames": {
          "description": "The android:name value of the <category> tag.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IosRuntimeConfiguration": {
      "title": "IosRuntimeConfiguration",
      "description": "iOS configuration that can be selected at the time a test is run.",
      "type": "object",
      "properties": {
        "locales": {
          "description": "The set of available locales.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "orientations": {
          "description": "The set of available orientations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Orientation"
          }
        }
      }
    },
    "TestExecution": {
      "title": "TestExecution",
      "description": "Specifies a single test to be executed in a single environment.",
      "type": "object",
      "properties": {
        "environment": {
          "description": "Output only. How the host machine(s) are configured.",
          "type": "object"
        },
        "state": {
          "$ref": "#/definitions/State1"
        },
        "toolResultsStep": {
          "description": "Output only. Where the results for this execution are written.",
          "type": "object"
        },
        "projectId": {
          "description": "Output only. The cloud project that owns the test execution.",
          "type": "string"
        },
        "testSpecification": {
          "description": "Output only. How to run the test.",
          "type": "object"
        },
        "id": {
          "description": "Output only. Unique id set by the backend.",
          "type": "string"
        },
        "timestamp": {
          "description": "Output only. The time this test execution was initially created.",
          "type": "string"
        },
        "matrixId": {
          "description": "Output only. Id of the containing TestMatrix.",
          "type": "string"
        },
        "testDetails": {
          "description": "Output only. Additional details about the running test.",
          "type": "object"
        }
      }
    },
    "GoogleCloudStorage": {
      "title": "GoogleCloudStorage",
      "description": "A storage location within Google cloud storage (GCS).",
      "type": "object",
      "properties": {
        "gcsPath": {
          "description": "Required. The path to a directory in GCS that will\neventually contain the results for this test.\nThe requesting user must have write access on the bucket in the supplied\npath.",
          "type": "string"
        }
      }
    },
    "AndroidModel": {
      "title": "AndroidModel",
      "description": "A description of an Android device tests may be run on.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique opaque id for this model.\nUse this for invoking the TestExecutionService.",
          "type": "string"
        },
        "manufacturer": {
          "description": "The manufacturer of this device.",
          "type": "string"
        },
        "brand": {
          "description": "The company that this device is branded with.\nExample: \"Google\", \"Samsung\".",
          "type": "string"
        },
        "screenX": {
          "description": "Screen size in the horizontal (X) dimension measured in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "formFactor": {
          "$ref": "#/definitions/FormFactor"
        },
        "codename": {
          "description": "The name of the industrial design.\nThis corresponds to android.os.Build.DEVICE.",
          "type": "string"
        },
        "screenY": {
          "description": "Screen size in the vertical (Y) dimension measured in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "lowFpsVideoRecording": {
          "description": "True if and only if tests with this model are recorded by stitching\ntogether screenshots. See use_low_spec_video_recording in device config.",
          "type": "boolean"
        },
        "form": {
          "$ref": "#/definitions/Form"
        },
        "screenDensity": {
          "description": "Screen density in DPI.\nThis corresponds to ro.sf.lcd_density",
          "type": "integer",
          "format": "int32"
        },
        "supportedVersionIds": {
          "description": "The set of Android versions this device supports.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedAbis": {
          "description": "The list of supported ABIs for this device.\nThis corresponds to either android.os.Build.SUPPORTED_ABIS (for API level\n21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.\nThe most preferred ABI is the first element in the list.\n\nElements are optionally prefixed by \"version_id:\" (where version_id is\nthe id of an AndroidVersion), denoting an ABI that is supported only on\na particular version.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The human-readable marketing name for this device model.\nExamples: \"Nexus 5\", \"Galaxy S5\".",
          "type": "string"
        }
      }
    },
    "TestSetup": {
      "title": "TestSetup",
      "description": "Test setup requirements for Android e.g. files to install, bootstrap\nscripts.",
      "type": "object",
      "properties": {
        "account": {
          "description": "The device will be logged in on this account for the duration of the test.",
          "type": "object"
        },
        "directoriesToPull": {
          "description": "List of directories on the device to upload to GCS at the end of the test;\nthey must be absolute paths under /sdcard or /data/local/tmp.\nPath names are restricted to characters a-z A-Z 0-9 _ - . + and /\n\nNote: The paths /sdcard and /data will be made available and treated as\nimplicit path substitutions. E.g. if /sdcard on a particular device does\nnot map to external storage, the system will replace it with the external\nstorage path prefix for that device.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkProfile": {
          "description": "The network traffic profile used for running the test.\nAvailable network profiles can be queried by using the\nNETWORK_CONFIGURATION environment type when calling\nTestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables to set for the test (only applicable for\ninstrumentation tests).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "additionalApks": {
          "description": "APKs to install in addition to those being directly tested.\nCurrently capped at 100.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "filesToPush": {
          "description": "List of files to push to the device before starting the test.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ResultStorage": {
      "title": "ResultStorage",
      "description": "Required. Where the results for the matrix are written.",
      "type": "object",
      "properties": {
        "toolResultsHistory": {
          "description": "The tool results history that contains the tool results execution that\nresults are written to.\n\nIf not provided, the service will choose an appropriate value.",
          "type": "object"
        },
        "googleCloudStorage": {
          "description": "Required.",
          "type": "object"
        },
        "toolResultsExecution": {
          "description": "Output only. The tool results execution that results are written to.",
          "type": "object"
        }
      }
    },
    "XcodeVersion": {
      "title": "XcodeVersion",
      "description": "An Xcode version that an iOS version is compatible with.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The id for this version.\nExample: \"9.2\".",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this Xcode version.\nExample: \"default\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AndroidVersion": {
      "title": "AndroidVersion",
      "description": "A version of the Android OS.",
      "type": "object",
      "properties": {
        "versionString": {
          "description": "A string representing this version of the Android OS.\nExamples: \"4.3\", \"4.4\".",
          "type": "string"
        },
        "codeName": {
          "description": "The code name for this Android version.\nExamples: \"JellyBean\", \"KitKat\".",
          "type": "string"
        },
        "apiLevel": {
          "description": "The API level for this Android version.\nExamples: 18, 19.",
          "type": "integer",
          "format": "int32"
        },
        "distribution": {
          "description": "Market share for this version.",
          "type": "object"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "An opaque id for this Android version.\nUse this id to invoke the TestExecutionService.",
          "type": "string"
        },
        "releaseDate": {
          "description": "The date this Android version became available in the market.",
          "type": "object"
        }
      }
    },
    "TestDetails": {
      "title": "TestDetails",
      "description": "Additional details about the progress of the running test.",
      "type": "object",
      "properties": {
        "progressMessages": {
          "description": "Output only. Human-readable, detailed descriptions of the test's progress.\nFor example: \"Provisioning a device\", \"Starting Test\".\n\nDuring the course of execution new data may be appended\nto the end of progress_messages.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorMessage": {
          "description": "Output only. If the TestState is ERROR, then this string will contain\nhuman-readable details about the error.",
          "type": "string"
        }
      }
    },
    "Distribution": {
      "title": "Distribution",
      "description": "Data about the relative number of devices running a\ngiven configuration of the Android platform.",
      "type": "object",
      "properties": {
        "marketShare": {
          "description": "Output only. The estimated fraction (0-1) of the total market with this\nconfiguration.",
          "type": "number",
          "format": "double"
        },
        "measurementTime": {
          "description": "Output only. The time this distribution was measured.",
          "type": "string"
        }
      }
    },
    "IosVersion": {
      "title": "IosVersion",
      "description": "An iOS version.",
      "type": "object",
      "properties": {
        "supportedXcodeVersionIds": {
          "description": "The available Xcode versions for this version.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "An opaque id for this iOS version.\nUse this id to invoke the TestExecutionService.",
          "type": "string"
        },
        "minorVersion": {
          "description": "An integer representing the minor iOS version.\nExamples: \"1\", \"2\".",
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "majorVersion": {
          "description": "An integer representing the major iOS version.\nExamples: \"8\", \"9\".",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Orientation": {
      "title": "Orientation",
      "description": "Screen orientation of the device.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id for this orientation.\nExample: \"portrait\".",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this dimension.\nExample: \"default\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "A human-friendly name for this orientation.\nExample: \"portrait\".",
          "type": "string"
        }
      }
    },
    "AndroidDeviceList": {
      "title": "AndroidDeviceList",
      "description": "A list of Android device configurations in which the test is to be executed.",
      "type": "object",
      "properties": {
        "androidDevices": {
          "description": "Required. A list of Android devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AndroidDevice"
          }
        }
      }
    },
    "Apk": {
      "title": "Apk",
      "description": "An Android package file to install.",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/FileReference"
        },
        "packageName": {
          "description": "The java package for the APK to be installed.\nValue is determined by examining the application's manifest.",
          "type": "string"
        }
      }
    },
    "StartActivityIntent": {
      "title": "StartActivityIntent",
      "description": "A starting intent specified by an action, uri, and categories.",
      "type": "object",
      "properties": {
        "categories": {
          "description": "Intent categories to set on the intent.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Action name.\nRequired for START_ACTIVITY.",
          "type": "string"
        },
        "uri": {
          "description": "URI for the action.",
          "type": "string"
        }
      }
    },
    "IosXcTest": {
      "title": "IosXcTest",
      "description": "An iOS XCTest, via an .xctestrun file.",
      "type": "object",
      "properties": {
        "xctestrun": {
          "description": "An .xctestrun file that will override the .xctestrun file in the\ntests zip. Because the .xctestrun file contains environment variables along\nwith test methods to run and/or ignore, this can be useful for sharding\ntests. Default is taken from the tests zip.",
          "type": "object"
        },
        "testsZip": {
          "description": "Required. The .zip containing the .xctestrun file and the contents of the\nDerivedData/Build/Products directory.\nThe .xctestrun file in this zip is ignored if the xctestrun field is\nspecified.",
          "type": "object"
        },
        "xcodeVersion": {
          "description": "The Xcode version that should be used for the test.\nUse the EnvironmentDiscoveryService to get supported options.\nDefaults to the latest Xcode version Firebase Test Lab supports.",
          "type": "string"
        },
        "appBundleId": {
          "description": "Output only. The bundle id for the application under test.",
          "type": "string"
        }
      }
    },
    "TestEnvironmentCatalog": {
      "title": "TestEnvironmentCatalog",
      "description": "A description of a test environment.",
      "type": "object",
      "properties": {
        "androidDeviceCatalog": {
          "$ref": "#/definitions/AndroidDeviceCatalog"
        },
        "networkConfigurationCatalog": {
          "$ref": "#/definitions/NetworkConfigurationCatalog"
        },
        "iosDeviceCatalog": {
          "$ref": "#/definitions/IosDeviceCatalog"
        },
        "softwareCatalog": {
          "$ref": "#/definitions/ProvidedSoftwareCatalog"
        }
      }
    },
    "ObbFile": {
      "title": "ObbFile",
      "description": "An opaque binary blob file to install on the device before the test starts.",
      "type": "object",
      "properties": {
        "obb": {
          "$ref": "#/definitions/FileReference"
        },
        "obbFileName": {
          "description": "Required. OBB file name which must conform to the format as specified by\nAndroid\ne.g. [main|patch].0300110.com.example.android.obb\nwhich will be installed into\n  \\<shared-storage\\>/Android/obb/\\<package-name\\>/\non the device.",
          "type": "string"
        }
      }
    },
    "AndroidRuntimeConfiguration": {
      "title": "AndroidRuntimeConfiguration",
      "description": "The set of supported runtime configurations.",
      "type": "object",
      "properties": {
        "locales": {
          "description": "The set of available locales.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "orientations": {
          "description": "The set of available orientations.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "IosDeviceCatalog": {
      "title": "IosDeviceCatalog",
      "description": "Supported iOS devices.",
      "type": "object",
      "properties": {
        "models": {
          "description": "The set of supported iOS device models.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "versions": {
          "description": "The set of supported iOS software versions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "runtimeConfiguration": {
          "description": "The set of supported runtime configurations.",
          "type": "object"
        },
        "xcodeVersions": {
          "description": "The set of supported Xcode versions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ToolResultsStep": {
      "title": "ToolResultsStep",
      "description": "Represents a tool results step resource.\n\nThis has the results of a TestExecution.",
      "type": "object",
      "properties": {
        "executionId": {
          "description": "Output only. A tool results execution ID.",
          "type": "string"
        },
        "stepId": {
          "description": "Output only. A tool results step ID.",
          "type": "string"
        },
        "projectId": {
          "description": "Output only. The cloud project that owns the tool results step.",
          "type": "string"
        },
        "historyId": {
          "description": "Output only. A tool results history ID.",
          "type": "string"
        }
      }
    },
    "GetApkDetailsResponse": {
      "title": "GetApkDetailsResponse",
      "description": "Response containing the details of the specified Android application APK.",
      "type": "object",
      "properties": {
        "apkDetail": {
          "$ref": "#/definitions/ApkDetail"
        }
      }
    },
    "AndroidInstrumentationTest": {
      "title": "AndroidInstrumentationTest",
      "description": "An Android instrumentation test.",
      "type": "object",
      "properties": {
        "testPackageId": {
          "description": "The java package for the test to be executed.\nThe default value is determined by examining the application's manifest.",
          "type": "string"
        },
        "appApk": {
          "description": "The APK for the application under test.",
          "type": "object"
        },
        "appPackageId": {
          "description": "The java package for the application under test.\nThe default value is determined by examining the application's manifest.",
          "type": "string"
        },
        "appBundle": {
          "description": "A multi-apk app bundle for the application under test.",
          "type": "object"
        },
        "orchestratorOption": {
          "$ref": "#/definitions/OrchestratorOption"
        },
        "testTargets": {
          "description": "Each target must be fully qualified with the package name or class name,\nin one of these formats:\n - \"package package_name\"\n - \"class package_name.class_name\"\n - \"class package_name.class_name#method_name\"\n\nIf empty, all targets in the module will be run.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testApk": {
          "description": "Required. The APK containing the test code to be executed.",
          "type": "object"
        },
        "testRunnerClass": {
          "description": "The InstrumentationTestRunner class.\nThe default value is determined by examining the application's manifest.",
          "type": "string"
        }
      }
    },
    "IosModel": {
      "title": "IosModel",
      "description": "A description of an iOS device tests may be run on.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The human-readable name for this device model.\nExamples: \"iPhone 4s\", \"iPad Mini 2\".",
          "type": "string"
        },
        "id": {
          "description": "The unique opaque id for this model.\nUse this for invoking the TestExecutionService.",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deviceCapabilities": {
          "description": "Device capabilities.\nCopied from\nhttps://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedVersionIds": {
          "description": "The set of iOS major software versions this device supports.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "formFactor": {
          "$ref": "#/definitions/FormFactor"
        }
      }
    },
    "DeviceFile": {
      "title": "DeviceFile",
      "description": "A single device file description.",
      "type": "object",
      "properties": {
        "obbFile": {
          "$ref": "#/definitions/ObbFile"
        },
        "regularFile": {
          "$ref": "#/definitions/RegularFile"
        }
      }
    },
    "IosTestSetup": {
      "title": "IosTestSetup",
      "description": "Test setup requirements for iOS.",
      "type": "object",
      "properties": {
        "networkProfile": {
          "description": "The network traffic profile used for running the test.\nAvailable network profiles can be queried by using the\nNETWORK_CONFIGURATION environment type when calling\nTestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.",
          "type": "string"
        }
      }
    },
    "ClientInfoDetail": {
      "title": "ClientInfoDetail",
      "description": "Key-value pair of detailed information about the client which invoked the\ntest. Examples: {'Version', '1.0'}, {'Release Track', 'BETA'}.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Required. The value of detailed client information.",
          "type": "string"
        },
        "key": {
          "description": "Required. The key of detailed client information.",
          "type": "string"
        }
      }
    },
    "RegularFile": {
      "title": "RegularFile",
      "description": "A reference to a regular file",
      "type": "object",
      "properties": {
        "content": {
          "description": "Required. The source file.",
          "type": "object"
        },
        "devicePath": {
          "description": "Required. Where to put the content on the device. Must be an absolute,\nwhitelisted path. If the file exists, it will be replaced.\nThe following device-side directories and any of their subdirectories are\nwhitelisted:\n<p>${EXTERNAL_STORAGE}, or /sdcard</p>\n<p>${ANDROID_DATA}/local/tmp, or /data/local/tmp</p>\n<p>Specifying a path outside of these directory trees is invalid.\n\n<p> The paths /sdcard and /data will be made available and treated as\nimplicit path substitutions. E.g. if /sdcard on a particular device does\nnot map to external storage, the system will replace it with the external\nstorage path prefix for that device and copy the file there.\n\n<p> It is strongly advised to use the <a href=\n\"http://developer.android.com/reference/android/os/Environment.html\">\nEnvironment API</a> in app and test code to access files on the device in a\nportable way.",
          "type": "string"
        }
      }
    },
    "EnvironmentVariable": {
      "title": "EnvironmentVariable",
      "description": "A key-value pair passed as an environment variable to the test.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key for the environment variable.",
          "type": "string"
        },
        "value": {
          "description": "Value for the environment variable.",
          "type": "string"
        }
      }
    },
    "ProvidedSoftwareCatalog": {
      "title": "ProvidedSoftwareCatalog",
      "description": "The software test environment provided by TestExecutionService.",
      "type": "object",
      "properties": {
        "orchestratorVersion": {
          "description": "A string representing the current version of Android Test\nOrchestrator that is provided by TestExecutionService.\nExample: \"1.0.2 beta\".",
          "type": "string"
        }
      }
    },
    "Environment": {
      "title": "Environment",
      "description": "The environment in which the test is run.",
      "type": "object",
      "properties": {
        "iosDevice": {
          "$ref": "#/definitions/IosDevice"
        },
        "androidDevice": {
          "$ref": "#/definitions/AndroidDevice"
        }
      }
    },
    "RoboDirective": {
      "title": "RoboDirective",
      "description": "Directs Robo to interact with a specific UI element if it is encountered\nduring the crawl. Currently, Robo can perform text entry or element click.",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "Required. The android resource name of the target UI element.\nFor example,\n   in Java: R.string.foo\n   in xml: @string/foo\nOnly the \"foo\" part is needed.\nReference doc:\nhttps://developer.android.com/guide/topics/resources/accessing-resources.html",
          "type": "string"
        },
        "inputText": {
          "description": "The text that Robo is directed to set. If left empty, the directive will be\ntreated as a CLICK on the element matching the resource_name.",
          "type": "string"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType"
        }
      }
    },
    "ActionType": {
      "title": "ActionType",
      "description": "Required. The type of action that Robo should perform on the specified\nelement.",
      "example": "ACTION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ACTION_TYPE_UNSPECIFIED",
        "SINGLE_CLICK",
        "ENTER_TEXT"
      ]
    },
    "Form": {
      "title": "Form",
      "description": "Whether this device is virtual or physical.",
      "example": "DEVICE_FORM_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DEVICE_FORM_UNSPECIFIED",
        "VIRTUAL",
        "PHYSICAL"
      ]
    },
    "FormFactor": {
      "title": "FormFactor",
      "description": "Whether this device is a phone, tablet, wearable, etc.",
      "example": "DEVICE_FORM_FACTOR_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DEVICE_FORM_FACTOR_UNSPECIFIED",
        "PHONE",
        "TABLET",
        "WEARABLE"
      ]
    },
    "InvalidMatrixDetails": {
      "title": "InvalidMatrixDetails",
      "description": "Output only. Describes why the matrix is considered invalid.\nOnly useful for matrices in the INVALID state.",
      "example": "INVALID_MATRIX_DETAILS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "INVALID_MATRIX_DETAILS_UNSPECIFIED",
        "DETAILS_UNAVAILABLE",
        "MALFORMED_APK",
        "MALFORMED_TEST_APK",
        "NO_MANIFEST",
        "NO_PACKAGE_NAME",
        "TEST_SAME_AS_APP",
        "NO_INSTRUMENTATION",
        "NO_SIGNATURE",
        "INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE",
        "NO_TEST_RUNNER_CLASS",
        "NO_LAUNCHER_ACTIVITY",
        "FORBIDDEN_PERMISSIONS",
        "INVALID_ROBO_DIRECTIVES",
        "TEST_LOOP_INTENT_FILTER_NOT_FOUND",
        "SCENARIO_LABEL_NOT_DECLARED",
        "SCENARIO_LABEL_MALFORMED",
        "SCENARIO_NOT_DECLARED",
        "DEVICE_ADMIN_RECEIVER",
        "MALFORMED_XC_TEST_ZIP",
        "BUILT_FOR_IOS_SIMULATOR",
        "NO_TESTS_IN_XC_TEST_ZIP",
        "USE_DESTINATION_ARTIFACTS",
        "TEST_NOT_APP_HOSTED",
        "PLIST_CANNOT_BE_PARSED",
        "TEST_ONLY_APK",
        "MALFORMED_IPA",
        "NO_CODE_APK",
        "INVALID_INPUT_APK",
        "INVALID_APK_PREVIEW_SDK"
      ]
    },
    "OrchestratorOption": {
      "title": "OrchestratorOption",
      "description": "The option of whether running each test within its own invocation of\ninstrumentation with Android Test Orchestrator or not.\n** Orchestrator is only compatible with AndroidJUnitRunner version 1.0 or\nhigher! **\nOrchestrator offers the following benefits:\n - No shared state\n - Crashes are isolated\n - Logs are scoped per test\n\nSee\n<https://developer.android.com/training/testing/junit-runner.html#using-android-test-orchestrator>\nfor more information about Android Test Orchestrator.\n\nIf not set, the test will be run without the orchestrator.",
      "example": "ORCHESTRATOR_OPTION_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ORCHESTRATOR_OPTION_UNSPECIFIED",
        "USE_ORCHESTRATOR",
        "DO_NOT_USE_ORCHESTRATOR"
      ]
    },
    "State": {
      "title": "State",
      "description": "Output only. Indicates the current progress of the test matrix\n(e.g., FINISHED).",
      "example": "TEST_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TEST_STATE_UNSPECIFIED",
        "VALIDATING",
        "PENDING",
        "RUNNING",
        "FINISHED",
        "ERROR",
        "UNSUPPORTED_ENVIRONMENT",
        "INCOMPATIBLE_ENVIRONMENT",
        "INCOMPATIBLE_ARCHITECTURE",
        "CANCELLED",
        "INVALID"
      ]
    },
    "State1": {
      "title": "State1",
      "description": "Output only. Indicates the current progress of the test execution\n(e.g., FINISHED).",
      "example": "TEST_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TEST_STATE_UNSPECIFIED",
        "VALIDATING",
        "PENDING",
        "RUNNING",
        "FINISHED",
        "ERROR",
        "UNSUPPORTED_ENVIRONMENT",
        "INCOMPATIBLE_ENVIRONMENT",
        "INCOMPATIBLE_ARCHITECTURE",
        "CANCELLED",
        "INVALID"
      ]
    },
    "TestState": {
      "title": "TestState",
      "description": "The current rolled-up state of the test matrix.\nIf this state is already final, then the cancelation request will\nhave no effect.",
      "example": "TEST_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TEST_STATE_UNSPECIFIED",
        "VALIDATING",
        "PENDING",
        "RUNNING",
        "FINISHED",
        "ERROR",
        "UNSUPPORTED_ENVIRONMENT",
        "INCOMPATIBLE_ENVIRONMENT",
        "INCOMPATIBLE_ARCHITECTURE",
        "CANCELLED",
        "INVALID"
      ]
    }
  },
  "tags": [
    {
      "name": "testMatrices",
      "description": ""
    },
    {
      "name": "testEnvironmentCatalog",
      "description": ""
    },
    {
      "name": "applicationDetailService",
      "description": ""
    }
  ]
}