{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Cloud Datastore API",
    "description": "Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application.\n",
    "contact": {}
  },
  "host": "datastore.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://datastore.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/datastore": "View and manage your Google Cloud Datastore data",
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/projects/{projectId}/indexes/{indexId}": {
      "get": {
        "description": "Gets an index.",
        "summary": "GetV1ProjectsIndexesByProjectIdAndIndexId",
        "tags": [
          "indexes"
        ],
        "operationId": "V1ProjectsIndexesByProjectIdAndIndexIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "indexId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource ID of the index to get."
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID against which to make the request."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleDatastoreAdminV1Index"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}/indexes": {
      "get": {
        "description": "Lists the indexes that match the specified filters.  Datastore uses an\neventually consistent query to fetch the list of indexes and may\noccasionally return stale results.",
        "summary": "ListV1ProjectsIndexesByProjectId",
        "tags": [
          "indexes"
        ],
        "operationId": "V1ProjectsIndexesByProjectIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID against which to make the request."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The next_page_token value returned from a previous List request, if any."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of items to return.  If zero, then all results will be\nreturned."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleDatastoreAdminV1ListIndexesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/{+name}:cancel": {
      "post": {
        "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
        "summary": "CancelV1CancelByName",
        "tags": [
          "operations"
        ],
        "operationId": "V1CancelByNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/{+name}": {
      "delete": {
        "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
        "summary": "DeleteV1ByName",
        "tags": [
          "operations"
        ],
        "operationId": "V1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      },
      "get": {
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
        "summary": "GetV1ByName",
        "tags": [
          "operations"
        ],
        "operationId": "V1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/{+name}/operations": {
      "get": {
        "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
        "summary": "ListV1OperationsByName",
        "tags": [
          "operations"
        ],
        "operationId": "V1OperationsByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The standard list page token."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The standard list page size."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The standard list filter."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningListOperationsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:export": {
      "post": {
        "description": "Exports a copy of all or a subset of entities from Google Cloud Datastore\nto another storage system, such as Google Cloud Storage. Recent updates to\nentities may not be reflected in the export. The export occurs in the\nbackground and its progress can be monitored and managed via the\nOperation resource that is created. The output of an export may only be\nused once the associated operation is done. If an export operation is\ncancelled before completion it may leave partial data behind in Google\nCloud Storage.",
        "summary": "ExportV1ProjectsExportByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsExportByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleDatastoreAdminV1ExportEntitiesRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:allocateIds": {
      "post": {
        "description": "Allocates IDs for the given keys, which is useful for referencing an entity\nbefore it is inserted.",
        "summary": "AllocateIdsV1ProjectsAllocateIdsByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsAllocateIdsByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AllocateIdsRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AllocateIdsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:commit": {
      "post": {
        "description": "Commits a transaction, optionally creating, deleting or modifying some\nentities.",
        "summary": "CommitV1ProjectsCommitByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsCommitByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommitRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommitResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:import": {
      "post": {
        "description": "Imports entities into Google Cloud Datastore. Existing entities with the\nsame key are overwritten. The import occurs in the background and its\nprogress can be monitored and managed via the Operation resource that is\ncreated. If an ImportEntities operation is cancelled, it is possible\nthat a subset of the data has already been imported to Cloud Datastore.",
        "summary": "ImportV1ProjectsImportByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsImportByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleDatastoreAdminV1ImportEntitiesRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GoogleLongrunningOperation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:beginTransaction": {
      "post": {
        "description": "Begins a new transaction.",
        "summary": "BeginTransactionV1ProjectsBeginTransactionByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsBeginTransactionByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BeginTransactionRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BeginTransactionResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:reserveIds": {
      "post": {
        "description": "Prevents the supplied keys' IDs from being auto-allocated by Cloud\nDatastore.",
        "summary": "ReserveIdsV1ProjectsReserveIdsByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsReserveIdsByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReserveIdsRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:runQuery": {
      "post": {
        "description": "Queries for entities.",
        "summary": "RunQueryV1ProjectsRunQueryByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsRunQueryByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunQueryRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RunQueryResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:rollback": {
      "post": {
        "description": "Rolls back a transaction.",
        "summary": "RollbackV1ProjectsRollbackByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsRollbackByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RollbackRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    },
    "/v1/projects/{projectId}:lookup": {
      "post": {
        "description": "Looks up entities by key.",
        "summary": "LookupV1ProjectsLookupByProjectId",
        "tags": [
          "projects"
        ],
        "operationId": "V1ProjectsLookupByProjectIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the project against which to make the request."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LookupRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LookupResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/datastore"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "GoogleDatastoreAdminV1ListIndexesResponse": {
      "title": "GoogleDatastoreAdminV1ListIndexesResponse",
      "description": "The response for\ngoogle.datastore.admin.v1.DatastoreAdmin.ListIndexes.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "indexes": {
          "description": "The indexes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleDatastoreAdminV1Index"
          }
        }
      }
    },
    "RollbackRequest": {
      "title": "RollbackRequest",
      "description": "The request for Datastore.Rollback.",
      "type": "object",
      "properties": {
        "transaction": {
          "description": "The transaction identifier, returned by a call to\nDatastore.BeginTransaction.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1beta1ExportEntitiesMetadata": {
      "title": "GoogleDatastoreAdminV1beta1ExportEntitiesMetadata",
      "description": "Metadata for ExportEntities operations.",
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1CommonMetadata"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1Progress"
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1EntityFilter"
        },
        "outputUrlPrefix": {
          "description": "Location for the export metadata and data files. This will be the same\nvalue as the\ngoogle.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix\nfield. The final output location is provided in\ngoogle.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.",
          "type": "string"
        },
        "progressEntities": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1Progress"
        }
      }
    },
    "CompositeFilter": {
      "title": "CompositeFilter",
      "description": "A filter that merges multiple other filters using the given operator.",
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/Op"
        },
        "filters": {
          "description": "The list of filters to combine.\nMust contain at least one filter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        }
      }
    },
    "AllocateIdsResponse": {
      "title": "AllocateIdsResponse",
      "description": "The response for Datastore.AllocateIds.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "The keys specified in the request (in the same order), each with\nits key path completed with a newly allocated ID.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          }
        }
      }
    },
    "GoogleLongrunningOperation": {
      "title": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "PropertyFilter": {
      "title": "PropertyFilter",
      "description": "A filter on a specific property.",
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/definitions/Op1"
        },
        "value": {
          "$ref": "#/definitions/Value"
        },
        "property": {
          "$ref": "#/definitions/PropertyReference"
        }
      }
    },
    "CommitResponse": {
      "title": "CommitResponse",
      "description": "The response for Datastore.Commit.",
      "type": "object",
      "properties": {
        "indexUpdates": {
          "description": "The number of index entries updated during the commit, or zero if none were\nupdated.",
          "type": "integer",
          "format": "int32"
        },
        "mutationResults": {
          "description": "The result of performing the mutations.\nThe i-th mutation result corresponds to the i-th mutation in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MutationResult"
          }
        }
      }
    },
    "PartitionId": {
      "title": "PartitionId",
      "description": "A partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty.\n\nA partition ID contains several dimensions:\nproject ID and namespace ID.\n\nPartition dimensions:\n\n- May be `\"\"`.\n- Must be valid UTF-8 bytes.\n- Must have values that match regex `[A-Za-z\\d\\.\\-_]{1,100}`\nIf the value of any dimension matches regex `__.*__`, the partition is\nreserved/read-only.\nA reserved/read-only partition ID is forbidden in certain documented\ncontexts.\n\nForeign partition IDs (in which the project ID does\nnot match the context project ID ) are discouraged.\nReads and writes of foreign partition IDs may fail if the project is not in an active state.",
      "type": "object",
      "properties": {
        "namespaceId": {
          "description": "If not empty, the ID of the namespace to which the entities belong.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project to which the entities belong.",
          "type": "string"
        }
      }
    },
    "Entity": {
      "title": "Entity",
      "description": "A Datastore data object.\n\nAn entity is limited to 1 megabyte when stored. That _roughly_\ncorresponds to a limit of 1 megabyte for the serialized form of this\nmessage.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The entity's properties.\nThe map's keys are property names.\nA property name matching regex `__.*__` is reserved.\nA reserved property name is forbidden in certain documented contexts.\nThe name must not contain more than 500 characters.\nThe name cannot be `\"\"`.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        },
        "key": {
          "$ref": "#/definitions/Key"
        }
      }
    },
    "GoogleDatastoreAdminV1beta1Progress": {
      "title": "GoogleDatastoreAdminV1beta1Progress",
      "description": "An estimate of the number of bytes processed.",
      "type": "object",
      "properties": {
        "workEstimated": {
          "description": "An estimate of how much work needs to be performed. May be zero if the\nwork estimate is unavailable.",
          "type": "string"
        },
        "workCompleted": {
          "description": "The amount of work that has been completed. Note that this may be greater\nthan work_estimated.",
          "type": "string"
        }
      }
    },
    "QueryResultBatch": {
      "title": "QueryResultBatch",
      "description": "A batch of results produced by a query.",
      "type": "object",
      "properties": {
        "moreResults": {
          "$ref": "#/definitions/MoreResults"
        },
        "endCursor": {
          "description": "A cursor that points to the position after the last result in the batch.",
          "type": "string"
        },
        "snapshotVersion": {
          "description": "The version number of the snapshot this batch was returned from.\nThis applies to the range of results from the query's `start_cursor` (or\nthe beginning of the query if no cursor was given) to this batch's\n`end_cursor` (not the query's `end_cursor`).\n\nIn a single transaction, subsequent query result batches for the same query\ncan have a greater snapshot version number. Each batch's snapshot version\nis valid for all preceding batches.\nThe value will be zero for eventually consistent queries.",
          "type": "string"
        },
        "skippedCursor": {
          "description": "A cursor that points to the position after the last skipped result.\nWill be set when `skipped_results` != 0.",
          "type": "string"
        },
        "skippedResults": {
          "description": "The number of results skipped, typically because of an offset.",
          "type": "integer",
          "format": "int32"
        },
        "entityResultType": {
          "$ref": "#/definitions/EntityResultType"
        },
        "entityResults": {
          "description": "The results for this batch.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityResult"
          }
        }
      }
    },
    "GoogleDatastoreAdminV1Progress": {
      "title": "GoogleDatastoreAdminV1Progress",
      "description": "Measures the progress of a particular metric.",
      "type": "object",
      "properties": {
        "workEstimated": {
          "description": "An estimate of how much work needs to be performed. May be zero if the\nwork estimate is unavailable.",
          "type": "string"
        },
        "workCompleted": {
          "description": "The amount of work that has been completed. Note that this may be greater\nthan work_estimated.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1CommonMetadata": {
      "title": "GoogleDatastoreAdminV1CommonMetadata",
      "description": "Metadata common to all Datastore Admin operations.",
      "type": "object",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/OperationType1"
        },
        "state": {
          "$ref": "#/definitions/State1"
        },
        "startTime": {
          "description": "The time that work began on the operation.",
          "type": "string"
        },
        "labels": {
          "description": "The client-assigned labels which were provided when the operation was\ncreated. May also include additional labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endTime": {
          "description": "The time the operation ended, either successfully or otherwise.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1Index": {
      "title": "GoogleDatastoreAdminV1Index",
      "description": "A minimal index definition.",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/State"
        },
        "projectId": {
          "description": "Project ID.\nOutput only.",
          "type": "string"
        },
        "ancestor": {
          "$ref": "#/definitions/Ancestor"
        },
        "kind": {
          "description": "The entity kind to which this index applies.\nRequired.",
          "type": "string"
        },
        "properties": {
          "description": "An ordered sequence of property names and their index attributes.\nRequired.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "indexId": {
          "description": "The resource ID of the index.\nOutput only.",
          "type": "string"
        }
      }
    },
    "PathElement": {
      "title": "PathElement",
      "description": "A (kind, ID/name) pair used to construct a key path.\n\nIf either name or ID is set, the element is complete.\nIf neither is set, the element is incomplete.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the entity.\nA name matching regex `__.*__` is reserved/read-only.\nA name must not be more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the entity.\nA kind matching regex `__.*__` is reserved/read-only.\nA kind must not contain more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "id": {
          "description": "The auto-allocated ID of the entity.\nNever equal to zero. Values less than zero are discouraged and may not\nbe supported in the future.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1IndexedProperty": {
      "title": "GoogleDatastoreAdminV1IndexedProperty",
      "description": "A property of an index.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The property name to index.\nRequired.",
          "type": "string"
        },
        "direction": {
          "$ref": "#/definitions/Direction"
        }
      }
    },
    "GqlQueryParameter": {
      "title": "GqlQueryParameter",
      "description": "A binding parameter for a GQL query.",
      "type": "object",
      "properties": {
        "cursor": {
          "description": "A query cursor. Query cursors are returned in query\nresult batches.",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Value"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "title": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleLongrunningOperation"
          }
        }
      }
    },
    "BeginTransactionResponse": {
      "title": "BeginTransactionResponse",
      "description": "The response for Datastore.BeginTransaction.",
      "type": "object",
      "properties": {
        "transaction": {
          "description": "The transaction identifier (always present).",
          "type": "string"
        }
      }
    },
    "AllocateIdsRequest": {
      "title": "AllocateIdsRequest",
      "description": "The request for Datastore.AllocateIds.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "A list of keys with incomplete key paths for which to allocate IDs.\nNo key may be reserved/read-only.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          }
        }
      }
    },
    "RunQueryResponse": {
      "title": "RunQueryResponse",
      "description": "The response for Datastore.RunQuery.",
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        },
        "batch": {
          "$ref": "#/definitions/QueryResultBatch"
        }
      }
    },
    "LookupResponse": {
      "title": "LookupResponse",
      "description": "The response for Datastore.Lookup.",
      "type": "object",
      "properties": {
        "deferred": {
          "description": "A list of keys that were not looked up due to resource constraints. The\norder of results in this field is undefined and has no relation to the\norder of the keys in the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          }
        },
        "found": {
          "description": "Entities found as `ResultType.FULL` entities. The order of results in this\nfield is undefined and has no relation to the order of the keys in the\ninput.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityResult"
          }
        },
        "missing": {
          "description": "Entities not found as `ResultType.KEY_ONLY` entities. The order of results\nin this field is undefined and has no relation to the order of the keys\nin the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityResult"
          }
        }
      }
    },
    "CommitRequest": {
      "title": "CommitRequest",
      "description": "The request for Datastore.Commit.",
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/Mode"
        },
        "mutations": {
          "description": "The mutations to perform.\n\nWhen mode is `TRANSACTIONAL`, mutations affecting a single entity are\napplied in order. The following sequences of mutations affecting a single\nentity are not permitted in a single `Commit` request:\n\n- `insert` followed by `insert`\n- `update` followed by `insert`\n- `upsert` followed by `insert`\n- `delete` followed by `update`\n\nWhen mode is `NON_TRANSACTIONAL`, no two mutations may affect a single\nentity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mutation"
          }
        },
        "transaction": {
          "description": "The identifier of the transaction associated with the commit. A\ntransaction identifier is returned by a call to\nDatastore.BeginTransaction.",
          "type": "string"
        }
      }
    },
    "BeginTransactionRequest": {
      "title": "BeginTransactionRequest",
      "description": "The request for Datastore.BeginTransaction.",
      "type": "object",
      "properties": {
        "transactionOptions": {
          "$ref": "#/definitions/TransactionOptions"
        }
      }
    },
    "KindExpression": {
      "title": "KindExpression",
      "description": "A representation of a kind.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the kind.",
          "type": "string"
        }
      }
    },
    "Key": {
      "title": "Key",
      "description": "A unique identifier for an entity.\nIf a key's partition ID or any of its path kinds or names are\nreserved/read-only, the key is reserved/read-only.\nA reserved/read-only key is forbidden in certain documented contexts.",
      "type": "object",
      "properties": {
        "path": {
          "description": "The entity path.\nAn entity path consists of one or more elements composed of a kind and a\nstring or numerical identifier, which identify entities. The first\nelement identifies a _root entity_, the second element identifies\na _child_ of the root entity, the third element identifies a child of the\nsecond entity, and so forth. The entities identified by all prefixes of\nthe path are called the element's _ancestors_.\n\nAn entity path is always fully complete: *all* of the entity's ancestors\nare required to be in the path along with the entity identifier itself.\nThe only exception is that in some documented cases, the identifier in the\nlast path element (for the entity) itself may be omitted. For example,\nthe last path element of the key of `Mutation.insert` may have no\nidentifier.\n\nA path can never be empty, and a path can have at most 100 elements.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "partitionId": {
          "description": "Entities are partitioned into subsets, currently identified by a project\nID and namespace ID.\nQueries are scoped to a single partition.",
          "type": "object"
        }
      }
    },
    "LatLng": {
      "title": "LatLng",
      "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleDatastoreAdminV1beta1CommonMetadata": {
      "title": "GoogleDatastoreAdminV1beta1CommonMetadata",
      "description": "Metadata common to all Datastore Admin operations.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "The client-assigned labels which were provided when the operation was\ncreated. May also include additional labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endTime": {
          "description": "The time the operation ended, either successfully or otherwise.",
          "type": "string"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType"
        },
        "state": {
          "$ref": "#/definitions/State1"
        },
        "startTime": {
          "description": "The time that work began on the operation.",
          "type": "string"
        }
      }
    },
    "ArrayValue": {
      "title": "ArrayValue",
      "description": "An array value.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Values in the array.\nThe order of values in an array is preserved as long as all values have\nidentical settings for 'exclude_from_indexes'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "GoogleDatastoreAdminV1EntityFilter": {
      "title": "GoogleDatastoreAdminV1EntityFilter",
      "description": "Identifies a subset of entities in a project. This is specified as\ncombinations of kinds and namespaces (either or both of which may be all, as\ndescribed in the following examples).\nExample usage:\n\nEntire project:\n  kinds=[], namespace_ids=[]\n\nKinds Foo and Bar in all namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=[]\n\nKinds Foo and Bar only in the default namespace:\n  kinds=['Foo', 'Bar'], namespace_ids=['']\n\nKinds Foo and Bar in both the default and Baz namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz']\n\nThe entire Baz namespace:\n  kinds=[], namespace_ids=['Baz']",
      "type": "object",
      "properties": {
        "kinds": {
          "description": "If empty, then this represents all kinds.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaceIds": {
          "description": "An empty list represents all namespaces. This is the preferred\nusage for projects that don't use namespaces.\n\nAn empty string element represents the default namespace. This should be\nused if the project has data in non-default namespaces, but doesn't want to\ninclude them.\nEach namespace in this list must be unique.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleDatastoreAdminV1beta1ExportEntitiesResponse": {
      "title": "GoogleDatastoreAdminV1beta1ExportEntitiesResponse",
      "description": "The response for\ngoogle.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.",
      "type": "object",
      "properties": {
        "outputUrl": {
          "description": "Location of the output metadata file. This can be used to begin an import\ninto Cloud Datastore (this project or another project). See\ngoogle.datastore.admin.v1beta1.ImportEntitiesRequest.input_url.\nOnly present if the operation completed successfully.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1ImportEntitiesMetadata": {
      "title": "GoogleDatastoreAdminV1ImportEntitiesMetadata",
      "description": "Metadata for ImportEntities operations.",
      "type": "object",
      "properties": {
        "progressEntities": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1Progress"
        },
        "common": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1CommonMetadata"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1Progress"
        },
        "inputUrl": {
          "description": "The location of the import metadata file. This will be the same value as\nthe google.datastore.admin.v1.ExportEntitiesResponse.output_url field.",
          "type": "string"
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1EntityFilter"
        }
      }
    },
    "GqlQuery": {
      "title": "GqlQuery",
      "description": "A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).",
      "type": "object",
      "properties": {
        "queryString": {
          "description": "A string of the format described\n[here](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).",
          "type": "string"
        },
        "allowLiterals": {
          "description": "When false, the query string must not contain any literals and instead must\nbind all values. For example,\n`SELECT * FROM Kind WHERE a = 'string literal'` is not allowed, while\n`SELECT * FROM Kind WHERE a = @value` is.",
          "type": "boolean"
        },
        "namedBindings": {
          "description": "For each non-reserved named binding site in the query string, there must be\na named parameter with that name, but not necessarily the inverse.\n\nKey must match regex `A-Za-z_$*`, must not match regex\n`__.*__`, and must not be `\"\"`.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GqlQueryParameter"
          }
        },
        "positionalBindings": {
          "description": "Numbered binding site @1 references the first numbered parameter,\neffectively using 1-based indexing, rather than the usual 0.\n\nFor each binding site numbered i in `query_string`, there must be an i-th\nnumbered parameter. The inverse must also be true.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GqlQueryParameter"
          }
        }
      }
    },
    "Filter": {
      "title": "Filter",
      "description": "A holder for any type of filter.",
      "type": "object",
      "properties": {
        "propertyFilter": {
          "description": "A filter on a property.",
          "type": "object"
        },
        "compositeFilter": {
          "description": "A composite filter.",
          "type": "object"
        }
      }
    },
    "RunQueryRequest": {
      "title": "RunQueryRequest",
      "description": "The request for Datastore.RunQuery.",
      "type": "object",
      "properties": {
        "partitionId": {
          "$ref": "#/definitions/PartitionId"
        },
        "gqlQuery": {
          "$ref": "#/definitions/GqlQuery"
        },
        "readOptions": {
          "$ref": "#/definitions/ReadOptions"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "TransactionOptions": {
      "title": "TransactionOptions",
      "description": "Options for a new transaction.",
      "type": "object",
      "properties": {
        "readWrite": {
          "description": "The transaction should allow both reads and writes.",
          "type": "object"
        },
        "readOnly": {
          "description": "The transaction should only allow reads.",
          "type": "object"
        }
      }
    },
    "GoogleDatastoreAdminV1beta1ImportEntitiesMetadata": {
      "title": "GoogleDatastoreAdminV1beta1ImportEntitiesMetadata",
      "description": "Metadata for ImportEntities operations.",
      "type": "object",
      "properties": {
        "progressBytes": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1Progress"
        },
        "inputUrl": {
          "description": "The location of the import metadata file. This will be the same value as\nthe google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url\nfield.",
          "type": "string"
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1EntityFilter"
        },
        "progressEntities": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1Progress"
        },
        "common": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1beta1CommonMetadata"
        }
      }
    },
    "Query": {
      "title": "Query",
      "description": "The parsed form of the `GqlQuery` from the request, if it was set.",
      "type": "object",
      "properties": {
        "projection": {
          "description": "The projection to return. Defaults to returning all properties.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "endCursor": {
          "description": "An ending point for the query results. Query cursors are\nreturned in query result batches and\n[can only be used to limit the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).",
          "type": "string"
        },
        "limit": {
          "description": "The maximum number of results to return. Applies after all other\nconstraints. Optional.\nUnspecified is interpreted as no limit.\nMust be >= 0 if specified.",
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "description": "The filter to apply.",
          "type": "object"
        },
        "offset": {
          "description": "The number of results to skip. Applies before limit, but after all other\nconstraints. Optional. Must be >= 0 if specified.",
          "type": "integer",
          "format": "int32"
        },
        "startCursor": {
          "description": "A starting point for the query results. Query cursors are\nreturned in query result batches and\n[can only be used to continue the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).",
          "type": "string"
        },
        "kind": {
          "description": "The kinds to query (if empty, returns entities of all kinds).\nCurrently at most 1 kind may be specified.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "distinctOn": {
          "description": "The properties to make distinct. The query results will contain the first\nresult for each distinct combination of values for the given properties\n(if empty, all results are returned).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "order": {
          "description": "The order to apply to the query results (if empty, order is unspecified).",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "EntityResult": {
      "title": "EntityResult",
      "description": "The result of fetching an entity from Datastore.",
      "type": "object",
      "properties": {
        "cursor": {
          "description": "A cursor that points to the position after the result entity.\nSet only when the `EntityResult` is part of a `QueryResultBatch` message.",
          "type": "string"
        },
        "version": {
          "description": "The version of the entity, a strictly positive number that monotonically\nincreases with changes to the entity.\n\nThis field is set for `FULL` entity\nresults.\n\nFor missing entities in `LookupResponse`, this\nis the version of the snapshot that was used to look up the entity, and it\nis always set except for eventually consistent reads.",
          "type": "string"
        },
        "entity": {
          "description": "The resulting entity.",
          "type": "object"
        }
      }
    },
    "Value": {
      "title": "Value",
      "description": "The value to compare the property to.",
      "type": "object",
      "properties": {
        "blobValue": {
          "description": "A blob value.\nMay have at most 1,000,000 bytes.\nWhen `exclude_from_indexes` is false, may have at most 1500 bytes.\nIn JSON requests, must be base64-encoded.",
          "type": "string"
        },
        "meaning": {
          "description": "The `meaning` field should only be populated for backwards compatibility.",
          "type": "integer",
          "format": "int32"
        },
        "arrayValue": {
          "description": "An array value.\nCannot contain another array value.\nA `Value` instance that sets field `array_value` must not set fields\n`meaning` or `exclude_from_indexes`.",
          "type": "object"
        },
        "entityValue": {
          "description": "An entity value.\n\n- May have no key.\n- May have a key with an incomplete key path.\n- May have a reserved/read-only key.",
          "type": "object"
        },
        "geoPointValue": {
          "description": "A geo point value representing a point on the surface of Earth.",
          "type": "object"
        },
        "keyValue": {
          "description": "A key value.",
          "type": "object"
        },
        "integerValue": {
          "description": "An integer value.",
          "type": "string"
        },
        "stringValue": {
          "description": "A UTF-8 encoded string value.\nWhen `exclude_from_indexes` is false (it is indexed) , may have at most 1500 bytes.\nOtherwise, may be set to at least 1,000,000 bytes.",
          "type": "string"
        },
        "excludeFromIndexes": {
          "description": "If the value should be excluded from all indexes including those defined\nexplicitly.",
          "type": "boolean"
        },
        "doubleValue": {
          "description": "A double value.",
          "type": "number",
          "format": "double"
        },
        "timestampValue": {
          "description": "A timestamp value.\nWhen stored in the Datastore, precise only to microseconds;\nany additional precision is rounded down.",
          "type": "string"
        },
        "nullValue": {
          "$ref": "#/definitions/NullValue"
        },
        "booleanValue": {
          "description": "A boolean value.",
          "type": "boolean"
        }
      }
    },
    "ReadWrite": {
      "title": "ReadWrite",
      "description": "Options specific to read / write transactions.",
      "type": "object",
      "properties": {
        "previousTransaction": {
          "description": "The transaction identifier of the transaction being retried.",
          "type": "string"
        }
      }
    },
    "LookupRequest": {
      "title": "LookupRequest",
      "description": "The request for Datastore.Lookup.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "Keys of entities to look up.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          }
        },
        "readOptions": {
          "$ref": "#/definitions/ReadOptions"
        }
      }
    },
    "ReserveIdsRequest": {
      "title": "ReserveIdsRequest",
      "description": "The request for Datastore.ReserveIds.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "A list of keys with complete key paths whose numeric IDs should not be\nauto-allocated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          }
        },
        "databaseId": {
          "description": "If not empty, the ID of the database against which to make the request.",
          "type": "string"
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The error result of the operation in case of failure or cancellation.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1IndexOperationMetadata": {
      "title": "GoogleDatastoreAdminV1IndexOperationMetadata",
      "description": "Metadata for Index operations.",
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1CommonMetadata"
        },
        "progressEntities": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1Progress"
        },
        "indexId": {
          "description": "The index resource ID that this operation is acting on.",
          "type": "string"
        }
      }
    },
    "PropertyOrder": {
      "title": "PropertyOrder",
      "description": "The desired order for a specific property.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/PropertyReference"
        },
        "direction": {
          "$ref": "#/definitions/Direction1"
        }
      }
    },
    "GoogleDatastoreAdminV1ImportEntitiesRequest": {
      "title": "GoogleDatastoreAdminV1ImportEntitiesRequest",
      "description": "The request for\ngoogle.datastore.admin.v1.DatastoreAdmin.ImportEntities.",
      "type": "object",
      "properties": {
        "inputUrl": {
          "description": "The full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So input_url should be of the form:\n`gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where\n`BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is\nan optional Cloud Storage namespace path (this is not a Cloud Datastore\nnamespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written\nby the ExportEntities operation. For more information about Cloud Storage\nnamespace paths, see\n[Object name\nconsiderations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\nFor more information, see\ngoogle.datastore.admin.v1.ExportEntitiesResponse.output_url.",
          "type": "string"
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1EntityFilter"
        },
        "labels": {
          "description": "Client-assigned labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PropertyReference": {
      "title": "PropertyReference",
      "description": "The property to filter by.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the property.\nIf name includes \".\"s, it may be interpreted as a property name path.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1beta1EntityFilter": {
      "title": "GoogleDatastoreAdminV1beta1EntityFilter",
      "description": "Description of which entities are being exported.",
      "type": "object",
      "properties": {
        "kinds": {
          "description": "If empty, then this represents all kinds.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaceIds": {
          "description": "An empty list represents all namespaces. This is the preferred\nusage for projects that don't use namespaces.\n\nAn empty string element represents the default namespace. This should be\nused if the project has data in non-default namespaces, but doesn't want to\ninclude them.\nEach namespace in this list must be unique.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Projection": {
      "title": "Projection",
      "description": "A representation of a property in a projection.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/PropertyReference"
        }
      }
    },
    "Mutation": {
      "title": "Mutation",
      "description": "A mutation to apply to an entity.",
      "type": "object",
      "properties": {
        "insert": {
          "description": "The entity to insert. The entity must not already exist.\nThe entity key's final path element may be incomplete.",
          "type": "object"
        },
        "baseVersion": {
          "description": "The version of the entity that this mutation is being applied to. If this\ndoes not match the current version on the server, the mutation conflicts.",
          "type": "string"
        },
        "update": {
          "description": "The entity to update. The entity must already exist.\nMust have a complete key path.",
          "type": "object"
        },
        "upsert": {
          "description": "The entity to upsert. The entity may or may not already exist.\nThe entity key's final path element may be incomplete.",
          "type": "object"
        },
        "delete": {
          "description": "The key of the entity to delete. The entity may or may not already exist.\nMust have a complete key path and must not be reserved/read-only.",
          "type": "object"
        }
      }
    },
    "ReadOptions": {
      "title": "ReadOptions",
      "description": "The options for this query.",
      "type": "object",
      "properties": {
        "readConsistency": {
          "$ref": "#/definitions/ReadConsistency"
        },
        "transaction": {
          "description": "The identifier of the transaction in which to read. A\ntransaction identifier is returned by a call to\nDatastore.BeginTransaction.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1ExportEntitiesResponse": {
      "title": "GoogleDatastoreAdminV1ExportEntitiesResponse",
      "description": "The response for\ngoogle.datastore.admin.v1.DatastoreAdmin.ExportEntities.",
      "type": "object",
      "properties": {
        "outputUrl": {
          "description": "Location of the output metadata file. This can be used to begin an import\ninto Cloud Datastore (this project or another project). See\ngoogle.datastore.admin.v1.ImportEntitiesRequest.input_url.\nOnly present if the operation completed successfully.",
          "type": "string"
        }
      }
    },
    "GoogleDatastoreAdminV1ExportEntitiesMetadata": {
      "title": "GoogleDatastoreAdminV1ExportEntitiesMetadata",
      "description": "Metadata for ExportEntities operations.",
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1CommonMetadata"
        },
        "progressBytes": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1Progress"
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1EntityFilter"
        },
        "outputUrlPrefix": {
          "description": "Location for the export metadata and data files. This will be the same\nvalue as the\ngoogle.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix\nfield. The final output location is provided in\ngoogle.datastore.admin.v1.ExportEntitiesResponse.output_url.",
          "type": "string"
        },
        "progressEntities": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1Progress"
        }
      }
    },
    "MutationResult": {
      "title": "MutationResult",
      "description": "The result of applying a mutation.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The automatically allocated key.\nSet only when the mutation allocated a key.",
          "type": "object"
        },
        "version": {
          "description": "The version of the entity on the server after processing the mutation. If\nthe mutation doesn't change anything on the server, then the version will\nbe the version of the current entity or, if no entity is present, a version\nthat is strictly greater than the version of any previous entity and less\nthan the version of any possible future entity.",
          "type": "string"
        },
        "conflictDetected": {
          "description": "Whether a conflict was detected for this mutation. Always false when a\nconflict detection strategy field is not set in the mutation.",
          "type": "boolean"
        }
      }
    },
    "GoogleDatastoreAdminV1ExportEntitiesRequest": {
      "title": "GoogleDatastoreAdminV1ExportEntitiesRequest",
      "description": "The request for\ngoogle.datastore.admin.v1.DatastoreAdmin.ExportEntities.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Client-assigned labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityFilter": {
          "$ref": "#/definitions/GoogleDatastoreAdminV1EntityFilter"
        },
        "outputUrlPrefix": {
          "description": "Location for the export metadata and data files.\n\nThe full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So output_url_prefix should be of the\nform: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the\nname of the Cloud Storage bucket and `NAMESPACE_PATH` is an optional Cloud\nStorage namespace path (this is not a Cloud Datastore namespace). For more\ninformation about Cloud Storage namespace paths, see\n[Object name\nconsiderations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\nThe resulting files will be nested deeper than the specified URL prefix.\nThe final output URL will be provided in the\ngoogle.datastore.admin.v1.ExportEntitiesResponse.output_url field. That\nvalue should be used for subsequent ImportEntities operations.\n\nBy nesting the data files deeper, the same Cloud Storage bucket can be used\nin multiple ExportEntities operations without conflict.",
          "type": "string"
        }
      }
    },
    "Ancestor": {
      "title": "Ancestor",
      "description": "The index's ancestor mode.  Must not be ANCESTOR_MODE_UNSPECIFIED.\nRequired.",
      "example": "ANCESTOR_MODE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ANCESTOR_MODE_UNSPECIFIED",
        "NONE",
        "ALL_ANCESTORS"
      ]
    },
    "Direction": {
      "title": "Direction",
      "description": "The indexed property's direction.  Must not be DIRECTION_UNSPECIFIED.\nRequired.",
      "example": "DIRECTION_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DIRECTION_UNSPECIFIED",
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "Direction1": {
      "title": "Direction1",
      "description": "The direction to order by. Defaults to `ASCENDING`.",
      "example": "DIRECTION_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DIRECTION_UNSPECIFIED",
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "EntityResultType": {
      "title": "EntityResultType",
      "description": "The result type for every entity in `entity_results`.",
      "example": "RESULT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "RESULT_TYPE_UNSPECIFIED",
        "FULL",
        "PROJECTION",
        "KEY_ONLY"
      ]
    },
    "Mode": {
      "title": "Mode",
      "description": "The type of commit to perform. Defaults to `TRANSACTIONAL`.",
      "example": "MODE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "MODE_UNSPECIFIED",
        "TRANSACTIONAL",
        "NON_TRANSACTIONAL"
      ]
    },
    "MoreResults": {
      "title": "MoreResults",
      "description": "The state of the query after the current batch.",
      "example": "MORE_RESULTS_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "MORE_RESULTS_TYPE_UNSPECIFIED",
        "NOT_FINISHED",
        "MORE_RESULTS_AFTER_LIMIT",
        "MORE_RESULTS_AFTER_CURSOR",
        "NO_MORE_RESULTS"
      ]
    },
    "NullValue": {
      "title": "NullValue",
      "description": "A null value.",
      "example": "NULL_VALUE",
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ]
    },
    "Op": {
      "title": "Op",
      "description": "The operator for combining multiple filters.",
      "example": "OPERATOR_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "AND"
      ]
    },
    "Op1": {
      "title": "Op1",
      "description": "The operator to filter by.",
      "example": "OPERATOR_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATOR_UNSPECIFIED",
        "LESS_THAN",
        "LESS_THAN_OR_EQUAL",
        "GREATER_THAN",
        "GREATER_THAN_OR_EQUAL",
        "EQUAL",
        "HAS_ANCESTOR"
      ]
    },
    "OperationType": {
      "title": "OperationType",
      "description": "The type of the operation. Can be used as a filter in\nListOperationsRequest.",
      "example": "OPERATION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATION_TYPE_UNSPECIFIED",
        "EXPORT_ENTITIES",
        "IMPORT_ENTITIES"
      ]
    },
    "OperationType1": {
      "title": "OperationType1",
      "description": "The type of the operation. Can be used as a filter in\nListOperationsRequest.",
      "example": "OPERATION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OPERATION_TYPE_UNSPECIFIED",
        "EXPORT_ENTITIES",
        "IMPORT_ENTITIES",
        "CREATE_INDEX",
        "DELETE_INDEX"
      ]
    },
    "ReadConsistency": {
      "title": "ReadConsistency",
      "description": "The non-transactional read consistency to use.\nCannot be set to `STRONG` for global queries.",
      "example": "READ_CONSISTENCY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "READ_CONSISTENCY_UNSPECIFIED",
        "STRONG",
        "EVENTUAL"
      ]
    },
    "State": {
      "title": "State",
      "description": "The state of the index.\nOutput only.",
      "example": "STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "CREATING",
        "READY",
        "DELETING",
        "ERROR"
      ]
    },
    "State1": {
      "title": "State1",
      "description": "The current state of the Operation.",
      "example": "STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "INITIALIZING",
        "PROCESSING",
        "CANCELLING",
        "FINALIZING",
        "SUCCESSFUL",
        "FAILED",
        "CANCELLED"
      ]
    }
  },
  "tags": [
    {
      "name": "indexes",
      "description": ""
    },
    {
      "name": "operations",
      "description": ""
    },
    {
      "name": "projects",
      "description": ""
    }
  ]
}