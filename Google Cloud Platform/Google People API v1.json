{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "People API",
    "description": "Provides access to information about profiles and contacts.",
    "contact": {}
  },
  "host": "people.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://people.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/user.emails.read": "View your email addresses",
        "https://www.googleapis.com/auth/contacts": "See, edit, download, and permanently delete your contacts",
        "https://www.googleapis.com/auth/user.addresses.read": "View your street addresses",
        "https://www.googleapis.com/auth/user.phonenumbers.read": "View your phone numbers",
        "https://www.googleapis.com/auth/userinfo.email": "View your email address",
        "https://www.googleapis.com/auth/user.birthday.read": "View your complete date of birth",
        "https://www.googleapis.com/auth/contacts.readonly": "See and download your contacts",
        "https://www.googleapis.com/auth/plus.login": "Know the list of people in your circles, your age range, and language",
        "https://www.googleapis.com/auth/userinfo.profile": "View your basic profile info"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{+resourceName}/connections": {
      "get": {
        "description": "Provides a list of the authenticated user's contacts merged with any\nconnected profiles.\n<br>\nThe request throws a 400 error if 'personFields' is not specified.",
        "summary": "ListV1ConnectionsByResourceName",
        "tags": [
          "connections"
        ],
        "operationId": "V1ConnectionsByResourceNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "syncToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A sync token returned by a previous call to `people.connections.list`.\nOnly resources changed since the sync token was created will be returned.\nSync requests that specify `sync_token` have an additional rate limit."
          },
          {
            "name": "personFields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** A field mask to restrict which fields on each person are\nreturned. Multiple fields can be specified by separating them with commas.\nValid values are:\n\n* addresses\n* ageRanges\n* biographies\n* birthdays\n* braggingRights\n* coverPhotos\n* emailAddresses\n* events\n* genders\n* imClients\n* interests\n* locales\n* memberships\n* metadata\n* names\n* nicknames\n* occupations\n* organizations\n* phoneNumbers\n* photos\n* relations\n* relationshipInterests\n* relationshipStatuses\n* residences\n* sipAddresses\n* skills\n* taglines\n* urls\n* userDefined"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "default": "LAST_MODIFIED_ASCENDING",
            "type": "string",
            "description": "The order in which the connections should be sorted. Defaults to\n`LAST_MODIFIED_ASCENDING`. (Acceptable values are: \"LAST_MODIFIED_ASCENDING\", \"FIRST_NAME_ASCENDING\", \"LAST_NAME_ASCENDING\")"
          },
          {
            "name": "requestSyncToken",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether the response should include a sync token, which can be used to get\nall changes since the last request. For subsequent sync requests use the\n`sync_token` param instead. Initial sync requests that specify\n`request_sync_token` have an additional rate limit."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The token of the page to be returned."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of connections to include in the response. Valid values are\nbetween 1 and 2000, inclusive. Defaults to 100."
          },
          {
            "name": "requestMask.includeField",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** Comma-separated list of person fields to be included in the\nresponse. Each path should start with `person.`: for example,\n`person.names` or `person.photos`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListConnectionsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts",
              "https://www.googleapis.com/auth/contacts.readonly"
            ]
          }
        ]
      }
    },
    "/v1/people:batchGet": {
      "get": {
        "description": "Provides information about a list of specific people by specifying a list\nof requested resource names. Use `people/me` to indicate the authenticated\nuser.\n<br>\nThe request throws a 400 error if 'personFields' is not specified.",
        "summary": "GetBatchGetV1PeopleBatchGet",
        "tags": [
          "people"
        ],
        "operationId": "V1PeopleBatchGetGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "requestMask.includeField",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** Comma-separated list of person fields to be included in the\nresponse. Each path should start with `person.`: for example,\n`person.names` or `person.photos`."
          },
          {
            "name": "resourceNames",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The resource names of the people to provide information about.\n\n- To get information about the authenticated user, specify `people/me`.\n- To get information about a google account, specify\n  `people/`<var>account_id</var>.\n- To get information about a contact, specify the resource name that\n  identifies the contact as returned by\n[`people.connections.list`](/people/api/rest/v1/people.connections/list).\n\nYou can include up to 50 resource names in one request."
          },
          {
            "name": "personFields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** A field mask to restrict which fields on each person are\nreturned. Multiple fields can be specified by separating them with commas.\nValid values are:\n\n* addresses\n* ageRanges\n* biographies\n* birthdays\n* braggingRights\n* coverPhotos\n* emailAddresses\n* events\n* genders\n* imClients\n* interests\n* locales\n* memberships\n* metadata\n* names\n* nicknames\n* occupations\n* organizations\n* phoneNumbers\n* photos\n* relations\n* relationshipInterests\n* relationshipStatuses\n* residences\n* sipAddresses\n* skills\n* taglines\n* urls\n* userDefined"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetPeopleResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts",
              "https://www.googleapis.com/auth/contacts.readonly",
              "https://www.googleapis.com/auth/plus.login",
              "https://www.googleapis.com/auth/user.addresses.read",
              "https://www.googleapis.com/auth/user.birthday.read",
              "https://www.googleapis.com/auth/user.emails.read",
              "https://www.googleapis.com/auth/user.phonenumbers.read",
              "https://www.googleapis.com/auth/userinfo.email",
              "https://www.googleapis.com/auth/userinfo.profile"
            ]
          }
        ]
      }
    },
    "/v1/{+resourceName}": {
      "get": {
        "description": "Provides information about a person by specifying a resource name. Use\n`people/me` to indicate the authenticated user.\n<br>\nThe request throws a 400 error if 'personFields' is not specified.",
        "summary": "GetV1ByResourceName",
        "tags": [
          "people"
        ],
        "operationId": "V1ByResourceNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "personFields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** A field mask to restrict which fields on the person are\nreturned. Multiple fields can be specified by separating them with commas.\nValid values are:\n\n* addresses\n* ageRanges\n* biographies\n* birthdays\n* braggingRights\n* coverPhotos\n* emailAddresses\n* events\n* genders\n* imClients\n* interests\n* locales\n* memberships\n* metadata\n* names\n* nicknames\n* occupations\n* organizations\n* phoneNumbers\n* photos\n* relations\n* relationshipInterests\n* relationshipStatuses\n* residences\n* sipAddresses\n* skills\n* taglines\n* urls\n* userDefined"
          },
          {
            "name": "requestMask.includeField",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** Comma-separated list of person fields to be included in the\nresponse. Each path should start with `person.`: for example,\n`person.names` or `person.photos`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts",
              "https://www.googleapis.com/auth/contacts.readonly",
              "https://www.googleapis.com/auth/plus.login",
              "https://www.googleapis.com/auth/user.addresses.read",
              "https://www.googleapis.com/auth/user.birthday.read",
              "https://www.googleapis.com/auth/user.emails.read",
              "https://www.googleapis.com/auth/user.phonenumbers.read",
              "https://www.googleapis.com/auth/userinfo.email",
              "https://www.googleapis.com/auth/userinfo.profile"
            ]
          }
        ]
      },
      "put": {
        "description": "Update the name of an existing contact group owned by the authenticated\nuser.",
        "summary": "UpdateV1ByResourceName",
        "tags": [
          "contactGroups"
        ],
        "operationId": "V1ByResourceNamePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateContactGroupRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactGroup"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete an existing contact group owned by the authenticated user by\nspecifying a contact group resource name.",
        "summary": "DeleteV1ByResourceName",
        "tags": [
          "contactGroups"
        ],
        "operationId": "V1ByResourceNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "deleteContacts",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Set to true to also delete the contacts in the specified group."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    },
    "/v1/{+resourceName}:updateContact": {
      "patch": {
        "description": "Update contact data for an existing contact person. Any non-contact data\nwill not be modified.\n\nThe request throws a 400 error if `updatePersonFields` is not specified.\n<br>\nThe request throws a 400 error if `person.metadata.sources` is not\nspecified for the contact to be updated.\n<br>\nThe request throws a 412 error if `person.metadata.sources.etag` is\ndifferent than the contact's etag, which indicates the contact has changed\nsince its data was read. Clients should get the latest person and re-apply\ntheir updates to the latest person.",
        "summary": "UpdateContactV1UpdateContactByResourceName",
        "tags": [
          "people"
        ],
        "operationId": "V1UpdateContactByResourceNamePatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "updatePersonFields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "**Required.** A field mask to restrict which fields on the person are\nupdated. Multiple fields can be specified by separating them with commas.\nAll updated fields will be replaced. Valid values are:\n\n* addresses\n* biographies\n* birthdays\n* emailAddresses\n* events\n* genders\n* imClients\n* interests\n* locales\n* names\n* nicknames\n* occupations\n* organizations\n* phoneNumbers\n* relations\n* residences\n* sipAddresses\n* urls\n* userDefined"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    },
    "/v1/people:createContact": {
      "post": {
        "description": "Create a new contact and return the person resource for that contact.",
        "summary": "CreateContactV1PeopleCreateContact",
        "tags": [
          "people"
        ],
        "operationId": "V1PeopleCreateContactPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The resource name of the owning person resource."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    },
    "/v1/{+resourceName}:deleteContact": {
      "delete": {
        "description": "Delete a contact person. Any non-contact data will not be deleted.",
        "summary": "DeleteContactV1DeleteContactByResourceName",
        "tags": [
          "people"
        ],
        "operationId": "V1DeleteContactByResourceNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    },
    "/v1/{+resourceName}/members:modify": {
      "post": {
        "description": "Modify the members of a contact group owned by the authenticated user.",
        "summary": "ModifyV1MembersModifyByResourceName",
        "tags": [
          "members"
        ],
        "operationId": "V1MembersModifyByResourceNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyContactGroupMembersRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyContactGroupMembersResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    },
    "/v1/contactGroups:batchGet": {
      "get": {
        "description": "Get a list of contact groups owned by the authenticated user by specifying\na list of contact group resource names.",
        "summary": "BatchGetV1ContactGroupsBatchGet",
        "tags": [
          "contactGroups"
        ],
        "operationId": "V1ContactGroupsBatchGetGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "maxMembers",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies the maximum number of members to return for each group."
          },
          {
            "name": "resourceNames",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The resource names of the contact groups to get."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchGetContactGroupsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts",
              "https://www.googleapis.com/auth/contacts.readonly"
            ]
          }
        ]
      }
    },
    "/v1/contactGroups": {
      "get": {
        "description": "List all contact groups owned by the authenticated user. Members of the\ncontact groups are not populated.",
        "summary": "ListV1ContactGroups",
        "tags": [
          "contactGroups"
        ],
        "operationId": "V1ContactGroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "syncToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A sync token, returned by a previous call to `contactgroups.list`.\nOnly resources changed since the sync token was created will be returned."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The next_page_token value returned from a previous call to\n[ListContactGroups](/people/api/rest/v1/contactgroups/list).\nRequests the next page of resources."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListContactGroupsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts",
              "https://www.googleapis.com/auth/contacts.readonly"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a new contact group owned by the authenticated user.",
        "summary": "CreateV1ContactGroups",
        "tags": [
          "contactGroups"
        ],
        "operationId": "V1ContactGroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateContactGroupRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContactGroup"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/contacts"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "FieldMetadata": {
      "title": "FieldMetadata",
      "description": "Metadata about a field.",
      "type": "object",
      "properties": {
        "verified": {
          "description": "True if the field is verified; false if the field is unverified. A\nverified field is typically a name, email address, phone number, or\nwebsite that has been confirmed to be owned by the person.",
          "type": "boolean"
        },
        "primary": {
          "description": "True if the field is the primary field; false if the field is a secondary\nfield.",
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/Source"
        }
      }
    },
    "Source": {
      "title": "Source",
      "description": "The source of the field.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "**Only populated in `person.metadata.sources`.**\n\nThe [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nsource. Used for web cache validation.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier within the source type generated by the server.",
          "type": "string"
        },
        "profileMetadata": {
          "description": "**Only populated in `person.metadata.sources`.**\n\nMetadata about a source of type PROFILE.",
          "type": "object"
        },
        "updateTime": {
          "description": "**Only populated in `person.metadata.sources`.**\n\nLast update timestamp of this source.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      }
    },
    "RelationshipInterest": {
      "title": "RelationshipInterest",
      "description": "A person's read-only relationship interest .",
      "type": "object",
      "properties": {
        "formattedValue": {
          "description": "The value of the relationship interest translated and formatted in the\nviewer's account locale or the locale specified in the Accept-Language\nHTTP header.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The kind of relationship the person is looking for. The value can be custom\nor one of these predefined values:\n\n* `friend`\n* `date`\n* `relationship`\n* `networking`",
          "type": "string"
        }
      }
    },
    "GetPeopleResponse": {
      "title": "GetPeopleResponse",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The response for each requested resource name.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonResponse"
          }
        }
      }
    },
    "PhoneNumber": {
      "title": "PhoneNumber",
      "description": "A person's phone number.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the phone number. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `mobile`\n* `homeFax`\n* `workFax`\n* `otherFax`\n* `pager`\n* `workMobile`\n* `workPager`\n* `main`\n* `googleVoice`\n* `other`",
          "type": "string"
        },
        "value": {
          "description": "The phone number.",
          "type": "string"
        },
        "formattedType": {
          "description": "The read-only type of the phone number translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "canonicalForm": {
          "description": "The read-only canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)\nform of the phone number.",
          "type": "string"
        }
      }
    },
    "Photo": {
      "title": "Photo",
      "description": "A person's read-only photo. A picture shown next to the person's name to\nhelp others recognize the person.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the photo. You can change the desired size by appending a query\nparameter `sz=`<var>size</var> at the end of the url. Example:\n`https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50`",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "default": {
          "description": "True if the photo is a default photo;\nfalse if the photo is a user-provided photo.",
          "type": "boolean"
        }
      }
    },
    "ListConnectionsResponse": {
      "title": "ListConnectionsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The token that can be used to retrieve the next page of results.",
          "type": "string"
        },
        "connections": {
          "description": "The list of people that the requestor is connected to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "nextSyncToken": {
          "description": "The token that can be used to retrieve changes since the last request.",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of items in the list without pagination.",
          "type": "integer",
          "format": "int32"
        },
        "totalPeople": {
          "description": "**DEPRECATED** (Please use totalItems)\nThe total number of people in the list without pagination.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Birthday": {
      "title": "Birthday",
      "description": "A person's birthday. At least one of the `date` and `text` fields are\nspecified. The `date` and `text` fields typically represent the same\ndate, but are not guaranteed to.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "text": {
          "description": "A free-form string representing the user's birthday.",
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/Date"
        }
      }
    },
    "CreateContactGroupRequest": {
      "title": "CreateContactGroupRequest",
      "description": "A request to create a new contact group.",
      "type": "object",
      "properties": {
        "contactGroup": {
          "$ref": "#/definitions/ContactGroup"
        }
      }
    },
    "Address": {
      "title": "Address",
      "description": "A person's physical address. May be a P.O. box or street address. All fields\nare optional.",
      "type": "object",
      "properties": {
        "streetAddress": {
          "description": "The street address.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "countryCode": {
          "description": "The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country\ncode of the address.",
          "type": "string"
        },
        "formattedType": {
          "description": "The read-only type of the address translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "city": {
          "description": "The city of the address.",
          "type": "string"
        },
        "formattedValue": {
          "description": "The unstructured value of the address. If this is not set by the user it\nwill be automatically constructed from structured values.",
          "type": "string"
        },
        "country": {
          "description": "The country of the address.",
          "type": "string"
        },
        "type": {
          "description": "The type of the address. The type can be custom or one of these predefined\nvalues:\n\n* `home`\n* `work`\n* `other`",
          "type": "string"
        },
        "extendedAddress": {
          "description": "The extended address of the address; for example, the apartment number.",
          "type": "string"
        },
        "poBox": {
          "description": "The P.O. box of the address.",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code of the address.",
          "type": "string"
        },
        "region": {
          "description": "The region of the address; for example, the state or province.",
          "type": "string"
        }
      }
    },
    "ContactGroupMembership": {
      "title": "ContactGroupMembership",
      "description": "A Google contact group membership.",
      "type": "object",
      "properties": {
        "contactGroupId": {
          "description": "The contact group ID for the contact group membership. The contact group\nID can be custom or one of these predefined values:\n\n*  `myContacts`\n*  `starred`\n*  A numerical ID for user-created groups.",
          "type": "string"
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PersonMetadata": {
      "title": "PersonMetadata",
      "description": "The read-only metadata about a person.",
      "type": "object",
      "properties": {
        "sources": {
          "description": "The sources of data for the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Source"
          }
        },
        "previousResourceNames": {
          "description": "Any former resource names this person has had. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token.\n\nThe resource name may change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or\nprofile URL.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "description": "True if the person resource has been deleted. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token.",
          "type": "boolean"
        },
        "objectType": {
          "$ref": "#/definitions/ObjectType"
        },
        "linkedPeopleResourceNames": {
          "description": "Resource names of people linked to this resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ModifyContactGroupMembersRequest": {
      "title": "ModifyContactGroupMembersRequest",
      "description": "A request to modify an existing contact group's members. Contacts can be\nremoved from any group but they can only be added to a user group or\nmyContacts or starred system groups.",
      "type": "object",
      "properties": {
        "resourceNamesToAdd": {
          "description": "The resource names of the contact people to add in the form of in the form\n`people/`<var>person_id</var>.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNamesToRemove": {
          "description": "The resource names of the contact people to remove in the form of in the\nform of `people/`<var>person_id</var>.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContactGroupResponse": {
      "title": "ContactGroupResponse",
      "description": "The response for a specific contact group.",
      "type": "object",
      "properties": {
        "requestedResourceName": {
          "description": "The original requested resource name.",
          "type": "string"
        },
        "contactGroup": {
          "$ref": "#/definitions/ContactGroup"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "Url": {
      "title": "Url",
      "description": "A person's associated URLs.",
      "type": "object",
      "properties": {
        "formattedType": {
          "description": "The read-only type of the URL translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the URL. The type can be custom or one of these predefined\nvalues:\n\n* `home`\n* `work`\n* `blog`\n* `profile`\n* `homePage`\n* `ftp`\n* `reservations`\n* `appInstallPage`: website for a Google+ application.\n* `other`",
          "type": "string"
        },
        "value": {
          "description": "The URL.",
          "type": "string"
        }
      }
    },
    "ImClient": {
      "title": "ImClient",
      "description": "A person's instant messaging client.",
      "type": "object",
      "properties": {
        "formattedProtocol": {
          "description": "The read-only protocol of the IM client formatted in the viewer's account\nlocale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "formattedType": {
          "description": "The read-only type of the IM client translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the IM client. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `other`",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol of the IM client. The protocol can be custom or one of these\npredefined values:\n\n* `aim`\n* `msn`\n* `yahoo`\n* `skype`\n* `qq`\n* `googleTalk`\n* `icq`\n* `jabber`\n* `netMeeting`",
          "type": "string"
        },
        "username": {
          "description": "The user name used in the IM client.",
          "type": "string"
        }
      }
    },
    "DomainMembership": {
      "title": "DomainMembership",
      "description": "A Google Apps Domain membership.",
      "type": "object",
      "properties": {
        "inViewerDomain": {
          "description": "True if the person is in the viewer's Google Apps domain.",
          "type": "boolean"
        }
      }
    },
    "Membership": {
      "title": "Membership",
      "description": "A person's read-only membership in a group.",
      "type": "object",
      "properties": {
        "contactGroupMembership": {
          "$ref": "#/definitions/ContactGroupMembership"
        },
        "domainMembership": {
          "$ref": "#/definitions/DomainMembership"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        }
      }
    },
    "BatchGetContactGroupsResponse": {
      "title": "BatchGetContactGroupsResponse",
      "description": "The response to a batch get contact groups request.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of responses for each requested contact group resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroupResponse"
          }
        }
      }
    },
    "RelationshipStatus": {
      "title": "RelationshipStatus",
      "description": "A person's read-only relationship status.",
      "type": "object",
      "properties": {
        "formattedValue": {
          "description": "The read-only value of the relationship status translated and formatted in\nthe viewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The relationship status. The value can be custom or one of these\npredefined values:\n\n* `single`\n* `inARelationship`\n* `engaged`\n* `married`\n* `itsComplicated`\n* `openRelationship`\n* `widowed`\n* `inDomesticPartnership`\n* `inCivilUnion`",
          "type": "string"
        }
      }
    },
    "BraggingRights": {
      "title": "BraggingRights",
      "description": "A person's bragging rights.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The bragging rights; for example, `climbed mount everest`.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        }
      }
    },
    "SipAddress": {
      "title": "SipAddress",
      "description": "A person's SIP address. Session Initial Protocol addresses are used for VoIP\ncommunications to make voice or video calls over the internet.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the SIP address. The type can be custom or or one of these\npredefined values:\n\n* `home`\n* `work`\n* `mobile`\n* `other`",
          "type": "string"
        },
        "value": {
          "description": "The SIP address in the\n[RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1) SIP URI\nformat.",
          "type": "string"
        },
        "formattedType": {
          "description": "The read-only type of the SIP address translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        }
      }
    },
    "Organization": {
      "title": "Organization",
      "description": "A person's past or current organization. Overlapping date ranges are\npermitted.",
      "type": "object",
      "properties": {
        "symbol": {
          "description": "The symbol associated with the organization; for example, a stock ticker\nsymbol, abbreviation, or acronym.",
          "type": "string"
        },
        "name": {
          "description": "The name of the organization.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "location": {
          "description": "The location of the organization office the person works at.",
          "type": "string"
        },
        "title": {
          "description": "The person's job title at the organization.",
          "type": "string"
        },
        "current": {
          "description": "True if the organization is the person's current organization;\nfalse if the organization is a past organization.",
          "type": "boolean"
        },
        "startDate": {
          "$ref": "#/definitions/Date"
        },
        "formattedType": {
          "description": "The read-only type of the organization translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "domain": {
          "description": "The domain name associated with the organization; for example, `google.com`.",
          "type": "string"
        },
        "department": {
          "description": "The person's department at the organization.",
          "type": "string"
        },
        "phoneticName": {
          "description": "The phonetic name of the organization.",
          "type": "string"
        },
        "type": {
          "description": "The type of the organization. The type can be custom or  one of these\npredefined values:\n\n* `work`\n* `school`",
          "type": "string"
        },
        "jobDescription": {
          "description": "The person's job description at the organization.",
          "type": "string"
        },
        "endDate": {
          "$ref": "#/definitions/Date"
        }
      }
    },
    "AgeRangeType": {
      "title": "AgeRangeType",
      "description": "A person's age range.",
      "type": "object",
      "properties": {
        "ageRange": {
          "$ref": "#/definitions/AgeRange1"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        }
      }
    },
    "ListContactGroupsResponse": {
      "title": "ListContactGroupsResponse",
      "description": "The response to a list contact groups request.",
      "type": "object",
      "properties": {
        "contactGroups": {
          "description": "The list of contact groups. Members of the contact groups are not\npopulated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactGroup"
          }
        },
        "nextPageToken": {
          "description": "The token that can be used to retrieve the next page of results.",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of items in the list without pagination.",
          "type": "integer",
          "format": "int32"
        },
        "nextSyncToken": {
          "description": "The token that can be used to retrieve changes since the last request.",
          "type": "string"
        }
      }
    },
    "PersonResponse": {
      "title": "PersonResponse",
      "description": "The response for a single person",
      "type": "object",
      "properties": {
        "person": {
          "description": "The person.",
          "type": "object"
        },
        "status": {
          "description": "The status of the response.",
          "type": "object"
        },
        "httpStatusCode": {
          "description": "**DEPRECATED** (Please use status instead)\n\n[HTTP 1.1 status code]\n(http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).",
          "type": "integer",
          "format": "int32"
        },
        "requestedResourceName": {
          "description": "The original requested resource name. May be different than the resource\nname on the returned person.\n\nThe resource name can change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or a\nprofile URL.",
          "type": "string"
        }
      }
    },
    "Relation": {
      "title": "Relation",
      "description": "A person's relation to another person.",
      "type": "object",
      "properties": {
        "person": {
          "description": "The name of the other person this relation refers to.",
          "type": "string"
        },
        "formattedType": {
          "description": "The type of the relation translated and formatted in the viewer's account\nlocale or the locale specified in the Accept-Language HTTP header.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The person's relation to the other person. The type can be custom or one of\nthese predefined values:\n\n* `spouse`\n* `child`\n* `mother`\n* `father`\n* `parent`\n* `brother`\n* `sister`\n* `friend`\n* `relative`\n* `domesticPartner`\n* `manager`\n* `assistant`\n* `referredBy`\n* `partner`",
          "type": "string"
        }
      }
    },
    "Occupation": {
      "title": "Occupation",
      "description": "A person's occupation.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The occupation; for example, `carpenter`.",
          "type": "string"
        }
      }
    },
    "ContactGroup": {
      "title": "ContactGroup",
      "description": "The contact group to create.",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "The resource name for the contact group, assigned by the server. An ASCII\nstring, in the form of `contactGroups/`<var>contact_group_id</var>.",
          "type": "string"
        },
        "etag": {
          "description": "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nresource. Used for web cache validation.",
          "type": "string"
        },
        "formattedName": {
          "description": "The read-only name translated and formatted in the viewer's account locale\nor the `Accept-Language` HTTP header locale for system groups names.\nGroup names set by the owner are the same as name.",
          "type": "string"
        },
        "groupType": {
          "$ref": "#/definitions/GroupType"
        },
        "name": {
          "description": "The contact group name set by the group owner or a system provided name\nfor system groups.",
          "type": "string"
        },
        "memberResourceNames": {
          "description": "The list of contact person resource names that are members of the contact\ngroup. The field is not populated for LIST requests and can only be updated\nthrough the\n[ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Metadata about the contact group.",
          "type": "object"
        },
        "memberCount": {
          "description": "The total number of contacts in the group irrespective of max members in\nspecified in the request.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Person": {
      "title": "Person",
      "description": "Information about a person merged from various data sources such as the\nauthenticated user's contacts and profile data.\n\nMost fields can have multiple items. The items in a field have no guaranteed\norder, but each non-empty field is guaranteed to have exactly one field with\n`metadata.primary` set to true.",
      "type": "object",
      "properties": {
        "nicknames": {
          "description": "The person's nicknames.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "relations": {
          "description": "The person's relations.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "names": {
          "description": "The person's names.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "occupations": {
          "description": "The person's occupations.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "emailAddresses": {
          "description": "The person's email addresses.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "organizations": {
          "description": "The person's past or current organizations.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "etag": {
          "description": "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nresource. Used for web cache validation.",
          "type": "string"
        },
        "braggingRights": {
          "description": "The person's bragging rights.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "metadata": {
          "description": "Read-only metadata about the person.",
          "type": "object"
        },
        "residences": {
          "description": "The person's residences.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "genders": {
          "description": "The person's genders.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "resourceName": {
          "description": "The resource name for the person, assigned by the server. An ASCII string\nwith a max length of 27 characters, in the form of\n`people/`<var>person_id</var>.",
          "type": "string"
        },
        "interests": {
          "description": "The person's interests.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "biographies": {
          "description": "The person's biographies.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "skills": {
          "description": "The person's skills.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "relationshipStatuses": {
          "description": "The person's read-only relationship statuses.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "photos": {
          "description": "The person's read-only photos.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "ageRange": {
          "$ref": "#/definitions/AgeRange"
        },
        "taglines": {
          "description": "The person's read-only taglines.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "ageRanges": {
          "description": "The person's read-only age ranges.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "sipAddresses": {
          "description": "The person's SIP addresses.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "addresses": {
          "description": "The person's street addresses.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "events": {
          "description": "The person's events.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "memberships": {
          "description": "The person's read-only group memberships.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "phoneNumbers": {
          "description": "The person's phone numbers.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "coverPhotos": {
          "description": "The person's read-only cover photos.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "imClients": {
          "description": "The person's instant messaging clients.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "birthdays": {
          "description": "The person's birthdays.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "userDefined": {
          "description": "The person's user defined data.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "locales": {
          "description": "The person's locale preferences.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "relationshipInterests": {
          "description": "The person's read-only relationship interests.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "urls": {
          "description": "The person's associated URLs.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "UpdateContactGroupRequest": {
      "title": "UpdateContactGroupRequest",
      "description": "A request to update an existing user contact group. All updated fields will\nbe replaced.",
      "type": "object",
      "properties": {
        "contactGroup": {
          "$ref": "#/definitions/ContactGroup"
        }
      }
    },
    "ContactGroupMetadata": {
      "title": "ContactGroupMetadata",
      "description": "The read-only metadata about a contact group.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "The time the group was last updated.",
          "type": "string"
        },
        "deleted": {
          "description": "True if the contact group resource has been deleted. Populated only for\n[`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests\nthat include a sync token.",
          "type": "boolean"
        }
      }
    },
    "Residence": {
      "title": "Residence",
      "description": "A person's past or current residence.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "current": {
          "description": "True if the residence is the person's current residence;\nfalse if the residence is a past residence.",
          "type": "boolean"
        },
        "value": {
          "description": "The address of the residence.",
          "type": "string"
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "An event related to the person.",
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/Date"
        },
        "formattedType": {
          "description": "The read-only type of the event translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the event. The type can be custom or one of these predefined\nvalues:\n\n* `anniversary`\n* `other`",
          "type": "string"
        }
      }
    },
    "ModifyContactGroupMembersResponse": {
      "title": "ModifyContactGroupMembersResponse",
      "description": "The response to a modify contact group members request.",
      "type": "object",
      "properties": {
        "notFoundResourceNames": {
          "description": "The contact people resource names that were not found.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProfileMetadata": {
      "title": "ProfileMetadata",
      "description": "The read-only metadata about a profile.",
      "type": "object",
      "properties": {
        "objectType": {
          "$ref": "#/definitions/ObjectType1"
        },
        "userTypes": {
          "description": "The user types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserType"
          }
        }
      }
    },
    "Gender": {
      "title": "Gender",
      "description": "A person's gender.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The gender for the person. The gender can be custom or one of these\npredefined values:\n\n* `male`\n* `female`\n* `other`\n* `unknown`",
          "type": "string"
        },
        "formattedValue": {
          "description": "The read-only value of the gender translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        }
      }
    },
    "CoverPhoto": {
      "title": "CoverPhoto",
      "description": "A person's read-only cover photo. A large image shown on the person's\nprofile page that represents who they are or what they care about.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "default": {
          "description": "True if the cover photo is the default cover photo;\nfalse if the cover photo is a user-provided cover photo.",
          "type": "boolean"
        },
        "url": {
          "description": "The URL of the cover photo.",
          "type": "string"
        }
      }
    },
    "Interest": {
      "title": "Interest",
      "description": "One of the person's interests.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The interest; for example, `stargazing`.",
          "type": "string"
        }
      }
    },
    "Nickname": {
      "title": "Nickname",
      "description": "A person's nickname.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The nickname.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        }
      }
    },
    "EmailAddress": {
      "title": "EmailAddress",
      "description": "A person's email address.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name of the email.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "type": {
          "description": "The type of the email address. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `other`",
          "type": "string"
        },
        "value": {
          "description": "The email address.",
          "type": "string"
        },
        "formattedType": {
          "description": "The read-only type of the email address translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
          "type": "string"
        }
      }
    },
    "Skill": {
      "title": "Skill",
      "description": "A skill that the person has.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The skill; for example, `underwater basket weaving`.",
          "type": "string"
        }
      }
    },
    "Date": {
      "title": "Date",
      "description": "The date of the birthday.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Tagline": {
      "title": "Tagline",
      "description": "A read-only brief one-line description of the person.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The tagline.",
          "type": "string"
        }
      }
    },
    "Name": {
      "title": "Name",
      "description": "A person's name. If the name is a mononym, the family name is empty.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The read-only display name formatted according to the locale specified by\nthe viewer's account or the `Accept-Language` HTTP header.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "The honorific suffixes, such as `Jr.`",
          "type": "string"
        },
        "honorificPrefix": {
          "description": "The honorific prefixes, such as `Mrs.` or `Dr.`",
          "type": "string"
        },
        "phoneticHonorificSuffix": {
          "description": "The honorific suffixes spelled as they sound.",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name(s).",
          "type": "string"
        },
        "givenName": {
          "description": "The given name.",
          "type": "string"
        },
        "phoneticHonorificPrefix": {
          "description": "The honorific prefixes spelled as they sound.",
          "type": "string"
        },
        "phoneticGivenName": {
          "description": "The given name spelled as it sounds.",
          "type": "string"
        },
        "phoneticFamilyName": {
          "description": "The family name spelled as it sounds.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name.",
          "type": "string"
        },
        "phoneticMiddleName": {
          "description": "The middle name(s) spelled as they sound.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "phoneticFullName": {
          "description": "The full name spelled as it sounds.",
          "type": "string"
        },
        "displayNameLastFirst": {
          "description": "The read-only display name with the last name first formatted according to\nthe locale specified by the viewer's account or the\n`Accept-Language` HTTP header.",
          "type": "string"
        }
      }
    },
    "Locale": {
      "title": "Locale",
      "description": "A person's locale preference.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)\nlanguage tag representing the locale.",
          "type": "string"
        }
      }
    },
    "UserDefined": {
      "title": "UserDefined",
      "description": "Arbitrary user data that is populated by the end users.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The end user specified value of the user defined data.",
          "type": "string"
        },
        "key": {
          "description": "The end user specified key of the user defined data.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        }
      }
    },
    "Biography": {
      "title": "Biography",
      "description": "A person's short biography.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/FieldMetadata"
        },
        "value": {
          "description": "The short biography.",
          "type": "string"
        },
        "contentType": {
          "$ref": "#/definitions/ContentType"
        }
      }
    },
    "AgeRange": {
      "title": "AgeRange",
      "description": "**DEPRECATED** (Please use `person.ageRanges` instead)**\n\nThe person's read-only age range.",
      "example": "AGE_RANGE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "AGE_RANGE_UNSPECIFIED",
        "LESS_THAN_EIGHTEEN",
        "EIGHTEEN_TO_TWENTY",
        "TWENTY_ONE_OR_OLDER"
      ]
    },
    "AgeRange1": {
      "title": "AgeRange1",
      "description": "The age range.",
      "example": "AGE_RANGE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "AGE_RANGE_UNSPECIFIED",
        "LESS_THAN_EIGHTEEN",
        "EIGHTEEN_TO_TWENTY",
        "TWENTY_ONE_OR_OLDER"
      ]
    },
    "ContentType": {
      "title": "ContentType",
      "description": "The content type of the biography.",
      "example": "CONTENT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CONTENT_TYPE_UNSPECIFIED",
        "TEXT_PLAIN",
        "TEXT_HTML"
      ]
    },
    "GroupType": {
      "title": "GroupType",
      "description": "The read-only contact group type.",
      "example": "GROUP_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "GROUP_TYPE_UNSPECIFIED",
        "USER_CONTACT_GROUP",
        "SYSTEM_CONTACT_GROUP"
      ]
    },
    "ObjectType": {
      "title": "ObjectType",
      "description": "**DEPRECATED** (Please use\n`person.metadata.sources.profileMetadata.objectType` instead)\n\nThe type of the person object.",
      "example": "OBJECT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OBJECT_TYPE_UNSPECIFIED",
        "PERSON",
        "PAGE"
      ]
    },
    "ObjectType1": {
      "title": "ObjectType1",
      "description": "The profile object type.",
      "example": "OBJECT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "OBJECT_TYPE_UNSPECIFIED",
        "PERSON",
        "PAGE"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "The source type.",
      "example": "SOURCE_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SOURCE_TYPE_UNSPECIFIED",
        "ACCOUNT",
        "PROFILE",
        "DOMAIN_PROFILE",
        "CONTACT"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "The type of the nickname.",
      "example": "DEFAULT",
      "type": "string",
      "enum": [
        "DEFAULT",
        "MAIDEN_NAME",
        "INITIALS",
        "GPLUS",
        "OTHER_NAME"
      ]
    },
    "UserType": {
      "title": "UserType",
      "example": "USER_TYPE_UNKNOWN",
      "type": "string",
      "enum": [
        "USER_TYPE_UNKNOWN",
        "GOOGLE_USER",
        "GPLUS_USER",
        "GOOGLE_APPS_USER"
      ]
    }
  },
  "tags": [
    {
      "name": "connections",
      "description": ""
    },
    {
      "name": "people",
      "description": ""
    },
    {
      "name": "members",
      "description": ""
    },
    {
      "name": "contactGroups",
      "description": ""
    }
  ]
}