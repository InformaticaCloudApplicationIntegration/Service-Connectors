{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Hangouts Chat API",
    "description": "Enables bots to fetch information and perform actions in Hangouts Chat.",
    "contact": {}
  },
  "host": "chat.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{+parent}/members": {
      "get": {
        "description": "Lists human memberships in a space.",
        "summary": "ListV1MembersByParent",
        "tags": [
          "members"
        ],
        "operationId": "V1MembersByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The value is capped at 1000.\nServer may return fewer results than requested.\nIf unspecified, server will default to 100."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListMembershipsResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+name}": {
      "get": {
        "description": "Returns a membership.",
        "summary": "GetV1ByName",
        "tags": [
          "members"
        ],
        "operationId": "V1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Membership"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a message.",
        "summary": "UpdateV1ByName",
        "tags": [
          "messages"
        ],
        "operationId": "V1ByNamePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "updateMask",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Required. The field paths to be updated.\n\nCurrently supported field paths: \"text\", \"cards\"."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Deletes a message.",
        "summary": "DeleteV1ByName",
        "tags": [
          "messages"
        ],
        "operationId": "V1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+parent}/messages": {
      "post": {
        "description": "Creates a message.",
        "summary": "CreateV1MessagesByParent",
        "tags": [
          "messages"
        ],
        "operationId": "V1MessagesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "threadKey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Opaque thread identifier string that can be specified to group messages\ninto a single thread. If this is the first message with a given thread\nidentifier, a new thread is created. Subsequent messages with the same\nthread identifier will be posted into the same thread. This relieves bots\nand webhooks from having to store the Hangouts Chat thread ID of a thread (created earlier by them) to post\nfurther updates to it.\n\nHas no effect if thread field,\ncorresponding to an existing thread, is set in message."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/spaces": {
      "get": {
        "description": "Lists spaces the caller is a member of.",
        "summary": "ListV1Spaces",
        "tags": [
          "spaces"
        ],
        "operationId": "V1SpacesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The value is capped at 1000.\nServer may return fewer results than requested.\nIf unspecified, server will default to 100."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListSpacesResponse"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "FormAction": {
      "title": "FormAction",
      "description": "A form action describes the behavior when the form is submitted.\nFor example, an Apps Script can be invoked to handle the form.",
      "type": "object",
      "properties": {
        "actionMethodName": {
          "description": "Apps Script function to invoke when the containing element is\nclicked/activated.",
          "type": "string"
        },
        "parameters": {
          "description": "List of action parameters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionParameter"
          }
        }
      }
    },
    "CardAction": {
      "title": "CardAction",
      "description": "A card action is\nthe action associated with the card. For an invoice card, a\ntypical action would be: delete invoice, email invoice or open the\ninvoice in browser.",
      "type": "object",
      "properties": {
        "onClick": {
          "$ref": "#/definitions/OnClick"
        },
        "actionLabel": {
          "description": "The label used to be displayed in the action menu item.",
          "type": "string"
        }
      }
    },
    "UserMentionMetadata": {
      "title": "UserMentionMetadata",
      "description": "Annotation metadata for user mentions (@).",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        }
      }
    },
    "Image": {
      "title": "Image",
      "description": "An image that is specified by a URL and can have an onclick action.",
      "type": "object",
      "properties": {
        "aspectRatio": {
          "description": "The aspect ratio of this image (width/height).",
          "type": "number",
          "format": "double"
        },
        "imageUrl": {
          "description": "The URL of the image.",
          "type": "string"
        },
        "onClick": {
          "$ref": "#/definitions/OnClick"
        }
      }
    },
    "Annotation": {
      "title": "Annotation",
      "description": "Annotations associated with the plain-text body of the message.\n\nExample plain-text message body:\n```\nHello @FooBot how are you!\"\n```\n\nThe corresponding annotations metadata:\n```\n\"annotations\":[{\n  \"type\":\"USER_MENTION\",\n  \"startIndex\":6,\n  \"length\":7,\n  \"userMention\": {\n    \"user\": {\n      \"name\":\"users/107946847022116401880\",\n      \"displayName\":\"FooBot\",\n      \"avatarUrl\":\"https://goo.gl/aeDtrS\",\n      \"type\":\"BOT\"\n    },\n    \"type\":\"MENTION\"\n   }\n}]\n```",
      "type": "object",
      "properties": {
        "length": {
          "description": "Length of the substring in the plain-text message body this annotation\ncorresponds to.",
          "type": "integer",
          "format": "int32"
        },
        "startIndex": {
          "description": "Start index (0-based, inclusive) in the plain-text message body this\nannotation corresponds to.",
          "type": "integer",
          "format": "int32"
        },
        "userMention": {
          "$ref": "#/definitions/UserMentionMetadata"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        }
      }
    },
    "WidgetMarkup": {
      "title": "WidgetMarkup",
      "description": "A widget is a UI element that presents texts, images, etc.",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image"
        },
        "buttons": {
          "description": "A list of buttons. Buttons is also oneof data and only one of these\nfields should be set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Button"
          }
        },
        "textParagraph": {
          "$ref": "#/definitions/TextParagraph"
        },
        "keyValue": {
          "$ref": "#/definitions/KeyValue"
        }
      }
    },
    "ActionResponse": {
      "title": "ActionResponse",
      "description": "Parameters that a bot can use to configure how it's response is posted.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type3"
        },
        "url": {
          "description": "URL for users to auth or config. (Only for REQUEST_CONFIG response types.)",
          "type": "string"
        }
      }
    },
    "Space": {
      "title": "Space",
      "description": "A room or DM in Hangouts Chat.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name of the space, in the form \"spaces/*\".\n\nExample: spaces/AAAAMpdlehYs",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name (only if the space is a room).",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type4"
        }
      }
    },
    "Card": {
      "title": "Card",
      "description": "A card is a UI element that can contain UI widgets such as texts, images.",
      "type": "object",
      "properties": {
        "sections": {
          "description": "Sections are separated by a line divider.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Section"
          }
        },
        "cardActions": {
          "description": "The actions of this card.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardAction"
          }
        },
        "header": {
          "$ref": "#/definitions/CardHeader"
        },
        "name": {
          "description": "Name of the card.",
          "type": "string"
        }
      }
    },
    "Message": {
      "title": "Message",
      "description": "A message in Hangouts Chat.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time at which the message was created in Hangouts Chat\nserver.",
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "cards": {
          "description": "Rich, formatted and interactive cards that can be used to display UI\nelements such as: formatted texts, buttons, clickable images. Cards are\nnormally displayed below the plain-text body of the message.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        },
        "thread": {
          "$ref": "#/definitions/Thread"
        },
        "annotations": {
          "description": "Output only. Annotations associated with the text in this message.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "name": {
          "description": "Resource name, in the form \"spaces/*/messages/*\".\n\nExample: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4",
          "type": "string"
        },
        "previewText": {
          "description": "Text for generating preview chips. This text will not be displayed to the\nuser, but any links to images, web pages, videos, etc. included here will\ngenerate preview chips.",
          "type": "string"
        },
        "text": {
          "description": "Plain-text body of the message.",
          "type": "string"
        },
        "space": {
          "$ref": "#/definitions/Space"
        },
        "argumentText": {
          "description": "Plain-text body of the message with all bot mentions stripped out.",
          "type": "string"
        },
        "fallbackText": {
          "description": "A plain-text description of the message's cards, used when the actual cards\ncannot be displayed (e.g. mobile notifications).",
          "type": "string"
        },
        "actionResponse": {
          "$ref": "#/definitions/ActionResponse"
        }
      }
    },
    "DeprecatedEvent": {
      "title": "DeprecatedEvent",
      "description": "Hangouts Chat events.",
      "type": "object",
      "properties": {
        "token": {
          "description": "A secret value that bots can use to verify if a request is from Google. The\ntoken is randomly generated by Google, remains static, and can be obtained\nfrom the Hangouts Chat API configuration page in the Cloud Console.\nDevelopers can revoke/regenerate it if needed from the same page.",
          "type": "string"
        },
        "eventTime": {
          "description": "The timestamp indicating when the event was dispatched.",
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/Message"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "action": {
          "$ref": "#/definitions/FormAction"
        },
        "space": {
          "$ref": "#/definitions/Space"
        },
        "type": {
          "$ref": "#/definitions/Type5"
        },
        "configCompleteRedirectUrl": {
          "description": "The URL the bot should redirect the user to after they have completed an\nauthorization or configuration flow outside of Hangouts Chat. See the\n[Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p)\nfor more information.",
          "type": "string"
        },
        "threadKey": {
          "description": "The bot-defined key for the thread related to the event. See the\nthread_key field of the\n`spaces.message.create` request for more information.",
          "type": "string"
        }
      }
    },
    "OnClick": {
      "title": "OnClick",
      "description": "The onclick action for this action item.",
      "type": "object",
      "properties": {
        "openLink": {
          "description": "This onclick triggers an open link action if specified.",
          "type": "object"
        },
        "action": {
          "description": "A form action will be trigger by this onclick if specified.",
          "type": "object"
        }
      }
    },
    "ActionParameter": {
      "title": "ActionParameter",
      "description": "List of string parameters to supply when the action method is invoked.\nFor example, consider three snooze buttons: snooze now, snooze 1 day,\nsnooze next week. You might use action method = snooze(), passing the\nsnooze type and snooze time in the list of string parameters.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the parameter.",
          "type": "string"
        },
        "key": {
          "description": "The name of the parameter for the action script.",
          "type": "string"
        }
      }
    },
    "User": {
      "title": "User",
      "description": "The user mentioned.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name, in the format \"users/*\".",
          "type": "string"
        },
        "displayName": {
          "description": "The user's display name.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      }
    },
    "TextParagraph": {
      "title": "TextParagraph",
      "description": "Display a text paragraph in this widget.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "Membership": {
      "title": "Membership",
      "description": "Represents a membership relation in Hangouts Chat.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The creation time of the membership a.k.a the time at which the member\njoined the space, if applicable.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "name": {
          "description": "Resource name of the membership, in the form \"spaces/*/members/*\".\n\nExample: spaces/AAAAMpdlehY/members/105115627578887013105",
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ImageButton": {
      "title": "ImageButton",
      "description": "An image button with an onclick action.",
      "type": "object",
      "properties": {
        "onClick": {
          "$ref": "#/definitions/OnClick"
        },
        "iconUrl": {
          "description": "The icon specified by a URL.",
          "type": "string"
        },
        "name": {
          "description": "The name of this image_button which will be used for accessibility.\nDefault value will be provided if developers don't specify.",
          "type": "string"
        },
        "icon": {
          "$ref": "#/definitions/Icon1"
        }
      }
    },
    "CardHeader": {
      "title": "CardHeader",
      "description": "The header of the card. A header usually contains a title and an image.",
      "type": "object",
      "properties": {
        "imageStyle": {
          "$ref": "#/definitions/ImageStyle"
        },
        "title": {
          "description": "The title must be specified. The header has a fixed height: if both a\ntitle and subtitle is specified, each will take up 1 line. If only the\ntitle is specified, it will take up both lines.",
          "type": "string"
        },
        "subtitle": {
          "description": "The subtitle of the card header.",
          "type": "string"
        },
        "imageUrl": {
          "description": "The URL of the image in the card header.",
          "type": "string"
        }
      }
    },
    "ListSpacesResponse": {
      "title": "ListSpacesResponse",
      "type": "object",
      "properties": {
        "spaces": {
          "description": "List of spaces in the requested (or first) page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Space"
          }
        },
        "nextPageToken": {
          "description": "Continuation token to retrieve the next page of results. It will be empty\nfor the last page of results. Tokens expire in an hour. An error is thrown\nif an expired token is passed.",
          "type": "string"
        }
      }
    },
    "TextButton": {
      "title": "TextButton",
      "description": "A button with text and onclick action.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The text of the button.",
          "type": "string"
        },
        "onClick": {
          "$ref": "#/definitions/OnClick"
        }
      }
    },
    "KeyValue": {
      "title": "KeyValue",
      "description": "Display a key value item in this widget.",
      "type": "object",
      "properties": {
        "iconUrl": {
          "description": "The icon specified by a URL.",
          "type": "string"
        },
        "button": {
          "description": "A button that can be clicked to trigger an action.",
          "type": "object"
        },
        "content": {
          "description": "The text of the content. Formatted text supported and always required.",
          "type": "string"
        },
        "bottomLabel": {
          "description": "The text of the bottom label. Formatted text supported.",
          "type": "string"
        },
        "icon": {
          "$ref": "#/definitions/Icon"
        },
        "contentMultiline": {
          "description": "If the content should be multiline.",
          "type": "boolean"
        },
        "onClick": {
          "description": "The onclick action. Only the top label, bottom label and content region\nare clickable.",
          "type": "object"
        },
        "topLabel": {
          "description": "The text of the top label. Formatted text supported.",
          "type": "string"
        }
      }
    },
    "Thread": {
      "title": "Thread",
      "description": "The thread the message belongs to.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name, in the form \"spaces/*/threads/*\".\n\nExample: spaces/AAAAMpdlehY/threads/UMxbHmzDlr4",
          "type": "string"
        }
      }
    },
    "Section": {
      "title": "Section",
      "description": "A section contains a collection of widgets that are rendered\n(vertically) in the order that they are specified. Across all platforms,\ncards have a narrow fixed width, so\nthere is currently no need for layout properties (e.g. float).",
      "type": "object",
      "properties": {
        "widgets": {
          "description": "A section must contain at least 1 widget.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "header": {
          "description": "The header of the section, text formatted supported.",
          "type": "string"
        }
      }
    },
    "OpenLink": {
      "title": "OpenLink",
      "description": "A link that opens a new window.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL to open.",
          "type": "string"
        }
      }
    },
    "Button": {
      "title": "Button",
      "description": "A button. Can be a text button or an image button.",
      "type": "object",
      "properties": {
        "textButton": {
          "description": "A button with text and onclick action.",
          "type": "object"
        },
        "imageButton": {
          "description": "A button with image and onclick action.",
          "type": "object"
        }
      }
    },
    "ListMembershipsResponse": {
      "title": "ListMembershipsResponse",
      "type": "object",
      "properties": {
        "memberships": {
          "description": "List of memberships in the requested (or first) page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Membership"
          }
        },
        "nextPageToken": {
          "description": "Continuation token to retrieve the next page of results. It will be empty\nfor the last page of results.",
          "type": "string"
        }
      }
    },
    "Icon": {
      "title": "Icon",
      "description": "An enum value that will be replaced by the Chat API with the\ncorresponding icon image.",
      "example": "ICON_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ICON_UNSPECIFIED",
        "AIRPLANE",
        "BOOKMARK",
        "BUS",
        "CAR",
        "CLOCK",
        "CONFIRMATION_NUMBER_ICON",
        "DOLLAR",
        "DESCRIPTION",
        "EMAIL",
        "EVENT_PERFORMER",
        "EVENT_SEAT",
        "FLIGHT_ARRIVAL",
        "FLIGHT_DEPARTURE",
        "HOTEL",
        "HOTEL_ROOM_TYPE",
        "INVITE",
        "MAP_PIN",
        "MEMBERSHIP",
        "MULTIPLE_PEOPLE",
        "OFFER",
        "PERSON",
        "PHONE",
        "RESTAURANT_ICON",
        "SHOPPING_CART",
        "STAR",
        "STORE",
        "TICKET",
        "TRAIN",
        "VIDEO_CAMERA",
        "VIDEO_PLAY"
      ]
    },
    "Icon1": {
      "title": "Icon1",
      "description": "The icon specified by an enum that indices to an icon provided by Chat\nAPI.",
      "example": "ICON_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ICON_UNSPECIFIED",
        "AIRPLANE",
        "BOOKMARK",
        "BUS",
        "CAR",
        "CLOCK",
        "CONFIRMATION_NUMBER_ICON",
        "DOLLAR",
        "DESCRIPTION",
        "EMAIL",
        "EVENT_PERFORMER",
        "EVENT_SEAT",
        "FLIGHT_ARRIVAL",
        "FLIGHT_DEPARTURE",
        "HOTEL",
        "HOTEL_ROOM_TYPE",
        "INVITE",
        "MAP_PIN",
        "MEMBERSHIP",
        "MULTIPLE_PEOPLE",
        "OFFER",
        "PERSON",
        "PHONE",
        "RESTAURANT_ICON",
        "SHOPPING_CART",
        "STAR",
        "STORE",
        "TICKET",
        "TRAIN",
        "VIDEO_CAMERA",
        "VIDEO_PLAY"
      ]
    },
    "ImageStyle": {
      "title": "ImageStyle",
      "description": "The image's type (e.g. square border or circular border).",
      "example": "IMAGE_STYLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "IMAGE_STYLE_UNSPECIFIED",
        "IMAGE",
        "AVATAR"
      ]
    },
    "State": {
      "title": "State",
      "description": "State of the membership.",
      "example": "MEMBERSHIP_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "MEMBERSHIP_STATE_UNSPECIFIED",
        "JOINED",
        "INVITED",
        "NOT_A_MEMBER"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "User type.",
      "example": "TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "HUMAN",
        "BOT"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "The type of user mention.",
      "example": "TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "ADD",
        "MENTION"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "The type of this annotation.",
      "example": "ANNOTATION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ANNOTATION_TYPE_UNSPECIFIED",
        "USER_MENTION"
      ]
    },
    "Type3": {
      "title": "Type3",
      "description": "The type of bot response.",
      "example": "TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "NEW_MESSAGE",
        "UPDATE_MESSAGE",
        "REQUEST_CONFIG"
      ]
    },
    "Type4": {
      "title": "Type4",
      "description": "Output only. The type of a space.",
      "example": "TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "ROOM",
        "DM"
      ]
    },
    "Type5": {
      "title": "Type5",
      "description": "The type of the event.",
      "example": "UNSPECIFIED",
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "MESSAGE",
        "ADDED_TO_SPACE",
        "REMOVED_FROM_SPACE",
        "CARD_CLICKED"
      ]
    }
  },
  "tags": [
    {
      "name": "members",
      "description": ""
    },
    {
      "name": "messages",
      "description": ""
    },
    {
      "name": "spaces",
      "description": ""
    }
  ]
}