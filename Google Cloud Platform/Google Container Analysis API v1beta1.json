{
  "swagger": "2.0",
  "info": {
    "version": "v1beta1",
    "title": "Container Analysis API",
    "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
    "contact": {}
  },
  "host": "containeranalysis.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://containeranalysis.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/{+name}/occurrences": {
      "get": {
        "description": "Lists occurrences referencing the specified note. Provider projects can use\nthis method to get all occurrences across consumer projects referencing the\nspecified note.",
        "summary": "ListV1beta1OccurrencesByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1OccurrencesByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of occurrences to return in the list."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListNoteOccurrencesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/occurrences": {
      "get": {
        "description": "Lists occurrences for the specified project.",
        "summary": "ListV1beta1OccurrencesByParent",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1OccurrencesByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of occurrences to return in the list. Must be positive. Max allowed\npage size is 1000. If not specified, page size defaults to 20."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListOccurrencesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a new occurrence.",
        "summary": "CreateV1beta1OccurrencesByParent",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1OccurrencesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+resource}:setIamPolicy": {
      "post": {
        "description": "Sets the access control policy on the specified note or occurrence.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or an occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences.",
        "summary": "SetIamPolicyV1beta1SetIamPolicyByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1SetIamPolicyByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetIamPolicyRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Policy"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/occurrences:batchCreate": {
      "post": {
        "description": "Creates new occurrences in batch.",
        "summary": "BatchCreateV1beta1OccurrencesBatchCreateByParent",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1OccurrencesBatchCreateByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchCreateOccurrencesRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchCreateOccurrencesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+resource}:getIamPolicy": {
      "post": {
        "description": "Gets the access control policy for a note or an occurrence resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences.",
        "summary": "GetIamPolicyV1beta1GetIamPolicyByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1GetIamPolicyByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Policy"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+name}": {
      "get": {
        "description": "Gets the specified occurrence.",
        "summary": "GetV1beta1ByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "patch": {
        "description": "Updates the specified occurrence.",
        "summary": "PatchV1beta1ByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1ByNamePatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "updateMask",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The fields to update."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "delete": {
        "description": "Deletes the specified occurrence. For example, use this method to delete an\noccurrence when the occurrence is no longer applicable for the given\nresource.",
        "summary": "DeleteV1beta1ByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "put": {
        "description": "Updates the specified scan configuration.",
        "summary": "UpdateV1beta1ByName",
        "tags": [
          "scanConfigs"
        ],
        "operationId": "V1beta1ByNamePut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScanConfig"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScanConfig"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/occurrences:vulnerabilitySummary": {
      "get": {
        "description": "Gets a summary of the number and severity of occurrences.",
        "summary": "GetVulnerabilitySummaryV1beta1OccurrencesVulnerabilitySummary",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1OccurrencesVulnerabilitySummaryByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VulnerabilityOccurrencesSummary"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+resource}:testIamPermissions": {
      "post": {
        "description": "Returns the permissions that a caller has on the specified note or\noccurrence. Requires list permission on the project (for example,\n`containeranalysis.notes.list`).\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences.",
        "summary": "TestIamPermissionsV1beta1TestIamPermissionsByResource",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1TestIamPermissionsByResourcePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestIamPermissionsRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestIamPermissionsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+name}/notes": {
      "get": {
        "description": "Gets the note attached to the specified occurrence. Consumer projects can\nuse this method to get a note that belongs to a provider project.",
        "summary": "GetNotesV1beta1NotesByName",
        "tags": [
          "occurrences"
        ],
        "operationId": "V1beta1NotesByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/notes": {
      "get": {
        "description": "Lists notes for the specified project.",
        "summary": "ListV1beta1NotesByParent",
        "tags": [
          "notes"
        ],
        "operationId": "V1beta1NotesByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of notes to return in the list. Must be positive. Max allowed page\nsize is 1000. If not specified, page size defaults to 20."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListNotesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a new note.",
        "summary": "CreateV1beta1NotesByParent",
        "tags": [
          "notes"
        ],
        "operationId": "V1beta1NotesByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "noteId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ID to use for this note."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/notes:batchCreate": {
      "post": {
        "description": "Creates new notes in batch.",
        "summary": "BatchCreateV1beta1NotesBatchCreateByParent",
        "tags": [
          "notes"
        ],
        "operationId": "V1beta1NotesBatchCreateByParentPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchCreateNotesRequest"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchCreateNotesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    },
    "/v1beta1/{+parent}/scanConfigs": {
      "get": {
        "description": "Lists scan configurations for the specified project.",
        "summary": "ListV1beta1ScanConfigsByParent",
        "tags": [
          "scanConfigs"
        ],
        "operationId": "V1beta1ScanConfigsByParentGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Token to provide to skip to a particular spot in the list."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of scan configs to return in the list."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter expression."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListScanConfigsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Installation": {
      "title": "Installation",
      "description": "This represents how a particular software package may be installed on a\nsystem.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the installed package.",
          "type": "string"
        },
        "location": {
          "description": "Required. All of the places within the filesystem versions of this package\nhave been found.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      }
    },
    "Distribution": {
      "title": "Distribution",
      "description": "This represents a particular channel of distribution for a given package.\nE.g., Debian's jessie-backports dpkg mirror.",
      "type": "object",
      "properties": {
        "latestVersion": {
          "$ref": "#/definitions/Version"
        },
        "description": {
          "description": "The distribution channel-specific description of this package.",
          "type": "string"
        },
        "cpeUri": {
          "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "url": {
          "description": "The distribution channel-specific homepage for this package.",
          "type": "string"
        },
        "architecture": {
          "$ref": "#/definitions/Architecture"
        },
        "maintainer": {
          "description": "A freeform string denoting the maintainer of this package.",
          "type": "string"
        }
      }
    },
    "VulnerabilityOccurrencesSummary": {
      "title": "VulnerabilityOccurrencesSummary",
      "description": "A summary of how many vulnerability occurrences there are per resource and\nseverity type.",
      "type": "object",
      "properties": {
        "counts": {
          "description": "A listing by resource of the number of fixable and total vulnerabilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FixableTotalByDigest"
          }
        }
      }
    },
    "GrafeasV1beta1PackageDetails": {
      "title": "GrafeasV1beta1PackageDetails",
      "description": "Details of a package occurrence.",
      "type": "object",
      "properties": {
        "installation": {
          "$ref": "#/definitions/Installation"
        }
      }
    },
    "GitSourceContext": {
      "title": "GitSourceContext",
      "description": "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub).",
      "type": "object",
      "properties": {
        "revisionId": {
          "description": "Git commit hash.",
          "type": "string"
        },
        "url": {
          "description": "Git repository URL.",
          "type": "string"
        }
      }
    },
    "ScanConfig": {
      "title": "ScanConfig",
      "description": "A scan configuration specifies whether Cloud components in a project have a\nparticular type of analysis being run. For example, it can configure whether\nvulnerability scanning is being done on Docker images or not.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The time this scan config was last updated.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the scan configuration in the form of\n`projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.",
          "type": "string"
        },
        "description": {
          "description": "Output only. A human-readable description of what the scan configuration\ndoes.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether the scan is enabled.",
          "type": "boolean"
        },
        "createTime": {
          "description": "Output only. The time this scan config was created.",
          "type": "string"
        }
      }
    },
    "ListOccurrencesResponse": {
      "title": "ListOccurrencesResponse",
      "description": "Response for listing occurrences.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences requested.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        }
      }
    },
    "FixableTotalByDigest": {
      "title": "FixableTotalByDigest",
      "description": "Per resource and severity counts of fixable and total vulnerabilites.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The affected resource.",
          "type": "object"
        },
        "severity": {
          "$ref": "#/definitions/Severity"
        },
        "totalCount": {
          "description": "The total number of vulnerabilities associated with this resource.",
          "type": "string"
        },
        "fixableCount": {
          "description": "The number of fixable vulnerabilities associated with this resource.",
          "type": "string"
        }
      }
    },
    "BatchCreateNotesRequest": {
      "title": "BatchCreateNotesRequest",
      "description": "Request to create notes in batch.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes to create. Max allowed length is 1000.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    },
    "BatchCreateOccurrencesResponse": {
      "title": "BatchCreateOccurrencesResponse",
      "description": "Response for creating occurrences in batch.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences that were created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        }
      }
    },
    "Hash": {
      "title": "Hash",
      "description": "Container message for hash values.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type"
        },
        "value": {
          "description": "Required. The hash value.",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "title": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string"
        }
      }
    },
    "VulnerabilityLocation": {
      "title": "VulnerabilityLocation",
      "description": "The location of the vulnerability.",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.",
          "type": "string"
        },
        "package": {
          "description": "Required. The package being described.",
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "AliasContext": {
      "title": "AliasContext",
      "description": "An alias to a repo revision.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The alias name.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/Kind3"
        }
      }
    },
    "Command": {
      "title": "Command",
      "description": "Command describes a step performed as part of the build pipeline.",
      "type": "object",
      "properties": {
        "waitFor": {
          "description": "The ID(s) of the command(s) that this command depends on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Environment variables set before running this command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Command-line arguments used when executing this command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Required. Name of the command, as presented on the command line, or if the\ncommand is packaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "id": {
          "description": "Optional unique identifier for this command, used in wait_for to reference\nthis command as a dependency.",
          "type": "string"
        },
        "dir": {
          "description": "Working directory (relative to project source root) used when running this\ncommand.",
          "type": "string"
        }
      }
    },
    "BatchCreateOccurrencesRequest": {
      "title": "BatchCreateOccurrencesRequest",
      "description": "Request to create occurrences in batch.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences to create. Max allowed length is 1000.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        }
      }
    },
    "Attestation": {
      "title": "Attestation",
      "description": "Occurrence that represents a single \"attestation\". The authenticity of an\nattestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust. In this circumstance, the authority to which\nthis attestation is attached is primarily useful for look-up (how to find\nthis attestation if you already know the authority and artifact to be\nverified) and intent (which authority was this attestation intended to sign\nfor).",
      "type": "object",
      "properties": {
        "pgpSignedAttestation": {
          "$ref": "#/definitions/PgpSignedAttestation"
        }
      }
    },
    "Location": {
      "title": "Location",
      "description": "An occurrence of a particular package installation found within a system's\nfilesystem. E.g., glibc was found in `/var/lib/dpkg/status`.",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "version": {
          "description": "The version installed at this location.",
          "type": "object"
        },
        "path": {
          "description": "The path from which we gathered that this package/version is installed.",
          "type": "string"
        }
      }
    },
    "ProjectRepoId": {
      "title": "ProjectRepoId",
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "repoName": {
          "description": "The name of the repo. Leave empty for the default repo.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "title": "Resource",
      "description": "An entity that can have metadata. For example, a Docker image.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource. For example, the name of a Docker image -\n\"Debian\".",
          "type": "string"
        },
        "contentHash": {
          "$ref": "#/definitions/Hash"
        },
        "uri": {
          "description": "Required. The unique URI of the resource. For example,\n`https://gcr.io/project/image@sha256:foo` for a Docker image.",
          "type": "string"
        }
      }
    },
    "Hint": {
      "title": "Hint",
      "description": "This submessage provides human-readable hints about the purpose of the\nauthority. Because the name of a note acts as its resource reference, it is\nimportant to disambiguate the canonical name of the Note (which might be a\nUUID for security purposes) from \"readable\" names more suitable for debug\noutput. Note that these hints should not be used to look up authorities in\nsecurity sensitive contexts, such as when looking up attestations to\nverify.",
      "type": "object",
      "properties": {
        "humanReadableName": {
          "description": "Required. The human readable name of this attestation authority, for\nexample \"qa\".",
          "type": "string"
        }
      }
    },
    "Artifact": {
      "title": "Artifact",
      "description": "Artifact describes a build product.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike `gcr.io/projectID/imagename@sha256:123456`.",
          "type": "string"
        },
        "names": {
          "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "checksum": {
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "title": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GrafeasV1beta1DeploymentDetails": {
      "title": "GrafeasV1beta1DeploymentDetails",
      "description": "Details of a deployment occurrence.",
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/Deployment"
        }
      }
    },
    "Deployable": {
      "title": "Deployable",
      "description": "An artifact that can be deployed in some runtime.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "description": "Required. Resource URI for the artifact being deployed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Package": {
      "title": "Package",
      "description": "This represents a particular package that is distributed over various\nchannels. E.g., glibc (aka libc6) is distributed by many, at various\nversions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Immutable. The name of the package.",
          "type": "string"
        },
        "distribution": {
          "description": "The various channels by which a package is distributed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Distribution"
          }
        }
      }
    },
    "Version": {
      "title": "Version",
      "description": "The latest available version of this package in this distribution channel.",
      "type": "object",
      "properties": {
        "epoch": {
          "description": "Used to correct mistakes in the version numbering scheme.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "description": "The iteration of the package build from the above version.",
          "type": "string"
        },
        "name": {
          "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "title": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "description": "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time this operation was created.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time that this operation was marked completed or failed.",
          "type": "string"
        }
      }
    },
    "Fingerprint": {
      "title": "Fingerprint",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "type": "object",
      "properties": {
        "v2Blob": {
          "description": "Required. The ordered list of v2 blobs that represent a given image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "v1Name": {
          "description": "Required. The layer ID of the final layer in the Docker image's v1\nrepresentation.",
          "type": "string"
        },
        "v2Name": {
          "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "title": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        }
      }
    },
    "Discovery": {
      "title": "Discovery",
      "description": "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis.",
      "type": "object",
      "properties": {
        "analysisKind": {
          "$ref": "#/definitions/AnalysisKind"
        }
      }
    },
    "BuildSignature": {
      "title": "BuildSignature",
      "description": "Message encapsulating the signature of the verified build.",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
          "type": "string"
        },
        "keyId": {
          "description": "An ID for the key used to sign. This could be either an ID for the key\nstored in `public_key` (such as the ID or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).",
          "type": "string"
        },
        "keyType": {
          "$ref": "#/definitions/KeyType"
        },
        "signature": {
          "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is\nbase-64 encoded.",
          "type": "string"
        }
      }
    },
    "Discovered": {
      "title": "Discovered",
      "description": "Provides information about the analysis status of a discovered resource.",
      "type": "object",
      "properties": {
        "analysisStatusError": {
          "$ref": "#/definitions/Status"
        },
        "analysisStatus": {
          "$ref": "#/definitions/AnalysisStatus"
        },
        "continuousAnalysis": {
          "$ref": "#/definitions/ContinuousAnalysis"
        },
        "lastAnalysisTime": {
          "description": "The last time continuous analysis was done for this resource.\nDeprecated, do not use.",
          "type": "string"
        }
      }
    },
    "SourceContext": {
      "title": "SourceContext",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Labels with user defined metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "git": {
          "$ref": "#/definitions/GitSourceContext"
        },
        "gerrit": {
          "$ref": "#/definitions/GerritSourceContext"
        },
        "cloudRepo": {
          "$ref": "#/definitions/CloudRepoSourceContext"
        }
      }
    },
    "Expr": {
      "title": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        }
      }
    },
    "PackageIssue": {
      "title": "PackageIssue",
      "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
      "type": "object",
      "properties": {
        "affectedLocation": {
          "$ref": "#/definitions/VulnerabilityLocation"
        },
        "fixedLocation": {
          "$ref": "#/definitions/VulnerabilityLocation"
        },
        "severityName": {
          "description": "The severity (e.g., distro assigned severity) for this vulnerability.",
          "type": "string"
        }
      }
    },
    "Vulnerability": {
      "title": "Vulnerability",
      "description": "Vulnerability provides metadata about a security vulnerability in a Note.",
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/Severity1"
        },
        "details": {
          "description": "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the package\nvulnerability has manifested in.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Detail"
          }
        },
        "cvssScore": {
          "description": "The CVSS score for this vulnerability.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "CloudRepoSourceContext": {
      "title": "CloudRepoSourceContext",
      "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
      "type": "object",
      "properties": {
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        },
        "repoId": {
          "description": "The ID of the repo.",
          "type": "object"
        },
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "type": "object"
        }
      }
    },
    "Build": {
      "title": "Build",
      "description": "Note holding the version of the provider's builder and the signature of the\nprovenance message in the build details occurrence.",
      "type": "object",
      "properties": {
        "signature": {
          "$ref": "#/definitions/BuildSignature"
        },
        "builderVersion": {
          "description": "Required. Immutable. Version of the builder which produced this build.",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "title": "Deployment",
      "description": "Required. Deployment history for the resource.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the runtime element hosting this deployment.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Output only. Resource URI for the artifact being deployed taken from\nthe deployable field with the same name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmail": {
          "description": "Identity of the user that triggered this deployment.",
          "type": "string"
        },
        "config": {
          "description": "Configuration used to create this deployment.",
          "type": "string"
        },
        "undeployTime": {
          "description": "End of the lifetime of this deployment.",
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/Platform"
        },
        "deployTime": {
          "description": "Required. Beginning of the lifetime of this deployment.",
          "type": "string"
        }
      }
    },
    "Detail": {
      "title": "Detail",
      "description": "Identifies all appearances of this vulnerability in the package for a\nspecific distro/location. For example: glibc in\ncpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2",
      "type": "object",
      "properties": {
        "isObsolete": {
          "description": "Whether this detail is obsolete. Occurrences are expected not to point to\nobsolete details.",
          "type": "boolean"
        },
        "packageType": {
          "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc).",
          "type": "string"
        },
        "fixedLocation": {
          "description": "The fix for this specific package version.",
          "type": "object"
        },
        "cpeUri": {
          "description": "Required. The CPE URI in\n[cpe format](https://cpe.mitre.org/specification/) in which the\nvulnerability manifests. Examples include distro or storage location for\nvulnerable jar.",
          "type": "string"
        },
        "description": {
          "description": "A vendor-specific description of this note.",
          "type": "string"
        },
        "severityName": {
          "description": "The severity (eg: distro assigned severity) for this vulnerability.",
          "type": "string"
        },
        "minAffectedVersion": {
          "description": "The min version of the package in which the vulnerability exists.",
          "type": "object"
        },
        "package": {
          "description": "Required. The name of the package where the vulnerability was found.",
          "type": "string"
        },
        "maxAffectedVersion": {
          "description": "The max version of the package in which the vulnerability exists.",
          "type": "object"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "title": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Basis": {
      "title": "Basis",
      "description": "Basis describes the base image portion (Note) of the DockerImage\nrelationship. Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url.",
      "type": "object",
      "properties": {
        "fingerprint": {
          "$ref": "#/definitions/Fingerprint"
        },
        "resourceUrl": {
          "description": "Required. Immutable. The resource_url for the resource representing the\nbasis of associated occurrence images.",
          "type": "string"
        }
      }
    },
    "ListScanConfigsResponse": {
      "title": "ListScanConfigsResponse",
      "description": "Response for listing scan configurations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        },
        "scanConfigs": {
          "description": "The scan configurations requested.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanConfig"
          }
        }
      }
    },
    "GrafeasV1beta1ImageDetails": {
      "title": "GrafeasV1beta1ImageDetails",
      "description": "Details of an image occurrence.",
      "type": "object",
      "properties": {
        "derivedImage": {
          "$ref": "#/definitions/Derived"
        }
      }
    },
    "RepoId": {
      "title": "RepoId",
      "description": "A unique identifier for a Cloud Repo.",
      "type": "object",
      "properties": {
        "projectRepoId": {
          "$ref": "#/definitions/ProjectRepoId"
        },
        "uid": {
          "description": "A server-assigned, globally unique identifier.",
          "type": "string"
        }
      }
    },
    "Occurrence": {
      "title": "Occurrence",
      "description": "An instance of an analysis type that has been found on a resource.",
      "type": "object",
      "properties": {
        "derivedImage": {
          "description": "Describes how this resource derives from the basis in the associated\nnote.",
          "type": "object"
        },
        "kind": {
          "$ref": "#/definitions/Kind1"
        },
        "resource": {
          "description": "Required. Immutable. The resource for which the occurrence applies.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
          "type": "string"
        },
        "attestation": {
          "description": "Describes an attestation of an artifact.",
          "type": "object"
        },
        "vulnerability": {
          "description": "Describes a security vulnerability.",
          "type": "object"
        },
        "installation": {
          "description": "Describes the installation of a package on the linked resource.",
          "type": "object"
        },
        "build": {
          "description": "Describes a verifiable build.",
          "type": "object"
        },
        "discovered": {
          "description": "Describes when a resource was discovered.",
          "type": "object"
        },
        "deployment": {
          "description": "Describes the deployment of an artifact on a runtime.",
          "type": "object"
        },
        "noteName": {
          "description": "Required. Immutable. The analysis note associated with this occurrence, in\nthe form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be\nused as a filter in list requests.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time this occurrence was created.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this occurrence was last updated.",
          "type": "string"
        },
        "remediation": {
          "description": "A description of actions that can be taken to remedy the note.",
          "type": "string"
        }
      }
    },
    "Note": {
      "title": "Note",
      "description": "A type of analysis that can be done for a resource.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time this note was created. This field can be used as a\nfilter in list requests.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this note was last updated. This field can be used as\na filter in list requests.",
          "type": "string"
        },
        "discovery": {
          "description": "A note describing the initial analysis of a resource.",
          "type": "object"
        },
        "relatedUrl": {
          "description": "URLs associated with this note.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "expirationTime": {
          "description": "Time of expiration for this note. Empty if note does not expire.",
          "type": "string"
        },
        "baseImage": {
          "description": "A note describing a base image.",
          "type": "object"
        },
        "kind": {
          "$ref": "#/definitions/Kind2"
        },
        "deployable": {
          "description": "A note describing something that can be deployed.",
          "type": "object"
        },
        "longDescription": {
          "description": "A detailed description of this note.",
          "type": "string"
        },
        "shortDescription": {
          "description": "A one sentence description of this note.",
          "type": "string"
        },
        "attestationAuthority": {
          "description": "A note describing an attestation role.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The name of the note in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
          "type": "string"
        },
        "vulnerability": {
          "description": "A note describing a package vulnerability.",
          "type": "object"
        },
        "relatedNoteNames": {
          "description": "Other notes related to this note.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "build": {
          "description": "A note describing build provenance for a verifiable build.",
          "type": "object"
        },
        "package": {
          "description": "A note describing a package hosted by various package managers.",
          "type": "object"
        }
      }
    },
    "Authority": {
      "title": "Authority",
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For\nexample, an organization might have one `Authority` for \"QA\" and one for\n\"build\". This note is intended to act strictly as a grouping mechanism for\nthe attached occurrences (Attestations). This grouping mechanism also\nprovides a security boundary, since IAM ACLs gate the ability for a principle\nto attach an occurrence to a given note. It also provides a single point of\nlookup to find all attached attestation occurrences, even if they don't all\nlive in the same project.",
      "type": "object",
      "properties": {
        "hint": {
          "$ref": "#/definitions/Hint"
        }
      }
    },
    "GrafeasV1beta1BuildDetails": {
      "title": "GrafeasV1beta1BuildDetails",
      "description": "Details of a build occurrence.",
      "type": "object",
      "properties": {
        "provenance": {
          "$ref": "#/definitions/BuildProvenance"
        },
        "provenanceBytes": {
          "description": "Serialized JSON representation of the provenance, used in generating the\nbuild signature in the corresponding build note. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
          "type": "string"
        }
      }
    },
    "AuditLogConfig": {
      "title": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "$ref": "#/definitions/LogType"
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Derived": {
      "title": "Derived",
      "description": "Required. Immutable. The child image derived from the base image.",
      "type": "object",
      "properties": {
        "distance": {
          "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
          "type": "integer",
          "format": "int32"
        },
        "baseResourceUrl": {
          "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
          "type": "string"
        },
        "fingerprint": {
          "description": "Required. The fingerprint of the derived image.",
          "type": "object"
        },
        "layerInfo": {
          "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Source": {
      "title": "Source",
      "description": "Source describes the location of the source used for the build.",
      "type": "object",
      "properties": {
        "artifactStorageSourceUri": {
          "description": "If provided, the input binary artifacts for the build came from this\nlocation.",
          "type": "string"
        },
        "additionalContexts": {
          "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceContext"
          }
        },
        "fileHashes": {
          "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FileHashes"
          }
        },
        "context": {
          "$ref": "#/definitions/SourceContext"
        }
      }
    },
    "GrafeasV1beta1DiscoveryDetails": {
      "title": "GrafeasV1beta1DiscoveryDetails",
      "description": "Details of a discovery occurrence.",
      "type": "object",
      "properties": {
        "discovered": {
          "$ref": "#/definitions/Discovered"
        }
      }
    },
    "BatchCreateNotesResponse": {
      "title": "BatchCreateNotesResponse",
      "description": "Response for creating notes in batch.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes that were created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    },
    "BuildProvenance": {
      "title": "BuildProvenance",
      "description": "Required. The actual provenance for the build.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "ID of the project.",
          "type": "string"
        },
        "logsUri": {
          "description": "URI where any logs for this provenance were written.",
          "type": "string"
        },
        "creator": {
          "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
          "type": "string"
        },
        "builderVersion": {
          "description": "Version string of the builder at the time this build was executed.",
          "type": "string"
        },
        "commands": {
          "description": "Commands requested by the build.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "builtArtifacts": {
          "description": "Output of the build.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "description": "Required. Unique identifier of the build.",
          "type": "string"
        },
        "buildOptions": {
          "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endTime": {
          "description": "Time at which execution of the build was finished.",
          "type": "string"
        },
        "startTime": {
          "description": "Time at which execution of the build was started.",
          "type": "string"
        },
        "triggerId": {
          "description": "Trigger identifier if the build was triggered automatically; empty if not.",
          "type": "string"
        },
        "sourceProvenance": {
          "description": "Details of the Source input to the build.",
          "type": "object"
        },
        "createTime": {
          "description": "Time at which the build was created.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "title": "Policy",
      "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "type": "string"
        }
      }
    },
    "GerritSourceContext": {
      "title": "GerritSourceContext",
      "description": "A SourceContext referring to a Gerrit project.",
      "type": "object",
      "properties": {
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "revisionId": {
          "description": "A revision (commit) ID.",
          "type": "string"
        },
        "gerritProject": {
          "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is the\nhostURI/project.",
          "type": "string"
        },
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "type": "object"
        }
      }
    },
    "ListNoteOccurrencesResponse": {
      "title": "ListNoteOccurrencesResponse",
      "description": "Response for listing occurrences for a note.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences attached to the specified note.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "nextPageToken": {
          "description": "Token to provide to skip to a particular spot in the list.",
          "type": "string"
        }
      }
    },
    "FileHashes": {
      "title": "FileHashes",
      "description": "Container message for hashes of byte content of files, used in source\nmessages to verify integrity of source input to the build.",
      "type": "object",
      "properties": {
        "fileHash": {
          "description": "Required. Collection of file hashes.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PgpSignedAttestation": {
      "title": "PgpSignedAttestation",
      "description": "A PGP signed attestation.",
      "type": "object",
      "properties": {
        "contentType": {
          "$ref": "#/definitions/ContentType"
        },
        "signature": {
          "description": "Required. The raw content of the signature, as output by GNU Privacy Guard\n(GPG) or equivalent. Since this message only supports attached signatures,\nthe payload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
          "type": "string"
        },
        "pgpKeyId": {
          "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexidecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
          "type": "string"
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage is output only and\npopulated by the API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Layer": {
      "title": "Layer",
      "description": "Layer holds metadata specific to a layer of a Docker image.",
      "type": "object",
      "properties": {
        "directive": {
          "$ref": "#/definitions/Directive"
        },
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        }
      }
    },
    "Binding": {
      "title": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListNotesResponse": {
      "title": "ListNotesResponse",
      "description": "Response for listing notes.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes requested.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1VulnerabilityDetails": {
      "title": "GrafeasV1beta1VulnerabilityDetails",
      "description": "Details of a vulnerability Occurrence.",
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/Severity2"
        },
        "cvssScore": {
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
          "type": "number",
          "format": "double"
        },
        "relatedUrls": {
          "description": "Output only. URLs related to this vulnerability.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedUrl"
          }
        },
        "type": {
          "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc)",
          "type": "string"
        },
        "packageIssue": {
          "description": "Required. The set of affected locations and their fixes (if available)\nwithin the associated resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageIssue"
          }
        },
        "longDescription": {
          "description": "Output only. A detailed description of this vulnerability.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Output only. A one sentence description of this vulnerability.",
          "type": "string"
        }
      }
    },
    "RelatedUrl": {
      "title": "RelatedUrl",
      "description": "Metadata for any related URL information.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Specific URL associated with the resource.",
          "type": "string"
        },
        "label": {
          "description": "Label to describe usage of the URL.",
          "type": "string"
        }
      }
    },
    "Details": {
      "title": "Details",
      "description": "Details of an attestation occurrence.",
      "type": "object",
      "properties": {
        "attestation": {
          "$ref": "#/definitions/Attestation"
        }
      }
    },
    "AnalysisKind": {
      "title": "AnalysisKind",
      "description": "Required. Immutable. The kind of analysis that is handled by this\ndiscovery.",
      "example": "NOTE_KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "NOTE_KIND_UNSPECIFIED",
        "VULNERABILITY",
        "BUILD",
        "IMAGE",
        "PACKAGE",
        "DEPLOYMENT",
        "DISCOVERY",
        "ATTESTATION"
      ]
    },
    "AnalysisStatus": {
      "title": "AnalysisStatus",
      "description": "The status of discovery for the resource.",
      "example": "ANALYSIS_STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ANALYSIS_STATUS_UNSPECIFIED",
        "PENDING",
        "SCANNING",
        "FINISHED_SUCCESS",
        "FINISHED_FAILED",
        "FINISHED_UNSUPPORTED"
      ]
    },
    "Architecture": {
      "title": "Architecture",
      "description": "The CPU architecture for which packages in this distribution channel were\nbuilt.",
      "example": "ARCHITECTURE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ARCHITECTURE_UNSPECIFIED",
        "X86",
        "X64"
      ]
    },
    "ContentType": {
      "title": "ContentType",
      "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
      "example": "CONTENT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CONTENT_TYPE_UNSPECIFIED",
        "SIMPLE_SIGNING_JSON"
      ]
    },
    "ContinuousAnalysis": {
      "title": "ContinuousAnalysis",
      "description": "Whether the resource is continuously analyzed.",
      "example": "CONTINUOUS_ANALYSIS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CONTINUOUS_ANALYSIS_UNSPECIFIED",
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "Directive": {
      "title": "Directive",
      "description": "Required. The recovered Dockerfile directive used to construct this layer.",
      "example": "DIRECTIVE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DIRECTIVE_UNSPECIFIED",
        "MAINTAINER",
        "RUN",
        "CMD",
        "LABEL",
        "EXPOSE",
        "ENV",
        "ADD",
        "COPY",
        "ENTRYPOINT",
        "VOLUME",
        "USER",
        "WORKDIR",
        "ARG",
        "ONBUILD",
        "STOPSIGNAL",
        "HEALTHCHECK",
        "SHELL"
      ]
    },
    "KeyType": {
      "title": "KeyType",
      "description": "The type of the key, either stored in `public_key` or referenced in\n`key_id`.",
      "example": "KEY_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KEY_TYPE_UNSPECIFIED",
        "PGP_ASCII_ARMORED",
        "PKIX_PEM"
      ]
    },
    "Kind": {
      "title": "Kind",
      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions.",
      "example": "VERSION_KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "VERSION_KIND_UNSPECIFIED",
        "NORMAL",
        "MINIMUM",
        "MAXIMUM"
      ]
    },
    "Kind1": {
      "title": "Kind1",
      "description": "Output only. This explicitly denotes which of the occurrence details are\nspecified. This field can be used as a filter in list requests.",
      "example": "NOTE_KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "NOTE_KIND_UNSPECIFIED",
        "VULNERABILITY",
        "BUILD",
        "IMAGE",
        "PACKAGE",
        "DEPLOYMENT",
        "DISCOVERY",
        "ATTESTATION"
      ]
    },
    "Kind2": {
      "title": "Kind2",
      "description": "Output only. The type of analysis. This field can be used as a filter in\nlist requests.",
      "example": "NOTE_KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "NOTE_KIND_UNSPECIFIED",
        "VULNERABILITY",
        "BUILD",
        "IMAGE",
        "PACKAGE",
        "DEPLOYMENT",
        "DISCOVERY",
        "ATTESTATION"
      ]
    },
    "Kind3": {
      "title": "Kind3",
      "description": "The alias kind.",
      "example": "KIND_UNSPECIFIED",
      "type": "string",
      "enum": [
        "KIND_UNSPECIFIED",
        "FIXED",
        "MOVABLE",
        "OTHER"
      ]
    },
    "LogType": {
      "title": "LogType",
      "description": "The log type that this config enables.",
      "example": "LOG_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "LOG_TYPE_UNSPECIFIED",
        "ADMIN_READ",
        "DATA_WRITE",
        "DATA_READ"
      ]
    },
    "Platform": {
      "title": "Platform",
      "description": "Platform hosting this deployment.",
      "example": "PLATFORM_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PLATFORM_UNSPECIFIED",
        "GKE",
        "FLEX",
        "CUSTOM"
      ]
    },
    "Severity": {
      "title": "Severity",
      "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across\nall severities.",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Severity1": {
      "title": "Severity1",
      "description": "Note provider assigned impact of the vulnerability.",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Severity2": {
      "title": "Severity2",
      "description": "Output only. The note provider assigned Severity of the vulnerability.",
      "example": "SEVERITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "MINIMAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "Required. The type of hash that was performed.",
      "example": "HASH_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "HASH_TYPE_UNSPECIFIED",
        "SHA256"
      ]
    }
  },
  "tags": [
    {
      "name": "occurrences",
      "description": ""
    },
    {
      "name": "notes",
      "description": ""
    },
    {
      "name": "scanConfigs",
      "description": ""
    }
  ]
}