{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Poly API",
    "description": "The Poly API provides read access to assets hosted on <a href=\"https://poly.google.com\">poly.google.com</a> to all, and upload access to <a href=\"https://poly.google.com\">poly.google.com</a> for whitelisted accounts.\n",
    "contact": {}
  },
  "host": "poly.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{+name}": {
      "get": {
        "description": "Returns detailed information about an asset given its name.\nPRIVATE assets are returned only if\n the currently authenticated user (via OAuth token) is the author of the asset.",
        "summary": "GetV1ByName",
        "tags": [
          "assets"
        ],
        "operationId": "V1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Asset"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/assets": {
      "get": {
        "description": "Lists all public, remixable assets. These are assets with an access level of\nPUBLIC and published under the\nCC-By license.",
        "summary": "ListV1Assets",
        "tags": [
          "assets"
        ],
        "operationId": "V1AssetsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies a continuation token from a previous search whose results were\nsplit into multiple pages. To get the next page, submit the same request\nspecifying the value from next_page_token."
          },
          {
            "name": "maxComplexity",
            "in": "query",
            "required": false,
            "default": "COMPLEXITY_UNSPECIFIED",
            "type": "string",
            "description": "Returns assets that are of the specified complexity or less. Defaults to\nCOMPLEX. For example, a request for\nMEDIUM assets also includes\nSIMPLE assets. (Acceptable values are: \"COMPLEXITY_UNSPECIFIED\", \"COMPLEX\", \"MEDIUM\", \"SIMPLE\")"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of assets to be returned. This value must be between `1`\nand `100`. Defaults to `20`."
          },
          {
            "name": "keywords",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "One or more search terms to be matched against all text that Poly has\nindexed for assets, which includes display_name,\ndescription, and tags. Multiple keywords should be\nseparated by spaces."
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies an ordering for assets. Acceptable values are:\n`BEST`, `NEWEST`, `OLDEST`. Defaults to `BEST`, which ranks assets\nbased on a combination of popularity and other features."
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only assets with the matching format. Acceptable values are:\n`BLOCKS`, `FBX`, `GLTF`, `GLTF2`, `OBJ`, `TILT`."
          },
          {
            "name": "curated",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return only assets that have been curated by the Poly team."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter assets based on the specified category. Supported values are:\n`animals`, `architecture`, `art`, `food`, `nature`, `objects`, `people`, `scenes`,\n`technology`, and `transport`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListAssetsResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+name}/assets": {
      "get": {
        "description": "Lists assets authored by the given user. Only the value 'me', representing\nthe currently-authenticated user, is supported. May include assets with an\naccess level of PRIVATE or\nUNLISTED and assets which are\nAll Rights Reserved for the\ncurrently-authenticated user.",
        "summary": "ListV1AssetsByName",
        "tags": [
          "assets"
        ],
        "operationId": "V1AssetsByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies a continuation token from a previous search whose results were\nsplit into multiple pages. To get the next page, submit the same request\nspecifying the value from\nnext_page_token."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of assets to be returned. This value must be between `1`\nand `100`. Defaults to `20`."
          },
          {
            "name": "visibility",
            "in": "query",
            "required": false,
            "default": "VISIBILITY_UNSPECIFIED",
            "type": "string",
            "description": "The visibility of the assets to be returned.\nDefaults to VISIBILITY_UNSPECIFIED which returns all assets. (Acceptable values are: \"VISIBILITY_UNSPECIFIED\", \"PUBLISHED\", \"PRIVATE\")"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies an ordering for assets. Acceptable values are:\n`BEST`, `NEWEST`, `OLDEST`. Defaults to `BEST`, which ranks assets\nbased on a combination of popularity and other features."
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only assets with the matching format. Acceptable values are:\n`BLOCKS`, `FBX`, `GLTF`, `GLTF2`, `OBJ`, and `TILT`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListUserAssetsResponse"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/{+name}/likedassets": {
      "get": {
        "description": "Lists assets that the user has liked. Only the value 'me', representing\nthe currently-authenticated user, is supported. May include assets with an\naccess level of UNLISTED.",
        "summary": "ListV1LikedassetsByName",
        "tags": [
          "likedassets"
        ],
        "operationId": "V1LikedassetsByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies an ordering for assets. Acceptable values are:\n`BEST`, `NEWEST`, `OLDEST`, 'LIKED_TIME'. Defaults to `LIKED_TIME`, which\nranks assets based on how recently they were liked."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies a continuation token from a previous search whose results were\nsplit into multiple pages. To get the next page, submit the same request\nspecifying the value from\nnext_page_token."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of assets to be returned. This value must be between `1`\nand `100`. Defaults to `20`."
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return only assets with the matching format. Acceptable values are:\n`BLOCKS`, `FBX`, `GLTF`, `GLTF2`, `OBJ`, `TILT`."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListLikedAssetsResponse"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "UserAsset": {
      "title": "UserAsset",
      "description": "Data about the user's asset.",
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/Asset"
        }
      }
    },
    "ListLikedAssetsResponse": {
      "title": "ListLikedAssetsResponse",
      "description": "A response message from a request to list.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The continuation token for retrieving the next page. If empty,\nindicates that there are no more pages. To get the next page, submit the\nsame request specifying this value as the\npage_token.",
          "type": "string"
        },
        "assets": {
          "description": "A list of assets that match the criteria specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "totalSize": {
          "description": "The total number of assets in the list, without pagination.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ObjParseError": {
      "title": "ObjParseError",
      "description": "Details of an error resulting from parsing an OBJ file",
      "type": "object",
      "properties": {
        "startIndex": {
          "description": "The starting character index at which the problem was found.",
          "type": "integer",
          "format": "int32"
        },
        "endIndex": {
          "description": "The ending character index at which the problem was found.",
          "type": "integer",
          "format": "int32"
        },
        "line": {
          "description": "The text of the line. Note that this may be truncated if the line was very\nlong. This may not include the error if it occurs after line truncation.",
          "type": "string"
        },
        "filePath": {
          "description": "The file path in which the problem was found.",
          "type": "string"
        },
        "lineNumber": {
          "description": "Line number at which the problem was found.",
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "$ref": "#/definitions/Code"
        }
      }
    },
    "Quaternion": {
      "title": "Quaternion",
      "description": "A [Quaternion](//en.wikipedia.org/wiki/Quaternion). Please note: if in the\nresponse you see \"w: 1\" and nothing else this is the default value of\n[0, 0, 0, 1] where x,y, and z are 0.",
      "type": "object",
      "properties": {
        "x": {
          "description": "The x component.",
          "type": "number",
          "format": "double"
        },
        "z": {
          "description": "The z component.",
          "type": "number",
          "format": "double"
        },
        "w": {
          "description": "The scalar component.",
          "type": "number",
          "format": "double"
        },
        "y": {
          "description": "The y component.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "FormatComplexity": {
      "title": "FormatComplexity",
      "description": "Information on the complexity of this Format.",
      "type": "object",
      "properties": {
        "lodHint": {
          "description": "A non-negative integer that represents the level of detail (LOD) of this\nformat relative to other formats of the same asset with the same\nformat_type.\nThis hint allows you to sort formats from the most-detailed (0) to\nleast-detailed (integers greater than 0).",
          "type": "integer",
          "format": "int32"
        },
        "triangleCount": {
          "description": "The estimated number of triangles.",
          "type": "string"
        }
      }
    },
    "ListUserAssetsResponse": {
      "title": "ListUserAssetsResponse",
      "description": "A response message from a request to list.",
      "type": "object",
      "properties": {
        "totalSize": {
          "description": "The total number of assets in the list, without pagination.",
          "type": "integer",
          "format": "int32"
        },
        "userAssets": {
          "description": "A list of UserAssets matching the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAsset"
          }
        },
        "nextPageToken": {
          "description": "The continuation token for retrieving the next page. If empty,\nindicates that there are no more pages. To get the next page, submit the\nsame request specifying this value as the\npage_token.",
          "type": "string"
        }
      }
    },
    "ImageError": {
      "title": "ImageError",
      "description": "A message resulting from reading an image file.",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "The file path in the import of the image that was rejected.",
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/Code1"
        }
      }
    },
    "StartAssetImportResponse": {
      "title": "StartAssetImportResponse",
      "description": "A response message from a request to startImport.\nThis is returned in the response field of the Operation.",
      "type": "object",
      "properties": {
        "assetId": {
          "description": "The id of newly created asset. If this is empty when the operation is\ncomplete it means the import failed. Please refer to the\nassetImportMessages field to understand what went wrong.",
          "type": "string"
        },
        "publishUrl": {
          "description": "The publish URL for the asset.",
          "type": "string"
        },
        "assetImportId": {
          "description": "The id of the asset import.",
          "type": "string"
        },
        "assetImportMessages": {
          "description": "The message from the asset import. This will contain any warnings\n(or - in the case of failure - errors) that occurred during import.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetImportMessage"
          }
        }
      }
    },
    "RemixInfo": {
      "title": "RemixInfo",
      "description": "Info about the sources of this asset (i.e. assets that were remixed to\ncreate this asset).",
      "type": "object",
      "properties": {
        "sourceAsset": {
          "description": "Resource ids for the sources of this remix, of the form:\n`assets/{ASSET_ID}`",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "File": {
      "title": "File",
      "description": "Represents a file in Poly, which can be a root,\nresource, or thumbnail file.",
      "type": "object",
      "properties": {
        "contentType": {
          "description": "The MIME content-type, such as `image/png`.\nFor more information, see\n[MIME types](//developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).",
          "type": "string"
        },
        "relativePath": {
          "description": "The path of the resource file relative to the root file.\nFor root or thumbnail files, this is just the filename.",
          "type": "string"
        },
        "url": {
          "description": "The URL where the file data can be retrieved.",
          "type": "string"
        }
      }
    },
    "ListAssetsResponse": {
      "title": "ListAssetsResponse",
      "description": "A response message from a request to list.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The continuation token for retrieving the next page. If empty,\nindicates that there are no more pages. To get the next page, submit the\nsame request specifying this value as the\npage_token.",
          "type": "string"
        },
        "assets": {
          "description": "A list of assets that match the criteria specified in the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "totalSize": {
          "description": "The total number of assets in the list, without pagination.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AssetImportMessage": {
      "title": "AssetImportMessage",
      "description": "A message generated by the asset import process.",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "An optional file path. Only present for those error codes that specify it.",
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/Code2"
        },
        "imageError": {
          "description": "An optional image error. Only present for INVALID_IMAGE_FILE.",
          "type": "object"
        },
        "objParseError": {
          "description": "An optional OBJ parse error. Only present for OBJ_PARSE_ERROR.",
          "type": "object"
        }
      }
    },
    "Format": {
      "title": "Format",
      "description": "The same asset can be represented in different formats, for example,\na [WaveFront .obj](//en.wikipedia.org/wiki/Wavefront_.obj_file) file with its\ncorresponding .mtl file or a [Khronos glTF](//www.khronos.org/gltf) file\nwith its corresponding .glb binary data. A format refers to a specific\nrepresentation of an asset and contains all information needed to\nretrieve and describe this representation.",
      "type": "object",
      "properties": {
        "formatComplexity": {
          "$ref": "#/definitions/FormatComplexity"
        },
        "root": {
          "$ref": "#/definitions/File"
        },
        "formatType": {
          "description": "A short string that identifies the format type of this representation.\nPossible values are: `FBX`, `GLTF`, `GLTF2`, `OBJ`, and `TILT`.",
          "type": "string"
        },
        "resources": {
          "description": "A list of dependencies of the root element. May include, but is not\nlimited to, materials, textures, and shader programs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        }
      }
    },
    "Asset": {
      "title": "Asset",
      "description": "An Asset.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The human-readable name, set by the asset's author.",
          "type": "string"
        },
        "createTime": {
          "description": "For published assets, the time when the asset was published.\nFor unpublished assets, the time when the asset was created.",
          "type": "string"
        },
        "remixInfo": {
          "description": "The remix info for the asset.",
          "type": "object"
        },
        "license": {
          "$ref": "#/definitions/License"
        },
        "updateTime": {
          "description": "The time when the asset was last modified. For published assets, whose\ncontents are immutable, the update time changes only when metadata\nproperties, such as visibility, are updated.",
          "type": "string"
        },
        "isCurated": {
          "description": "Whether this asset has been curated by the Poly team.",
          "type": "boolean"
        },
        "formats": {
          "description": "A list of Formats where each\nformat describes one representation of the asset.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "presentationParams": {
          "description": "Hints for displaying the asset. Note that these parameters are not\nimmutable; the author of an asset may change them post-publication.",
          "type": "object"
        },
        "thumbnail": {
          "description": "The thumbnail image for the asset.",
          "type": "object"
        },
        "description": {
          "description": "The human-readable description, set by the asset's author.",
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/Visibility"
        },
        "authorName": {
          "description": "The author's publicly visible name. Use this name when giving credit to the\nauthor. For more information, see [Licensing](/poly/discover/licensing).",
          "type": "string"
        },
        "name": {
          "description": "The unique identifier for the asset in the form:\n`assets/{ASSET_ID}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Application-defined opaque metadata for this asset. This field is only\nreturned when querying for the signed-in user's own assets, not for public\nassets. This string is limited to 1K chars. It is up to the creator of\nthe asset to define the format for this string (for example, JSON).",
          "type": "string"
        }
      }
    },
    "PresentationParams": {
      "title": "PresentationParams",
      "description": "Hints for displaying the asset, based on information available when the asset\nwas uploaded.",
      "type": "object",
      "properties": {
        "orientingRotation": {
          "$ref": "#/definitions/Quaternion"
        },
        "colorSpace": {
          "$ref": "#/definitions/ColorSpace"
        },
        "backgroundColor": {
          "description": "A background color which could be used for displaying the 3D asset in a\n'thumbnail' or 'palette' style view. Authors have the option to set this\nbackground color when publishing or editing their asset.\n\nThis is represented as a six-digit hexademical triplet specifying the\nRGB components of the background color, e.g. #FF0000 for Red.",
          "type": "string"
        }
      }
    },
    "Code": {
      "title": "Code",
      "description": "The type of problem found (required).",
      "example": "CODE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CODE_UNSPECIFIED",
        "INCONSISTENT_VERTEX_REFS",
        "INVALID_COMMAND",
        "INVALID_NUMBER",
        "INVALID_VERTEX_REF",
        "MISSING_GEOMETRIC_VERTEX",
        "MISSING_TOKEN",
        "TOO_FEW_DIMENSIONS",
        "TOO_FEW_VERTICES",
        "TOO_MANY_DIMENSIONS",
        "UNSUPPORTED_COMMAND",
        "UNUSED_TOKENS",
        "VERTEX_NOT_FOUND",
        "NUMBER_OUT_OF_RANGE",
        "INVALID_VALUE",
        "INVALID_TEXTURE_OPTION",
        "TOO_MANY_PROBLEMS",
        "MISSING_FILE_NAME",
        "FILE_NOT_FOUND",
        "UNKNOWN_MATERIAL",
        "NO_MATERIAL_DEFINED",
        "INVALID_SMOOTHING_GROUP",
        "MISSING_VERTEX_COLORS",
        "FILE_SUBSTITUTION",
        "LINE_TOO_LONG",
        "INVALID_FILE_PATH"
      ]
    },
    "Code1": {
      "title": "Code1",
      "description": "The type of image error encountered. Optional for older image errors.",
      "example": "CODE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CODE_UNSPECIFIED",
        "INVALID_IMAGE",
        "IMAGE_TOO_BIG",
        "WRONG_IMAGE_TYPE"
      ]
    },
    "Code2": {
      "title": "Code2",
      "description": "The code associated with this message.",
      "example": "CODE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CODE_UNSPECIFIED",
        "NO_IMPORTABLE_FILE",
        "EMPTY_MODEL",
        "OBJ_PARSE_ERROR",
        "EXPIRED",
        "IMAGE_ERROR",
        "EXTRA_FILES_WITH_ARCHIVE",
        "DEFAULT_MATERIALS",
        "FATAL_ERROR",
        "INVALID_ELEMENT_TYPE"
      ]
    },
    "ColorSpace": {
      "title": "ColorSpace",
      "description": "The materials' diffuse/albedo color. This does not apply to vertex colors\nor texture maps.",
      "example": "UNKNOWN",
      "type": "string",
      "enum": [
        "UNKNOWN",
        "LINEAR",
        "GAMMA"
      ]
    },
    "License": {
      "title": "License",
      "description": "The license under which the author has made the asset available\nfor use, if any.",
      "example": "UNKNOWN",
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CREATIVE_COMMONS_BY",
        "ALL_RIGHTS_RESERVED"
      ]
    },
    "Visibility": {
      "title": "Visibility",
      "description": "The visibility of the asset and who can access it.",
      "example": "VISIBILITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "VISIBILITY_UNSPECIFIED",
        "PRIVATE",
        "UNLISTED",
        "PUBLIC"
      ]
    }
  },
  "tags": [
    {
      "name": "assets",
      "description": ""
    },
    {
      "name": "likedassets",
      "description": ""
    }
  ]
}