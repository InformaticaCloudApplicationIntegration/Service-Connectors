{
  "swagger": "2.0",
  "info": {
    "version": "v2beta1",
    "title": "Ad Exchange Buyer API II",
    "description": "Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.",
    "contact": {}
  },
  "host": "adexchangebuyer.googleapis.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://adexchangebuyer.googleapis.com/",
      "scopes": {
        "https://www.googleapis.com/auth/adexchange.buyer": "Manage your Ad Exchange buyer account configuration"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2beta1/{+filterSetName}/losingBids": {
      "get": {
        "description": "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason.",
        "summary": "ListV2beta1LosingBidsByFilterSetName",
        "tags": [
          "losingBids"
        ],
        "operationId": "V2beta1LosingBidsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListLosingBidsResponse.nextPageToken\nreturned from the previous call to the losingBids.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListLosingBidsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/impressionMetrics": {
      "get": {
        "description": "Lists all metrics that are measured in terms of number of impressions.",
        "summary": "ListV2beta1ImpressionMetricsByFilterSetName",
        "tags": [
          "impressionMetrics"
        ],
        "operationId": "V2beta1ImpressionMetricsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListImpressionMetricsResponse.nextPageToken\nreturned from the previous call to the impressionMetrics.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListImpressionMetricsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/bidMetrics": {
      "get": {
        "description": "Lists all metrics that are measured in terms of number of bids.",
        "summary": "ListV2beta1BidMetricsByFilterSetName",
        "tags": [
          "bidMetrics"
        ],
        "operationId": "V2beta1BidMetricsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidMetricsResponse.nextPageToken\nreturned from the previous call to the bidMetrics.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBidMetricsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/bidResponseErrors": {
      "get": {
        "description": "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason.",
        "summary": "ListV2beta1BidResponseErrorsByFilterSetName",
        "tags": [
          "bidResponseErrors"
        ],
        "operationId": "V2beta1BidResponseErrorsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponseErrorsResponse.nextPageToken\nreturned from the previous call to the bidResponseErrors.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBidResponseErrorsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/bidResponsesWithoutBids": {
      "get": {
        "description": "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason.",
        "summary": "ListV2beta1BidResponsesWithoutBids",
        "tags": [
          "bidResponsesWithoutBids"
        ],
        "operationId": "V2beta1BidResponsesWithoutBidsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBidResponsesWithoutBidsResponse.nextPageToken\nreturned from the previous call to the bidResponsesWithoutBids.list\nmethod."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBidResponsesWithoutBidsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/filteredBidRequests": {
      "get": {
        "description": "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.",
        "summary": "ListV2beta1FilteredBidRequests",
        "tags": [
          "filteredBidRequests"
        ],
        "operationId": "V2beta1FilteredBidRequestsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidRequestsResponse.nextPageToken\nreturned from the previous call to the filteredBidRequests.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListFilteredBidRequestsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/nonBillableWinningBids": {
      "get": {
        "description": "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason.",
        "summary": "ListV2beta1NonBillableWinningBids",
        "tags": [
          "nonBillableWinningBids"
        ],
        "operationId": "V2beta1NonBillableWinningBidsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListNonBillableWinningBidsResponse.nextPageToken\nreturned from the previous call to the nonBillableWinningBids.list\nmethod."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListNonBillableWinningBidsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details": {
      "get": {
        "description": "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail.",
        "summary": "ListV2beta1FilteredBidsDetails",
        "tags": [
          "details"
        ],
        "operationId": "V2beta1FilteredBidsDetailsByFilterSetNameAndCreativeStatusIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creativeStatusId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID of the creative status for which to retrieve a breakdown by detail.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).\nDetails are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByDetailResponse.nextPageToken\nreturned from the previous call to the filteredBids.details.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListCreativeStatusBreakdownByDetailResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives": {
      "get": {
        "description": "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative.",
        "summary": "ListV2beta1FilteredBidsCreatives",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1FilteredBidsCreativesByFilterSetNameAndCreativeStatusIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creativeStatusId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The ID of the creative status for which to retrieve a breakdown by\ncreative.\nSee\n[creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes)."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativeStatusBreakdownByCreativeResponse.nextPageToken\nreturned from the previous call to the filteredBids.creatives.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListCreativeStatusBreakdownByCreativeResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+ownerName}/creatives/{creativeId}": {
      "delete": {
        "description": "Deletes a single creative.\n\nA creative is deactivated upon deletion and does not count against active\nsnippet quota. A deleted creative should not be used in bidding (all bids\nwith that creative will be rejected).",
        "summary": "DeleteV2beta1CreativesByOwnerNameAndCreativeId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1CreativesByOwnerNameAndCreativeIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the creative to delete."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}": {
      "put": {
        "description": "Updates a creative.",
        "summary": "UpdateV2beta1AccountsCreativesByAccountId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesByAccountIdAndCreativeIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Creative"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Creative"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "get": {
        "description": "Gets a creative.",
        "summary": "GetV2beta1AccountsCreativesByAccountId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesByAccountIdAndCreativeIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account the creative belongs to."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the creative to retrieve."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Creative"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives": {
      "get": {
        "description": "Lists creatives.",
        "summary": "ListV2beta1AccountsCreativesByAccountId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account to list the creatives from.\nSpecify \"-\" to list all creatives the current user has access to."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListCreativesResponse.next_page_token\nreturned from the previous call to 'ListCreatives' method."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer creatives than requested\n(due to timeout constraint) even if more are available via another call.\nIf unspecified, server will pick an appropriate default.\nAcceptable values are 1 to 1000, inclusive."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional query string to filter creatives. If no filter is specified,\nall active creatives will be returned.\n<p>Supported queries are:\n<ul>\n<li>accountId=<i>account_id_string</i>\n<li>creativeId=<i>creative_id_string</i>\n<li>dealsStatus: {approved, conditionally_approved, disapproved,\n                   not_checked}\n<li>openAuctionStatus: {approved, conditionally_approved, disapproved,\n                          not_checked}\n<li>attribute: {a numeric attribute from the list of attributes}\n<li>disapprovalReason: {a reason from\nDisapprovalReason}\n</ul>\nExample: 'accountId=12345 AND (dealsStatus:disapproved AND\ndisapprovalReason:unacceptable_content) OR attribute:47'"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListCreativesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates a creative.",
        "summary": "CreateV2beta1AccountsCreativesByAccountId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesByAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Creative"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "duplicateIdMode",
            "in": "query",
            "required": false,
            "default": "NO_DUPLICATES",
            "type": "string",
            "description": "Indicates if multiple creatives can share an ID or not. Default is\nNO_DUPLICATES (one ID per creative). (Acceptable values are: \"NO_DUPLICATES\", \"FORCE_ENABLE_DUPLICATE_IDS\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Creative"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching": {
      "post": {
        "description": "Stops watching a creative. Will stop push notifications being sent to the\ntopics when the creative changes status.",
        "summary": "StopWatchingV2beta1AccountsCreativesStopWatching",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesStopWatchingByAccountIdAndCreativeIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account of the creative to stop notifications for."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The creative ID of the creative to stop notifications for.\nSpecify \"-\" to specify stopping account level notifications."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch": {
      "post": {
        "description": "Watches a creative. Will result in push notifications being sent to the\ntopic when the creative changes status.",
        "summary": "WatchV2beta1AccountsCreativesWatchByAccountId",
        "tags": [
          "creatives"
        ],
        "operationId": "V2beta1AccountsCreativesWatchByAccountIdAndCreativeIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account of the creative to watch."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The creative ID to watch for status changes.\nSpecify \"-\" to watch all creatives under the above account.\nIf both creative-level and account-level notifications are\nsent, only a single notification will be sent to the\ncreative-level notification topic."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WatchCreativeRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+filterSetName}/filteredBids": {
      "get": {
        "description": "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason.",
        "summary": "ListV2beta1FilteredBidsByFilterSetName",
        "tags": [
          "filteredBids"
        ],
        "operationId": "V2beta1FilteredBidsByFilterSetNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilteredBidsResponse.nextPageToken\nreturned from the previous call to the filteredBids.list\nmethod."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListFilteredBidsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+ownerName}/filterSets": {
      "post": {
        "description": "Creates the specified filter set for the account with the given account ID.",
        "summary": "CreateV2beta1FilterSetsByOwnerName",
        "tags": [
          "filterSets"
        ],
        "operationId": "V2beta1FilterSetsByOwnerNamePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterSet"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "isTransient",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether the filter set is transient, or should be persisted indefinitely.\nBy default, filter sets are not transient.\nIf transient, it will be available for at least 1 hour after creation."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterSet"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "get": {
        "description": "Lists all filter sets for the account with the given account ID.",
        "summary": "ListV2beta1FilterSetsByOwnerName",
        "tags": [
          "filterSets"
        ],
        "operationId": "V2beta1FilterSetsByOwnerNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListFilterSetsResponse.nextPageToken\nreturned from the previous call to the\naccounts.filterSets.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListFilterSetsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/{+name}": {
      "delete": {
        "description": "Deletes the requested filter set from the account with the given account\nID.",
        "summary": "DeleteV2beta1ByName",
        "tags": [
          "filterSets"
        ],
        "operationId": "V2beta1ByNameDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "get": {
        "description": "Retrieves the requested filter set for the account with the given account\nID.",
        "summary": "GetV2beta1ByName",
        "tags": [
          "filterSets"
        ],
        "operationId": "V2beta1ByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FilterSet"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept": {
      "post": {
        "description": "Mark the proposal as accepted at the given revision number. If the number\ndoes not match the server's revision number an `ABORTED` error message will\nbe returned. This call updates the proposal_state from `PROPOSED` to\n`BUYER_ACCEPTED`, or from `SELLER_ACCEPTED` to `FINALIZED`.",
        "summary": "AcceptV2beta1AccountsProposalsAccept",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsAcceptByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to accept."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AcceptProposalRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause": {
      "post": {
        "description": "Update the given proposal to pause serving.\nThis method will set the\n`DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to true for all\ndeals in the proposal.\n\nIt is a no-op to pause an already-paused proposal.\nIt is an error to call PauseProposal for a proposal that is not\nfinalized or renegotiating.",
        "summary": "PauseV2beta1AccountsProposalsPauseByAccountId",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsPauseByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to pause."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PauseProposalRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals": {
      "get": {
        "description": "List proposals. A filter expression (PQL query) may be specified to\nfilter the results. To retrieve all finalized proposals, regardless if a\nproposal is being renegotiated, see the FinalizedProposals resource.\nNote that Bidder/ChildSeat relationships differ from the usual behavior.\nA Bidder account can only see its child seats' proposals by specifying\nthe ChildSeat's accountId in the request path.",
        "summary": "ListV2beta1AccountsProposalsByAccountId",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The page token as returned from ListProposalsResponse."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "filterSyntax",
            "in": "query",
            "required": false,
            "default": "FILTER_SYNTAX_UNSPECIFIED",
            "type": "string",
            "description": "Syntax the filter is written in. Current implementation defaults to PQL\nbut in the future it will be LIST_FILTER. (Acceptable values are: \"FILTER_SYNTAX_UNSPECIFIED\", \"PQL\", \"LIST_FILTER\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional PQL filter query used to query for proposals.\n\nNested repeated fields, such as proposal.deals.targetingCriterion,\ncannot be filtered."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListProposalsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "post": {
        "description": "Create the given proposal. Each created proposal and any deals it contains\nare assigned a unique ID by the server.",
        "summary": "CreateV2beta1AccountsProposalsByAccountId",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsByAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote": {
      "post": {
        "description": "Create a new note and attach it to the proposal. The note is assigned\na unique ID by the server.\nThe proposal revision number will not increase when associated with a\nnew note.",
        "summary": "AddNoteV2beta1AccountsProposalsAddNote",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsAddNoteByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to attach the note to."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddNoteRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume": {
      "post": {
        "description": "Update the given proposal to resume serving.\nThis method will set the\n`DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to false for all\ndeals in the proposal.\n\nNote that if the `has_seller_paused` bit is also set, serving will not\nresume until the seller also resumes.\n\nIt is a no-op to resume an already-running proposal.\nIt is an error to call ResumeProposal for a proposal that is not\nfinalized or renegotiating.",
        "summary": "ResumeV2beta1AccountsProposalsResume",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsResumeByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to resume."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup": {
      "post": {
        "description": "Update the given proposal to indicate that setup has been completed.\nThis method is called by the buyer when the line items have been created\non their end for a finalized proposal and all the required creatives\nhave been uploaded using the creatives API. This call updates the\n`is_setup_completed` bit on the proposal and also notifies the seller.\nThe server will advance the revision number of the most recent proposal.",
        "summary": "CompleteSetupV2beta1AccountsProposalsCompleteSetup",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsCompleteSetupByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to mark as setup completed."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}": {
      "get": {
        "description": "Gets a proposal given its ID. The proposal is returned at its head\nrevision.",
        "summary": "GetV2beta1AccountsProposalsByAccountId",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsByAccountIdAndProposalIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique ID of the proposal"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "put": {
        "description": "Update the given proposal at the client known revision number. If the\nserver revision has advanced since the passed-in\n`proposal.proposal_revision`, an `ABORTED` error message will be returned.\nOnly the buyer-modifiable fields of the proposal will be updated.\n\nNote that the deals in the proposal will be updated to match the passed-in\ncopy.\nIf a passed-in deal does not have a `deal_id`, the server will assign a new\nunique ID and create the deal.\nIf passed-in deal has a `deal_id`, it will be updated to match the\npassed-in copy.\nAny existing deals not present in the passed-in proposal will be deleted.\nIt is an error to pass in a deal with a `deal_id` not present at head.",
        "summary": "UpdateV2beta1AccountsProposalsByAccountId",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsByAccountIdAndProposalIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique ID of the proposal."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation": {
      "post": {
        "description": "Cancel an ongoing negotiation on a proposal. This does not cancel or end\nserving for the deals if the proposal has been finalized, but only cancels\na negotiation unilaterally.",
        "summary": "CancelNegotiationV2beta1AccountsProposalsCancelNegotiation",
        "tags": [
          "proposals"
        ],
        "operationId": "V2beta1AccountsProposalsCancelNegotiationByAccountIdAndProposalIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the proposal to cancel negotiation for."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Proposal"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}": {
      "get": {
        "description": "Retrieves an existing client user invitation.",
        "summary": "GetV2beta1AccountsClientsInvitationsInvitationId",
        "tags": [
          "invitations"
        ],
        "operationId": "V2beta1AccountsClientsInvitationsInvitationIdByAccountIdAndClientAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical identifier of the user invitation to retrieve. (required)"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer that the user invitation\nto be retrieved is associated with. (required)"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUserInvitation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations": {
      "get": {
        "description": "Lists all the client users invitations for a client\nwith a given account ID.",
        "summary": "ListV2beta1AccountsClientsInvitations",
        "tags": [
          "invitations"
        ],
        "operationId": "V2beta1AccountsClientsInvitationsByAccountIdAndClientAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer to list invitations for.\n(required)\nYou must either specify a string representation of a\nnumerical account identifier or the `-` character\nto list all the invitations for all the clients\nof a given sponsor buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUserInvitationsResponse.nextPageToken\nreturned from the previous call to the\nclients.invitations.list\nmethod."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. Server may return fewer clients than requested.\nIf unspecified, server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListClientUserInvitationsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "post": {
        "description": "Creates and sends out an email invitation to access\nan Ad Exchange client buyer account.",
        "summary": "CreateV2beta1AccountsClientsInvitations",
        "tags": [
          "invitations"
        ],
        "operationId": "V2beta1AccountsClientsInvitationsByAccountIdAndClientAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer that the user\nshould be associated with. (required)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUserInvitation"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUserInvitation"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users": {
      "get": {
        "description": "Lists all the known client users for a specified\nsponsor buyer account ID.",
        "summary": "ListV2beta1AccountsClientsUsersByAccountId",
        "tags": [
          "users"
        ],
        "operationId": "V2beta1AccountsClientsUsersByAccountIdAndClientAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the sponsor buyer of the client to list users for.\n(required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID of the client buyer to list users for. (required)\nYou must specify either a string representation of a\nnumerical account identifier or the `-` character\nto list all the client users for all the clients\nof a given sponsor buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientUsersResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.users.list method."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListClientUsersResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}": {
      "get": {
        "description": "Retrieves an existing client user.",
        "summary": "GetV2beta1AccountsClientsUsersUserId",
        "tags": [
          "users"
        ],
        "operationId": "V2beta1AccountsClientsUsersUserIdByAccountIdAndClientAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical identifier of the user to retrieve. (required)"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer\nthat the user to be retrieved is associated with. (required)"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUser"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "put": {
        "description": "Updates an existing client user.\nOnly the user status can be changed on update.",
        "summary": "UpdateV2beta1AccountsClientsUsersUserId",
        "tags": [
          "users"
        ],
        "operationId": "V2beta1AccountsClientsUsersUserIdByAccountIdAndClientAccountIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical identifier of the user to retrieve. (required)"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer that the user to be retrieved\nis associated with. (required)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUser"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientUser"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients/{clientAccountId}": {
      "put": {
        "description": "Updates an existing client buyer.",
        "summary": "UpdateV2beta1AccountsClientsByAccountId",
        "tags": [
          "clients"
        ],
        "operationId": "V2beta1AccountsClientsByAccountIdAndClientAccountIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to update a client for. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique numerical account ID of the client to update. (required)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Client"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "get": {
        "description": "Gets a client buyer with a given client account ID.",
        "summary": "GetV2beta1AccountsClientsByAccountId",
        "tags": [
          "clients"
        ],
        "operationId": "V2beta1AccountsClientsByAccountIdAndClientAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client's sponsor buyer. (required)"
          },
          {
            "name": "clientAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical account ID of the client buyer to retrieve. (required)"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Client"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/clients": {
      "post": {
        "description": "Creates a new client buyer.",
        "summary": "CreateV2beta1AccountsClientsByAccountId",
        "tags": [
          "clients"
        ],
        "operationId": "V2beta1AccountsClientsByAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique numerical account ID for the buyer of which the client buyer\nis a customer; the sponsor buyer to create a client for. (required)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Client"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      },
      "get": {
        "description": "Lists all the clients for the current sponsor buyer.",
        "summary": "ListV2beta1AccountsClientsByAccountId",
        "tags": [
          "clients"
        ],
        "operationId": "V2beta1AccountsClientsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique numerical account ID of the sponsor buyer to list the clients for."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListClientsResponse.nextPageToken\nreturned from the previous call to the\naccounts.clients.list\nmethod."
          },
          {
            "name": "partnerClientId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional unique identifier (from the standpoint of an Ad Exchange sponsor\nbuyer partner) of the client to return.\nIf specified, at most one client will be returned in the response."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer clients than requested.\nIf unspecified, the server will pick an appropriate default."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListClientsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}": {
      "get": {
        "description": "Gets the requested publisher profile by id.",
        "summary": "GetV2beta1AccountsPublisherProfiles",
        "tags": [
          "publisherProfiles"
        ],
        "operationId": "V2beta1AccountsPublisherProfilesByAccountIdAndPublisherProfileIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "publisherProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id for the publisher profile to get."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublisherProfile"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/publisherProfiles": {
      "get": {
        "description": "List all publisher profiles visible to the buyer",
        "summary": "ListV2beta1AccountsPublisherProfiles",
        "tags": [
          "publisherProfiles"
        ],
        "operationId": "V2beta1AccountsPublisherProfilesByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The page token as return from ListPublisherProfilesResponse."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specify the number of results to include per page."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListPublisherProfilesResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations": {
      "get": {
        "description": "List all creative-deal associations.",
        "summary": "ListV2beta1AccountsCreativesDealAssociations",
        "tags": [
          "dealAssociations"
        ],
        "operationId": "V2beta1AccountsCreativesDealAssociationsByAccountIdAndCreativeIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The creative ID to list the associations from.\nSpecify \"-\" to list all creatives under the above account."
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account to list the associations from.\nSpecify \"-\" to list all creatives the current user has access to."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token identifying a page of results the server should return.\nTypically, this is the value of\nListDealAssociationsResponse.next_page_token\nreturned from the previous call to 'ListDealAssociations' method."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. Server may return fewer associations than requested.\nIf unspecified, server will pick an appropriate default."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional query string to filter deal associations. If no filter is\nspecified, all associations will be returned.\nSupported queries are:\n<ul>\n<li>accountId=<i>account_id_string</i>\n<li>creativeId=<i>creative_id_string</i>\n<li>dealsId=<i>deals_id_string</i>\n<li>dealsStatus:{approved, conditionally_approved, disapproved,\n                  not_checked}\n<li>openAuctionStatus:{approved, conditionally_approved, disapproved,\n                         not_checked}\n</ul>\nExample: 'dealsId=12345 AND dealsStatus:disapproved'"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListDealAssociationsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add": {
      "post": {
        "description": "Associate an existing deal with a creative.",
        "summary": "AddV2beta1AccountsCreativesDealAssociationsAdd",
        "tags": [
          "dealAssociations"
        ],
        "operationId": "V2beta1AccountsCreativesDealAssociationsAddByAccountIdAndCreativeIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account the creative belongs to."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the creative associated with the deal."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddDealAssociationRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove": {
      "post": {
        "description": "Remove the association between a deal and a creative.",
        "summary": "RemoveV2beta1AccountsCreativesDealAssociationsRemove",
        "tags": [
          "dealAssociations"
        ],
        "operationId": "V2beta1AccountsCreativesDealAssociationsRemoveByAccountIdAndCreativeIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account the creative belongs to."
          },
          {
            "name": "creativeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the creative associated with the deal."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveDealAssociationRequest"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/products/{productId}": {
      "get": {
        "description": "Gets the requested product by ID.",
        "summary": "GetV2beta1AccountsProductsByAccountId",
        "tags": [
          "products"
        ],
        "operationId": "V2beta1AccountsProductsByAccountIdAndProductIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID for the product to get the head revision for."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/products": {
      "get": {
        "description": "List all products visible to the buyer (optionally filtered by the\nspecified PQL query).",
        "summary": "ListV2beta1AccountsProductsByAccountId",
        "tags": [
          "products"
        ],
        "operationId": "V2beta1AccountsProductsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The page token as returned from ListProductsResponse."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional PQL query used to query for products. See\nhttps://developers.google.com/ad-manager/docs/pqlreference\nfor documentation about PQL and examples.\n\nNested repeated fields, such as product.targetingCriterion.inclusions,\ncannot be filtered."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListProductsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    },
    "/v2beta1/accounts/{accountId}/finalizedProposals": {
      "get": {
        "description": "List finalized proposals, regardless if a proposal is being renegotiated.\nA filter expression (PQL query) may be specified to filter the results.\nThe notes will not be returned.",
        "summary": "ListV2beta1AccountsFinalizedProposals",
        "tags": [
          "finalizedProposals"
        ],
        "operationId": "V2beta1AccountsFinalizedProposalsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Account ID of the buyer."
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          {
            "name": "access_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth access token."
          },
          {
            "name": "upload_protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          {
            "name": "quotaUser",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          {
            "name": "prettyPrint",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          {
            "name": "uploadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          {
            "name": "callback",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "JSONP"
          },
          {
            "name": "oauth_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          {
            "name": "$.xgafv",
            "in": "query",
            "required": false,
            "default": "1",
            "type": "string",
            "description": "V1 error format. (Acceptable values are: \"1\", \"2\")"
          },
          {
            "name": "alt",
            "in": "query",
            "required": false,
            "default": "json",
            "type": "string",
            "description": "Data format for response. (Acceptable values are: \"json\", \"media\", \"proto\")"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The page token as returned from ListProposalsResponse."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Requested page size. The server may return fewer results than requested.\nIf unspecified, the server will pick an appropriate default."
          },
          {
            "name": "filterSyntax",
            "in": "query",
            "required": false,
            "default": "FILTER_SYNTAX_UNSPECIFIED",
            "type": "string",
            "description": "Syntax the filter is written in. Current implementation defaults to PQL\nbut in the future it will be LIST_FILTER. (Acceptable values are: \"FILTER_SYNTAX_UNSPECIFIED\", \"PQL\", \"LIST_FILTER\")"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional PQL filter query used to query for proposals.\n\nNested repeated fields, such as proposal.deals.targetingCriterion,\ncannot be filtered."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListProposalsResponse"
            },
            "headers": {}
          }
        },
        "security": [
          {
            "auth": [
              "https://www.googleapis.com/auth/adexchange.buyer"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "OperatingSystemTargeting": {
      "title": "OperatingSystemTargeting",
      "description": "Represents targeting information for operating systems.",
      "type": "object",
      "properties": {
        "operatingSystemVersionCriteria": {
          "$ref": "#/definitions/CriteriaTargeting"
        },
        "operatingSystemCriteria": {
          "$ref": "#/definitions/CriteriaTargeting"
        }
      }
    },
    "CriteriaTargeting": {
      "title": "CriteriaTargeting",
      "description": "IDs of operating system versions to be included/excluded.",
      "type": "object",
      "properties": {
        "targetedCriteriaIds": {
          "description": "A list of numeric IDs to be included.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedCriteriaIds": {
          "description": "A list of numeric IDs to be excluded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TimeInterval": {
      "title": "TimeInterval",
      "description": "An interval of time, with an absolute start and end.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The timestamp marking the end of the range (exclusive) for which data is\nincluded.",
          "type": "string"
        },
        "startTime": {
          "description": "The timestamp marking the start of the range (inclusive) for which data is\nincluded.",
          "type": "string"
        }
      }
    },
    "RelativeDateRange": {
      "title": "RelativeDateRange",
      "description": "A relative date range, specified by an offset and a duration.\nThe supported range of dates begins 30 days before today and ends today,\ni.e., the limits for these values are:\noffset_days >= 0\nduration_days >= 1\noffset_days + duration_days <= 30",
      "type": "object",
      "properties": {
        "offsetDays": {
          "description": "The end date of the filter set, specified as the number of days before\ntoday, e.g., for a range where the last date is today: 0.",
          "type": "integer",
          "format": "int32"
        },
        "durationDays": {
          "description": "The number of days in the requested date range, e.g., for a range spanning\ntoday: 1. For a range spanning the last 7 days: 7.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Proposal": {
      "title": "Proposal",
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nRepresents a proposal in the Marketplace. A proposal is the unit of\nnegotiation between a seller and a buyer and contains deals which\nare served.\n\nNote: you can not update, create, or otherwise modify Private\nAuction or Preferred Deals deals through the API.\n\nFields are updatable unless noted otherwise.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The name for the proposal.",
          "type": "string"
        },
        "buyerContacts": {
          "description": "Contact information for the buyer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          }
        },
        "billedBuyer": {
          "$ref": "#/definitions/Buyer"
        },
        "updateTime": {
          "description": "The time when the proposal was last revised.\n@OutputOnly",
          "type": "string"
        },
        "proposalId": {
          "description": "The unique ID of the proposal.\n@OutputOnly",
          "type": "string"
        },
        "deals": {
          "description": "The deals associated with this proposal. For Private Auction proposals (whose deals have\nNonGuaranteedAuctionTerms), there will only be one deal.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deal"
          }
        },
        "proposalRevision": {
          "description": "The revision number for the proposal.\nEach update to the proposal or the deal causes the proposal revision number\nto auto-increment. The buyer keeps track of the last revision number they\nknow of and pass it in when making an update. If the head revision number\non the server has since incremented, then an ABORTED error is returned\nduring the update operation to let the buyer know that a subsequent update\nwas made.\n@OutputOnly",
          "type": "string"
        },
        "seller": {
          "$ref": "#/definitions/Seller"
        },
        "buyer": {
          "$ref": "#/definitions/Buyer"
        },
        "notes": {
          "description": "The notes associated with this proposal.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "isRenegotiating": {
          "description": "True if the proposal is being renegotiated.\n@OutputOnly",
          "type": "boolean"
        },
        "isSetupComplete": {
          "description": "True, if the buyside inventory setup is complete for this proposal.\n@OutputOnly",
          "type": "boolean"
        },
        "proposalState": {
          "$ref": "#/definitions/ProposalState"
        },
        "sellerContacts": {
          "description": "Contact information for the seller.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInformation"
          }
        },
        "originatorRole": {
          "$ref": "#/definitions/OriginatorRole"
        },
        "privateAuctionId": {
          "description": "Private auction ID if this proposal is a private auction proposal.\n@OutputOnly",
          "type": "string"
        },
        "lastUpdaterOrCommentorRole": {
          "$ref": "#/definitions/LastUpdaterOrCommentorRole"
        },
        "buyerPrivateData": {
          "$ref": "#/definitions/PrivateData"
        }
      }
    },
    "ListClientsResponse": {
      "title": "ListClientsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientsRequest.pageToken\nfield in the subsequent call to the\naccounts.clients.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "clients": {
          "description": "The returned list of clients.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Client"
          }
        }
      }
    },
    "DealPauseStatus": {
      "title": "DealPauseStatus",
      "description": "Tracks which parties (if any) have paused a deal.\nThe deal is considered paused if either hasBuyerPaused or\nhasSellPaused is true.",
      "type": "object",
      "properties": {
        "buyerPauseReason": {
          "description": "The buyer's reason for pausing, if the buyer paused the deal.",
          "type": "string"
        },
        "hasBuyerPaused": {
          "description": "True, if the buyer has paused the deal unilaterally.",
          "type": "boolean"
        },
        "firstPausedBy": {
          "$ref": "#/definitions/FirstPausedBy"
        },
        "sellerPauseReason": {
          "description": "The seller's reason for pausing, if the seller paused the deal.",
          "type": "string"
        },
        "hasSellerPaused": {
          "description": "True, if the seller has paused the deal unilaterally.",
          "type": "boolean"
        }
      }
    },
    "ListClientUserInvitationsResponse": {
      "title": "ListClientUserInvitationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUserInvitationsRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.",
          "type": "string"
        },
        "invitations": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientUserInvitation"
          }
        }
      }
    },
    "LocationContext": {
      "title": "LocationContext",
      "description": "@OutputOnly The Geo criteria the restriction applies to.",
      "type": "object",
      "properties": {
        "geoCriteriaIds": {
          "description": "IDs representing the geo location for this context.\nPlease refer to the\n[geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv)\nfile for different geo criteria IDs.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "PlatformContext": {
      "title": "PlatformContext",
      "description": "@OutputOnly The type of platform the restriction applies to.",
      "type": "object",
      "properties": {
        "platforms": {
          "description": "The platforms this restriction applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Platform"
          }
        }
      }
    },
    "MetricValue": {
      "title": "MetricValue",
      "description": "A metric value, with an expected value and a variance; represents a count\nthat may be either exact or estimated (i.e. when sampled).",
      "type": "object",
      "properties": {
        "variance": {
          "description": "The variance (i.e. square of the standard deviation) of the metric value.\nIf value is exact, variance is 0.\nCan be used to calculate margin of error as a percentage of value, using\nthe following formula, where Z is the standard constant that depends on the\ndesired size of the confidence interval (e.g. for 90% confidence interval,\nuse Z = 1.645):\n\n  marginOfError = 100 * Z * sqrt(variance) / value",
          "type": "string"
        },
        "value": {
          "description": "The expected value of the metric.",
          "type": "string"
        }
      }
    },
    "ClientUser": {
      "title": "ClientUser",
      "description": "A client user is created under a client buyer and has restricted access to\nthe Marketplace and certain other sections of the Authorized Buyers UI based\non the role granted to the associated client buyer.\n\nThe only way a new client user can be created is via accepting an\nemail invitation\n(see the\naccounts.clients.invitations.create\nmethod).\n\nAll fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nwith which the user is associated; the\nbuyer must be a client of the current sponsor buyer.\nThe value of this field is ignored in an update operation.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "userId": {
          "description": "The unique numerical ID of the client user\nthat has accepted an invitation.\nThe value of this field is ignored in an update operation.",
          "type": "string"
        },
        "email": {
          "description": "User's email address. The value of this field\nis ignored in an update operation.",
          "type": "string"
        }
      }
    },
    "InventorySizeTargeting": {
      "title": "InventorySizeTargeting",
      "description": "Represents the size of an ad unit that can be targeted on an ad\nrequest. It only applies to Private Auction, AdX Preferred Deals and\nAuction Packages. This targeting does not apply to Programmatic Guaranteed\nand Preferred Deals in Ad Manager.",
      "type": "object",
      "properties": {
        "targetedInventorySizes": {
          "description": "A list of inventory sizes to be included.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdSize"
          }
        },
        "excludedInventorySizes": {
          "description": "A list of inventory sizes to be excluded.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdSize"
          }
        }
      }
    },
    "MobileApplicationTargeting": {
      "title": "MobileApplicationTargeting",
      "description": "Mobile application targeting settings.",
      "type": "object",
      "properties": {
        "firstPartyTargeting": {
          "$ref": "#/definitions/FirstPartyMobileApplicationTargeting"
        }
      }
    },
    "RemoveDealAssociationRequest": {
      "title": "RemoveDealAssociationRequest",
      "description": "A request for removing the association between a deal and a creative.",
      "type": "object",
      "properties": {
        "association": {
          "$ref": "#/definitions/CreativeDealAssociation"
        }
      }
    },
    "MarketplaceTargeting": {
      "title": "MarketplaceTargeting",
      "description": "Targeting represents different criteria that can be used by advertisers to\ntarget ad inventory. For example, they can choose to target ad requests only\nif the user is in the US.\nMultiple types of targeting are always applied as a logical AND, unless noted\notherwise.",
      "type": "object",
      "properties": {
        "geoTargeting": {
          "$ref": "#/definitions/CriteriaTargeting"
        },
        "inventorySizeTargeting": {
          "$ref": "#/definitions/InventorySizeTargeting"
        },
        "videoTargeting": {
          "$ref": "#/definitions/VideoTargeting"
        },
        "technologyTargeting": {
          "$ref": "#/definitions/TechnologyTargeting"
        },
        "placementTargeting": {
          "$ref": "#/definitions/PlacementTargeting"
        }
      }
    },
    "PrivateData": {
      "title": "PrivateData",
      "description": "Private data for buyer. (hidden from seller).",
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "A buyer or seller specified reference ID. This can be queried in the list\noperations (max-length: 1024 unicode code units).",
          "type": "string"
        }
      }
    },
    "Date": {
      "title": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RowDimensions": {
      "title": "RowDimensions",
      "description": "A response may include multiple rows, breaking down along various dimensions.\nEncapsulates the values of all dimensions for a given row.",
      "type": "object",
      "properties": {
        "timeInterval": {
          "$ref": "#/definitions/TimeInterval"
        },
        "publisherIdentifier": {
          "description": "The publisher identifier for this row, if a breakdown by\n[BreakdownDimension.PUBLISHER_IDENTIFIER](https://developers.google.com/authorized-buyers/apis/reference/rest/v2beta1/bidders.accounts.filterSets#FilterSet.BreakdownDimension)\nwas requested.",
          "type": "string"
        }
      }
    },
    "PlacementTargeting": {
      "title": "PlacementTargeting",
      "description": "Placement targeting information, e.g., URL, mobile applications.",
      "type": "object",
      "properties": {
        "mobileApplicationTargeting": {
          "description": "Mobile application targeting information in a deal.\nThis doesn't apply to Auction Packages.",
          "type": "object"
        },
        "urlTargeting": {
          "description": "URLs to be included/excluded.",
          "type": "object"
        }
      }
    },
    "Seller": {
      "title": "Seller",
      "description": "Reference to the seller on the proposal.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
      "type": "object",
      "properties": {
        "subAccountId": {
          "description": "Optional sub-account ID for the seller.",
          "type": "string"
        },
        "accountId": {
          "description": "The unique ID for the seller. The seller fills in this field.\nThe seller account ID is then available to buyer in the product.",
          "type": "string"
        }
      }
    },
    "UrlTargeting": {
      "title": "UrlTargeting",
      "description": "Represents a list of targeted and excluded URLs (e.g., google.com).\nFor Private Auction and AdX Preferred Deals, URLs are either included or\nexcluded.\nFor Programmatic Guaranteed and Preferred Deals, this doesn't\napply.",
      "type": "object",
      "properties": {
        "targetedUrls": {
          "description": "A list of URLs to be included.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedUrls": {
          "description": "A list of URLs to be excluded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DayPartTargeting": {
      "title": "DayPartTargeting",
      "description": "Specifies the day part targeting criteria.",
      "type": "object",
      "properties": {
        "dayParts": {
          "description": "A list of day part targeting criterion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayPart"
          }
        },
        "timeZoneType": {
          "$ref": "#/definitions/TimeZoneType"
        }
      }
    },
    "ListFilteredBidsResponse": {
      "title": "ListFilteredBidsResponse",
      "description": "Response message for listing all reasons that bids were filtered from the\nauction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "description": "List of rows, with counts of filtered bids aggregated by filtering reason\n(i.e. creative status).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreativeStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidsRequest.pageToken\nfield in the subsequent call to the filteredBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "SecurityContext": {
      "title": "SecurityContext",
      "description": "@OutputOnly A security context.",
      "type": "object",
      "properties": {
        "securities": {
          "description": "The security types in this context.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Security"
          }
        }
      }
    },
    "ListFilteredBidRequestsResponse": {
      "title": "ListFilteredBidRequestsResponse",
      "description": "Response message for listing all reasons that bid requests were filtered and\nnot sent to the buyer.",
      "type": "object",
      "properties": {
        "calloutStatusRows": {
          "description": "List of rows, with counts of filtered bid requests aggregated by callout\nstatus.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalloutStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidRequestsRequest.pageToken\nfield in the subsequent call to the filteredBidRequests.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ListCreativesResponse": {
      "title": "ListCreativesResponse",
      "description": "A response for listing creatives.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativesRequest.page_token\nfield in the subsequent call to `ListCreatives` method to retrieve the next\npage of results.",
          "type": "string"
        },
        "creatives": {
          "description": "The list of creatives.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Creative"
          }
        }
      }
    },
    "HtmlContent": {
      "title": "HtmlContent",
      "description": "HTML content for a creative.",
      "type": "object",
      "properties": {
        "height": {
          "description": "The height of the HTML snippet in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The width of the HTML snippet in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "snippet": {
          "description": "The HTML snippet that displays the ad when inserted in the web page.",
          "type": "string"
        }
      }
    },
    "Reason": {
      "title": "Reason",
      "description": "A specific filtering status and how many times it occurred.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The filtering status code. Please refer to the\n[creative-status-codes.txt](https://storage.googleapis.com/adx-rtb-dictionaries/creative-status-codes.txt)\nfile for different statuses.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "The number of times the creative was filtered for the status. The\ncount is aggregated across all publishers on the exchange.",
          "type": "string"
        }
      }
    },
    "ListProposalsResponse": {
      "title": "ListProposalsResponse",
      "description": "Response message for listing proposals.",
      "type": "object",
      "properties": {
        "proposals": {
          "description": "The list of proposals.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Proposal"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "VideoContent": {
      "title": "VideoContent",
      "description": "Video content for a creative.",
      "type": "object",
      "properties": {
        "videoUrl": {
          "description": "The URL to fetch a video ad.",
          "type": "string"
        },
        "videoVastXml": {
          "description": "The contents of a VAST document for a video ad.\nThis document should conform to the VAST 2.0 or 3.0 standard.",
          "type": "string"
        }
      }
    },
    "Deal": {
      "title": "Deal",
      "description": "A deal represents a segment of inventory for displaying ads on.\nA proposal can contain multiple deals. A deal contains the terms and targeting information that\nis used for serving.",
      "type": "object",
      "properties": {
        "createProductId": {
          "description": "The product ID from which this deal was created.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string"
        },
        "creativeSafeFrameCompatibility": {
          "$ref": "#/definitions/CreativeSafeFrameCompatibility"
        },
        "isSetupComplete": {
          "description": "True, if the buyside inventory setup is complete for this deal.\n@OutputOnly",
          "type": "boolean"
        },
        "sellerContacts": {
          "description": "Seller contact information for the deal.\n@OutputOnly",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createProductRevision": {
          "description": "Optional revision number of the product that the deal was created from.\nIf present on create, and the server `product_revision` has advanced sinced\nthe passed-in `create_product_revision`, an `ABORTED` error will be\nreturned.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string"
        },
        "availableStartTime": {
          "description": "Optional proposed flight start time of the deal.\nThis will generally be stored in the granularity of one second since deal serving\nstarts at seconds boundary. Any time specified with more granularity\n(e.g., in milliseconds) will be truncated towards the start of time in seconds.",
          "type": "string"
        },
        "createTime": {
          "description": "The time of the deal creation.\n@OutputOnly",
          "type": "string"
        },
        "dealTerms": {
          "description": "The negotiable terms of the deal.",
          "type": "object"
        },
        "targeting": {
          "description": "Specifies the subset of inventory targeted by the deal.\n@OutputOnly",
          "type": "object"
        },
        "externalDealId": {
          "description": "The external deal ID assigned to this deal once the deal is finalized.\nThis is the deal ID that shows up in serving/reporting etc.\n@OutputOnly",
          "type": "string"
        },
        "deliveryControl": {
          "description": "The set of fields around delivery control that are interesting for a buyer\nto see but are non-negotiable. These are set by the publisher.",
          "type": "object"
        },
        "creativePreApprovalPolicy": {
          "$ref": "#/definitions/CreativePreApprovalPolicy"
        },
        "creativeRestrictions": {
          "description": "Restricitions about the creatives associated with the deal (i.e., size)\nThis is available for Programmatic Guaranteed/Preferred Deals in Ad Manager.\n@OutputOnly",
          "type": "object"
        },
        "description": {
          "description": "Description for the deal terms.",
          "type": "string"
        },
        "dealServingMetadata": {
          "description": "Metadata about the serving status of this deal.\n@OutputOnly",
          "type": "object"
        },
        "programmaticCreativeSource": {
          "$ref": "#/definitions/ProgrammaticCreativeSource"
        },
        "buyerPrivateData": {
          "description": "Buyer private data (hidden from seller).",
          "type": "object"
        },
        "displayName": {
          "description": "The name of the deal.",
          "type": "string"
        },
        "webPropertyCode": {
          "description": "The web property code for the seller copied over from the product.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the deal was last updated.\n@OutputOnly",
          "type": "string"
        },
        "targetingCriterion": {
          "description": "The shared targeting visible to buyers and sellers. Each shared\ntargeting entity is AND'd together.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "dealId": {
          "description": "A unique deal ID for the deal (server-assigned).\n@OutputOnly",
          "type": "string"
        },
        "proposalId": {
          "description": "ID of the proposal that this deal is part of.\n@OutputOnly",
          "type": "string"
        },
        "availableEndTime": {
          "description": "Proposed flight end time of the deal.\nThis will generally be stored in a granularity of a second.\nA value is not required for Private Auction deals or Preferred Deals.",
          "type": "string"
        },
        "syndicationProduct": {
          "$ref": "#/definitions/SyndicationProduct"
        }
      }
    },
    "ImpressionMetricsRow": {
      "title": "ImpressionMetricsRow",
      "description": "The set of metrics that are measured in numbers of impressions, representing\nhow many impressions with the specified dimension values were considered\neligible at each stage of the bidding funnel.",
      "type": "object",
      "properties": {
        "successfulResponses": {
          "$ref": "#/definitions/MetricValue"
        },
        "rowDimensions": {
          "$ref": "#/definitions/RowDimensions"
        },
        "availableImpressions": {
          "$ref": "#/definitions/MetricValue"
        },
        "inventoryMatches": {
          "$ref": "#/definitions/MetricValue"
        },
        "bidRequests": {
          "$ref": "#/definitions/MetricValue"
        },
        "responsesWithBids": {
          "$ref": "#/definitions/MetricValue"
        }
      }
    },
    "CreativeSpecification": {
      "title": "CreativeSpecification",
      "description": "Represents information for a creative that is associated with a Programmatic\nGuaranteed/Preferred Deal in Ad Manager.",
      "type": "object",
      "properties": {
        "creativeSize": {
          "$ref": "#/definitions/AdSize"
        },
        "creativeCompanionSizes": {
          "description": "Companion sizes may be filled in only when this is a video creative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdSize"
          }
        }
      }
    },
    "ListBidResponseErrorsResponse": {
      "title": "ListBidResponseErrorsResponse",
      "description": "Response message for listing all reasons that bid responses resulted in an\nerror.",
      "type": "object",
      "properties": {
        "calloutStatusRows": {
          "description": "List of rows, with counts of bid responses aggregated by callout status.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalloutStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponseErrorsRequest.pageToken\nfield in the subsequent call to the bidResponseErrors.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ListPublisherProfilesResponse": {
      "title": "ListPublisherProfilesResponse",
      "description": "Response message for profiles visible to the buyer.",
      "type": "object",
      "properties": {
        "publisherProfiles": {
          "description": "The list of matching publisher profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublisherProfile"
          }
        },
        "nextPageToken": {
          "description": "List pagination support",
          "type": "string"
        }
      }
    },
    "RealtimeTimeRange": {
      "title": "RealtimeTimeRange",
      "description": "An open-ended realtime time range specified by the start timestamp.\nFor filter sets that specify a realtime time range RTB metrics continue to\nbe aggregated throughout the lifetime of the filter set.",
      "type": "object",
      "properties": {
        "startTimestamp": {
          "description": "The start timestamp of the real-time RTB metrics aggregation.",
          "type": "string"
        }
      }
    },
    "CreativeSize": {
      "title": "CreativeSize",
      "description": "Specifies the size of the creative.",
      "type": "object",
      "properties": {
        "nativeTemplate": {
          "$ref": "#/definitions/NativeTemplate"
        },
        "allowedFormats": {
          "description": "What formats are allowed by the publisher.\nIf this repeated field is empty then all formats are allowed.\nFor example, if this field contains AllowedFormatType.AUDIO then the\npublisher only allows an audio ad (without any video).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedFormat"
          }
        },
        "size": {
          "$ref": "#/definitions/Size"
        },
        "companionSizes": {
          "description": "For video creatives specifies the sizes of companion ads (if present).\nCompanion sizes may be filled in only when creative_size_type = VIDEO",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Size"
          }
        },
        "skippableAdType": {
          "$ref": "#/definitions/SkippableAdType"
        },
        "creativeSizeType": {
          "$ref": "#/definitions/CreativeSizeType"
        }
      }
    },
    "NonBillableWinningBidStatusRow": {
      "title": "NonBillableWinningBidStatusRow",
      "description": "The number of winning bids with the specified dimension values for which the\nbuyer was not billed, as described by the specified status.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status2"
        },
        "rowDimensions": {
          "$ref": "#/definitions/RowDimensions"
        },
        "bidCount": {
          "$ref": "#/definitions/MetricValue"
        }
      }
    },
    "NonGuaranteedFixedPriceTerms": {
      "title": "NonGuaranteedFixedPriceTerms",
      "description": "Terms for Preferred Deals. Note that Preferred Deals cannot be created via\nthe API at this time, but can be returned in a get or list request.",
      "type": "object",
      "properties": {
        "fixedPrices": {
          "description": "Fixed price for the specified buyer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePerBuyer"
          }
        }
      }
    },
    "ListProductsResponse": {
      "title": "ListProductsResponse",
      "description": "Response message for listing products visible to the buyer.",
      "type": "object",
      "properties": {
        "products": {
          "description": "The list of matching products at their head revision number.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "nextPageToken": {
          "description": "List pagination support.",
          "type": "string"
        }
      }
    },
    "AbsoluteDateRange": {
      "title": "AbsoluteDateRange",
      "description": "An absolute date range, specified by its start date and end date.\nThe supported range of dates begins 30 days before today and ends today.\nValidity checked upon filter set creation. If a filter set with an absolute\ndate range is run at a later date more than 30 days after start_date, it will\nfail.",
      "type": "object",
      "properties": {
        "startDate": {
          "$ref": "#/definitions/Date"
        },
        "endDate": {
          "$ref": "#/definitions/Date"
        }
      }
    },
    "Price": {
      "title": "Price",
      "description": "Represents a price and a pricing type for a product / deal.",
      "type": "object",
      "properties": {
        "pricingType": {
          "$ref": "#/definitions/PricingType"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "PauseProposalRequest": {
      "title": "PauseProposalRequest",
      "description": "Request message to pause serving for an already-finalized proposal.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the proposal is being paused.\nThis human readable message will be displayed in the seller's UI.\n(Max length: 100 unicode code units.)",
          "type": "string"
        }
      }
    },
    "WatchCreativeRequest": {
      "title": "WatchCreativeRequest",
      "description": "A request for watching changes to creative Status.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The Pub/Sub topic to publish notifications to.\nThis topic must already exist and must give permission to\nad-exchange-buyside-reports@google.com to write to the topic.\nThis should be the full resource name in\n\"projects/{project_id}/topics/{topic_id}\" format.",
          "type": "string"
        }
      }
    },
    "FilteredBidCreativeRow": {
      "title": "FilteredBidCreativeRow",
      "description": "The number of filtered bids with the specified dimension values that have the\nspecified creative.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "$ref": "#/definitions/RowDimensions"
        },
        "bidCount": {
          "$ref": "#/definitions/MetricValue"
        },
        "creativeId": {
          "description": "The ID of the creative.",
          "type": "string"
        }
      }
    },
    "NativeContent": {
      "title": "NativeContent",
      "description": "Native content for a creative.",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image"
        },
        "clickTrackingUrl": {
          "description": "The URL to use for click tracking.",
          "type": "string"
        },
        "advertiserName": {
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative.",
          "type": "string"
        },
        "storeUrl": {
          "description": "The URL to the app store to purchase/download the promoted app.",
          "type": "string"
        },
        "headline": {
          "description": "A short title for the ad.",
          "type": "string"
        },
        "appIcon": {
          "$ref": "#/definitions/Image"
        },
        "callToAction": {
          "description": "A label for the button that the user is supposed to click.",
          "type": "string"
        },
        "body": {
          "description": "A long description of the ad.",
          "type": "string"
        },
        "starRating": {
          "description": "The app rating in the app store. Must be in the range [0-5].",
          "type": "number",
          "format": "double"
        },
        "videoUrl": {
          "description": "The URL to fetch a native video ad.",
          "type": "string"
        },
        "clickLinkUrl": {
          "description": "The URL that the browser/SDK will load when the user clicks the ad.",
          "type": "string"
        },
        "logo": {
          "$ref": "#/definitions/Image"
        },
        "priceDisplayText": {
          "description": "The price of the promoted app including currency info.",
          "type": "string"
        }
      }
    },
    "ListBidResponsesWithoutBidsResponse": {
      "title": "ListBidResponsesWithoutBidsResponse",
      "description": "Response message for listing all reasons that bid responses were considered\nto have no applicable bids.",
      "type": "object",
      "properties": {
        "bidResponseWithoutBidsStatusRows": {
          "description": "List of rows, with counts of bid responses without bids aggregated by\nstatus.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BidResponseWithoutBidsStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidResponsesWithoutBidsRequest.pageToken\nfield in the subsequent call to the bidResponsesWithoutBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ServingContext": {
      "title": "ServingContext",
      "description": "The serving context for this restriction.",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/LocationContext"
        },
        "auctionType": {
          "$ref": "#/definitions/AuctionContext"
        },
        "all": {
          "$ref": "#/definitions/All"
        },
        "appType": {
          "$ref": "#/definitions/AppContext"
        },
        "securityType": {
          "$ref": "#/definitions/SecurityContext"
        },
        "platform": {
          "$ref": "#/definitions/PlatformContext"
        }
      }
    },
    "Image": {
      "title": "Image",
      "description": "A large image.",
      "type": "object",
      "properties": {
        "height": {
          "description": "Image height in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "Image width in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "The URL of the image.",
          "type": "string"
        }
      }
    },
    "FirstPartyMobileApplicationTargeting": {
      "title": "FirstPartyMobileApplicationTargeting",
      "description": "Publisher owned apps to be targeted or excluded by the publisher to\ndisplay the ads in.",
      "type": "object",
      "properties": {
        "targetedAppIds": {
          "description": "A list of application IDs to be included.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedAppIds": {
          "description": "A list of application IDs to be excluded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListFilterSetsResponse": {
      "title": "ListFilterSetsResponse",
      "description": "Response message for listing filter sets.",
      "type": "object",
      "properties": {
        "filterSets": {
          "description": "The filter sets belonging to the buyer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterSet"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListFilterSetsRequest.pageToken\nfield in the subsequent call to the\naccounts.filterSets.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "BidResponseWithoutBidsStatusRow": {
      "title": "BidResponseWithoutBidsStatusRow",
      "description": "The number of impressions with the specified dimension values that were\nconsidered to have no applicable bids, as described by the specified status.",
      "type": "object",
      "properties": {
        "impressionCount": {
          "description": "The number of impressions for which there was a bid response with the\nspecified status.",
          "type": "object"
        },
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "type": "object"
        }
      }
    },
    "ClientUserInvitation": {
      "title": "ClientUserInvitation",
      "description": "An invitation for a new client user to get access to the Authorized Buyers\nUI. All fields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address to which the invitation is sent. Email\naddresses should be unique among all client users under each sponsor\nbuyer.",
          "type": "string"
        },
        "clientAccountId": {
          "description": "Numerical account ID of the client buyer\nthat the invited user is associated with.\nThe value of this field is ignored in create operations.",
          "type": "string"
        },
        "invitationId": {
          "description": "The unique numerical ID of the invitation that is sent to the user.\nThe value of this field is ignored in create operations.",
          "type": "string"
        }
      }
    },
    "PricePerBuyer": {
      "title": "PricePerBuyer",
      "description": "Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in\na product can become 0 or 1 deals. To check if there is a PricePerBuyer for\na particular buyer or buyer/advertiser pair, we look for the most specific\nmatching rule - we first look for a rule matching the buyer and advertiser,\nnext a rule with the buyer but an empty advertiser list, and otherwise look\nfor a matching rule where no buyer is set.",
      "type": "object",
      "properties": {
        "advertiserIds": {
          "description": "The list of advertisers for this price when associated with this buyer.\nIf empty, all advertisers with this buyer pay this price.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buyer": {
          "description": "The buyer who will pay this price. If unset, all buyers can pay this price\n(if the\nadvertisers match, and there's no more specific rule matching the buyer).",
          "type": "object"
        },
        "price": {
          "description": "The specified price.",
          "type": "object"
        }
      }
    },
    "ListCreativeStatusBreakdownByDetailResponse": {
      "title": "ListCreativeStatusBreakdownByDetailResponse",
      "description": "Response message for listing all details associated with a given filtered bid\nreason.",
      "type": "object",
      "properties": {
        "filteredBidDetailRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby detail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteredBidDetailRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByDetailRequest.pageToken\nfield in the subsequent call to the filteredBids.details.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "detailType": {
          "$ref": "#/definitions/DetailType"
        }
      }
    },
    "ListClientUsersResponse": {
      "title": "ListClientUsersResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListClientUsersRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.",
          "type": "string"
        },
        "users": {
          "description": "The returned list of client users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientUser"
          }
        }
      }
    },
    "Money": {
      "title": "Money",
      "description": "The actual price with currency specified.",
      "type": "object",
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "units": {
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      }
    },
    "PublisherProfile": {
      "title": "PublisherProfile",
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nRepresents a publisher profile in Marketplace.\n\nAll fields are read only. All string fields are free-form text entered by the publisher\nunless noted otherwise.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the publisher profile.",
          "type": "string"
        },
        "publisherProfileId": {
          "description": "Unique ID for publisher profile.",
          "type": "string"
        },
        "buyerPitchStatement": {
          "description": "Statement explaining what's unique about publisher's business, and why buyers should\npartner with the publisher.",
          "type": "string"
        },
        "topHeadlines": {
          "description": "Up to three key metrics and rankings. Max 100 characters each.\nFor example \"#1 Mobile News Site for 20 Straight Months\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "programmaticDealsContact": {
          "description": "Contact information for programmatic deals. This is free text entered by the publisher\nand may include information like names, phone numbers and email addresses.",
          "type": "string"
        },
        "directDealsContact": {
          "description": "Contact information for direct reservation deals. This is free text entered by the publisher\nand may include information like names, phone numbers and email addresses.",
          "type": "string"
        },
        "domains": {
          "description": "The list of domains represented in this publisher profile. Empty if this is a parent profile.\nThese are top private domains, meaning that these will not contain a string like\n\"photos.google.co.uk/123\", but will instead contain \"google.co.uk\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "samplePageUrl": {
          "description": "URL to a sample content page.",
          "type": "string"
        },
        "logoUrl": {
          "description": "A Google public URL to the logo for this publisher profile. The logo is stored as\na PNG, JPG, or GIF image.",
          "type": "string"
        },
        "mediaKitUrl": {
          "description": "URL to additional marketing and sales materials.",
          "type": "string"
        },
        "seller": {
          "description": "Seller of the publisher profile.",
          "type": "object"
        },
        "googlePlusUrl": {
          "description": "URL to publisher's Google+ page.",
          "type": "string"
        },
        "overview": {
          "description": "Overview of the publisher.",
          "type": "string"
        },
        "audienceDescription": {
          "description": "Description on the publisher's audience.",
          "type": "string"
        },
        "rateCardInfoUrl": {
          "description": "URL to a publisher rate card.",
          "type": "string"
        }
      }
    },
    "CreativeDealAssociation": {
      "title": "CreativeDealAssociation",
      "description": "The association between a creative and a deal that should be removed.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account the creative belongs to.",
          "type": "string"
        },
        "creativeId": {
          "description": "The ID of the creative associated with the deal.",
          "type": "string"
        },
        "dealsId": {
          "description": "The externalDealId for the deal associated with the creative.",
          "type": "string"
        }
      }
    },
    "FilteringStats": {
      "title": "FilteringStats",
      "description": "@OutputOnly Filtering reasons for this creative during a period of a single\nday (from midnight to midnight Pacific).",
      "type": "object",
      "properties": {
        "reasons": {
          "description": "The set of filtering reasons for this date.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reason"
          }
        },
        "date": {
          "$ref": "#/definitions/Date"
        }
      }
    },
    "Creative": {
      "title": "Creative",
      "description": "A creative and its classification data.\n\nNext ID: 39",
      "type": "object",
      "properties": {
        "impressionTrackingUrls": {
          "description": "The set of URLs to be called to record an impression.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "html": {
          "description": "An HTML creative.",
          "type": "object"
        },
        "dealsStatus": {
          "$ref": "#/definitions/DealsStatus"
        },
        "detectedProductCategories": {
          "description": "@OutputOnly Detected product categories, if any.\nSee the ad-product-categories.txt file in the technical documentation\nfor a list of IDs.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "openAuctionStatus": {
          "$ref": "#/definitions/OpenAuctionStatus"
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative.",
          "type": "string"
        },
        "declaredClickThroughUrls": {
          "description": "The set of declared destination URLs for the creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedAdvertiserIds": {
          "description": "@OutputOnly Detected advertiser IDs, if any.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedDomains": {
          "description": "@OutputOnly\nThe detected domains for this creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filteringStats": {
          "description": "@OutputOnly The filtering stats for this creative.",
          "type": "object"
        },
        "attributes": {
          "description": "All attributes for the ads that may be shown from this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "apiUpdateTime": {
          "description": "@OutputOnly The last update timestamp of the creative via API.",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "@OutputOnly\nThe detected languages for this creative. The order is arbitrary. The codes\nare 2 or 5 characters and are documented at\nhttps://developers.google.com/adwords/api/docs/appendix/languagecodes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creativeId": {
          "description": "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "accountId": {
          "description": "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
          "type": "string"
        },
        "native": {
          "description": "A native creative.",
          "type": "object"
        },
        "video": {
          "description": "A video creative.",
          "type": "object"
        },
        "servingRestrictions": {
          "description": "@OutputOnly The granular status of this ad in specific contexts.\nA context here relates to where something ultimately serves (for example,\na physical location, a platform, an HTTPS vs HTTP request, or the type\nof auction).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "agencyId": {
          "description": "The agency ID for this creative.",
          "type": "string"
        },
        "clickThroughUrls": {
          "description": "The set of destination URLs for the creative.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedSensitiveCategories": {
          "description": "@OutputOnly Detected sensitive categories, if any.\nSee the ad-sensitive-categories.txt file in the technical documentation for\na list of IDs. You should use these IDs along with the\nexcluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "adChoicesDestinationUrl": {
          "description": "The link to AdChoices destination page.",
          "type": "string"
        },
        "restrictedCategories": {
          "description": "All restricted categories for the ads that may be shown from this creative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RestrictedCategory"
          }
        },
        "corrections": {
          "description": "@OutputOnly Shows any corrections that were applied to this creative.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "version": {
          "description": "@OutputOnly The version of this creative.",
          "type": "integer",
          "format": "int32"
        },
        "vendorIds": {
          "description": "All vendor IDs for the ads that may be shown from this creative.\nSee https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt\nfor possible values.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "NonGuaranteedAuctionTerms": {
      "title": "NonGuaranteedAuctionTerms",
      "description": "Terms for Private Auctions. Note that Private Auctions can be created only\nby the seller, but they can be returned in a get or list request.",
      "type": "object",
      "properties": {
        "reservePricesPerBuyer": {
          "description": "Reserve price for the specified buyer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePerBuyer"
          }
        },
        "autoOptimizePrivateAuction": {
          "description": "True if open auction buyers are allowed to compete with invited buyers\nin this private auction.",
          "type": "boolean"
        }
      }
    },
    "DeliveryControl": {
      "title": "DeliveryControl",
      "description": "Message contains details about how the deals will be paced.",
      "type": "object",
      "properties": {
        "frequencyCaps": {
          "description": "Specifies any frequency caps.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrequencyCap"
          }
        },
        "creativeBlockingLevel": {
          "$ref": "#/definitions/CreativeBlockingLevel"
        },
        "deliveryRateType": {
          "$ref": "#/definitions/DeliveryRateType"
        }
      }
    },
    "Client": {
      "title": "Client",
      "description": "A client resource represents a client buyer&mdash;an agency, a brand, or an\nadvertiser customer of the sponsor buyer. Users associated with the client\nbuyer have restricted access to the Marketplace and certain other sections of\nthe Authorized Buyers UI based on the role granted to the client buyer. All\nfields are required unless otherwise specified.",
      "type": "object",
      "properties": {
        "clientAccountId": {
          "description": "The globally-unique numerical ID of the client.\nThe value of this field is ignored in create and update operations.",
          "type": "string"
        },
        "entityName": {
          "description": "The name of the entity. This field is automatically fetched based on\nthe type and ID.\nThe value of this field is ignored in create and update operations.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "partnerClientId": {
          "description": "Optional arbitrary unique identifier of this client buyer from the\nstandpoint of its Ad Exchange sponsor buyer.\n\nThis field can be used to associate a client buyer with the identifier\nin the namespace of its sponsor buyer, lookup client buyers by that\nidentifier and verify whether an Ad Exchange counterpart of a given client\nbuyer already exists.\n\nIf present, must be unique among all the client buyers for its\nAd Exchange sponsor buyer.",
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "clientName": {
          "description": "Name used to represent this client to publishers.\nYou may have multiple clients that map to the same entity,\nbut for each client the combination of `clientName` and entity\nmust be unique.\nYou can specify this field as empty.",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "visibleToSeller": {
          "description": "Whether the client buyer will be visible to sellers.",
          "type": "boolean"
        },
        "entityId": {
          "description": "Numerical identifier of the client entity.\nThe entity can be an advertiser, a brand, or an agency.\nThis identifier is unique among all the entities with the same type.\n\nA list of all known advertisers with their identifiers is available in the\n[advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)\nfile.\n\nA list of all known brands with their identifiers is available in the\n[brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)\nfile.\n\nA list of all known agencies with their identifiers is available in the\n[agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)\nfile.",
          "type": "string"
        }
      }
    },
    "ListCreativeStatusBreakdownByCreativeResponse": {
      "title": "ListCreativeStatusBreakdownByCreativeResponse",
      "description": "Response message for listing all creatives associated with a given filtered\nbid reason.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByCreativeRequest.pageToken\nfield in the subsequent call to the filteredBids.creatives.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "filteredBidCreativeRows": {
          "description": "List of rows, with counts of bids with a given creative status aggregated\nby creative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteredBidCreativeRow"
          }
        }
      }
    },
    "Correction": {
      "title": "Correction",
      "description": "@OutputOnly Shows any corrections that were applied to this creative.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about what was corrected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "contexts": {
          "description": "The contexts for the correction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServingContext"
          }
        }
      }
    },
    "FilterSet": {
      "title": "FilterSet",
      "description": "A set of filters that is applied to a request for data.\nWithin a filter set, an AND operation is performed across the filters\nrepresented by each field. An OR operation is performed across the filters\nrepresented by the multiple values of a repeated field, e.g.,\n\"format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR\nseller_network_id=56)\".",
      "type": "object",
      "properties": {
        "name": {
          "description": "A user-defined name of the filter set. Filter set names must be unique\nglobally and match one of the patterns:\n\n- `bidders/*/filterSets/*` (for accessing bidder-level troubleshooting\ndata)\n- `bidders/*/accounts/*/filterSets/*` (for accessing account-level\ntroubleshooting data)\n\nThis field is required in create operations.",
          "type": "string"
        },
        "sellerNetworkIds": {
          "description": "For Authorized Buyers only.\nThe list of IDs of the seller (publisher) networks on which to filter;\nmay be empty. The filters represented by multiple seller network IDs are\nORed together (i.e., if non-empty, results must match any one of the\npublisher networks). See\n[seller-network-ids](https://developers.google.com/authorized-buyers/rtb/downloads/seller-network-ids)\nfile for the set of existing seller network IDs.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "absoluteDateRange": {
          "description": "An absolute date range, defined by a start date and an end date.\nInterpreted relative to Pacific time zone.",
          "type": "object"
        },
        "breakdownDimensions": {
          "description": "The set of dimensions along which to break down the response; may be empty.\nIf multiple dimensions are requested, the breakdown is along the Cartesian\nproduct of the requested dimensions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BreakdownDimension"
          }
        },
        "environment": {
          "$ref": "#/definitions/Environment"
        },
        "dealId": {
          "description": "The ID of the deal on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e., one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "type": "string"
        },
        "publisherIdentifiers": {
          "description": "For Open Bidding partners only.\nThe list of publisher identifiers on which to filter; may be empty.\nThe filters represented by multiple publisher identifiers are ORed\ntogether.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeSeriesGranularity": {
          "$ref": "#/definitions/TimeSeriesGranularity"
        },
        "realtimeTimeRange": {
          "description": "An open-ended realtime time range, defined by the aggregation start\ntimestamp.",
          "type": "object"
        },
        "formats": {
          "description": "The list of formats on which to filter; may be empty. The filters\nrepresented by multiple formats are ORed together (i.e., if non-empty,\nresults must match any one of the formats).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Format"
          }
        },
        "creativeId": {
          "description": "The ID of the creative on which to filter; optional. This field may be set\nonly for a filter set that accesses account-level troubleshooting data,\ni.e., one whose name matches the `bidders/*/accounts/*/filterSets/*`\npattern.",
          "type": "string"
        },
        "platforms": {
          "description": "The list of platforms on which to filter; may be empty. The filters\nrepresented by multiple platforms are ORed together (i.e., if non-empty,\nresults must match any one of the platforms).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Platform1"
          }
        },
        "relativeDateRange": {
          "description": "A relative date range, defined by an offset from today and a duration.\nInterpreted relative to Pacific time zone.",
          "type": "object"
        }
      }
    },
    "CalloutStatusRow": {
      "title": "CalloutStatusRow",
      "description": "The number of impressions with the specified dimension values where the\ncorresponding bid request or bid response was not successful, as described by\nthe specified callout status.",
      "type": "object",
      "properties": {
        "impressionCount": {
          "description": "The number of impressions for which there was a bid request or bid response\nwith the specified callout status.",
          "type": "object"
        },
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "type": "object"
        },
        "calloutStatusId": {
          "description": "The ID of the callout status.\nSee [callout-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/callout-status-codes).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListDealAssociationsResponse": {
      "title": "ListDealAssociationsResponse",
      "description": "A response for listing creative and deal associations",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListDealAssociationsRequest.page_token\nfield in the subsequent call to 'ListDealAssociation' method to retrieve\nthe next page of results.",
          "type": "string"
        },
        "associations": {
          "description": "The list of associations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreativeDealAssociation"
          }
        }
      }
    },
    "Disapproval": {
      "title": "Disapproval",
      "description": "@OutputOnly The reason and details for a disapproval.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Additional details about the reason for disapproval.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "$ref": "#/definitions/Reason1"
        }
      }
    },
    "ServingRestriction": {
      "title": "ServingRestriction",
      "description": "@OutputOnly A representation of the status of an ad in a\nspecific context. A context here relates to where something ultimately serves\n(for example, a user or publisher geo, a platform, an HTTPS vs HTTP request,\nor the type of auction).",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status4"
        },
        "disapprovalReasons": {
          "description": "Any disapprovals bound to this restriction.\nOnly present if status=DISAPPROVED.\nCan be used to filter the response of the\ncreatives.list\nmethod.\nDeprecated; please use\ndisapproval\nfield instead.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disapproval"
          }
        },
        "contexts": {
          "description": "The contexts for the restriction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServingContext"
          }
        },
        "disapproval": {
          "$ref": "#/definitions/Disapproval"
        }
      }
    },
    "AcceptProposalRequest": {
      "title": "AcceptProposalRequest",
      "description": "Request to accept a proposal.",
      "type": "object",
      "properties": {
        "proposalRevision": {
          "description": "The last known client revision number of the proposal.",
          "type": "string"
        }
      }
    },
    "Buyer": {
      "title": "Buyer",
      "description": "Reference to the buyer that will get billed for this proposal.\n@OutputOnly",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Authorized Buyers account ID of the buyer.",
          "type": "string"
        }
      }
    },
    "Note": {
      "title": "Note",
      "description": "A proposal may be associated to several notes.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The timestamp for when this note was created.\n@OutputOnly",
          "type": "string"
        },
        "creatorRole": {
          "$ref": "#/definitions/CreatorRole"
        },
        "note": {
          "description": "The actual note to attach.\n(max-length: 1024 unicode code units)\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
          "type": "string"
        },
        "proposalRevision": {
          "description": "The revision number of the proposal when the note is created.\n@OutputOnly",
          "type": "string"
        },
        "noteId": {
          "description": "The unique ID for the note.\n@OutputOnly",
          "type": "string"
        }
      }
    },
    "ContactInformation": {
      "title": "ContactInformation",
      "description": "Contains information on how a buyer or seller can be reached.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address for the contact.",
          "type": "string"
        },
        "name": {
          "description": "The name of the contact.",
          "type": "string"
        }
      }
    },
    "FrequencyCap": {
      "title": "FrequencyCap",
      "description": "Frequency cap.",
      "type": "object",
      "properties": {
        "maxImpressions": {
          "description": "The maximum number of impressions that can be served to a user within the\nspecified time period.",
          "type": "integer",
          "format": "int32"
        },
        "timeUnitType": {
          "$ref": "#/definitions/TimeUnitType"
        },
        "numTimeUnits": {
          "description": "The amount of time, in the units specified by time_unit_type. Defines the\namount of time over which impressions per user are counted and capped.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DealTerms": {
      "title": "DealTerms",
      "description": "The deal terms specify the details of a Product/deal. They specify things\nlike price per buyer, the type of pricing model (e.g., fixed price, auction)\nand expected impressions from the publisher.",
      "type": "object",
      "properties": {
        "guaranteedFixedPriceTerms": {
          "$ref": "#/definitions/GuaranteedFixedPriceTerms"
        },
        "description": {
          "description": "Publisher provided description for the terms.",
          "type": "string"
        },
        "nonGuaranteedFixedPriceTerms": {
          "$ref": "#/definitions/NonGuaranteedFixedPriceTerms"
        },
        "estimatedImpressionsPerDay": {
          "description": "Non-binding estimate of the impressions served per day.\nCan be set by buyer or seller.",
          "type": "string"
        },
        "nonGuaranteedAuctionTerms": {
          "$ref": "#/definitions/NonGuaranteedAuctionTerms"
        },
        "estimatedGrossSpend": {
          "$ref": "#/definitions/Price"
        },
        "brandingType": {
          "$ref": "#/definitions/BrandingType"
        },
        "sellerTimeZone": {
          "description": "The time zone name. For deals with Cost Per Day billing, defines the\ntime zone used to mark the boundaries of a day. It should be an\nIANA TZ name, such as \"America/Los_Angeles\". For more information,\nsee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
          "type": "string"
        }
      }
    },
    "AddNoteRequest": {
      "title": "AddNoteRequest",
      "description": "Request message for adding a note to a given proposal.",
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/Note"
        }
      }
    },
    "AppContext": {
      "title": "AppContext",
      "description": "Matches impressions for a particular app type.",
      "type": "object",
      "properties": {
        "appTypes": {
          "description": "The app types this restriction applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppType"
          }
        }
      }
    },
    "ListBidMetricsResponse": {
      "title": "ListBidMetricsResponse",
      "description": "Response message for listing the metrics that are measured in number of bids.",
      "type": "object",
      "properties": {
        "bidMetricsRows": {
          "description": "List of rows, each containing a set of bid metrics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BidMetricsRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListBidMetricsRequest.pageToken\nfield in the subsequent call to the bidMetrics.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ListLosingBidsResponse": {
      "title": "ListLosingBidsResponse",
      "description": "Response message for listing all reasons that bids lost in the auction.",
      "type": "object",
      "properties": {
        "creativeStatusRows": {
          "description": "List of rows, with counts of losing bids aggregated by loss reason (i.e.\ncreative status).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreativeStatusRow"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListLosingBidsRequest.pageToken\nfield in the subsequent call to the losingBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ListNonBillableWinningBidsResponse": {
      "title": "ListNonBillableWinningBidsResponse",
      "description": "Response message for listing all reasons for which a buyer was not billed for\na winning bid.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListNonBillableWinningBidsRequest.pageToken\nfield in the subsequent call to the nonBillableWinningBids.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "nonBillableWinningBidStatusRows": {
          "description": "List of rows, with counts of bids not billed aggregated by reason.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonBillableWinningBidStatusRow"
          }
        }
      }
    },
    "TargetingValue": {
      "title": "TargetingValue",
      "description": "A polymorphic targeting value used as part of Shared Targeting.",
      "type": "object",
      "properties": {
        "stringValue": {
          "description": "The string value to include/exclude.",
          "type": "string"
        },
        "longValue": {
          "description": "The long value to include/exclude.",
          "type": "string"
        },
        "dayPartTargetingValue": {
          "$ref": "#/definitions/DayPartTargeting"
        },
        "creativeSizeValue": {
          "$ref": "#/definitions/CreativeSize"
        }
      }
    },
    "AuctionContext": {
      "title": "AuctionContext",
      "description": "Matches impressions for a particular auction type.",
      "type": "object",
      "properties": {
        "auctionTypes": {
          "description": "The auction types this restriction applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuctionType"
          }
        }
      }
    },
    "DealServingMetadata": {
      "title": "DealServingMetadata",
      "description": "Message captures metadata about the serving status of a deal.",
      "type": "object",
      "properties": {
        "dealPauseStatus": {
          "$ref": "#/definitions/DealPauseStatus"
        }
      }
    },
    "ListImpressionMetricsResponse": {
      "title": "ListImpressionMetricsResponse",
      "description": "Response message for listing the metrics that are measured in number of\nimpressions.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.\nPass this value in the\nListImpressionMetricsRequest.pageToken\nfield in the subsequent call to the impressionMetrics.list\nmethod to retrieve the next page of results.",
          "type": "string"
        },
        "impressionMetricsRows": {
          "description": "List of rows, each containing a set of impression metrics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImpressionMetricsRow"
          }
        }
      }
    },
    "BidMetricsRow": {
      "title": "BidMetricsRow",
      "description": "The set of metrics that are measured in numbers of bids, representing how\nmany bids with the specified dimension values were considered eligible at\neach stage of the bidding funnel;",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "type": "object"
        },
        "viewableImpressions": {
          "description": "The number of bids for which the corresponding impression was viewable (as\ndefined by Active View).",
          "type": "object"
        },
        "impressionsWon": {
          "description": "The number of bids that won an impression.",
          "type": "object"
        },
        "measurableImpressions": {
          "description": "The number of bids for which the corresponding impression was measurable\nfor viewability (as defined by Active View).",
          "type": "object"
        },
        "bids": {
          "description": "The number of bids that Ad Exchange received from the buyer.",
          "type": "object"
        },
        "billedImpressions": {
          "description": "The number of bids for which the buyer was billed.",
          "type": "object"
        },
        "bidsInAuction": {
          "description": "The number of bids that were permitted to compete in the auction.",
          "type": "object"
        }
      }
    },
    "CreativeStatusRow": {
      "title": "CreativeStatusRow",
      "description": "The number of bids with the specified dimension values that did not win the\nauction (either were filtered pre-auction or lost the auction), as described\nby the specified creative status.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "type": "object"
        },
        "creativeStatusId": {
          "description": "The ID of the creative status.\nSee [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).",
          "type": "integer",
          "format": "int32"
        },
        "bidCount": {
          "description": "The number of bids with the specified status.",
          "type": "object"
        }
      }
    },
    "GuaranteedFixedPriceTerms": {
      "title": "GuaranteedFixedPriceTerms",
      "description": "The terms for guaranteed fixed price deals.",
      "type": "object",
      "properties": {
        "guaranteedLooks": {
          "description": "Count of guaranteed looks. Required for deal, optional for product.",
          "type": "string"
        },
        "fixedPrices": {
          "description": "Fixed price for the specified buyer.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "guaranteedImpressions": {
          "description": "Guaranteed impressions as a percentage. This is the percentage\nof guaranteed looks that the buyer is guaranteeing to buy.",
          "type": "string"
        },
        "minimumDailyLooks": {
          "description": "Daily minimum looks for CPD deal types.",
          "type": "string"
        }
      }
    },
    "TargetingCriteria": {
      "title": "TargetingCriteria",
      "description": "Advertisers can target different attributes of an ad slot. For example,\nthey can choose to show ads only if the user is in the U.S. Such\ntargeting criteria can be specified as part of Shared Targeting.",
      "type": "object",
      "properties": {
        "exclusions": {
          "description": "The list of values to exclude from targeting. Each value is AND'd\ntogether.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetingValue"
          }
        },
        "key": {
          "description": "The key representing the shared targeting criterion.\nTargeting criteria defined by Google ad servers will begin with GOOG_.\nThird parties may define their own keys.\nA list of permissible keys along with the acceptable values will be\nprovided as part of the external documentation.",
          "type": "string"
        },
        "inclusions": {
          "description": "The list of value to include as part of the targeting. Each value is OR'd\ntogether.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetingValue"
          }
        }
      }
    },
    "VideoTargeting": {
      "title": "VideoTargeting",
      "description": "Video targeting information.",
      "type": "object",
      "properties": {
        "targetedPositionTypes": {
          "description": "A list of video positions to be included.\nWhen the included list is present, the excluded list must be empty.\nWhen the excluded list is present, the included list must be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetedPositionType"
          }
        },
        "excludedPositionTypes": {
          "description": "A list of video positions to be excluded.\nPosition types can either be included or excluded (XOR).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExcludedPositionType"
          }
        }
      }
    },
    "Product": {
      "title": "Product",
      "description": "Note: this resource requires whitelisting for access. Please contact your\naccount manager for access to Marketplace resources.\n\nA product is a segment of inventory that a seller wishes to sell. It is\nassociated with certain terms and targeting information which helps the buyer\nknow more about the inventory.",
      "type": "object",
      "properties": {
        "availableStartTime": {
          "description": "Inventory availability dates. The start time will be truncated to seconds during serving.\nThus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34\nwhen serving.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for this product as set by the seller.",
          "type": "string"
        },
        "productId": {
          "description": "The unique ID for the product.",
          "type": "string"
        },
        "publisherProfileId": {
          "description": "An ID which can be used by the Publisher Profile API to get more\ninformation about the seller that created this product.",
          "type": "string"
        },
        "webPropertyCode": {
          "description": "The web-property code for the seller. This needs to be copied as is when\nadding a new deal to a proposal.",
          "type": "string"
        },
        "createTime": {
          "description": "Creation time.",
          "type": "string"
        },
        "updateTime": {
          "description": "Time of last update.",
          "type": "string"
        },
        "creatorContacts": {
          "description": "Optional contact information for the creator of this product.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "targetingCriterion": {
          "description": "Targeting that is shared between the buyer and the seller. Each targeting\ncriterion has a specified key and for each key there is a list of inclusion\nvalue or exclusion values.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "terms": {
          "description": "The negotiable terms of the deal.",
          "type": "object"
        },
        "availableEndTime": {
          "description": "The proposed end time for the deal. The field will be truncated to the order of\nseconds during serving.",
          "type": "string"
        },
        "productRevision": {
          "description": "The revision number of the product (auto-assigned by Marketplace).",
          "type": "string"
        },
        "seller": {
          "description": "Information about the seller that created this product.",
          "type": "object"
        },
        "syndicationProduct": {
          "$ref": "#/definitions/SyndicationProduct1"
        },
        "hasCreatorSignedOff": {
          "description": "If the creator has already signed off on the product, then the buyer can\nfinalize the deal by accepting the product as is. When copying to a\nproposal, if any of the terms are changed, then auto_finalize is\nautomatically set to false.",
          "type": "boolean"
        }
      }
    },
    "TimeOfDay": {
      "title": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FilteredBidDetailRow": {
      "title": "FilteredBidDetailRow",
      "description": "The number of filtered bids with the specified dimension values, among those\nfiltered due to the requested filtering reason (i.e. creative status), that\nhave the specified detail.",
      "type": "object",
      "properties": {
        "rowDimensions": {
          "description": "The values of all dimensions associated with metric values in this row.",
          "type": "object"
        },
        "bidCount": {
          "description": "The number of bids with the specified detail.",
          "type": "object"
        },
        "detailId": {
          "description": "The ID of the detail. The associated value can be looked up in the\ndictionary file corresponding to the DetailType in the response message.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Size": {
      "title": "Size",
      "description": "For regular or video creative size type, specifies the size\nof the creative",
      "type": "object",
      "properties": {
        "height": {
          "description": "The height of the creative.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The width of the creative",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdSize": {
      "title": "AdSize",
      "description": "Represents size of a single ad slot, or a creative.",
      "type": "object",
      "properties": {
        "width": {
          "description": "The width of the ad slot in pixels.\nThis field will be present only when size type is `PIXEL`.",
          "type": "string"
        },
        "sizeType": {
          "$ref": "#/definitions/SizeType"
        },
        "height": {
          "description": "The height of the ad slot in pixels.\nThis field will be present only when size type is `PIXEL`.",
          "type": "string"
        }
      }
    },
    "DayPart": {
      "title": "DayPart",
      "description": "Daypart targeting message that specifies if the ad can be shown\nonly during certain parts of a day/week.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "The ending time of the day for the ad to show (minute level granularity).\nThe end time is exclusive.\nThis field is not available for filtering in PQL queries.",
          "type": "object"
        },
        "startTime": {
          "description": "The starting time of day for the ad to show (minute level granularity).\nThe start time is inclusive.\nThis field is not available for filtering in PQL queries.",
          "type": "object"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek"
        }
      }
    },
    "TechnologyTargeting": {
      "title": "TechnologyTargeting",
      "description": "Technology targeting information, e.g., operating system, device category.",
      "type": "object",
      "properties": {
        "deviceCapabilityTargeting": {
          "description": "IDs of device capabilities to be included/excluded.",
          "type": "object"
        },
        "operatingSystemTargeting": {
          "description": "Operating system related targeting information.",
          "type": "object"
        },
        "deviceCategoryTargeting": {
          "description": "IDs of device categories to be included/excluded.",
          "type": "object"
        }
      }
    },
    "CreativeRestrictions": {
      "title": "CreativeRestrictions",
      "description": "Represents creative restrictions associated to Programmatic Guaranteed/\nPreferred Deal in Ad Manager.\nThis doesn't apply to Private Auction and AdX Preferred Deals.",
      "type": "object",
      "properties": {
        "skippableAdType": {
          "$ref": "#/definitions/SkippableAdType1"
        },
        "creativeFormat": {
          "$ref": "#/definitions/CreativeFormat"
        },
        "creativeSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreativeSpecification"
          }
        }
      }
    },
    "AddDealAssociationRequest": {
      "title": "AddDealAssociationRequest",
      "description": "A request for associating a deal and a creative.",
      "type": "object",
      "properties": {
        "association": {
          "$ref": "#/definitions/CreativeDealAssociation"
        }
      }
    },
    "All": {
      "title": "All",
      "description": "Matches all contexts.",
      "example": "SIMPLE_CONTEXT",
      "type": "string",
      "enum": [
        "SIMPLE_CONTEXT"
      ]
    },
    "AllowedFormat": {
      "title": "AllowedFormat",
      "example": "UNKNOWN",
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AUDIO"
      ]
    },
    "AppType": {
      "title": "AppType",
      "example": "NATIVE",
      "type": "string",
      "enum": [
        "NATIVE",
        "WEB"
      ]
    },
    "Attribute": {
      "title": "Attribute",
      "example": "ATTRIBUTE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ATTRIBUTE_UNSPECIFIED",
        "IS_TAGGED",
        "IS_COOKIE_TARGETED",
        "IS_USER_INTEREST_TARGETED",
        "EXPANDING_DIRECTION_NONE",
        "EXPANDING_DIRECTION_UP",
        "EXPANDING_DIRECTION_DOWN",
        "EXPANDING_DIRECTION_LEFT",
        "EXPANDING_DIRECTION_RIGHT",
        "EXPANDING_DIRECTION_UP_LEFT",
        "EXPANDING_DIRECTION_UP_RIGHT",
        "EXPANDING_DIRECTION_DOWN_LEFT",
        "EXPANDING_DIRECTION_DOWN_RIGHT",
        "CREATIVE_TYPE_HTML",
        "CREATIVE_TYPE_VAST_VIDEO",
        "EXPANDING_DIRECTION_UP_OR_DOWN",
        "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
        "EXPANDING_DIRECTION_ANY_DIAGONAL",
        "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
        "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
        "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
        "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
        "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
        "RICH_MEDIA_CAPABILITY_TYPE_SSL",
        "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
        "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
        "NATIVE_ELIGIBILITY_ELIGIBLE",
        "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
        "IN_BANNER_VIDEO",
        "RENDERING_SIZELESS_ADX",
        "OMSDK_1_0"
      ]
    },
    "AuctionType": {
      "title": "AuctionType",
      "example": "OPEN_AUCTION",
      "type": "string",
      "enum": [
        "OPEN_AUCTION",
        "DIRECT_DEALS"
      ]
    },
    "BrandingType": {
      "title": "BrandingType",
      "description": "Visibility of the URL in bid requests. (default: BRANDED)",
      "example": "BRANDING_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BRANDING_TYPE_UNSPECIFIED",
        "BRANDED",
        "SEMI_TRANSPARENT"
      ]
    },
    "BreakdownDimension": {
      "title": "BreakdownDimension",
      "example": "BREAKDOWN_DIMENSION_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BREAKDOWN_DIMENSION_UNSPECIFIED",
        "PUBLISHER_IDENTIFIER"
      ]
    },
    "CreativeBlockingLevel": {
      "title": "CreativeBlockingLevel",
      "description": "Specified the creative blocking levels to be applied.\n@OutputOnly",
      "example": "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED",
        "PUBLISHER_BLOCKING_RULES",
        "ADX_POLICY_BLOCKING_ONLY"
      ]
    },
    "CreativeFormat": {
      "title": "CreativeFormat",
      "description": "The format of the environment that the creatives will be displayed in.",
      "example": "CREATIVE_FORMAT_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CREATIVE_FORMAT_UNSPECIFIED",
        "DISPLAY",
        "VIDEO"
      ]
    },
    "CreativePreApprovalPolicy": {
      "title": "CreativePreApprovalPolicy",
      "description": "Specifies the creative pre-approval policy.\n@OutputOnly",
      "example": "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",
        "SELLER_PRE_APPROVAL_REQUIRED",
        "SELLER_PRE_APPROVAL_NOT_REQUIRED"
      ]
    },
    "CreativeSafeFrameCompatibility": {
      "title": "CreativeSafeFrameCompatibility",
      "description": "Specifies whether the creative is safeFrame compatible.\n@OutputOnly",
      "example": "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",
        "COMPATIBLE",
        "INCOMPATIBLE"
      ]
    },
    "CreativeSizeType": {
      "title": "CreativeSizeType",
      "description": "The creative size type.",
      "example": "CREATIVE_SIZE_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CREATIVE_SIZE_TYPE_UNSPECIFIED",
        "REGULAR",
        "INTERSTITIAL",
        "VIDEO",
        "NATIVE"
      ]
    },
    "CreatorRole": {
      "title": "CreatorRole",
      "description": "The role of the person (buyer/seller) creating the note.\n@OutputOnly",
      "example": "BUYER_SELLER_ROLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BUYER_SELLER_ROLE_UNSPECIFIED",
        "BUYER",
        "SELLER"
      ]
    },
    "DayOfWeek": {
      "title": "DayOfWeek",
      "description": "The day of the week to target. If unspecified, applicable to all days.",
      "example": "DAY_OF_WEEK_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DAY_OF_WEEK_UNSPECIFIED",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ]
    },
    "DealsStatus": {
      "title": "DealsStatus",
      "description": "@OutputOnly The top-level deals status of this creative.\nIf disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
      "example": "STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "NOT_CHECKED",
        "CONDITIONALLY_APPROVED",
        "APPROVED",
        "DISAPPROVED"
      ]
    },
    "DeliveryRateType": {
      "title": "DeliveryRateType",
      "description": "Specifies how the impression delivery will be paced.\n@OutputOnly",
      "example": "DELIVERY_RATE_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DELIVERY_RATE_TYPE_UNSPECIFIED",
        "EVENLY",
        "FRONT_LOADED",
        "AS_FAST_AS_POSSIBLE"
      ]
    },
    "DetailType": {
      "title": "DetailType",
      "description": "The type of detail that the detail IDs represent.",
      "example": "DETAIL_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "DETAIL_TYPE_UNSPECIFIED",
        "CREATIVE_ATTRIBUTE",
        "VENDOR",
        "SENSITIVE_CATEGORY",
        "PRODUCT_CATEGORY",
        "DISAPPROVAL_REASON"
      ]
    },
    "EntityType": {
      "title": "EntityType",
      "description": "The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.",
      "example": "ENTITY_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ENTITY_TYPE_UNSPECIFIED",
        "ADVERTISER",
        "BRAND",
        "AGENCY"
      ]
    },
    "Environment": {
      "title": "Environment",
      "description": "The environment on which to filter; optional.",
      "example": "ENVIRONMENT_UNSPECIFIED",
      "type": "string",
      "enum": [
        "ENVIRONMENT_UNSPECIFIED",
        "WEB",
        "APP"
      ]
    },
    "ExcludedPositionType": {
      "title": "ExcludedPositionType",
      "example": "POSITION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "POSITION_TYPE_UNSPECIFIED",
        "PREROLL",
        "MIDROLL",
        "POSTROLL"
      ]
    },
    "FirstPausedBy": {
      "title": "FirstPausedBy",
      "description": "The role of the person who first paused this deal.",
      "example": "BUYER_SELLER_ROLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BUYER_SELLER_ROLE_UNSPECIFIED",
        "BUYER",
        "SELLER"
      ]
    },
    "Format": {
      "title": "Format",
      "example": "FORMAT_UNSPECIFIED",
      "type": "string",
      "enum": [
        "FORMAT_UNSPECIFIED",
        "NATIVE_DISPLAY",
        "NATIVE_VIDEO",
        "NON_NATIVE_DISPLAY",
        "NON_NATIVE_VIDEO"
      ]
    },
    "LastUpdaterOrCommentorRole": {
      "title": "LastUpdaterOrCommentorRole",
      "description": "The role of the last user that either updated the proposal or left a\ncomment.\n@OutputOnly",
      "example": "BUYER_SELLER_ROLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BUYER_SELLER_ROLE_UNSPECIFIED",
        "BUYER",
        "SELLER"
      ]
    },
    "NativeTemplate": {
      "title": "NativeTemplate",
      "description": "The native template for this creative. It will have a value only if\ncreative_size_type = CreativeSizeType.NATIVE.\n@OutputOnly",
      "example": "UNKNOWN_NATIVE_TEMPLATE",
      "type": "string",
      "enum": [
        "UNKNOWN_NATIVE_TEMPLATE",
        "NATIVE_CONTENT_AD",
        "NATIVE_APP_INSTALL_AD",
        "NATIVE_VIDEO_CONTENT_AD",
        "NATIVE_VIDEO_APP_INSTALL_AD"
      ]
    },
    "OpenAuctionStatus": {
      "title": "OpenAuctionStatus",
      "description": "@OutputOnly The top-level open auction status of this creative.\nIf disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.",
      "example": "STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "NOT_CHECKED",
        "CONDITIONALLY_APPROVED",
        "APPROVED",
        "DISAPPROVED"
      ]
    },
    "OriginatorRole": {
      "title": "OriginatorRole",
      "description": "Indicates whether the buyer/seller created the proposal.\n@OutputOnly",
      "example": "BUYER_SELLER_ROLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "BUYER_SELLER_ROLE_UNSPECIFIED",
        "BUYER",
        "SELLER"
      ]
    },
    "Platform": {
      "title": "Platform",
      "example": "DESKTOP",
      "type": "string",
      "enum": [
        "DESKTOP",
        "ANDROID",
        "IOS"
      ]
    },
    "Platform1": {
      "title": "Platform1",
      "example": "PLATFORM_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PLATFORM_UNSPECIFIED",
        "DESKTOP",
        "TABLET",
        "MOBILE"
      ]
    },
    "PricingType": {
      "title": "PricingType",
      "description": "The pricing type for the deal/product. (default: CPM)",
      "example": "PRICING_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PRICING_TYPE_UNSPECIFIED",
        "COST_PER_MILLE",
        "COST_PER_DAY"
      ]
    },
    "ProgrammaticCreativeSource": {
      "title": "ProgrammaticCreativeSource",
      "description": "Specifies the creative source for programmatic deals. PUBLISHER means\ncreative is provided by seller and ADVERTISER means creative is\nprovided by buyer.\n@OutputOnly",
      "example": "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",
        "ADVERTISER",
        "PUBLISHER"
      ]
    },
    "ProposalState": {
      "title": "ProposalState",
      "description": "The current state of the proposal.\n@OutputOnly",
      "example": "PROPOSAL_STATE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "PROPOSAL_STATE_UNSPECIFIED",
        "PROPOSED",
        "BUYER_ACCEPTED",
        "SELLER_ACCEPTED",
        "CANCELED",
        "FINALIZED"
      ]
    },
    "Reason1": {
      "title": "Reason1",
      "description": "The categorized reason for disapproval.",
      "example": "LENGTH_OF_IMAGE_ANIMATION",
      "type": "string",
      "enum": [
        "LENGTH_OF_IMAGE_ANIMATION",
        "BROKEN_URL",
        "MEDIA_NOT_FUNCTIONAL",
        "INVALID_FOURTH_PARTY_CALL",
        "INCORRECT_REMARKETING_DECLARATION",
        "LANDING_PAGE_ERROR",
        "AD_SIZE_DOES_NOT_MATCH_AD_SLOT",
        "NO_BORDER",
        "FOURTH_PARTY_BROWSER_COOKIES",
        "LSO_OBJECTS",
        "BLANK_CREATIVE",
        "DESTINATION_URLS_UNDECLARED",
        "PROBLEM_WITH_CLICK_MACRO",
        "INCORRECT_AD_TECHNOLOGY_DECLARATION",
        "INCORRECT_DESTINATION_URL_DECLARATION",
        "EXPANDABLE_INCORRECT_DIRECTION",
        "EXPANDABLE_DIRECTION_NOT_SUPPORTED",
        "EXPANDABLE_INVALID_VENDOR",
        "EXPANDABLE_FUNCTIONALITY",
        "VIDEO_INVALID_VENDOR",
        "VIDEO_UNSUPPORTED_LENGTH",
        "VIDEO_UNSUPPORTED_FORMAT",
        "VIDEO_FUNCTIONALITY",
        "LANDING_PAGE_DISABLED",
        "MALWARE_SUSPECTED",
        "ADULT_IMAGE_OR_VIDEO",
        "INACCURATE_AD_TEXT",
        "COUNTERFEIT_DESIGNER_GOODS",
        "POP_UP",
        "INVALID_RTB_PROTOCOL_USAGE",
        "RAW_IP_ADDRESS_IN_SNIPPET",
        "UNACCEPTABLE_CONTENT_SOFTWARE",
        "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN",
        "UNDECLARED_FLASH_OBJECTS",
        "INVALID_SSL_DECLARATION",
        "DIRECT_DOWNLOAD_IN_AD",
        "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED",
        "DESTINATION_URL_SITE_NOT_CRAWLABLE",
        "BAD_URL_LEGAL_DISAPPROVAL",
        "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED",
        "DYNAMIC_DNS_AT_DESTINATION_URL",
        "POOR_IMAGE_OR_VIDEO_QUALITY",
        "UNACCEPTABLE_IMAGE_CONTENT",
        "INCORRECT_IMAGE_LAYOUT",
        "IRRELEVANT_IMAGE_OR_VIDEO",
        "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK",
        "MISLEADING_CLAIMS_IN_AD",
        "RESTRICTED_PRODUCTS",
        "UNACCEPTABLE_CONTENT",
        "AUTOMATED_AD_CLICKING",
        "INVALID_URL_PROTOCOL",
        "UNDECLARED_RESTRICTED_CONTENT",
        "INVALID_REMARKETING_LIST_USAGE",
        "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT",
        "CLICK_TO_DOWNLOAD_NOT_AN_APP",
        "INACCURATE_REVIEW_EXTENSION",
        "SEXUALLY_EXPLICIT_CONTENT",
        "GAINING_AN_UNFAIR_ADVANTAGE",
        "GAMING_THE_GOOGLE_NETWORK",
        "DANGEROUS_PRODUCTS_KNIVES",
        "DANGEROUS_PRODUCTS_EXPLOSIVES",
        "DANGEROUS_PRODUCTS_GUNS",
        "DANGEROUS_PRODUCTS_DRUGS",
        "DANGEROUS_PRODUCTS_TOBACCO",
        "DANGEROUS_PRODUCTS_WEAPONS",
        "UNCLEAR_OR_IRRELEVANT_AD",
        "PROFESSIONAL_STANDARDS",
        "DYSFUNCTIONAL_PROMOTION",
        "INVALID_INTEREST_BASED_AD",
        "MISUSE_OF_PERSONAL_INFORMATION",
        "OMISSION_OF_RELEVANT_INFORMATION",
        "UNAVAILABLE_PROMOTIONS",
        "MISLEADING_PROMOTIONS",
        "INAPPROPRIATE_CONTENT",
        "SENSITIVE_EVENTS",
        "SHOCKING_CONTENT",
        "ENABLING_DISHONEST_BEHAVIOR",
        "TECHNICAL_REQUIREMENTS",
        "RESTRICTED_POLITICAL_CONTENT",
        "UNSUPPORTED_CONTENT",
        "INVALID_BIDDING_METHOD",
        "VIDEO_TOO_LONG",
        "VIOLATES_JAPANESE_PHARMACY_LAW",
        "UNACCREDITED_PET_PHARMACY",
        "ABORTION",
        "CONTRACEPTIVES",
        "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA",
        "KCDSP_REGISTRATION",
        "NOT_FAMILY_SAFE",
        "CLINICAL_TRIAL_RECRUITMENT",
        "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED",
        "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED",
        "PERSONAL_LOANS",
        "UNSUPPORTED_FLASH_CONTENT",
        "MISUSE_BY_OMID_SCRIPT",
        "NON_WHITELISTED_OMID_VENDOR",
        "DESTINATION_EXPERIENCE",
        "UNSUPPORTED_LANGUAGE",
        "NON_SSL_COMPLIANT",
        "TEMPORARY_PAUSE",
        "BAIL_BONDS"
      ]
    },
    "RestrictedCategory": {
      "title": "RestrictedCategory",
      "example": "NO_RESTRICTED_CATEGORIES",
      "type": "string",
      "enum": [
        "NO_RESTRICTED_CATEGORIES",
        "ALCOHOL"
      ]
    },
    "Role": {
      "title": "Role",
      "description": "The role which is assigned to the client buyer. Each role implies a set of\npermissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,\n`CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.",
      "example": "CLIENT_ROLE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CLIENT_ROLE_UNSPECIFIED",
        "CLIENT_DEAL_VIEWER",
        "CLIENT_DEAL_NEGOTIATOR",
        "CLIENT_DEAL_APPROVER"
      ]
    },
    "Security": {
      "title": "Security",
      "example": "INSECURE",
      "type": "string",
      "enum": [
        "INSECURE",
        "SSL"
      ]
    },
    "SizeType": {
      "title": "SizeType",
      "description": "The size type of the ad slot.",
      "example": "SIZE_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SIZE_TYPE_UNSPECIFIED",
        "PIXEL",
        "INTERSTITIAL",
        "NATIVE",
        "FLUID"
      ]
    },
    "SkippableAdType": {
      "title": "SkippableAdType",
      "description": "The type of skippable ad for this creative. It will have a value only if\ncreative_size_type = CreativeSizeType.VIDEO.",
      "example": "SKIPPABLE_AD_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SKIPPABLE_AD_TYPE_UNSPECIFIED",
        "GENERIC",
        "INSTREAM_SELECT",
        "NOT_SKIPPABLE"
      ]
    },
    "SkippableAdType1": {
      "title": "SkippableAdType1",
      "description": "Skippable video ads allow viewers to skip ads after 5 seconds.",
      "example": "SKIPPABLE_AD_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SKIPPABLE_AD_TYPE_UNSPECIFIED",
        "SKIPPABLE",
        "INSTREAM_SELECT",
        "NOT_SKIPPABLE"
      ]
    },
    "Status": {
      "title": "Status",
      "description": "The status of the client buyer.",
      "example": "CLIENT_STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CLIENT_STATUS_UNSPECIFIED",
        "DISABLED",
        "ACTIVE"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "The status of the client user.",
      "example": "USER_STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "USER_STATUS_UNSPECIFIED",
        "PENDING",
        "ACTIVE",
        "DISABLED"
      ]
    },
    "Status2": {
      "title": "Status2",
      "description": "The status specifying why the winning bids were not billed.",
      "example": "STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "AD_NOT_RENDERED",
        "INVALID_IMPRESSION"
      ]
    },
    "Status3": {
      "title": "Status3",
      "description": "The status specifying why the bid responses were considered to have no\napplicable bids.",
      "example": "STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "RESPONSES_WITHOUT_BIDS",
        "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT",
        "RESPONSES_WITHOUT_BIDS_FOR_DEAL"
      ]
    },
    "Status4": {
      "title": "Status4",
      "description": "The status of the creative in this context (for example, it has been\nexplicitly disapproved or is pending review).",
      "example": "STATUS_UNSPECIFIED",
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "DISAPPROVAL",
        "PENDING_REVIEW"
      ]
    },
    "SyndicationProduct": {
      "title": "SyndicationProduct",
      "description": "The syndication product associated with the deal.\n\nNote: This field may be set only when creating the resource. Modifying\nthis field while updating the resource will result in an error.",
      "example": "SYNDICATION_PRODUCT_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SYNDICATION_PRODUCT_UNSPECIFIED",
        "CONTENT",
        "MOBILE",
        "VIDEO",
        "GAMES"
      ]
    },
    "SyndicationProduct1": {
      "title": "SyndicationProduct1",
      "description": "The syndication product associated with the deal.",
      "example": "SYNDICATION_PRODUCT_UNSPECIFIED",
      "type": "string",
      "enum": [
        "SYNDICATION_PRODUCT_UNSPECIFIED",
        "CONTENT",
        "MOBILE",
        "VIDEO",
        "GAMES"
      ]
    },
    "TargetedPositionType": {
      "title": "TargetedPositionType",
      "example": "POSITION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "POSITION_TYPE_UNSPECIFIED",
        "PREROLL",
        "MIDROLL",
        "POSTROLL"
      ]
    },
    "TimeSeriesGranularity": {
      "title": "TimeSeriesGranularity",
      "description": "The granularity of time intervals if a time series breakdown is desired;\noptional.",
      "example": "TIME_SERIES_GRANULARITY_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TIME_SERIES_GRANULARITY_UNSPECIFIED",
        "HOURLY",
        "DAILY"
      ]
    },
    "TimeUnitType": {
      "title": "TimeUnitType",
      "description": "The time unit. Along with num_time_units defines the amount of time over\nwhich impressions per user are counted and capped.",
      "example": "TIME_UNIT_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TIME_UNIT_TYPE_UNSPECIFIED",
        "MINUTE",
        "HOUR",
        "DAY",
        "WEEK",
        "MONTH",
        "LIFETIME"
      ]
    },
    "TimeZoneType": {
      "title": "TimeZoneType",
      "description": "The timezone to use for interpreting the day part targeting.",
      "example": "TIME_ZONE_SOURCE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "TIME_ZONE_SOURCE_UNSPECIFIED",
        "PUBLISHER",
        "USER"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "The type of correction that was applied to the creative.",
      "example": "CORRECTION_TYPE_UNSPECIFIED",
      "type": "string",
      "enum": [
        "CORRECTION_TYPE_UNSPECIFIED",
        "VENDOR_IDS_ADDED",
        "SSL_ATTRIBUTE_REMOVED",
        "FLASH_FREE_ATTRIBUTE_REMOVED",
        "FLASH_FREE_ATTRIBUTE_ADDED",
        "REQUIRED_ATTRIBUTE_ADDED",
        "REQUIRED_VENDOR_ADDED",
        "SSL_ATTRIBUTE_ADDED",
        "IN_BANNER_VIDEO_ATTRIBUTE_ADDED",
        "MRAID_ATTRIBUTE_ADDED",
        "FLASH_ATTRIBUTE_REMOVED",
        "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED"
      ]
    }
  },
  "tags": [
    {
      "name": "losingBids",
      "description": ""
    },
    {
      "name": "impressionMetrics",
      "description": ""
    },
    {
      "name": "bidMetrics",
      "description": ""
    },
    {
      "name": "bidResponseErrors",
      "description": ""
    },
    {
      "name": "bidResponsesWithoutBids",
      "description": ""
    },
    {
      "name": "filteredBidRequests",
      "description": ""
    },
    {
      "name": "nonBillableWinningBids",
      "description": ""
    },
    {
      "name": "details",
      "description": ""
    },
    {
      "name": "creatives",
      "description": ""
    },
    {
      "name": "filteredBids",
      "description": ""
    },
    {
      "name": "filterSets",
      "description": ""
    },
    {
      "name": "proposals",
      "description": ""
    },
    {
      "name": "invitations",
      "description": ""
    },
    {
      "name": "users",
      "description": ""
    },
    {
      "name": "clients",
      "description": ""
    },
    {
      "name": "publisherProfiles",
      "description": ""
    },
    {
      "name": "dealAssociations",
      "description": ""
    },
    {
      "name": "products",
      "description": ""
    },
    {
      "name": "finalizedProposals",
      "description": ""
    }
  ]
}