{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Microsoft Graph",
    "description": "[Microsoft Graph](https://docs.microsoft.com/graph/overview) is the gateway to data and intelligence in Microsoft 365. It provides a unified programmability model that you can use to access the tremendous amount of data in Microsoft 365, Windows 10, and Enterprise Mobility + Security. Use the wealth of data in Microsoft Graph to build apps for organizations and consumers that interact with millions of users.",
    "contact": {}
  },
  "host": "graph.microsoft.com",
  "basePath": "/",
  "securityDefinitions": {},
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1.0/applications": {
      "get": {
        "summary": "Get applications",
        "tags": [
          "Applications"
        ],
        "operationId": "Getapplications",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create an application",
        "tags": [
          "Applications"
        ],
        "operationId": "Createanapplication",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateanapplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/applications/{ApplicationId}": {
      "get": {
        "summary": "Get application",
        "tags": [
          "Applications"
        ],
        "operationId": "Getapplication",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ApplicationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update application",
        "tags": [
          "Applications"
        ],
        "operationId": "Updateapplication",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateapplicationRequest"
            }
          },
          {
            "name": "ApplicationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/applications/{ApplicationId}/owners": {
      "get": {
        "summary": "Get application owners",
        "tags": [
          "Applications"
        ],
        "operationId": "Getapplicationowners",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ApplicationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/applications/{ApplicationId}": {
      "delete": {
        "summary": "Delete application",
        "tags": [
          "Applications"
        ],
        "operationId": "Deleteapplication",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ApplicationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/$batch": {
      "post": {
        "summary": "Perform parallel GETS",
        "tags": [
          "Batch"
        ],
        "operationId": "PerformparallelGETS",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PerformparallelGETSRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/me/findRooms": {
      "get": {
        "summary": "Get rooms",
        "tags": [
          "Events"
        ],
        "operationId": "Getrooms",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/calendarview": {
      "get": {
        "summary": "Get my events for next week",
        "tags": [
          "Events"
        ],
        "operationId": "Getmyeventsfornextweek",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "startdatetime",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "enddatetime",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/calendars": {
      "get": {
        "summary": "Get my calendars",
        "tags": [
          "Events"
        ],
        "operationId": "Getmycalendars",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/events": {
      "post": {
        "summary": "Add Microsoft Graph community call event",
        "tags": [
          "Events"
        ],
        "operationId": "AddMicrosoftGraphcommunitycallevent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddMicrosoftGraphcommunitycalleventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "get": {
        "summary": "Get my Microsoft Graph community call events",
        "tags": [
          "Events"
        ],
        "operationId": "GetmyMicrosoftGraphcommunitycallevents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/drive/root/children": {
      "get": {
        "summary": "Get my files",
        "tags": [
          "Files"
        ],
        "operationId": "Getmyfiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create a folder",
        "tags": [
          "Files"
        ],
        "operationId": "Createafolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateafolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/drive/recent": {
      "get": {
        "summary": "Get my recent files",
        "tags": [
          "Files"
        ],
        "operationId": "Getmyrecentfiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/drive/sharedWithMe": {
      "get": {
        "summary": "Get files shared with me",
        "tags": [
          "Files"
        ],
        "operationId": "Getfilessharedwithme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/drive/root/search(q='finance')": {
      "get": {
        "summary": "Search my OneDrive",
        "tags": [
          "Files"
        ],
        "operationId": "SearchmyOneDrive",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "select",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups": {
      "get": {
        "summary": "Get groups",
        "tags": [
          "Groups"
        ],
        "operationId": "Getgroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create a group with extension",
        "tags": [
          "Schema extensions"
        ],
        "operationId": "Createagroupwithextension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateagroupwithextensionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/me/insights/trending": {
      "get": {
        "summary": "Get items trending around me",
        "tags": [
          "Insights"
        ],
        "operationId": "Getitemstrendingaroundme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/me/workingWith": {
      "get": {
        "summary": "Get people I'm working with",
        "tags": [
          "Insights"
        ],
        "operationId": "GetpeopleI'mworkingwith",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/messages": {
      "get": {
        "summary": "Get my messages",
        "tags": [
          "Mail"
        ],
        "operationId": "Getmymessages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/me/messages": {
      "get": {
        "summary": "Get my messages I'm at mentioned in",
        "tags": [
          "Mail"
        ],
        "operationId": "GetmymessagesI'matmentionedin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "$select",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/messages/{MessageId}": {
      "get": {
        "summary": "Get a message",
        "tags": [
          "Mail"
        ],
        "operationId": "Getamessage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "MessageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/mailFolders/inbox/messagerules": {
      "get": {
        "summary": "Get my mailbox rules",
        "tags": [
          "Mail"
        ],
        "operationId": "Getmymailboxrules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/outlook/masterCategories": {
      "get": {
        "summary": "Get my categories",
        "tags": [
          "Mail"
        ],
        "operationId": "Getmycategories",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/sendMail": {
      "post": {
        "summary": "Send mail",
        "tags": [
          "Mail"
        ],
        "operationId": "Sendmail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/mailboxSettings": {
      "get": {
        "summary": "Get mailbox settings",
        "tags": [
          "Mail"
        ],
        "operationId": "Getmailboxsettings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Set automatic replies",
        "tags": [
          "Mail"
        ],
        "operationId": "Setautomaticreplies",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetautomaticrepliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserId}/messages": {
      "get": {
        "summary": "Get a user's messages",
        "tags": [
          "Mail"
        ],
        "operationId": "Getauser'smessages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserId}/messages/{MessageId}": {
      "get": {
        "summary": "Get a user's message",
        "tags": [
          "Mail"
        ],
        "operationId": "Getauser'smessage",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "MessageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/onenote/notebooks": {
      "get": {
        "summary": "Get my notebooks",
        "tags": [
          "Notebooks"
        ],
        "operationId": "Getmynotebooks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create notebook",
        "tags": [
          "Notebooks"
        ],
        "operationId": "Createnotebook",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatenotebookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/onenote/sections": {
      "get": {
        "summary": "Get my notebook sections",
        "tags": [
          "Notebooks"
        ],
        "operationId": "Getmynotebooksections",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/onenote/pages": {
      "get": {
        "summary": "Get my notebook pages",
        "tags": [
          "Notebooks"
        ],
        "operationId": "Getmynotebookpages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/onenote/notebooks/{NotebookId}/sections": {
      "post": {
        "summary": "Create section",
        "tags": [
          "Notebooks"
        ],
        "operationId": "Createsection",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatesectionRequest"
            }
          },
          {
            "name": "NotebookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me": {
      "get": {
        "summary": "Get an open extension",
        "tags": [
          "Open extensions"
        ],
        "operationId": "Getanopenextension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "$expand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/extensions": {
      "post": {
        "summary": "Create an open extension",
        "tags": [
          "Open extensions"
        ],
        "operationId": "Createanopenextension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateanopenextensionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/extensions/{ExtensionId}": {
      "patch": {
        "summary": "Update an open extension",
        "tags": [
          "Open extensions"
        ],
        "operationId": "Updateanopenextension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateanopenextensionRequest"
            }
          },
          {
            "name": "ExtensionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/schemaExtensions": {
      "get": {
        "summary": "Get avaiable schema extensions",
        "tags": [
          "Schema extensions"
        ],
        "operationId": "Getavaiableschemaextensions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups/{GroupId}": {
      "patch": {
        "summary": "Update a group with extension",
        "tags": [
          "Schema extensions"
        ],
        "operationId": "Updateagroupwithextension",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "SdkVersion",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateagroupwithextensionRequest"
            }
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete team",
        "tags": [
          "Teams"
        ],
        "operationId": "Deleteteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/people": {
      "get": {
        "summary": "Get people",
        "tags": [
          "People"
        ],
        "operationId": "Getpeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users('{UserName}')/people": {
      "get": {
        "summary": "Get a user's related people",
        "tags": [
          "People"
        ],
        "operationId": "Getauser'srelatedpeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/search/query": {
      "post": {
        "summary": "Search messages",
        "tags": [
          "Search"
        ],
        "operationId": "Searchmessages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchmessagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/security/alerts": {
      "get": {
        "summary": "Get alerts",
        "tags": [
          "Security"
        ],
        "operationId": "Getalerts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/security/secureScores": {
      "get": {
        "summary": "Get secure scores",
        "tags": [
          "Security"
        ],
        "operationId": "Getsecurescores",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/security/secureScoreControlProfiles": {
      "get": {
        "summary": "Get secure scores control profiles",
        "tags": [
          "Security"
        ],
        "operationId": "Getsecurescorescontrolprofiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/security/tiIndicators": {
      "get": {
        "summary": "Get TI indicators",
        "tags": [
          "Security"
        ],
        "operationId": "GetTIindicators",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/security/tiIndicators/{TIIndicatorId}": {
      "get": {
        "summary": "Get TI indicator by id",
        "tags": [
          "Security"
        ],
        "operationId": "GetTIindicatorbyid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TIIndicatorId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/security/securityActions": {
      "get": {
        "summary": "Get security actions",
        "tags": [
          "Security"
        ],
        "operationId": "Getsecurityactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/security/securityActions/{SecurityActionsId}": {
      "get": {
        "summary": "Get security action by id",
        "tags": [
          "Security"
        ],
        "operationId": "Getsecurityactionbyid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "SecurityActionsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root": {
      "get": {
        "summary": "Get my organization's default site collection",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getmyorganization'sdefaultsitecollection",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/drives": {
      "get": {
        "summary": "Get the doc libs in root site",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getthedoclibsinrootsite",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites": {
      "get": {
        "summary": "Search for site by name",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Searchforsitebyname",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/sites": {
      "get": {
        "summary": "Get subsites of site",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getsubsitesofsite",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/columns": {
      "get": {
        "summary": "Get site columns",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getsitecolumns",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/contentTypes": {
      "get": {
        "summary": "Get site content types",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getsitecontenttypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/lists": {
      "get": {
        "summary": "Get site lists",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getsitelists",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/lists/{ListId}/columns": {
      "get": {
        "summary": "Get list columns",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getlistcolumns",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/lists/{ListId}/contentTypes": {
      "get": {
        "summary": "Get list content types",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getlistcontenttypes",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/sites/root/lists/{ListId}/items": {
      "get": {
        "summary": "Get list items",
        "tags": [
          "SharePoint"
        ],
        "operationId": "Getlistitems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "ListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/subscriptions": {
      "get": {
        "summary": "Get subscriptions",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Getsubscriptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/subscriptions/{SubscriptionId}": {
      "patch": {
        "summary": "Update subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Updatesubscription",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatesubscriptionRequest"
            }
          },
          {
            "name": "SubscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/subscriptions": {
      "post": {
        "summary": "Create subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Createsubscription",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatesubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/planner/tasks": {
      "get": {
        "summary": "Get Planner tasks",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannertasks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserName}/planner/tasks": {
      "get": {
        "summary": "Get Planner tasks for a user",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannertasksforauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups/{GroupId}/planner/plans": {
      "get": {
        "summary": "Get Planner plans associated with group",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannerplansassociatedwithgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/plans/{PlanId}": {
      "get": {
        "summary": "Get plan",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "Getplan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "PlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update plan",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "Updateplan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateplanRequest"
            }
          },
          {
            "name": "PlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/plans/{PlanId}/buckets": {
      "get": {
        "summary": "Get plan buckets",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "Getplanbuckets",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "PlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/buckets": {
      "post": {
        "summary": "Create a bucket in a plan",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "Createabucketinaplan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateabucketinaplanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/buckets/{BucketId}": {
      "patch": {
        "summary": "Update a bucket",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "Updateabucket",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateabucketRequest"
            }
          },
          {
            "name": "BucketId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/plans/{PlanId}/tasks": {
      "get": {
        "summary": "Get Planner tasks for a plan",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannertasksforaplan",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "PlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/tasks/{TaskId}": {
      "get": {
        "summary": "Get Planner task by id",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannertaskbyid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update a Planner task",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "UpdateaPlannertask",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateaPlannertaskRequest"
            }
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/tasks": {
      "post": {
        "summary": "Create a Planner task",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "CreateaPlannertask",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateaPlannertaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/planner/tasks/{TaskId}/details": {
      "get": {
        "summary": "Get Planner task details",
        "tags": [
          "Tasks - Planner"
        ],
        "operationId": "GetPlannertaskdetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/todo/lists": {
      "get": {
        "summary": "Get my To Do lists",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "GetmyToDolists",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create a To Do list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "CreateaToDolist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateaToDolistRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/todo/lists/{TaskListId}": {
      "get": {
        "summary": "Get my To Do list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "GetmyToDolist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update a To Do list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "UpdateaToDolist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateaToDolistRequest"
            }
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete a To Do list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "DeleteaToDolist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/todo/lists/{TaskListId}/tasks": {
      "get": {
        "summary": "Get my To Do list tasks",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "GetmyToDolisttasks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create a To Do task in a list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "CreateaToDotaskinalist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateaToDotaskinalistRequest"
            }
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/todo/lists/{TaskListId}/tasks/{TaskId}": {
      "patch": {
        "summary": "Update a To Do task in a list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "UpdateaToDotaskinalist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateaToDotaskinalistRequest"
            }
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete a To Do task in a list",
        "tags": [
          "Tasks - Todo"
        ],
        "operationId": "DeleteaToDotaskinalist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskListId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "TaskId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/joinedTeams": {
      "get": {
        "summary": "Get my joined teams",
        "tags": [
          "Teams"
        ],
        "operationId": "Getmyjoinedteams",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups/{TeamId}/members": {
      "get": {
        "summary": "Get members of a team",
        "tags": [
          "Teams"
        ],
        "operationId": "Getmembersofateam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/channels": {
      "get": {
        "summary": "Get channels of a team",
        "tags": [
          "Teams"
        ],
        "operationId": "Getchannelsofateam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create channel",
        "tags": [
          "Teams"
        ],
        "operationId": "Createchannel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatechannelRequest"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/channels/{ChannelId}": {
      "get": {
        "summary": "Get channel info",
        "tags": [
          "Teams"
        ],
        "operationId": "Getchannelinfo",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams": {
      "post": {
        "summary": "Create team",
        "tags": [
          "Teams"
        ],
        "operationId": "Createteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateteamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/installedApps": {
      "get": {
        "summary": "Get apps in a team",
        "tags": [
          "Teams"
        ],
        "operationId": "Getappsinateam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/channels/{ChannelId}/tabs": {
      "get": {
        "summary": "Get tabs in a channel",
        "tags": [
          "Teams"
        ],
        "operationId": "Gettabsinachannel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups/{TeamId}/drive/root/children": {
      "get": {
        "summary": "Get items in a team drive",
        "tags": [
          "Teams"
        ],
        "operationId": "Getitemsinateamdrive",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/teams/{TeamId}/channels/{ChannelId}/messages": {
      "get": {
        "summary": "Get messages (without replies) in a channel (beta)",
        "tags": [
          "Teams"
        ],
        "operationId": "Getmessages(withoutreplies)inachannel(beta)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create a plain text chat thread (beta)",
        "tags": [
          "Teams"
        ],
        "operationId": "Createaplaintextchatthread(beta)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Createaplaintextchatthread%28beta%29Request"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/teams/{TeamId}/channels/{ChannelId}/messages/{MessageId}": {
      "get": {
        "summary": "Get a message in a channel (beta)",
        "tags": [
          "Teams"
        ],
        "operationId": "Getamessageinachannel(beta)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "MessageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/teams/{TeamId}/channels/{ChannelId}/messages/{MessageId}/replies": {
      "get": {
        "summary": "Get replies to a message in a channel (beta)",
        "tags": [
          "Teams"
        ],
        "operationId": "Getrepliestoamessageinachannel(beta)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "MessageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/teams/{TeamId}/channels/{ChannelId}/messages/{MessageId}/replies/{ReplyId}": {
      "get": {
        "summary": "Get a reply of a message (beta)",
        "tags": [
          "Teams"
        ],
        "operationId": "Getareplyofamessage(beta)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "MessageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ReplyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserId}/joinedTeams": {
      "get": {
        "summary": "Get user's joined teams",
        "tags": [
          "Teams"
        ],
        "operationId": "Getuser'sjoinedteams",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/primaryChannel": {
      "get": {
        "summary": "Get primary channel",
        "tags": [
          "Teams"
        ],
        "operationId": "Getprimarychannel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/channels": {
      "get": {
        "summary": "Get team channels",
        "tags": [
          "Teams"
        ],
        "operationId": "Getteamchannels",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}": {
      "get": {
        "summary": "Get team",
        "tags": [
          "Teams"
        ],
        "operationId": "Getteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update team",
        "tags": [
          "Teams"
        ],
        "operationId": "Updateteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateteamRequest"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/groups/{GroupId}/team": {
      "put": {
        "summary": "Create team from group",
        "tags": [
          "Teams"
        ],
        "operationId": "Createteamfromgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateteamfromgroupRequest"
            }
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/channels/{ChannelId}/members": {
      "post": {
        "summary": "Create team",
        "tags": [
          "Teams"
        ],
        "operationId": "PostCreateteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateteamRequest"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/archive": {
      "post": {
        "summary": "Archive team",
        "tags": [
          "Teams"
        ],
        "operationId": "Archiveteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArchiveteamRequest"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/clone": {
      "post": {
        "summary": "Clone team",
        "tags": [
          "Teams"
        ],
        "operationId": "Cloneteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CloneteamRequest"
            }
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/unarchive": {
      "post": {
        "summary": "Unarchive team",
        "tags": [
          "Teams"
        ],
        "operationId": "Unarchiveteam",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/aboutMe": {
      "get": {
        "summary": "Get my about me",
        "tags": [
          "Users"
        ],
        "operationId": "Getmyaboutme",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/manager": {
      "get": {
        "summary": "Get my manager",
        "tags": [
          "Users"
        ],
        "operationId": "Getmymanager",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/directReports": {
      "get": {
        "summary": "Get my direct reports",
        "tags": [
          "Users"
        ],
        "operationId": "Getmydirectreports",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/memberOf": {
      "get": {
        "summary": "Get my groups",
        "tags": [
          "Users"
        ],
        "operationId": "Getmygroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/me/photo/$value": {
      "get": {
        "summary": "Get my photo",
        "tags": [
          "Users"
        ],
        "operationId": "Getmyphoto",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users": {
      "get": {
        "summary": "Get users",
        "tags": [
          "Users"
        ],
        "operationId": "Getusers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserName}": {
      "get": {
        "summary": "Get user's profile by email",
        "tags": [
          "Users"
        ],
        "operationId": "Getuser'sprofilebyemail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UserName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserId}": {
      "get": {
        "summary": "Get a user's profile by id",
        "tags": [
          "Users"
        ],
        "operationId": "Getauser'sprofilebyid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/users/{UserId}/photo/$value": {
      "get": {
        "summary": "Get a user's photo",
        "tags": [
          "Users"
        ],
        "operationId": "Getauser'sphoto",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/invitations": {
      "post": {
        "description": "Invite Azure AD B2B Guest User using Delegated Permission",
        "summary": "Invite a guest user",
        "tags": [
          "Users"
        ],
        "operationId": "Inviteaguestuser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InviteaguestuserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/catalog/entries": {
      "get": {
        "summary": "List catalog entries",
        "tags": [
          "Catalog"
        ],
        "operationId": "Listcatalogentries",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments/{DeploymentId}/audience/members": {
      "get": {
        "summary": "List members",
        "tags": [
          "Deployment audience"
        ],
        "operationId": "Listmembers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments/{DeploymentId}/audience/exclusions": {
      "get": {
        "summary": "List exclusions",
        "tags": [
          "Deployment audience"
        ],
        "operationId": "Listexclusions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments/{DeploymentId}/audience/updateAudience": {
      "post": {
        "summary": "Update audience (add members)",
        "tags": [
          "Deployment audience"
        ],
        "operationId": "Updateaudience(addmembers)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Updateaudience%28addmembers%29Request"
            }
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments": {
      "post": {
        "summary": "Create deployment (feature update)",
        "tags": [
          "Deployment"
        ],
        "operationId": "Createdeployment(featureupdate)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Createdeployment%28featureupdate%29Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "get": {
        "summary": "List deployments",
        "tags": [
          "Deployment"
        ],
        "operationId": "Listdeployments",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments/{DeploymentId}": {
      "get": {
        "summary": "Get deployment",
        "tags": [
          "Deployment"
        ],
        "operationId": "Getdeployment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update deployment (replace monitoring rules)",
        "tags": [
          "Deployment"
        ],
        "operationId": "Updatedeployment(replacemonitoringrules)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Updatedeployment%28replacemonitoringrules%29Request"
            }
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete deployment",
        "tags": [
          "Deployment"
        ],
        "operationId": "Deletedeployment",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "DeploymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/updatableAssets": {
      "get": {
        "summary": "List Azure AD devices",
        "tags": [
          "Azure AD device"
        ],
        "operationId": "ListAzureADdevices",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/updatableAssets/{UpdatableAssetId}": {
      "get": {
        "summary": "Get Azure AD device",
        "tags": [
          "Azure AD device"
        ],
        "operationId": "GetAzureADdevice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UpdatableAssetId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/deployments/{UpdatableAssetId}": {
      "delete": {
        "summary": "Delete Azure AD device",
        "tags": [
          "Azure AD device"
        ],
        "operationId": "DeleteAzureADdevice",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "UpdatableAssetId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/updatableAssets/enrollAssets": {
      "post": {
        "summary": "Enroll in feature update management",
        "tags": [
          "Azure AD device"
        ],
        "operationId": "Enrollinfeatureupdatemanagement",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnrollinfeatureupdatemanagementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/admin/windows/updates/updatableAssets/unenrollAssets": {
      "post": {
        "summary": "Unenroll from feature update management",
        "tags": [
          "Azure AD device"
        ],
        "operationId": "Unenrollfromfeatureupdatemanagement",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UnenrollfromfeatureupdatemanagementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections": {
      "get": {
        "summary": "Get all connections",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Getallconnections",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Create connection",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Createconnection",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateconnectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId": {
      "get": {
        "summary": "Get connection",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Getconnection",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete connection",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Deleteconnection",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/schema": {
      "post": {
        "summary": "Register schema",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Registerschema",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "prefer",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterschemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "get": {
        "summary": "Get schema",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Getschema",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get connection operation status",
        "tags": [
          "Connection setup"
        ],
        "operationId": "Getconnectionoperationstatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/items/sampleItemId": {
      "put": {
        "summary": "Put item",
        "tags": [
          "Content sync"
        ],
        "operationId": "Putitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutitemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "get": {
        "summary": "Get item",
        "tags": [
          "Content sync"
        ],
        "operationId": "Getitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete item",
        "tags": [
          "Content sync"
        ],
        "operationId": "Deleteitem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/groups": {
      "post": {
        "description": "Create group under the connection",
        "summary": "Create group",
        "tags": [
          "Identity Sync"
        ],
        "operationId": "Creategroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreategroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId": {
      "get": {
        "description": "Get a previously created group under the connection.",
        "summary": "Get group",
        "tags": [
          "Identity Sync"
        ],
        "operationId": "Getgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "delete": {
        "summary": "Delete group",
        "tags": [
          "Identity Sync"
        ],
        "operationId": "Deletegroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members": {
      "post": {
        "summary": "Add AAD user as member",
        "tags": [
          "Identity Sync"
        ],
        "operationId": "AddAADuserasmember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAADuserasmemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/childGraphConnectorGroupId": {
      "delete": {
        "summary": "Remove member",
        "tags": [
          "Identity Sync"
        ],
        "operationId": "Removemember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/members": {
      "get": {
        "summary": "Get team members",
        "tags": [
          "Memberships"
        ],
        "operationId": "Getteammembers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "summary": "Add team member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Addteammember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddteammemberRequest"
            }
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/members/{UserId}": {
      "get": {
        "summary": "Get single team member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Getsingleteammember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "patch": {
        "summary": "Update team member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Updateteammember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateteammemberRequest"
            }
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/channels/{ChannelId}/members": {
      "get": {
        "summary": "Get channel members",
        "tags": [
          "Memberships"
        ],
        "operationId": "Getchannelmembers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/members/{UserId}": {
      "delete": {
        "summary": "Remove team member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Removeteammember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{TeamId}/channels/{ChannelId}members/{UserId}": {
      "delete": {
        "summary": "Remove channel member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Removechannelmember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/teams/{GroupId}/channels/{ChannelId}/members/{UserId}": {
      "patch": {
        "summary": "Update channel member",
        "tags": [
          "Memberships"
        ],
        "operationId": "Updatechannelmember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatechannelmemberRequest"
            }
          },
          {
            "name": "GroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ChannelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/notification": {
      "post": {
        "description": "Allows you to validate whether the notification endpoint you are building properly passed Microsoft Graph Subscription creation validation.\nThe response content type should be text/plain, code 200 OK and the body the information passed by the validationToken query parameter",
        "summary": "Subscription validation",
        "tags": [
          "Misc"
        ],
        "operationId": "Subscriptionvalidation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "validationToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "random validation token passed by the Microsoft Graph when validating the notificationURL"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/v1.0/$metadata": {
      "get": {
        "summary": "v1.0 $metadata",
        "tags": [
          "Misc"
        ],
        "operationId": "v1.0$metadata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/beta/$metadata": {
      "get": {
        "summary": "beta $metadata",
        "tags": [
          "Misc"
        ],
        "operationId": "beta$metadata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "CreateanapplicationRequest": {
      "title": "CreateanapplicationRequest",
      "example": {
        "displayName": "My App"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "UpdateapplicationRequest": {
      "title": "UpdateapplicationRequest",
      "example": {
        "signInAudience": "AzureADMyOrg"
      },
      "type": "object",
      "properties": {
        "signInAudience": {
          "type": "string"
        }
      },
      "required": [
        "signInAudience"
      ]
    },
    "PerformparallelGETSRequest": {
      "title": "PerformparallelGETSRequest",
      "example": {
        "requests": [
          {
            "url": "/me?$select=displayName,jobTitle,userPrincipalName",
            "method": "GET",
            "id": "1"
          },
          {
            "url": "/me/messages?$filter=importance eq 'high'&$select=from,subject,receivedDateTime,bodyPreview",
            "method": "GET",
            "id": "2"
          },
          {
            "url": "/me/events",
            "method": "GET",
            "id": "3"
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request": {
      "title": "Request",
      "example": {
        "url": "/me?$select=displayName,jobTitle,userPrincipalName",
        "method": "GET",
        "id": "1"
      },
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "method",
        "id"
      ]
    },
    "CombineaPOSTandaGETRequest": {
      "title": "CombineaPOSTandaGETRequest",
      "example": {
        "requests": [
          {
            "url": "/me/drive/root/children",
            "method": "POST",
            "id": "1",
            "body": {
              "name": "TestBatchingFolder",
              "folder": {}
            },
            "headers": {
              "Content-Type": "application/json"
            }
          },
          {
            "url": "/me/drive/root/children/TestBatchingFolder ",
            "method": "GET",
            "id": "2",
            "DependsOn": [
              "1"
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request1"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request1": {
      "title": "Request1",
      "example": {
        "url": "/me/drive/root/children",
        "method": "POST",
        "id": "1",
        "body": {
          "name": "TestBatchingFolder",
          "folder": {}
        },
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/Body"
        },
        "headers": {
          "$ref": "#/definitions/Headers"
        },
        "DependsOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "url",
        "method",
        "id"
      ]
    },
    "Body": {
      "title": "Body",
      "example": {
        "name": "TestBatchingFolder",
        "folder": {}
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "folder": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "folder"
      ]
    },
    "Headers": {
      "title": "Headers",
      "example": {
        "Content-Type": "application/json"
      },
      "type": "object",
      "properties": {
        "Content-Type": {
          "type": "string"
        }
      },
      "required": [
        "Content-Type"
      ]
    },
    "AddMicrosoftGraphcommunitycalleventRequest": {
      "title": "AddMicrosoftGraphcommunitycalleventRequest",
      "example": {
        "subject": "Microsoft Graph community call",
        "body": {
          "contentType": "HTML",
          "content": "Call link: https://aka.ms/mmkv1b Submit a question: https://aka.ms/ybuw2i"
        },
        "start": {
          "dateTime": "2018-09-04T08:00:00",
          "timeZone": "Pacific Standard Time"
        },
        "end": {
          "dateTime": "2018-09-04T09:00:00",
          "timeZone": "Pacific Standard Time"
        },
        "location": {
          "displayName": "Skype for Business"
        },
        "recurrence": {
          "pattern": {
            "type": "relativeMonthly",
            "interval": 1,
            "daysOfWeek": [
              "Tuesday"
            ],
            "index": "first"
          },
          "range": {
            "type": "noEnd",
            "startDate": "2017-08-29"
          }
        }
      },
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/Body1"
        },
        "start": {
          "$ref": "#/definitions/Start"
        },
        "end": {
          "$ref": "#/definitions/End"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        }
      },
      "required": [
        "subject",
        "body",
        "start",
        "end",
        "location",
        "recurrence"
      ]
    },
    "Body1": {
      "title": "Body1",
      "example": {
        "contentType": "HTML",
        "content": "Call link: https://aka.ms/mmkv1b Submit a question: https://aka.ms/ybuw2i"
      },
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "required": [
        "contentType",
        "content"
      ]
    },
    "Start": {
      "title": "Start",
      "example": {
        "dateTime": "2018-09-04T08:00:00",
        "timeZone": "Pacific Standard Time"
      },
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "dateTime",
        "timeZone"
      ]
    },
    "End": {
      "title": "End",
      "example": {
        "dateTime": "2018-09-04T09:00:00",
        "timeZone": "Pacific Standard Time"
      },
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "dateTime",
        "timeZone"
      ]
    },
    "Location": {
      "title": "Location",
      "example": {
        "displayName": "Skype for Business"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "Recurrence": {
      "title": "Recurrence",
      "example": {
        "pattern": {
          "type": "relativeMonthly",
          "interval": 1,
          "daysOfWeek": [
            "Tuesday"
          ],
          "index": "first"
        },
        "range": {
          "type": "noEnd",
          "startDate": "2017-08-29"
        }
      },
      "type": "object",
      "properties": {
        "pattern": {
          "$ref": "#/definitions/Pattern"
        },
        "range": {
          "$ref": "#/definitions/Range"
        }
      },
      "required": [
        "pattern",
        "range"
      ]
    },
    "Pattern": {
      "title": "Pattern",
      "example": {
        "type": "relativeMonthly",
        "interval": 1,
        "daysOfWeek": [
          "Tuesday"
        ],
        "index": "first"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "daysOfWeek": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "index": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "interval",
        "daysOfWeek",
        "index"
      ]
    },
    "Range": {
      "title": "Range",
      "example": {
        "type": "noEnd",
        "startDate": "2017-08-29"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "startDate"
      ]
    },
    "CreateafolderRequest": {
      "title": "CreateafolderRequest",
      "example": {
        "name": "New Folder",
        "folder": {}
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "folder": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "folder"
      ]
    },
    "SendmailRequest": {
      "title": "SendmailRequest",
      "example": {
        "message": {
          "subject": "Meet for lunch?",
          "body": {
            "contentType": "Text",
            "content": "The new cafeteria is open."
          },
          "toRecipients": [
            {
              "emailAddress": {
                "address": "{{UserName}}"
              }
            }
          ],
          "ccRecipients": [
            {
              "emailAddress": {
                "address": "{{UserName}}"
              }
            }
          ]
        },
        "saveToSentItems": "false"
      },
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message"
        },
        "saveToSentItems": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "saveToSentItems"
      ]
    },
    "Message": {
      "title": "Message",
      "example": {
        "subject": "Meet for lunch?",
        "body": {
          "contentType": "Text",
          "content": "The new cafeteria is open."
        },
        "toRecipients": [
          {
            "emailAddress": {
              "address": "{{UserName}}"
            }
          }
        ],
        "ccRecipients": [
          {
            "emailAddress": {
              "address": "{{UserName}}"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/Body1"
        },
        "toRecipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ToRecipient"
          }
        },
        "ccRecipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcRecipient"
          }
        }
      },
      "required": [
        "subject",
        "body",
        "toRecipients",
        "ccRecipients"
      ]
    },
    "ToRecipient": {
      "title": "ToRecipient",
      "example": {
        "emailAddress": {
          "address": "{{UserName}}"
        }
      },
      "type": "object",
      "properties": {
        "emailAddress": {
          "$ref": "#/definitions/EmailAddress"
        }
      },
      "required": [
        "emailAddress"
      ]
    },
    "EmailAddress": {
      "title": "EmailAddress",
      "example": {
        "address": "{{UserName}}"
      },
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "required": [
        "address"
      ]
    },
    "CcRecipient": {
      "title": "CcRecipient",
      "example": {
        "emailAddress": {
          "address": "{{UserName}}"
        }
      },
      "type": "object",
      "properties": {
        "emailAddress": {
          "$ref": "#/definitions/EmailAddress"
        }
      },
      "required": [
        "emailAddress"
      ]
    },
    "SetautomaticrepliesRequest": {
      "title": "SetautomaticrepliesRequest",
      "example": {
        "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#Me/mailboxSettings",
        "automaticRepliesSetting": {
          "status": "scheduled",
          "externalAudience": "contactsOnly",
          "internalReplyMessage": "<html>\n<body>\n<div>I'm on vacation!</div>\n<div><br>\n</div>\n<div>Kindly regards</div>\n<div></div>\n</body>\n</html>\n",
          "externalReplyMessage": "<html>\n<body>\n<div></div>\n<div>I'm on vacation.</div>\n<div><br>\n</div>\n<div>Kindly regards</div>\n</body>\n</html>\n",
          "scheduledStartDateTime": {
            "dateTime": "2019-07-15T08:00:00.0000000",
            "timeZone": "Europe/Berlin"
          },
          "scheduledEndDateTime": {
            "dateTime": "2019-08-09T16:00:00.0000000",
            "timeZone": "Europe/Berlin"
          }
        }
      },
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "automaticRepliesSetting": {
          "$ref": "#/definitions/AutomaticRepliesSetting"
        }
      },
      "required": [
        "@odata.context",
        "automaticRepliesSetting"
      ]
    },
    "AutomaticRepliesSetting": {
      "title": "AutomaticRepliesSetting",
      "example": {
        "status": "scheduled",
        "externalAudience": "contactsOnly",
        "internalReplyMessage": "<html>\n<body>\n<div>I'm on vacation!</div>\n<div><br>\n</div>\n<div>Kindly regards</div>\n<div></div>\n</body>\n</html>\n",
        "externalReplyMessage": "<html>\n<body>\n<div></div>\n<div>I'm on vacation.</div>\n<div><br>\n</div>\n<div>Kindly regards</div>\n</body>\n</html>\n",
        "scheduledStartDateTime": {
          "dateTime": "2019-07-15T08:00:00.0000000",
          "timeZone": "Europe/Berlin"
        },
        "scheduledEndDateTime": {
          "dateTime": "2019-08-09T16:00:00.0000000",
          "timeZone": "Europe/Berlin"
        }
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "externalAudience": {
          "type": "string"
        },
        "internalReplyMessage": {
          "type": "string"
        },
        "externalReplyMessage": {
          "type": "string"
        },
        "scheduledStartDateTime": {
          "$ref": "#/definitions/ScheduledStartDateTime"
        },
        "scheduledEndDateTime": {
          "$ref": "#/definitions/ScheduledEndDateTime"
        }
      },
      "required": [
        "status",
        "externalAudience",
        "internalReplyMessage",
        "externalReplyMessage",
        "scheduledStartDateTime",
        "scheduledEndDateTime"
      ]
    },
    "ScheduledStartDateTime": {
      "title": "ScheduledStartDateTime",
      "example": {
        "dateTime": "2019-07-15T08:00:00.0000000",
        "timeZone": "Europe/Berlin"
      },
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "dateTime",
        "timeZone"
      ]
    },
    "ScheduledEndDateTime": {
      "title": "ScheduledEndDateTime",
      "example": {
        "dateTime": "2019-08-09T16:00:00.0000000",
        "timeZone": "Europe/Berlin"
      },
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "dateTime",
        "timeZone"
      ]
    },
    "CreatenotebookRequest": {
      "title": "CreatenotebookRequest",
      "example": {
        "displayName": "Postman Notebook 1"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "CreatesectionRequest": {
      "title": "CreatesectionRequest",
      "example": {
        "displayName": "Section 1"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "CreateanopenextensionRequest": {
      "title": "CreateanopenextensionRequest",
      "example": {
        "@odata.type": "microsoft.graph.openTypeExtension",
        "extensionName": "com.contoso.roamingSettings",
        "theme": "dark",
        "color": "purple",
        "lang": "Japanese"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "extensionName": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "extensionName",
        "theme",
        "color",
        "lang"
      ]
    },
    "UpdateanopenextensionRequest": {
      "title": "UpdateanopenextensionRequest",
      "example": {
        "theme": "light",
        "color": "red",
        "lang": "Swahili"
      },
      "type": "object",
      "properties": {
        "theme": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        }
      },
      "required": [
        "theme",
        "color",
        "lang"
      ]
    },
    "CreateagroupwithextensionRequest": {
      "title": "CreateagroupwithextensionRequest",
      "example": {
        "displayName": "Extensions sample group",
        "description": "Extensions sample group",
        "groupTypes": [
          "Unified"
        ],
        "mailEnabled": true,
        "mailNickname": "extSample123",
        "securityEnabled": false,
        "adatumisv_courses": {
          "id": "123",
          "name": "New Managers",
          "type": "Online"
        }
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mailEnabled": {
          "type": "boolean"
        },
        "mailNickname": {
          "type": "string"
        },
        "securityEnabled": {
          "type": "boolean"
        },
        "adatumisv_courses": {
          "$ref": "#/definitions/AdatumisvCourses"
        }
      },
      "required": [
        "displayName",
        "description",
        "groupTypes",
        "mailEnabled",
        "mailNickname",
        "securityEnabled",
        "adatumisv_courses"
      ]
    },
    "AdatumisvCourses": {
      "title": "AdatumisvCourses",
      "example": {
        "id": "123",
        "name": "New Managers",
        "type": "Online"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "type"
      ]
    },
    "UpdateagroupwithextensionRequest": {
      "title": "UpdateagroupwithextensionRequest",
      "example": {
        "adatumisv_courses": {
          "id": "123",
          "name": "More Managers",
          "type": "Online"
        }
      },
      "type": "object",
      "properties": {
        "adatumisv_courses": {
          "$ref": "#/definitions/AdatumisvCourses"
        }
      },
      "required": [
        "adatumisv_courses"
      ]
    },
    "SearchmessagesRequest": {
      "title": "SearchmessagesRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "message"
            ],
            "query": {
              "queryString": "contoso"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request2": {
      "title": "Request2",
      "example": {
        "entityTypes": [
          "message"
        ],
        "query": {
          "queryString": "contoso"
        }
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      },
      "required": [
        "entityTypes",
        "query"
      ]
    },
    "Query": {
      "title": "Query",
      "example": {
        "queryString": "contoso"
      },
      "type": "object",
      "properties": {
        "queryString": {
          "type": "string"
        }
      },
      "required": [
        "queryString"
      ]
    },
    "SearchmessagestopresultsRequest": {
      "title": "SearchmessagestopresultsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "message"
            ],
            "query": {
              "queryString": "contoso"
            },
            "enableTopResults": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request3"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request3": {
      "title": "Request3",
      "example": {
        "entityTypes": [
          "message"
        ],
        "query": {
          "queryString": "contoso"
        },
        "enableTopResults": true
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "enableTopResults": {
          "type": "boolean"
        }
      },
      "required": [
        "entityTypes",
        "query",
        "enableTopResults"
      ]
    },
    "SearcheventsRequest": {
      "title": "SearcheventsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "event"
            ],
            "query": {
              "queryString": "contoso"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchfilesandfoldersRequest": {
      "title": "SearchfilesandfoldersRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "driveItem"
            ],
            "query": {
              "queryString": "contoso"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchlistsRequest": {
      "title": "SearchlistsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "list"
            ],
            "query": {
              "queryString": "*"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchlistitemsRequest": {
      "title": "SearchlistitemsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "listItem"
            ],
            "query": {
              "queryString": "contoso"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchlistitemswithpropertyselectionRequest": {
      "title": "SearchlistitemswithpropertyselectionRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "listItem"
            ],
            "query": {
              "queryString": "issue"
            },
            "fields": [
              "id",
              "name",
              "contentclass",
              "title",
              "fooCustomProperty"
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request8"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request8": {
      "title": "Request8",
      "example": {
        "entityTypes": [
          "listItem"
        ],
        "query": {
          "queryString": "issue"
        },
        "fields": [
          "id",
          "name",
          "contentclass",
          "title",
          "fooCustomProperty"
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "entityTypes",
        "query",
        "fields"
      ]
    },
    "SearchsitesRequest": {
      "title": "SearchsitesRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "site"
            ],
            "query": {
              "queryString": "contoso"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchdrivesRequest": {
      "title": "SearchdrivesRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "drive"
            ],
            "query": {
              "queryString": "*"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request2"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "SearchresulttemplateRequest": {
      "title": "SearchresulttemplateRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "externalItem"
            ],
            "contentSources": [
              "/external/connections/sampleConnectionId"
            ],
            "query": {
              "queryString": "sample"
            },
            "resultTemplateOptions": {
              "enableResultTemplate": true
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request11"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request11": {
      "title": "Request11",
      "example": {
        "entityTypes": [
          "externalItem"
        ],
        "contentSources": [
          "/external/connections/sampleConnectionId"
        ],
        "query": {
          "queryString": "sample"
        },
        "resultTemplateOptions": {
          "enableResultTemplate": true
        }
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentSources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "resultTemplateOptions": {
          "$ref": "#/definitions/ResultTemplateOptions"
        }
      },
      "required": [
        "entityTypes",
        "contentSources",
        "query",
        "resultTemplateOptions"
      ]
    },
    "ResultTemplateOptions": {
      "title": "ResultTemplateOptions",
      "example": {
        "enableResultTemplate": true
      },
      "type": "object",
      "properties": {
        "enableResultTemplate": {
          "type": "boolean"
        }
      },
      "required": [
        "enableResultTemplate"
      ]
    },
    "SearchexternalitemsRequest": {
      "title": "SearchexternalitemsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "externalItem"
            ],
            "contentSources": [
              "/external/connections/sampleConnectionId"
            ],
            "query": {
              "queryString": "sample"
            },
            "fields": [
              "title",
              "iconurl",
              "lastModifiedDate"
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request12"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request12": {
      "title": "Request12",
      "example": {
        "entityTypes": [
          "externalItem"
        ],
        "contentSources": [
          "/external/connections/sampleConnectionId"
        ],
        "query": {
          "queryString": "sample"
        },
        "fields": [
          "title",
          "iconurl",
          "lastModifiedDate"
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentSources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "entityTypes",
        "contentSources",
        "query",
        "fields"
      ]
    },
    "PagesearchresultsRequest": {
      "title": "PagesearchresultsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "driveItem"
            ],
            "query": {
              "queryString": "contoso"
            },
            "from": 0,
            "size": 15
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request13"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request13": {
      "title": "Request13",
      "example": {
        "entityTypes": [
          "driveItem"
        ],
        "query": {
          "queryString": "contoso"
        },
        "from": 0,
        "size": 15
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "entityTypes",
        "query",
        "from",
        "size"
      ]
    },
    "SortsearchresultsRequest": {
      "title": "SortsearchresultsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "driveItem"
            ],
            "query": {
              "queryString": "contoso"
            },
            "sortProperties": [
              {
                "name": "lastModifiedDateTime",
                "isDescending": "true"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request14"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request14": {
      "title": "Request14",
      "example": {
        "entityTypes": [
          "driveItem"
        ],
        "query": {
          "queryString": "contoso"
        },
        "sortProperties": [
          {
            "name": "lastModifiedDateTime",
            "isDescending": "true"
          }
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "sortProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortProperty"
          }
        }
      },
      "required": [
        "entityTypes",
        "query",
        "sortProperties"
      ]
    },
    "SortProperty": {
      "title": "SortProperty",
      "example": {
        "name": "lastModifiedDateTime",
        "isDescending": "true"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isDescending": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "isDescending"
      ]
    },
    "RequestspellingcorrectionRequest": {
      "title": "RequestspellingcorrectionRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "message"
            ],
            "query": {
              "queryString": "informatino"
            },
            "from": 0,
            "size": 5
          }
        ],
        "queryAlterationOptions": {
          "enableSuggestion": true,
          "enableModification": true
        }
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request13"
          }
        },
        "queryAlterationOptions": {
          "$ref": "#/definitions/QueryAlterationOptions"
        }
      },
      "required": [
        "requests",
        "queryAlterationOptions"
      ]
    },
    "QueryAlterationOptions": {
      "title": "QueryAlterationOptions",
      "example": {
        "enableSuggestion": true,
        "enableModification": true
      },
      "type": "object",
      "properties": {
        "enableSuggestion": {
          "type": "boolean"
        },
        "enableModification": {
          "type": "boolean"
        }
      },
      "required": [
        "enableSuggestion",
        "enableModification"
      ]
    },
    "RefineresultswithstringaggregationsRequest": {
      "title": "RefineresultswithstringaggregationsRequest",
      "example": {
        "requests": [
          {
            "entityTypes": [
              "listItem"
            ],
            "query": {
              "queryString": "contoso"
            },
            "aggregations": [
              {
                "field": "FileType",
                "size": 20,
                "bucketDefinition": {
                  "sortBy": "count",
                  "isDescending": "true",
                  "minimumCount": 0
                }
              },
              {
                "field": "contentclass",
                "size": 20,
                "bucketDefinition": {
                  "sortBy": "keyAsString",
                  "isDescending": "true",
                  "minimumCount": 0
                }
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request16"
          }
        }
      },
      "required": [
        "requests"
      ]
    },
    "Request16": {
      "title": "Request16",
      "example": {
        "entityTypes": [
          "listItem"
        ],
        "query": {
          "queryString": "contoso"
        },
        "aggregations": [
          {
            "field": "FileType",
            "size": 20,
            "bucketDefinition": {
              "sortBy": "count",
              "isDescending": "true",
              "minimumCount": 0
            }
          },
          {
            "field": "contentclass",
            "size": 20,
            "bucketDefinition": {
              "sortBy": "keyAsString",
              "isDescending": "true",
              "minimumCount": 0
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aggregation"
          }
        }
      },
      "required": [
        "entityTypes",
        "query",
        "aggregations"
      ]
    },
    "Aggregation": {
      "title": "Aggregation",
      "example": {
        "field": "FileType",
        "size": 20,
        "bucketDefinition": {
          "sortBy": "count",
          "isDescending": "true",
          "minimumCount": 0
        }
      },
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bucketDefinition": {
          "$ref": "#/definitions/BucketDefinition"
        }
      },
      "required": [
        "field",
        "size",
        "bucketDefinition"
      ]
    },
    "BucketDefinition": {
      "title": "BucketDefinition",
      "example": {
        "sortBy": "count",
        "isDescending": "true",
        "minimumCount": 0
      },
      "type": "object",
      "properties": {
        "sortBy": {
          "type": "string"
        },
        "isDescending": {
          "type": "string"
        },
        "minimumCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "sortBy",
        "isDescending",
        "minimumCount"
      ]
    },
    "RefineresultswithnumericaggregationsRequest": {
      "title": "RefineresultswithnumericaggregationsRequest",
      "example": {
        "Requests": [
          {
            "entityTypes": [
              "listItem"
            ],
            "query": {
              "queryString": "contoso"
            },
            "aggregations": [
              {
                "field": "Size",
                "size": 15,
                "bucketDefinition": {
                  "sortBy": "keyAsNumber",
                  "isDescending": "true",
                  "minimumCount": 0,
                  "ranges": [
                    {
                      "to": "100"
                    },
                    {
                      "from": "100",
                      "to": "1000"
                    },
                    {
                      "from": "1000"
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "Requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request17"
          }
        }
      },
      "required": [
        "Requests"
      ]
    },
    "Request17": {
      "title": "Request17",
      "example": {
        "entityTypes": [
          "listItem"
        ],
        "query": {
          "queryString": "contoso"
        },
        "aggregations": [
          {
            "field": "Size",
            "size": 15,
            "bucketDefinition": {
              "sortBy": "keyAsNumber",
              "isDescending": "true",
              "minimumCount": 0,
              "ranges": [
                {
                  "to": "100"
                },
                {
                  "from": "100",
                  "to": "1000"
                },
                {
                  "from": "1000"
                }
              ]
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aggregation1"
          }
        }
      },
      "required": [
        "entityTypes",
        "query",
        "aggregations"
      ]
    },
    "Aggregation1": {
      "title": "Aggregation1",
      "example": {
        "field": "Size",
        "size": 15,
        "bucketDefinition": {
          "sortBy": "keyAsNumber",
          "isDescending": "true",
          "minimumCount": 0,
          "ranges": [
            {
              "to": "100"
            },
            {
              "from": "100",
              "to": "1000"
            },
            {
              "from": "1000"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bucketDefinition": {
          "$ref": "#/definitions/BucketDefinition1"
        }
      },
      "required": [
        "field",
        "size",
        "bucketDefinition"
      ]
    },
    "BucketDefinition1": {
      "title": "BucketDefinition1",
      "example": {
        "sortBy": "keyAsNumber",
        "isDescending": "true",
        "minimumCount": 0,
        "ranges": [
          {
            "to": "100"
          },
          {
            "from": "100",
            "to": "1000"
          },
          {
            "from": "1000"
          }
        ]
      },
      "type": "object",
      "properties": {
        "sortBy": {
          "type": "string"
        },
        "isDescending": {
          "type": "string"
        },
        "minimumCount": {
          "type": "integer",
          "format": "int32"
        },
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Range1"
          }
        }
      },
      "required": [
        "sortBy",
        "isDescending",
        "minimumCount",
        "ranges"
      ]
    },
    "Range1": {
      "title": "Range1",
      "example": {
        "to": "100"
      },
      "type": "object",
      "properties": {
        "to": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "ApplyrefinedquerypassingtheaggregationTokenRequest": {
      "title": "ApplyrefinedquerypassingtheaggregationTokenRequest",
      "example": {
        "Requests": [
          {
            "entityTypes": [
              "driveItem"
            ],
            "query": {
              "queryString": "contoso"
            },
            "aggregationFilters": [
              "contentclass:\"ǂǂ5354535f4c6973744974656d5f446f63756d656e744c696272617279\"",
              "FileType:\"ǂǂ646f6378\""
            ],
            "aggregations": [
              {
                "field": "FileType",
                "size": 20,
                "bucketDefinition": {
                  "sortBy": "count",
                  "isDescending": "true",
                  "minimumCount": 0
                }
              },
              {
                "field": "contentclass",
                "size": 15,
                "bucketDefinition": {
                  "sortBy": "keyAsString",
                  "isDescending": "true",
                  "minimumCount": 0
                }
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "Requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request18"
          }
        }
      },
      "required": [
        "Requests"
      ]
    },
    "Request18": {
      "title": "Request18",
      "example": {
        "entityTypes": [
          "driveItem"
        ],
        "query": {
          "queryString": "contoso"
        },
        "aggregationFilters": [
          "contentclass:\"ǂǂ5354535f4c6973744974656d5f446f63756d656e744c696272617279\"",
          "FileType:\"ǂǂ646f6378\""
        ],
        "aggregations": [
          {
            "field": "FileType",
            "size": 20,
            "bucketDefinition": {
              "sortBy": "count",
              "isDescending": "true",
              "minimumCount": 0
            }
          },
          {
            "field": "contentclass",
            "size": 15,
            "bucketDefinition": {
              "sortBy": "keyAsString",
              "isDescending": "true",
              "minimumCount": 0
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "aggregationFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aggregation"
          }
        }
      },
      "required": [
        "entityTypes",
        "query",
        "aggregationFilters",
        "aggregations"
      ]
    },
    "UpdateplanRequest": {
      "title": "UpdateplanRequest",
      "example": {
        "title": "Updated plan title"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title"
      ]
    },
    "CreateabucketinaplanRequest": {
      "title": "CreateabucketinaplanRequest",
      "example": {
        "name": "New bucket",
        "planId": "{{PlanId}}",
        "orderHint": " !"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "orderHint": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "planId",
        "orderHint"
      ]
    },
    "UpdateabucketRequest": {
      "title": "UpdateabucketRequest",
      "example": {
        "name": "Updated bucket name"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CreateaPlannertaskRequest": {
      "title": "CreateaPlannertaskRequest",
      "example": {
        "planId": "{{PlanId}}",
        "title": "New Task",
        "assignments": {}
      },
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "assignments": {
          "type": "object"
        }
      },
      "required": [
        "planId",
        "title",
        "assignments"
      ]
    },
    "UpdateaPlannertaskRequest": {
      "title": "UpdateaPlannertaskRequest",
      "example": {
        "title": "Updated task title"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title"
      ]
    },
    "CreateaToDolistRequest": {
      "title": "CreateaToDolistRequest",
      "example": {
        "displayName": "Postman created list"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "UpdateaToDolistRequest": {
      "title": "UpdateaToDolistRequest",
      "example": {
        "displayName": "Postman created items"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ]
    },
    "CreateaToDotaskinalistRequest": {
      "title": "CreateaToDotaskinalistRequest",
      "example": {
        "title": "Postman created Task",
        "linkedResources": [
          {
            "webUrl": "http://microsoft.com",
            "applicationName": "Microsoft",
            "displayName": "Microsoft"
          }
        ]
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "linkedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedResource"
          }
        }
      },
      "required": [
        "title",
        "linkedResources"
      ]
    },
    "LinkedResource": {
      "title": "LinkedResource",
      "example": {
        "webUrl": "http://microsoft.com",
        "applicationName": "Microsoft",
        "displayName": "Microsoft"
      },
      "type": "object",
      "properties": {
        "webUrl": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "webUrl",
        "applicationName",
        "displayName"
      ]
    },
    "UpdateaToDotaskinalistRequest": {
      "title": "UpdateaToDotaskinalistRequest",
      "example": {
        "dueDateTime": {
          "dateTime": "2021-04-19T00:00:00",
          "timeZone": "Eastern Standard Time"
        }
      },
      "type": "object",
      "properties": {
        "dueDateTime": {
          "$ref": "#/definitions/DueDateTime"
        }
      },
      "required": [
        "dueDateTime"
      ]
    },
    "DueDateTime": {
      "title": "DueDateTime",
      "example": {
        "dateTime": "2021-04-19T00:00:00",
        "timeZone": "Eastern Standard Time"
      },
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "dateTime",
        "timeZone"
      ]
    },
    "CreateteamRequest": {
      "title": "CreateteamRequest",
      "example": {
        "template@odata.bind": "https://graph.microsoft.com/v1.0/teamsTemplates('standard')",
        "displayName": "My Sample Team",
        "description": "My Sample Team’s Description"
      },
      "type": "object",
      "properties": {
        "template@odata.bind": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "template@odata.bind",
        "displayName",
        "description"
      ]
    },
    "CreatechannelRequest": {
      "title": "CreatechannelRequest",
      "example": {
        "displayName": "Architecture Discussion",
        "description": "This channel is where we debate all future architecture plans"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "description"
      ]
    },
    "Createaplaintextchatthread(beta)Request": {
      "title": "Createaplaintextchatthread(beta)Request",
      "example": {
        "body": {
          "content": "Hello World!"
        }
      },
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Body3"
        }
      },
      "required": [
        "body"
      ]
    },
    "Body3": {
      "title": "Body3",
      "example": {
        "content": "Hello World!"
      },
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "required": [
        "content"
      ]
    },
    "CreateanHTMLchatthread(beta)Request": {
      "title": "CreateanHTMLchatthread(beta)Request",
      "example": {
        "body": {
          "contentType": "html",
          "content": "<div><div>\n<div><img alt=\"GIF Image\" height=\"250\" src=\"https://media3.giphy.com/media/f5xmRWRu4zxxh2mE5v/giphy.gif?cid=de9bf95eevnce0lknjlbneccchvdkn991jea1gtmw2zmvdke&amp;rid=giphy.gif\" width=\"250\" style=\"max-height:250px; width:250px; height:250px\"></div>\n\n\n</div>\n</div>"
        }
      },
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/Body1"
        }
      },
      "required": [
        "body"
      ]
    },
    "InviteaguestuserRequest": {
      "title": "InviteaguestuserRequest",
      "example": {
        "invitedUserDisplayName": "<Display Name of Invited User>",
        "invitedUserEmailAddress": "<Email Address of Invited User>",
        "invitedUserMessageInfo": {
          "messageLanguage": "en-US",
          "ccRecipients": [
            {
              "emailAddress": {
                "name": "<Optional CC for Invitation>",
                "address": "<Optional CC Email Address for Invitation>"
              }
            }
          ],
          "customizedMessageBody": "Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!"
        },
        "sendInvitationMessage": true,
        "inviteRedirectUrl": "https://myapps.microsoft.com"
      },
      "type": "object",
      "properties": {
        "invitedUserDisplayName": {
          "type": "string"
        },
        "invitedUserEmailAddress": {
          "type": "string"
        },
        "invitedUserMessageInfo": {
          "$ref": "#/definitions/InvitedUserMessageInfo"
        },
        "sendInvitationMessage": {
          "type": "boolean"
        },
        "inviteRedirectUrl": {
          "type": "string"
        }
      },
      "required": [
        "invitedUserDisplayName",
        "invitedUserEmailAddress",
        "invitedUserMessageInfo",
        "sendInvitationMessage",
        "inviteRedirectUrl"
      ]
    },
    "InvitedUserMessageInfo": {
      "title": "InvitedUserMessageInfo",
      "example": {
        "messageLanguage": "en-US",
        "ccRecipients": [
          {
            "emailAddress": {
              "name": "<Optional CC for Invitation>",
              "address": "<Optional CC Email Address for Invitation>"
            }
          }
        ],
        "customizedMessageBody": "Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!"
      },
      "type": "object",
      "properties": {
        "messageLanguage": {
          "type": "string"
        },
        "ccRecipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcRecipient1"
          }
        },
        "customizedMessageBody": {
          "type": "string"
        }
      },
      "required": [
        "messageLanguage",
        "ccRecipients",
        "customizedMessageBody"
      ]
    },
    "CcRecipient1": {
      "title": "CcRecipient1",
      "example": {
        "emailAddress": {
          "name": "<Optional CC for Invitation>",
          "address": "<Optional CC Email Address for Invitation>"
        }
      },
      "type": "object",
      "properties": {
        "emailAddress": {
          "$ref": "#/definitions/EmailAddress2"
        }
      },
      "required": [
        "emailAddress"
      ]
    },
    "EmailAddress2": {
      "title": "EmailAddress2",
      "example": {
        "name": "<Optional CC for Invitation>",
        "address": "<Optional CC Email Address for Invitation>"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "address"
      ]
    },
    "Updateaudience(addmembers)Request": {
      "title": "Updateaudience(addmembers)Request",
      "example": {
        "addMembers": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "addMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddMember"
          }
        }
      },
      "required": [
        "addMembers"
      ]
    },
    "AddMember": {
      "title": "AddMember",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
        "id": "{{AzureAdDeviceId}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "id"
      ]
    },
    "Updateaudience(addexclusions)Request": {
      "title": "Updateaudience(addexclusions)Request",
      "example": {
        "addExclusions": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "addExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddExclusion"
          }
        }
      },
      "required": [
        "addExclusions"
      ]
    },
    "AddExclusion": {
      "title": "AddExclusion",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
        "id": "{{AzureAdDeviceId}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "id"
      ]
    },
    "Updateaudience(removemembers)Request": {
      "title": "Updateaudience(removemembers)Request",
      "example": {
        "removeMembers": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "removeMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoveMember"
          }
        }
      },
      "required": [
        "removeMembers"
      ]
    },
    "RemoveMember": {
      "title": "RemoveMember",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
        "id": "{{AzureAdDeviceId}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "id"
      ]
    },
    "Updateaudience(removeexclusions)Request": {
      "title": "Updateaudience(removeexclusions)Request",
      "example": {
        "removeExclusions": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "removeExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoveExclusion"
          }
        }
      },
      "required": [
        "removeExclusions"
      ]
    },
    "RemoveExclusion": {
      "title": "RemoveExclusion",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
        "id": "{{AzureAdDeviceId}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "id"
      ]
    },
    "Createdeployment(featureupdate)Request": {
      "title": "Createdeployment(featureupdate)Request",
      "example": {
        "content": {
          "@odata.type": "#microsoft.graph.windowsUpdates.featureUpdateReference",
          "version": "{{FeatureUpdateVersion}}"
        }
      },
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/Content"
        }
      },
      "required": [
        "content"
      ]
    },
    "Content": {
      "title": "Content",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.featureUpdateReference",
        "version": "{{FeatureUpdateVersion}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "version"
      ]
    },
    "Createdeployment(expeditedsecurityupdate)Request": {
      "title": "Createdeployment(expeditedsecurityupdate)Request",
      "example": {
        "content": {
          "@odata.type": "microsoft.graph.windowsUpdates.expeditedQualityUpdateReference",
          "releaseDate": "{{QualityUpdateReleaseDate}}"
        }
      },
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/Content1"
        }
      },
      "required": [
        "content"
      ]
    },
    "Content1": {
      "title": "Content1",
      "example": {
        "@odata.type": "microsoft.graph.windowsUpdates.expeditedQualityUpdateReference",
        "releaseDate": "{{QualityUpdateReleaseDate}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "releaseDate": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "releaseDate"
      ]
    },
    "Createdeployment(rate-basedgradualrollout)Request": {
      "title": "Createdeployment(rate-basedgradualrollout)Request",
      "example": {
        "content": {
          "@odata.type": "#microsoft.graph.windowsUpdates.featureUpdateReference",
          "version": "{{FeatureUpdateVersion}}"
        },
        "settings": {
          "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
          "rollout": {
            "devicesPerOffer": 100,
            "durationBetweenOffers": "P7D"
          },
          "monitoring": {
            "monitoringRules": [
              {
                "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
                "signal": "rollback",
                "threshold": 5,
                "action": "pauseDeployment"
              }
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/Content"
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        }
      },
      "required": [
        "content",
        "settings"
      ]
    },
    "Settings": {
      "title": "Settings",
      "example": {
        "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
        "rollout": {
          "devicesPerOffer": 100,
          "durationBetweenOffers": "P7D"
        },
        "monitoring": {
          "monitoringRules": [
            {
              "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
              "signal": "rollback",
              "threshold": 5,
              "action": "pauseDeployment"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "rollout": {
          "$ref": "#/definitions/Rollout"
        },
        "monitoring": {
          "$ref": "#/definitions/Monitoring"
        }
      },
      "required": [
        "@odata.type",
        "rollout",
        "monitoring"
      ]
    },
    "Rollout": {
      "title": "Rollout",
      "example": {
        "devicesPerOffer": 100,
        "durationBetweenOffers": "P7D"
      },
      "type": "object",
      "properties": {
        "devicesPerOffer": {
          "type": "integer",
          "format": "int32"
        },
        "durationBetweenOffers": {
          "type": "string"
        }
      },
      "required": [
        "devicesPerOffer",
        "durationBetweenOffers"
      ]
    },
    "Monitoring": {
      "title": "Monitoring",
      "example": {
        "monitoringRules": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
            "signal": "rollback",
            "threshold": 5,
            "action": "pauseDeployment"
          }
        ]
      },
      "type": "object",
      "properties": {
        "monitoringRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringRule"
          }
        }
      },
      "required": [
        "monitoringRules"
      ]
    },
    "MonitoringRule": {
      "title": "MonitoringRule",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
        "signal": "rollback",
        "threshold": 5,
        "action": "pauseDeployment"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "signal": {
          "type": "string"
        },
        "threshold": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "signal",
        "threshold",
        "action"
      ]
    },
    "Createdeployment(date-basedgradualrollout)Request": {
      "title": "Createdeployment(date-basedgradualrollout)Request",
      "example": {
        "content": {
          "@odata.type": "#microsoft.graph.windowsUpdates.featureUpdateReference",
          "version": "{{FeatureUpdateVersion}}"
        },
        "settings": {
          "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
          "rollout": {
            "startDateTime": "{{DeploymentStartDateTime}}",
            "endDateTime": "{{DeploymentEndDateTime}}",
            "durationBetweenOffers": "P7D"
          },
          "monitoring": {
            "monitoringRules": [
              {
                "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
                "signal": "rollback",
                "threshold": 5,
                "action": "pauseDeployment"
              }
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/Content"
        },
        "settings": {
          "$ref": "#/definitions/Settings1"
        }
      },
      "required": [
        "content",
        "settings"
      ]
    },
    "Settings1": {
      "title": "Settings1",
      "example": {
        "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
        "rollout": {
          "startDateTime": "{{DeploymentStartDateTime}}",
          "endDateTime": "{{DeploymentEndDateTime}}",
          "durationBetweenOffers": "P7D"
        },
        "monitoring": {
          "monitoringRules": [
            {
              "@odata.type": "#microsoft.graph.windowsUpdates.monitoringRule",
              "signal": "rollback",
              "threshold": 5,
              "action": "pauseDeployment"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "rollout": {
          "$ref": "#/definitions/Rollout1"
        },
        "monitoring": {
          "$ref": "#/definitions/Monitoring"
        }
      },
      "required": [
        "@odata.type",
        "rollout",
        "monitoring"
      ]
    },
    "Rollout1": {
      "title": "Rollout1",
      "example": {
        "startDateTime": "{{DeploymentStartDateTime}}",
        "endDateTime": "{{DeploymentEndDateTime}}",
        "durationBetweenOffers": "P7D"
      },
      "type": "object",
      "properties": {
        "startDateTime": {
          "type": "string"
        },
        "endDateTime": {
          "type": "string"
        },
        "durationBetweenOffers": {
          "type": "string"
        }
      },
      "required": [
        "startDateTime",
        "endDateTime",
        "durationBetweenOffers"
      ]
    },
    "Updatedeployment(replacemonitoringrules)Request": {
      "title": "Updatedeployment(replacemonitoringrules)Request",
      "example": {
        "settings": {
          "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
          "monitoring": {
            "monitoringRules": [
              {
                "signal": "rollback",
                "threshold": 5,
                "action": "pauseDeployment"
              }
            ]
          }
        }
      },
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/Settings2"
        }
      },
      "required": [
        "settings"
      ]
    },
    "Settings2": {
      "title": "Settings2",
      "example": {
        "@odata.type": "microsoft.graph.windowsUpdates.windowsDeploymentSettings",
        "monitoring": {
          "monitoringRules": [
            {
              "signal": "rollback",
              "threshold": 5,
              "action": "pauseDeployment"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "monitoring": {
          "$ref": "#/definitions/Monitoring2"
        }
      },
      "required": [
        "@odata.type",
        "monitoring"
      ]
    },
    "Monitoring2": {
      "title": "Monitoring2",
      "example": {
        "monitoringRules": [
          {
            "signal": "rollback",
            "threshold": 5,
            "action": "pauseDeployment"
          }
        ]
      },
      "type": "object",
      "properties": {
        "monitoringRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringRule2"
          }
        }
      },
      "required": [
        "monitoringRules"
      ]
    },
    "MonitoringRule2": {
      "title": "MonitoringRule2",
      "example": {
        "signal": "rollback",
        "threshold": 5,
        "action": "pauseDeployment"
      },
      "type": "object",
      "properties": {
        "signal": {
          "type": "string"
        },
        "threshold": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        }
      },
      "required": [
        "signal",
        "threshold",
        "action"
      ]
    },
    "Updatedeployment(requestpausedstate)Request": {
      "title": "Updatedeployment(requestpausedstate)Request",
      "example": {
        "state": {
          "@odata.type": "#microsoft.graph.windowsUpdates.deploymentState",
          "requestedValue": "paused"
        }
      },
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/State"
        }
      },
      "required": [
        "state"
      ]
    },
    "State": {
      "title": "State",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.deploymentState",
        "requestedValue": "paused"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "requestedValue": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "requestedValue"
      ]
    },
    "Updatedeployment(clearrequestedstate)Request": {
      "title": "Updatedeployment(clearrequestedstate)Request",
      "example": {
        "state": {
          "@odata.type": "#microsoft.graph.windowsUpdates.deploymentState",
          "requestedValue": "none"
        }
      },
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/State"
        }
      },
      "required": [
        "state"
      ]
    },
    "EnrollinfeatureupdatemanagementRequest": {
      "title": "EnrollinfeatureupdatemanagementRequest",
      "example": {
        "updateCategory": "feature",
        "assets": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "updateCategory": {
          "type": "string"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        }
      },
      "required": [
        "updateCategory",
        "assets"
      ]
    },
    "Asset": {
      "title": "Asset",
      "example": {
        "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
        "id": "{{AzureAdDeviceId}}"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "id"
      ]
    },
    "UnenrollfromfeatureupdatemanagementRequest": {
      "title": "UnenrollfromfeatureupdatemanagementRequest",
      "example": {
        "updateCategory": "feature",
        "assets": [
          {
            "@odata.type": "#microsoft.graph.windowsUpdates.azureADDevice",
            "id": "{{AzureAdDeviceId}}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "updateCategory": {
          "type": "string"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        }
      },
      "required": [
        "updateCategory",
        "assets"
      ]
    },
    "CreateconnectionRequest": {
      "title": "CreateconnectionRequest",
      "example": {
        "id": "sampleConnectionId",
        "name": "Sample connection",
        "description": "Sample connection description"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "RegisterschemaRequest": {
      "title": "RegisterschemaRequest",
      "example": {
        "baseType": "microsoft.graph.externalItem",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": false,
            "labels": [],
            "aliases": []
          },
          {
            "name": "title",
            "type": "string",
            "isSearchable": true,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [
              "title"
            ],
            "aliases": []
          },
          {
            "name": "extension",
            "type": "string",
            "isSearchable": true,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [],
            "aliases": []
          },
          {
            "name": "createdBy",
            "type": "string",
            "isSearchable": true,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [
              "createdBy"
            ],
            "aliases": []
          },
          {
            "name": "createdDateTime",
            "type": "dateTime",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [
              "createdDateTime"
            ],
            "aliases": []
          },
          {
            "name": "lastModifiedBy",
            "type": "string",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [],
            "aliases": []
          },
          {
            "name": "lastModifiedDate",
            "type": "dateTime",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": true,
            "labels": [
              "lastModifiedDateTime"
            ],
            "aliases": []
          },
          {
            "name": "url",
            "type": "string",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": false,
            "labels": [
              "url"
            ],
            "aliases": []
          },
          {
            "name": "description",
            "type": "string",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": false,
            "labels": [],
            "aliases": []
          },
          {
            "name": "authors",
            "type": "stringCollection",
            "isSearchable": false,
            "isRetrievable": true,
            "isQueryable": false,
            "labels": [
              "authors"
            ],
            "aliases": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "baseType": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "baseType",
        "properties"
      ]
    },
    "Property": {
      "title": "Property",
      "example": {
        "name": "id",
        "type": "string",
        "isSearchable": false,
        "isRetrievable": true,
        "isQueryable": false,
        "labels": [],
        "aliases": []
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "isSearchable": {
          "type": "boolean"
        },
        "isRetrievable": {
          "type": "boolean"
        },
        "isQueryable": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "type",
        "isSearchable",
        "isRetrievable",
        "isQueryable",
        "labels",
        "aliases"
      ]
    },
    "PutitemRequest": {
      "title": "PutitemRequest",
      "example": {
        "acl": [
          {
            "type": "everyone",
            "value": "c5f19b2d-0a77-454a-9b43-abf298c3b34e",
            "accessType": "grant"
          }
        ],
        "properties": {
          "title": "Sample item title",
          "extension": "docx",
          "createdBy": "John Doe",
          "createdDateTime": "2021-04-27T11:04:00Z",
          "iconUrl": "https://contentdepot.blob.core.windows.net/filedepot/sampleIconUrl.png",
          "authors": [
            "John Doe"
          ],
          "authors@odata.type": "Collection(String)",
          "lastModifiedDate": "2021-04-27T11:04:00Z",
          "url": "https://sampleItemUrl.com",
          "containerName": "Sample container name",
          "containerUrl": "https://sampleContainerUrl.com"
        },
        "content": {
          "type": "text",
          "value": "Empower customers and partners to be more productive by enabling them to bring content and activity information and allow external content to participate in Microsoft Search and OfficeHub experiences so that they find relevant and actionable information across all their applications."
        }
      },
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Acl"
          }
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "content": {
          "$ref": "#/definitions/Content4"
        }
      },
      "required": [
        "acl",
        "properties",
        "content"
      ]
    },
    "Acl": {
      "title": "Acl",
      "example": {
        "type": "everyone",
        "value": "c5f19b2d-0a77-454a-9b43-abf298c3b34e",
        "accessType": "grant"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "accessType": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value",
        "accessType"
      ]
    },
    "Properties": {
      "title": "Properties",
      "example": {
        "title": "Sample item title",
        "extension": "docx",
        "createdBy": "John Doe",
        "createdDateTime": "2021-04-27T11:04:00Z",
        "iconUrl": "https://contentdepot.blob.core.windows.net/filedepot/sampleIconUrl.png",
        "authors": [
          "John Doe"
        ],
        "authors@odata.type": "Collection(String)",
        "lastModifiedDate": "2021-04-27T11:04:00Z",
        "url": "https://sampleItemUrl.com",
        "containerName": "Sample container name",
        "containerUrl": "https://sampleContainerUrl.com"
      },
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authors@odata.type": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "containerUrl": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "extension",
        "createdBy",
        "createdDateTime",
        "iconUrl",
        "authors",
        "authors@odata.type",
        "lastModifiedDate",
        "url",
        "containerName",
        "containerUrl"
      ]
    },
    "Content4": {
      "title": "Content4",
      "example": {
        "type": "text",
        "value": "Empower customers and partners to be more productive by enabling them to bring content and activity information and allow external content to participate in Microsoft Search and OfficeHub experiences so that they find relevant and actionable information across all their applications."
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "CreategroupRequest": {
      "title": "CreategroupRequest",
      "example": {
        "id": "graphConnectorGroupId",
        "displayName": "Display name of group sampleExternalGroupId"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "displayName"
      ]
    },
    "AddAADuserasmemberRequest": {
      "title": "AddAADuserasmemberRequest",
      "example": {
        "id": "e42f427c-f33f-4389-afd8-db432ff6a338",
        "type": "user"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "AddAADgroupasmemberRequest": {
      "title": "AddAADgroupasmemberRequest",
      "example": {
        "id": "e42f427c-f33f-4389-afd8-db432ff6a338",
        "type": "group"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "AddconnectorgroupasmemberRequest": {
      "title": "AddconnectorgroupasmemberRequest",
      "example": {
        "id": "childGraphConnectorGroupId",
        "type": "externalGroup"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "UpdatesubscriptionRequest": {
      "title": "UpdatesubscriptionRequest",
      "example": {
        "expirationDateTime": "2019-05-19T12:41:53.2962802Z"
      },
      "type": "object",
      "properties": {
        "expirationDateTime": {
          "type": "string"
        }
      },
      "required": [
        "expirationDateTime"
      ]
    },
    "CreatesubscriptionRequest": {
      "title": "CreatesubscriptionRequest",
      "example": {
        "changeType": "created,updated",
        "notificationUrl": "{{notificationUrl}}",
        "resource": "{{resourcePath}}",
        "expirationDateTime": "{{expirationDateTime}}",
        "clientState": "secretClientState"
      },
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string"
        },
        "notificationUrl": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "expirationDateTime": {
          "type": "string"
        },
        "clientState": {
          "type": "string"
        }
      },
      "required": [
        "changeType",
        "notificationUrl",
        "resource",
        "expirationDateTime",
        "clientState"
      ]
    },
    "AddchannelmemberRequest": {
      "title": "AddchannelmemberRequest",
      "example": {
        "@odata.type": "#microsoft.graph.aadUserConversationMember",
        "roles": [
          "owner"
        ],
        "user@odata.bind": "https://graph.microsoft.com/v1.0/users/8b081ef6-4792-4def-b2c9-c363a1bf41d5"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user@odata.bind": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "roles",
        "user@odata.bind"
      ]
    },
    "UpdateteammemberRequest": {
      "title": "UpdateteammemberRequest",
      "example": {
        "@odata.type": "#microsoft.graph.aadUserConversationMember",
        "roles": [
          "owner"
        ]
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "@odata.type",
        "roles"
      ]
    },
    "UpdatechannelmemberRequest": {
      "title": "UpdatechannelmemberRequest",
      "example": {
        "@odata.type": "#microsoft.graph.aadUserConversationMember",
        "roles": [
          "owner"
        ]
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "@odata.type",
        "roles"
      ]
    },
    "AddteammemberRequest": {
      "title": "AddteammemberRequest",
      "example": {
        "@odata.type": "#microsoft.graph.aadUserConversationMember",
        "roles": [
          "owner"
        ],
        "user@odata.bind": "https://graph.microsoft.com/v1.0/users/a82083e7-cc7c-48a4-9ed1-ce70e42f7453"
      },
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user@odata.bind": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type",
        "roles",
        "user@odata.bind"
      ]
    },
    "CreateteamfromgroupRequest": {
      "title": "CreateteamfromgroupRequest",
      "example": {
        "memberSettings": {
          "allowCreatePrivateChannels": true,
          "allowCreateUpdateChannels": true
        },
        "messagingSettings": {
          "allowUserEditMessages": true,
          "allowUserDeleteMessages": true
        },
        "funSettings": {
          "allowGiphy": true,
          "giphyContentRating": "strict"
        }
      },
      "type": "object",
      "properties": {
        "memberSettings": {
          "$ref": "#/definitions/MemberSettings"
        },
        "messagingSettings": {
          "$ref": "#/definitions/MessagingSettings"
        },
        "funSettings": {
          "$ref": "#/definitions/FunSettings"
        }
      },
      "required": [
        "memberSettings",
        "messagingSettings",
        "funSettings"
      ]
    },
    "MemberSettings": {
      "title": "MemberSettings",
      "example": {
        "allowCreatePrivateChannels": true,
        "allowCreateUpdateChannels": true
      },
      "type": "object",
      "properties": {
        "allowCreatePrivateChannels": {
          "type": "boolean"
        },
        "allowCreateUpdateChannels": {
          "type": "boolean"
        }
      },
      "required": [
        "allowCreatePrivateChannels",
        "allowCreateUpdateChannels"
      ]
    },
    "MessagingSettings": {
      "title": "MessagingSettings",
      "example": {
        "allowUserEditMessages": true,
        "allowUserDeleteMessages": true
      },
      "type": "object",
      "properties": {
        "allowUserEditMessages": {
          "type": "boolean"
        },
        "allowUserDeleteMessages": {
          "type": "boolean"
        }
      },
      "required": [
        "allowUserEditMessages",
        "allowUserDeleteMessages"
      ]
    },
    "FunSettings": {
      "title": "FunSettings",
      "example": {
        "allowGiphy": true,
        "giphyContentRating": "strict"
      },
      "type": "object",
      "properties": {
        "allowGiphy": {
          "type": "boolean"
        },
        "giphyContentRating": {
          "type": "string"
        }
      },
      "required": [
        "allowGiphy",
        "giphyContentRating"
      ]
    },
    "UpdateteamRequest": {
      "title": "UpdateteamRequest",
      "example": {
        "memberSettings": {
          "allowCreateUpdateChannels": true
        },
        "messagingSettings": {
          "allowUserEditMessages": true,
          "allowUserDeleteMessages": true
        },
        "funSettings": {
          "allowGiphy": true,
          "giphyContentRating": "strict"
        }
      },
      "type": "object",
      "properties": {
        "memberSettings": {
          "$ref": "#/definitions/MemberSettings1"
        },
        "messagingSettings": {
          "$ref": "#/definitions/MessagingSettings"
        },
        "funSettings": {
          "$ref": "#/definitions/FunSettings"
        }
      },
      "required": [
        "memberSettings",
        "messagingSettings",
        "funSettings"
      ]
    },
    "MemberSettings1": {
      "title": "MemberSettings1",
      "example": {
        "allowCreateUpdateChannels": true
      },
      "type": "object",
      "properties": {
        "allowCreateUpdateChannels": {
          "type": "boolean"
        }
      },
      "required": [
        "allowCreateUpdateChannels"
      ]
    },
    "ArchiveteamRequest": {
      "title": "ArchiveteamRequest",
      "example": {
        "shouldSetSpoSiteReadOnlyForMembers": true
      },
      "type": "object",
      "properties": {
        "shouldSetSpoSiteReadOnlyForMembers": {
          "type": "boolean"
        }
      },
      "required": [
        "shouldSetSpoSiteReadOnlyForMembers"
      ]
    },
    "CloneteamRequest": {
      "title": "CloneteamRequest",
      "example": {
        "displayName": "Library Assist",
        "description": "Self help community for library",
        "mailNickname": "libassist",
        "partsToClone": "apps,tabs,settings,channels,members",
        "visibility": "public"
      },
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mailNickname": {
          "type": "string"
        },
        "partsToClone": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "description",
        "mailNickname",
        "partsToClone",
        "visibility"
      ]
    }
  },
  "tags": [
    {
      "name": "Applications"
    },
    {
      "name": "Batch"
    },
    {
      "name": "Events"
    },
    {
      "name": "Files"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Insights"
    },
    {
      "name": "Mail"
    },
    {
      "name": "Notebooks"
    },
    {
      "name": "Open extensions"
    },
    {
      "name": "Schema extensions"
    },
    {
      "name": "People"
    },
    {
      "name": "Search"
    },
    {
      "name": "Security"
    },
    {
      "name": "SharePoint"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Tasks - Planner"
    },
    {
      "name": "Tasks - Todo"
    },
    {
      "name": "Teams"
    },
    {
      "name": "Users"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "Deployment audience"
    },
    {
      "name": "Deployment"
    },
    {
      "name": "Azure AD device"
    },
    {
      "name": "Updatable asset"
    },
    {
      "name": "Connection setup"
    },
    {
      "name": "Content sync"
    },
    {
      "name": "Identity Sync"
    },
    {
      "name": "Memberships"
    },
    {
      "name": "Misc"
    }
  ]
}